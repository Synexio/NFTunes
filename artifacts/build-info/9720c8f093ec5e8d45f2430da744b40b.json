{"id":"9720c8f093ec5e8d45f2430da744b40b","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/AccessManaged.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAuthority} from \"@openzeppelin/contracts/access/manager/IAuthority.sol\";\nimport {AuthorityUtils} from \"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\";\nimport {IAccessManager} from \"@openzeppelin/contracts/access/manager/IAccessManager.sol\";\nimport {IAccessManaged} from \"@openzeppelin/contracts/access/manager/IAccessManaged.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev This contract module makes available a {restricted} modifier. Functions decorated with this modifier will be\n * permissioned according to an \"authority\": a contract like {AccessManager} that follows the {IAuthority} interface,\n * implementing a policy that allows certain callers to access certain functions.\n *\n * IMPORTANT: The `restricted` modifier should never be used on `internal` functions, judiciously used in `public`\n * functions, and ideally only used in `external` functions. See {restricted}.\n */\nabstract contract AccessManagedUpgradeable is Initializable, ContextUpgradeable, IAccessManaged {\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessManaged\n    struct AccessManagedStorage {\n        address _authority;\n\n        bool _consumingSchedule;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessManaged\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessManagedStorageLocation = 0xf3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a00;\n\n    function _getAccessManagedStorage() private pure returns (AccessManagedStorage storage $) {\n        assembly {\n            $.slot := AccessManagedStorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the contract connected to an initial authority.\n     */\n    function __AccessManaged_init(address initialAuthority) internal onlyInitializing {\n        __AccessManaged_init_unchained(initialAuthority);\n    }\n\n    function __AccessManaged_init_unchained(address initialAuthority) internal onlyInitializing {\n        _setAuthority(initialAuthority);\n    }\n\n    /**\n     * @dev Restricts access to a function as defined by the connected Authority for this contract and the\n     * caller and selector of the function that entered the contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * In general, this modifier should only be used on `external` functions. It is okay to use it on `public`\n     * functions that are used as external entry points and are not called internally. Unless you know what you're\n     * doing, it should never be used on `internal` functions. Failure to follow these rules can have critical security\n     * implications! This is because the permissions are determined by the function that entered the contract, i.e. the\n     * function at the bottom of the call stack, and not the function where the modifier is visible in the source code.\n     * ====\n     *\n     * [WARNING]\n     * ====\n     * Avoid adding this modifier to the https://docs.soliditylang.org/en/v0.8.20/contracts.html#receive-ether-function[`receive()`]\n     * function or the https://docs.soliditylang.org/en/v0.8.20/contracts.html#fallback-function[`fallback()`]. These\n     * functions are the only execution paths where a function selector cannot be unambiguosly determined from the calldata\n     * since the selector defaults to `0x00000000` in the `receive()` function and similarly in the `fallback()` function\n     * if no calldata is provided. (See {_checkCanCall}).\n     *\n     * The `receive()` function will always panic whereas the `fallback()` may panic depending on the calldata length.\n     * ====\n     */\n    modifier restricted() {\n        _checkCanCall(_msgSender(), _msgData());\n        _;\n    }\n\n    /// @inheritdoc IAccessManaged\n    function authority() public view virtual returns (address) {\n        AccessManagedStorage storage $ = _getAccessManagedStorage();\n        return $._authority;\n    }\n\n    /// @inheritdoc IAccessManaged\n    function setAuthority(address newAuthority) public virtual {\n        address caller = _msgSender();\n        if (caller != authority()) {\n            revert AccessManagedUnauthorized(caller);\n        }\n        if (newAuthority.code.length == 0) {\n            revert AccessManagedInvalidAuthority(newAuthority);\n        }\n        _setAuthority(newAuthority);\n    }\n\n    /// @inheritdoc IAccessManaged\n    function isConsumingScheduledOp() public view returns (bytes4) {\n        AccessManagedStorage storage $ = _getAccessManagedStorage();\n        return $._consumingSchedule ? this.isConsumingScheduledOp.selector : bytes4(0);\n    }\n\n    /**\n     * @dev Transfers control to a new authority. Internal function with no access restriction. Allows bypassing the\n     * permissions set by the current authority.\n     */\n    function _setAuthority(address newAuthority) internal virtual {\n        AccessManagedStorage storage $ = _getAccessManagedStorage();\n        $._authority = newAuthority;\n        emit AuthorityUpdated(newAuthority);\n    }\n\n    /**\n     * @dev Reverts if the caller is not allowed to call the function identified by a selector. Panics if the calldata\n     * is less than 4 bytes long.\n     */\n    function _checkCanCall(address caller, bytes calldata data) internal virtual {\n        AccessManagedStorage storage $ = _getAccessManagedStorage();\n        (bool immediate, uint32 delay) = AuthorityUtils.canCallWithDelay(\n            authority(),\n            caller,\n            address(this),\n            bytes4(data[0:4])\n        );\n        if (!immediate) {\n            if (delay > 0) {\n                $._consumingSchedule = true;\n                IAccessManager(authority()).consumeScheduledOp(caller, data);\n                $._consumingSchedule = false;\n            } else {\n                revert AccessManagedUnauthorized(caller);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ContextUpgradeable} from \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IERC721Receiver} from \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {IERC721Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\n    struct ERC721Storage {\n        // Token name\n        string _name;\n\n        // Token symbol\n        string _symbol;\n\n        mapping(uint256 tokenId => address) _owners;\n\n        mapping(address owner => uint256) _balances;\n\n        mapping(uint256 tokenId => address) _tokenApprovals;\n\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC721\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\n\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\n        assembly {\n            $.slot := ERC721StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC721Storage storage $ = _getERC721Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return $._balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        unchecked {\n            $._balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                $._balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                $._balances[to] += 1;\n            }\n        }\n\n        $._owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        $._tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721Upgradeable} from \"../ERC721Upgradeable.sol\";\nimport {ContextUpgradeable} from \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721BurnableUpgradeable is Initializable, ContextUpgradeable, ERC721Upgradeable {\n    function __ERC721Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC721Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/access/manager/AuthorityUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/AuthorityUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAuthority} from \"./IAuthority.sol\";\n\nlibrary AuthorityUtils {\n    /**\n     * @dev Since `AccessManager` implements an extended IAuthority interface, invoking `canCall` with backwards compatibility\n     * for the preexisting `IAuthority` interface requires special care to avoid reverting on insufficient return data.\n     * This helper function takes care of invoking `canCall` in a backwards compatible way without reverting.\n     */\n    function canCallWithDelay(\n        address authority,\n        address caller,\n        address target,\n        bytes4 selector\n    ) internal view returns (bool immediate, uint32 delay) {\n        (bool success, bytes memory data) = authority.staticcall(\n            abi.encodeCall(IAuthority.canCall, (caller, target, selector))\n        );\n        if (success) {\n            if (data.length >= 0x40) {\n                (immediate, delay) = abi.decode(data, (bool, uint32));\n            } else if (data.length >= 0x20) {\n                immediate = abi.decode(data, (bool));\n            }\n        }\n        return (immediate, delay);\n    }\n}\n"},"@openzeppelin/contracts/access/manager/IAccessManaged.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/IAccessManaged.sol)\n\npragma solidity ^0.8.20;\n\ninterface IAccessManaged {\n    /**\n     * @dev Authority that manages this contract was updated.\n     */\n    event AuthorityUpdated(address authority);\n\n    error AccessManagedUnauthorized(address caller);\n    error AccessManagedRequiredDelay(address caller, uint32 delay);\n    error AccessManagedInvalidAuthority(address authority);\n\n    /**\n     * @dev Returns the current authority.\n     */\n    function authority() external view returns (address);\n\n    /**\n     * @dev Transfers control to a new authority. The caller must be the current authority.\n     */\n    function setAuthority(address) external;\n\n    /**\n     * @dev Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is\n     * being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs\n     * attacker controlled calls.\n     */\n    function isConsumingScheduledOp() external view returns (bytes4);\n}\n"},"@openzeppelin/contracts/access/manager/IAccessManager.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/IAccessManager.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessManaged} from \"./IAccessManaged.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\ninterface IAccessManager {\n    /**\n     * @dev A delayed operation was scheduled.\n     */\n    event OperationScheduled(\n        bytes32 indexed operationId,\n        uint32 indexed nonce,\n        uint48 schedule,\n        address caller,\n        address target,\n        bytes data\n    );\n\n    /**\n     * @dev A scheduled operation was executed.\n     */\n    event OperationExecuted(bytes32 indexed operationId, uint32 indexed nonce);\n\n    /**\n     * @dev A scheduled operation was canceled.\n     */\n    event OperationCanceled(bytes32 indexed operationId, uint32 indexed nonce);\n\n    /**\n     * @dev Informational labelling for a roleId.\n     */\n    event RoleLabel(uint64 indexed roleId, string label);\n\n    /**\n     * @dev Emitted when `account` is granted `roleId`.\n     *\n     * NOTE: The meaning of the `since` argument depends on the `newMember` argument.\n     * If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role,\n     * otherwise it indicates the execution delay for this account and roleId is updated.\n     */\n    event RoleGranted(uint64 indexed roleId, address indexed account, uint32 delay, uint48 since, bool newMember);\n\n    /**\n     * @dev Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous.\n     */\n    event RoleRevoked(uint64 indexed roleId, address indexed account);\n\n    /**\n     * @dev Role acting as admin over a given `roleId` is updated.\n     */\n    event RoleAdminChanged(uint64 indexed roleId, uint64 indexed admin);\n\n    /**\n     * @dev Role acting as guardian over a given `roleId` is updated.\n     */\n    event RoleGuardianChanged(uint64 indexed roleId, uint64 indexed guardian);\n\n    /**\n     * @dev Grant delay for a given `roleId` will be updated to `delay` when `since` is reached.\n     */\n    event RoleGrantDelayChanged(uint64 indexed roleId, uint32 delay, uint48 since);\n\n    /**\n     * @dev Target mode is updated (true = closed, false = open).\n     */\n    event TargetClosed(address indexed target, bool closed);\n\n    /**\n     * @dev Role required to invoke `selector` on `target` is updated to `roleId`.\n     */\n    event TargetFunctionRoleUpdated(address indexed target, bytes4 selector, uint64 indexed roleId);\n\n    /**\n     * @dev Admin delay for a given `target` will be updated to `delay` when `since` is reached.\n     */\n    event TargetAdminDelayUpdated(address indexed target, uint32 delay, uint48 since);\n\n    error AccessManagerAlreadyScheduled(bytes32 operationId);\n    error AccessManagerNotScheduled(bytes32 operationId);\n    error AccessManagerNotReady(bytes32 operationId);\n    error AccessManagerExpired(bytes32 operationId);\n    error AccessManagerLockedAccount(address account);\n    error AccessManagerLockedRole(uint64 roleId);\n    error AccessManagerBadConfirmation();\n    error AccessManagerUnauthorizedAccount(address msgsender, uint64 roleId);\n    error AccessManagerUnauthorizedCall(address caller, address target, bytes4 selector);\n    error AccessManagerUnauthorizedConsume(address target);\n    error AccessManagerUnauthorizedCancel(address msgsender, address caller, address target, bytes4 selector);\n    error AccessManagerInvalidInitialAdmin(address initialAdmin);\n\n    /**\n     * @dev Check if an address (`caller`) is authorised to call a given function on a given contract directly (with\n     * no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule}\n     * & {execute} workflow.\n     *\n     * This function is usually called by the targeted contract to control immediate execution of restricted functions.\n     * Therefore we only return true if the call can be performed without any delay. If the call is subject to a\n     * previously set delay (not zero), then the function should return false and the caller should schedule the operation\n     * for future execution.\n     *\n     * If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise\n     * the operation can be executed if and only if delay is greater than 0.\n     *\n     * NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that\n     * is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail\n     * to identify the indirect workflow, and will consider calls that require a delay to be forbidden.\n     *\n     * NOTE: This function does not report the permissions of this manager itself. These are defined by the\n     * {_canCallSelf} function instead.\n     */\n    function canCall(\n        address caller,\n        address target,\n        bytes4 selector\n    ) external view returns (bool allowed, uint32 delay);\n\n    /**\n     * @dev Expiration delay for scheduled proposals. Defaults to 1 week.\n     *\n     * IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately,\n     * disabling any scheduling usage.\n     */\n    function expiration() external view returns (uint32);\n\n    /**\n     * @dev Minimum setback for all delay updates, with the exception of execution delays. It\n     * can be increased without setback (and reset via {revokeRole} in the case event of an\n     * accidental increase). Defaults to 5 days.\n     */\n    function minSetback() external view returns (uint32);\n\n    /**\n     * @dev Get whether the contract is closed disabling any access. Otherwise role permissions are applied.\n     */\n    function isTargetClosed(address target) external view returns (bool);\n\n    /**\n     * @dev Get the role required to call a function.\n     */\n    function getTargetFunctionRole(address target, bytes4 selector) external view returns (uint64);\n\n    /**\n     * @dev Get the admin delay for a target contract. Changes to contract configuration are subject to this delay.\n     */\n    function getTargetAdminDelay(address target) external view returns (uint32);\n\n    /**\n     * @dev Get the id of the role that acts as an admin for the given role.\n     *\n     * The admin permission is required to grant the role, revoke the role and update the execution delay to execute\n     * an operation that is restricted to this role.\n     */\n    function getRoleAdmin(uint64 roleId) external view returns (uint64);\n\n    /**\n     * @dev Get the role that acts as a guardian for a given role.\n     *\n     * The guardian permission allows canceling operations that have been scheduled under the role.\n     */\n    function getRoleGuardian(uint64 roleId) external view returns (uint64);\n\n    /**\n     * @dev Get the role current grant delay.\n     *\n     * Its value may change at any point without an event emitted following a call to {setGrantDelay}.\n     * Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event.\n     */\n    function getRoleGrantDelay(uint64 roleId) external view returns (uint32);\n\n    /**\n     * @dev Get the access details for a given account for a given role. These details include the timepoint at which\n     * membership becomes active, and the delay applied to all operation by this user that requires this permission\n     * level.\n     *\n     * Returns:\n     * [0] Timestamp at which the account membership becomes valid. 0 means role is not granted.\n     * [1] Current execution delay for the account.\n     * [2] Pending execution delay for the account.\n     * [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled.\n     */\n    function getAccess(uint64 roleId, address account) external view returns (uint48, uint32, uint32, uint48);\n\n    /**\n     * @dev Check if a given account currently has the permission level corresponding to a given role. Note that this\n     * permission might be associated with an execution delay. {getAccess} can provide more details.\n     */\n    function hasRole(uint64 roleId, address account) external view returns (bool, uint32);\n\n    /**\n     * @dev Give a label to a role, for improved role discoverability by UIs.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleLabel} event.\n     */\n    function labelRole(uint64 roleId, string calldata label) external;\n\n    /**\n     * @dev Add `account` to `roleId`, or change its execution delay.\n     *\n     * This gives the account the authorization to call any function that is restricted to this role. An optional\n     * execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation\n     * that is restricted to members of this role. The user will only be able to execute the operation after the delay has\n     * passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}).\n     *\n     * If the account has already been granted this role, the execution delay will be updated. This update is not\n     * immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is\n     * called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any\n     * operation executed in the 3 hours that follows this update was indeed scheduled before this update.\n     *\n     * Requirements:\n     *\n     * - the caller must be an admin for the role (see {getRoleAdmin})\n     * - granted role must not be the `PUBLIC_ROLE`\n     *\n     * Emits a {RoleGranted} event.\n     */\n    function grantRole(uint64 roleId, address account, uint32 executionDelay) external;\n\n    /**\n     * @dev Remove an account from a role, with immediate effect. If the account does not have the role, this call has\n     * no effect.\n     *\n     * Requirements:\n     *\n     * - the caller must be an admin for the role (see {getRoleAdmin})\n     * - revoked role must not be the `PUBLIC_ROLE`\n     *\n     * Emits a {RoleRevoked} event if the account had the role.\n     */\n    function revokeRole(uint64 roleId, address account) external;\n\n    /**\n     * @dev Renounce role permissions for the calling account with immediate effect. If the sender is not in\n     * the role this call has no effect.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * Emits a {RoleRevoked} event if the account had the role.\n     */\n    function renounceRole(uint64 roleId, address callerConfirmation) external;\n\n    /**\n     * @dev Change admin role for a given role.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleAdminChanged} event\n     */\n    function setRoleAdmin(uint64 roleId, uint64 admin) external;\n\n    /**\n     * @dev Change guardian role for a given role.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleGuardianChanged} event\n     */\n    function setRoleGuardian(uint64 roleId, uint64 guardian) external;\n\n    /**\n     * @dev Update the delay for granting a `roleId`.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleGrantDelayChanged} event.\n     */\n    function setGrantDelay(uint64 roleId, uint32 newDelay) external;\n\n    /**\n     * @dev Set the role required to call functions identified by the `selectors` in the `target` contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {TargetFunctionRoleUpdated} event per selector.\n     */\n    function setTargetFunctionRole(address target, bytes4[] calldata selectors, uint64 roleId) external;\n\n    /**\n     * @dev Set the delay for changing the configuration of a given target contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {TargetAdminDelayUpdated} event.\n     */\n    function setTargetAdminDelay(address target, uint32 newDelay) external;\n\n    /**\n     * @dev Set the closed flag for a contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {TargetClosed} event.\n     */\n    function setTargetClosed(address target, bool closed) external;\n\n    /**\n     * @dev Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the\n     * operation is not yet scheduled, has expired, was executed, or was canceled.\n     */\n    function getSchedule(bytes32 id) external view returns (uint48);\n\n    /**\n     * @dev Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never\n     * been scheduled.\n     */\n    function getNonce(bytes32 id) external view returns (uint32);\n\n    /**\n     * @dev Schedule a delayed operation for future execution, and return the operation identifier. It is possible to\n     * choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays\n     * required for the caller. The special value zero will automatically set the earliest possible time.\n     *\n     * Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when\n     * the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this\n     * scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}.\n     *\n     * Emits a {OperationScheduled} event.\n     *\n     * NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If\n     * this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target\n     * contract if it is using standard Solidity ABI encoding.\n     */\n    function schedule(address target, bytes calldata data, uint48 when) external returns (bytes32, uint32);\n\n    /**\n     * @dev Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the\n     * execution delay is 0.\n     *\n     * Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the\n     * operation wasn't previously scheduled (if the caller doesn't have an execution delay).\n     *\n     * Emits an {OperationExecuted} event only if the call was scheduled and delayed.\n     */\n    function execute(address target, bytes calldata data) external payable returns (uint32);\n\n    /**\n     * @dev Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled\n     * operation that is cancelled.\n     *\n     * Requirements:\n     *\n     * - the caller must be the proposer, a guardian of the targeted function, or a global admin\n     *\n     * Emits a {OperationCanceled} event.\n     */\n    function cancel(address caller, address target, bytes calldata data) external returns (uint32);\n\n    /**\n     * @dev Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed\n     * (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error.\n     *\n     * This is useful for contract that want to enforce that calls targeting them were scheduled on the manager,\n     * with all the verifications that it implies.\n     *\n     * Emit a {OperationExecuted} event.\n     */\n    function consumeScheduledOp(address caller, bytes calldata data) external;\n\n    /**\n     * @dev Hashing function for delayed operations.\n     */\n    function hashOperation(address caller, address target, bytes calldata data) external view returns (bytes32);\n\n    /**\n     * @dev Changes the authority of a target managed by this manager instance.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     */\n    function updateAuthority(address target, address newAuthority) external;\n}\n"},"@openzeppelin/contracts/access/manager/IAuthority.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/IAuthority.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard interface for permissioning originally defined in Dappsys.\n */\ninterface IAuthority {\n    /**\n     * @dev Returns true if the caller can invoke on a target the function identified by a function selector.\n     */\n    function canCall(address caller, address target, bytes4 selector) external view returns (bool allowed);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(Delay self, uint48 timepoint) private pure returns (uint32, uint32, uint48) {\n        (uint32 valueBefore, uint32 valueAfter, uint48 effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32, uint32, uint48) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/NFToken.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract NFToken is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, AccessManagedUpgradeable, UUPSUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address initialAuthority) initializer public {\n        __ERC20_init(\"NFToken\", \"NTK\");\n        __ERC20Burnable_init();\n        __AccessManaged_init(initialAuthority);\n        __UUPSUpgradeable_init();\n    }\n\n    function mint(address to, uint256 amount) public restricted {\n        _mint(to, amount);\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        restricted\n        override\n    {}\n}"},"contracts/NFTune.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract NFTune is Initializable, ERC721Upgradeable, ERC721BurnableUpgradeable, AccessManagedUpgradeable, UUPSUpgradeable {\n    uint256 private _nextTokenId;\n\n    // /// @custom:oz-upgrades-unsafe-allow constructor\n    // constructor() {\n    //     _disableInitializers();\n    // }\n\n    function initialize(address initialAuthority) initializer public {\n        __ERC721_init(\"NFTune\", \"NFU\");\n        __ERC721Burnable_init();\n        __AccessManaged_init(initialAuthority);\n        __UUPSUpgradeable_init();\n    }\n\n    function safeMint(address to) public restricted {\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(to, tokenId);\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        restricted\n        override\n    {}\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol","exportedSymbols":{"AccessManagedUpgradeable":[247],"AuthorityUtils":[2707],"ContextUpgradeable":[2585],"IAccessManaged":[2747],"IAccessManager":[3185],"IAuthority":[3201],"Initializable":[501]},"id":248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:0"},{"absolutePath":"@openzeppelin/contracts/access/manager/IAuthority.sol","file":"@openzeppelin/contracts/access/manager/IAuthority.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":248,"sourceUnit":3202,"src":"142:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"150:10:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/manager/AuthorityUtils.sol","file":"@openzeppelin/contracts/access/manager/AuthorityUtils.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":248,"sourceUnit":2708,"src":"224:89:0","symbolAliases":[{"foreign":{"id":4,"name":"AuthorityUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"232:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManager.sol","file":"@openzeppelin/contracts/access/manager/IAccessManager.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":248,"sourceUnit":3186,"src":"314:89:0","symbolAliases":[{"foreign":{"id":6,"name":"IAccessManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"322:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManaged.sol","file":"@openzeppelin/contracts/access/manager/IAccessManaged.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":248,"sourceUnit":2748,"src":"404:89:0","symbolAliases":[{"foreign":{"id":8,"name":"IAccessManaged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"412:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":248,"sourceUnit":2586,"src":"494:70:0","symbolAliases":[{"foreign":{"id":10,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"502:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":13,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":248,"sourceUnit":502,"src":"565:66:0","symbolAliases":[{"foreign":{"id":12,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"573:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":15,"name":"Initializable","nameLocations":["1201:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"1201:13:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"1201:13:0"},{"baseName":{"id":17,"name":"ContextUpgradeable","nameLocations":["1216:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"1216:18:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"1216:18:0"},{"baseName":{"id":19,"name":"IAccessManaged","nameLocations":["1236:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":2747,"src":"1236:14:0"},"id":20,"nodeType":"InheritanceSpecifier","src":"1236:14:0"}],"canonicalName":"AccessManagedUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"633:521:0","text":" @dev This contract module makes available a {restricted} modifier. Functions decorated with this modifier will be\n permissioned according to an \"authority\": a contract like {AccessManager} that follows the {IAuthority} interface,\n implementing a policy that allows certain callers to access certain functions.\n IMPORTANT: The `restricted` modifier should never be used on `internal` functions, judiciously used in `public`\n functions, and ideally only used in `external` functions. See {restricted}."},"fullyImplemented":true,"id":247,"linearizedBaseContracts":[247,2747,2585,501],"name":"AccessManagedUpgradeable","nameLocation":"1173:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessManagedUpgradeable.AccessManagedStorage","documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"1257:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessManaged"},"id":26,"members":[{"constant":false,"id":23,"mutability":"mutable","name":"_authority","nameLocation":"1379:10:0","nodeType":"VariableDeclaration","scope":26,"src":"1371:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"1371:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"_consumingSchedule","nameLocation":"1405:18:0","nodeType":"VariableDeclaration","scope":26,"src":"1400:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"AccessManagedStorage","nameLocation":"1340:20:0","nodeType":"StructDefinition","scope":247,"src":"1333:97:0","visibility":"public"},{"constant":true,"id":29,"mutability":"constant","name":"AccessManagedStorageLocation","nameLocation":"1578:28:0","nodeType":"VariableDeclaration","scope":247,"src":"1553:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1553:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866333137373335376162343664386166303037616233666462396166383164613138396531303638666566646330303733646361383861326361623430613030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1609:66:0","typeDescriptions":{"typeIdentifier":"t_rational_109953455752606422573437920188507504950042604195039080537717645949022044948992_by_1","typeString":"int_const 1099...(70 digits omitted)...8992"},"value":"0xf3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a00"},"visibility":"private"},{"body":{"id":36,"nodeType":"Block","src":"1772:87:0","statements":[{"AST":{"nativeSrc":"1791:62:0","nodeType":"YulBlock","src":"1791:62:0","statements":[{"nativeSrc":"1805:38:0","nodeType":"YulAssignment","src":"1805:38:0","value":{"name":"AccessManagedStorageLocation","nativeSrc":"1815:28:0","nodeType":"YulIdentifier","src":"1815:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1805:6:0","nodeType":"YulIdentifier","src":"1805:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":33,"isOffset":false,"isSlot":true,"src":"1805:6:0","suffix":"slot","valueSize":1},{"declaration":29,"isOffset":false,"isSlot":false,"src":"1815:28:0","valueSize":1}],"id":35,"nodeType":"InlineAssembly","src":"1782:71:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessManagedStorage","nameLocation":"1691:24:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1715:2:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"$","nameLocation":"1769:1:0","nodeType":"VariableDeclaration","scope":37,"src":"1740:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"},"typeName":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"AccessManagedStorage","nameLocations":["1740:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":26,"src":"1740:20:0"},"referencedDeclaration":26,"src":"1740:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"}},"visibility":"internal"}],"src":"1739:32:0"},"scope":247,"src":"1682:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":49,"nodeType":"Block","src":"2035:65:0","statements":[{"expression":{"arguments":[{"id":46,"name":"initialAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"2076:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"__AccessManaged_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"2045:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2045:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"2045:48:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1865:83:0","text":" @dev Initializes the contract connected to an initial authority."},"id":50,"implemented":true,"kind":"function","modifiers":[{"id":43,"kind":"modifierInvocation","modifierName":{"id":42,"name":"onlyInitializing","nameLocations":["2018:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"2018:16:0"},"nodeType":"ModifierInvocation","src":"2018:16:0"}],"name":"__AccessManaged_init","nameLocation":"1962:20:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"initialAuthority","nameLocation":"1991:16:0","nodeType":"VariableDeclaration","scope":50,"src":"1983:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"1983:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1982:26:0"},"returnParameters":{"id":44,"nodeType":"ParameterList","parameters":[],"src":"2035:0:0"},"scope":247,"src":"1953:147:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":61,"nodeType":"Block","src":"2198:48:0","statements":[{"expression":{"arguments":[{"id":58,"name":"initialAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2222:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":57,"name":"_setAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2208:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2208:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60,"nodeType":"ExpressionStatement","src":"2208:31:0"}]},"id":62,"implemented":true,"kind":"function","modifiers":[{"id":55,"kind":"modifierInvocation","modifierName":{"id":54,"name":"onlyInitializing","nameLocations":["2181:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"2181:16:0"},"nodeType":"ModifierInvocation","src":"2181:16:0"}],"name":"__AccessManaged_init_unchained","nameLocation":"2115:30:0","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"initialAuthority","nameLocation":"2154:16:0","nodeType":"VariableDeclaration","scope":62,"src":"2146:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2145:26:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"2198:0:0"},"scope":247,"src":"2106:140:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":73,"nodeType":"Block","src":"3832:67:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":66,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"3856:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3856:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":68,"name":"_msgData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"3870:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3870:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":65,"name":"_checkCanCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3842:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (address,bytes calldata)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":71,"nodeType":"ExpressionStatement","src":"3842:39:0"},{"id":72,"nodeType":"PlaceholderStatement","src":"3891:1:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2252:1553:0","text":" @dev Restricts access to a function as defined by the connected Authority for this contract and the\n caller and selector of the function that entered the contract.\n [IMPORTANT]\n ====\n In general, this modifier should only be used on `external` functions. It is okay to use it on `public`\n functions that are used as external entry points and are not called internally. Unless you know what you're\n doing, it should never be used on `internal` functions. Failure to follow these rules can have critical security\n implications! This is because the permissions are determined by the function that entered the contract, i.e. the\n function at the bottom of the call stack, and not the function where the modifier is visible in the source code.\n ====\n [WARNING]\n ====\n Avoid adding this modifier to the https://docs.soliditylang.org/en/v0.8.20/contracts.html#receive-ether-function[`receive()`]\n function or the https://docs.soliditylang.org/en/v0.8.20/contracts.html#fallback-function[`fallback()`]. These\n functions are the only execution paths where a function selector cannot be unambiguosly determined from the calldata\n since the selector defaults to `0x00000000` in the `receive()` function and similarly in the `fallback()` function\n if no calldata is provided. (See {_checkCanCall}).\n The `receive()` function will always panic whereas the `fallback()` may panic depending on the calldata length.\n ===="},"id":74,"name":"restricted","nameLocation":"3819:10:0","nodeType":"ModifierDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3829:2:0"},"src":"3810:89:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2734],"body":{"id":89,"nodeType":"Block","src":"3999:105:0","statements":[{"assignments":[82],"declarations":[{"constant":false,"id":82,"mutability":"mutable","name":"$","nameLocation":"4038:1:0","nodeType":"VariableDeclaration","scope":89,"src":"4009:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"},"typeName":{"id":81,"nodeType":"UserDefinedTypeName","pathNode":{"id":80,"name":"AccessManagedStorage","nameLocations":["4009:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":26,"src":"4009:20:0"},"referencedDeclaration":26,"src":"4009:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"}},"visibility":"internal"}],"id":85,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":83,"name":"_getAccessManagedStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"4042:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessManagedStorage_$26_storage_ptr_$","typeString":"function () pure returns (struct AccessManagedUpgradeable.AccessManagedStorage storage pointer)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4042:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4009:59:0"},{"expression":{"expression":{"id":86,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"4085:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage storage pointer"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4087:10:0","memberName":"_authority","nodeType":"MemberAccess","referencedDeclaration":23,"src":"4085:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":79,"id":88,"nodeType":"Return","src":"4078:19:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"3905:30:0","text":"@inheritdoc IAccessManaged"},"functionSelector":"bf7e214f","id":90,"implemented":true,"kind":"function","modifiers":[],"name":"authority","nameLocation":"3949:9:0","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"3958:2:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"3990:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"3990:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3989:9:0"},"scope":247,"src":"3940:164:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2740],"body":{"id":126,"nodeType":"Block","src":"4204:303:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"caller","nameLocation":"4222:6:0","nodeType":"VariableDeclaration","scope":126,"src":"4214:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4214:29:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":101,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4257:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":102,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"4267:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4267:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4257:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":110,"nodeType":"IfStatement","src":"4253:92:0","trueBody":{"id":109,"nodeType":"Block","src":"4280:65:0","statements":[{"errorCall":{"arguments":[{"id":106,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4327:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"AccessManagedUnauthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"4301:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4301:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":108,"nodeType":"RevertStatement","src":"4294:40:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":111,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"4358:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4371:4:0","memberName":"code","nodeType":"MemberAccess","src":"4358:17:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4376:6:0","memberName":"length","nodeType":"MemberAccess","src":"4358:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4386:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4358:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":121,"nodeType":"IfStatement","src":"4354:110:0","trueBody":{"id":120,"nodeType":"Block","src":"4389:75:0","statements":[{"errorCall":{"arguments":[{"id":117,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"4440:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":116,"name":"AccessManagedInvalidAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"4410:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4410:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"RevertStatement","src":"4403:50:0"}]}},{"expression":{"arguments":[{"id":123,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"4487:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_setAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"4473:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4473:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"4473:27:0"}]},"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4110:30:0","text":"@inheritdoc IAccessManaged"},"functionSelector":"7a9e5e4b","id":127,"implemented":true,"kind":"function","modifiers":[],"name":"setAuthority","nameLocation":"4154:12:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"newAuthority","nameLocation":"4175:12:0","nodeType":"VariableDeclaration","scope":127,"src":"4167:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4167:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4166:22:0"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":247,"src":"4145:362:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2746],"body":{"id":150,"nodeType":"Block","src":"4611:164:0","statements":[{"assignments":[135],"declarations":[{"constant":false,"id":135,"mutability":"mutable","name":"$","nameLocation":"4650:1:0","nodeType":"VariableDeclaration","scope":150,"src":"4621:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"},"typeName":{"id":134,"nodeType":"UserDefinedTypeName","pathNode":{"id":133,"name":"AccessManagedStorage","nameLocations":["4621:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":26,"src":"4621:20:0"},"referencedDeclaration":26,"src":"4621:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"}},"visibility":"internal"}],"id":138,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":136,"name":"_getAccessManagedStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"4654:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessManagedStorage_$26_storage_ptr_$","typeString":"function () pure returns (struct AccessManagedUpgradeable.AccessManagedStorage storage pointer)"}},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4621:59:0"},{"expression":{"condition":{"expression":{"id":139,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"4697:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage storage pointer"}},"id":140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4699:18:0","memberName":"_consumingSchedule","nodeType":"MemberAccess","referencedDeclaration":25,"src":"4697:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4759:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":144,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4759:6:0","typeDescriptions":{}}},"id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4759:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4697:71:0","trueExpression":{"expression":{"expression":{"id":141,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4720:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AccessManagedUpgradeable_$247","typeString":"contract AccessManagedUpgradeable"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4725:22:0","memberName":"isConsumingScheduledOp","nodeType":"MemberAccess","referencedDeclaration":151,"src":"4720:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes4_$","typeString":"function () view external returns (bytes4)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4748:8:0","memberName":"selector","nodeType":"MemberAccess","src":"4720:36:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":132,"id":149,"nodeType":"Return","src":"4690:78:0"}]},"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"4513:30:0","text":"@inheritdoc IAccessManaged"},"functionSelector":"8fb36037","id":151,"implemented":true,"kind":"function","modifiers":[],"name":"isConsumingScheduledOp","nameLocation":"4557:22:0","nodeType":"FunctionDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"4579:2:0"},"returnParameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":151,"src":"4603:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":130,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4603:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4602:8:0"},"scope":247,"src":"4548:227:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":173,"nodeType":"Block","src":"5025:158:0","statements":[{"assignments":[159],"declarations":[{"constant":false,"id":159,"mutability":"mutable","name":"$","nameLocation":"5064:1:0","nodeType":"VariableDeclaration","scope":173,"src":"5035:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"},"typeName":{"id":158,"nodeType":"UserDefinedTypeName","pathNode":{"id":157,"name":"AccessManagedStorage","nameLocations":["5035:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":26,"src":"5035:20:0"},"referencedDeclaration":26,"src":"5035:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"}},"visibility":"internal"}],"id":162,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":160,"name":"_getAccessManagedStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"5068:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessManagedStorage_$26_storage_ptr_$","typeString":"function () pure returns (struct AccessManagedUpgradeable.AccessManagedStorage storage pointer)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5068:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5035:59:0"},{"expression":{"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":163,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"5104:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5106:10:0","memberName":"_authority","nodeType":"MemberAccess","referencedDeclaration":23,"src":"5104:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":166,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"5119:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5104:27:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":168,"nodeType":"ExpressionStatement","src":"5104:27:0"},{"eventCall":{"arguments":[{"id":170,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"5163:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":169,"name":"AuthorityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"5146:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":172,"nodeType":"EmitStatement","src":"5141:35:0"}]},"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"4781:177:0","text":" @dev Transfers control to a new authority. Internal function with no access restriction. Allows bypassing the\n permissions set by the current authority."},"id":174,"implemented":true,"kind":"function","modifiers":[],"name":"_setAuthority","nameLocation":"4972:13:0","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"newAuthority","nameLocation":"4994:12:0","nodeType":"VariableDeclaration","scope":174,"src":"4986:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"4986:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4985:22:0"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[],"src":"5025:0:0"},"scope":247,"src":"4963:220:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":245,"nodeType":"Block","src":"5435:590:0","statements":[{"assignments":[184],"declarations":[{"constant":false,"id":184,"mutability":"mutable","name":"$","nameLocation":"5474:1:0","nodeType":"VariableDeclaration","scope":245,"src":"5445:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"},"typeName":{"id":183,"nodeType":"UserDefinedTypeName","pathNode":{"id":182,"name":"AccessManagedStorage","nameLocations":["5445:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":26,"src":"5445:20:0"},"referencedDeclaration":26,"src":"5445:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage"}},"visibility":"internal"}],"id":187,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":185,"name":"_getAccessManagedStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"5478:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessManagedStorage_$26_storage_ptr_$","typeString":"function () pure returns (struct AccessManagedUpgradeable.AccessManagedStorage storage pointer)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5445:59:0"},{"assignments":[189,191],"declarations":[{"constant":false,"id":189,"mutability":"mutable","name":"immediate","nameLocation":"5520:9:0","nodeType":"VariableDeclaration","scope":245,"src":"5515:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":188,"name":"bool","nodeType":"ElementaryTypeName","src":"5515:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"delay","nameLocation":"5538:5:0","nodeType":"VariableDeclaration","scope":245,"src":"5531:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":190,"name":"uint32","nodeType":"ElementaryTypeName","src":"5531:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":209,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":194,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"5592:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":196,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"5617:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":199,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5645:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AccessManagedUpgradeable_$247","typeString":"contract AccessManagedUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AccessManagedUpgradeable_$247","typeString":"contract AccessManagedUpgradeable"}],"id":198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5637:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"5637:7:0","typeDescriptions":{}}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5637:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"baseExpression":{"id":203,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"5671:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"34","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5678:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"5671:9:0","startExpression":{"hexValue":"30","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5676:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5664:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":201,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5664:6:0","typeDescriptions":{}}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5664:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":192,"name":"AuthorityUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"5547:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AuthorityUtils_$2707_$","typeString":"type(library AuthorityUtils)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5562:16:0","memberName":"canCallWithDelay","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"5547:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$_t_uint32_$","typeString":"function (address,address,address,bytes4) view returns (bool,uint32)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:144:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$","typeString":"tuple(bool,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"5514:177:0"},{"condition":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5705:10:0","subExpression":{"id":210,"name":"immediate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5706:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":244,"nodeType":"IfStatement","src":"5701:318:0","trueBody":{"id":243,"nodeType":"Block","src":"5717:302:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":212,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"5735:5:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5743:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5735:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":241,"nodeType":"Block","src":"5936:73:0","statements":[{"errorCall":{"arguments":[{"id":238,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"5987:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":237,"name":"AccessManagedUnauthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"5961:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5961:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"RevertStatement","src":"5954:40:0"}]},"id":242,"nodeType":"IfStatement","src":"5731:278:0","trueBody":{"id":236,"nodeType":"Block","src":"5746:184:0","statements":[{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":215,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5764:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage storage pointer"}},"id":217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5766:18:0","memberName":"_consumingSchedule","nodeType":"MemberAccess","referencedDeclaration":25,"src":"5764:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5787:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5764:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":220,"nodeType":"ExpressionStatement","src":"5764:27:0"},{"expression":{"arguments":[{"id":226,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"5856:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":227,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"5864:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":222,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"5824:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":221,"name":"IAccessManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"5809:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessManager_$3185_$","typeString":"type(contract IAccessManager)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAccessManager_$3185","typeString":"contract IAccessManager"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5837:18:0","memberName":"consumeScheduledOp","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"5809:46:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory) external"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":229,"nodeType":"ExpressionStatement","src":"5809:60:0"},{"expression":{"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5887:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessManagedStorage_$26_storage_ptr","typeString":"struct AccessManagedUpgradeable.AccessManagedStorage storage pointer"}},"id":232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5889:18:0","memberName":"_consumingSchedule","nodeType":"MemberAccess","referencedDeclaration":25,"src":"5887:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5910:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5887:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":235,"nodeType":"ExpressionStatement","src":"5887:28:0"}]}}]}}]},"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"5189:164:0","text":" @dev Reverts if the caller is not allowed to call the function identified by a selector. Panics if the calldata\n is less than 4 bytes long."},"id":246,"implemented":true,"kind":"function","modifiers":[],"name":"_checkCanCall","nameLocation":"5367:13:0","nodeType":"FunctionDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"caller","nameLocation":"5389:6:0","nodeType":"VariableDeclaration","scope":246,"src":"5381:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"5381:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"data","nameLocation":"5412:4:0","nodeType":"VariableDeclaration","scope":246,"src":"5397:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":178,"name":"bytes","nodeType":"ElementaryTypeName","src":"5397:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5380:37:0"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"5435:0:0"},"scope":247,"src":"5358:667:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":248,"src":"1155:4872:0","usedErrors":[264,267,2718,2724,2728],"usedEvents":[272,2714]}],"src":"116:5912:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[501]},"id":502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":258,"members":[{"constant":false,"id":254,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":258,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":253,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":258,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":256,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":501,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":261,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":501,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":264,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":267,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":272,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":272,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":269,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":354,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":354,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":258,"src":"4158:20:1"},"referencedDeclaration":258,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":280,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":278,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$258_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[282],"declarations":[{"constant":false,"id":282,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":354,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":281,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":286,"initialValue":{"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":283,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":257,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[288],"declarations":[{"constant":false,"id":288,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":354,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":287,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":291,"initialValue":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":254,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[293],"declarations":[{"constant":false,"id":293,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":354,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":292,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":299,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":294,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":297,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[301],"declarations":[{"constant":false,"id":301,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":354,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":300,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":314,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":302,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":307,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$501","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$501","typeString":"contract Initializable"}],"id":306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":315,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":317,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":323,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":254,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":331,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":339,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":338,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":332,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":257,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":337,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":340,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":341,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":353,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":352,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":342,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":257,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":347,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":348,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":355,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":401,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[362],"declarations":[{"constant":false,"id":362,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":401,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":361,"nodeType":"UserDefinedTypeName","pathNode":{"id":360,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":258,"src":"6357:20:1"},"referencedDeclaration":258,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":365,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":363,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$258_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":366,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":257,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":368,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":254,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":370,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":377,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":376,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":373,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":375,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":378,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":254,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":381,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":383,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":384,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":257,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":389,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":390,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":391,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":257,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":396,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":398,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":397,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":400,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":402,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":402,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":357,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":409,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":405,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":408,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":410,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":422,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":414,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":421,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":420,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":417,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":423,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":501,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":468,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[429],"declarations":[{"constant":false,"id":429,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":468,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":428,"nodeType":"UserDefinedTypeName","pathNode":{"id":427,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":258,"src":"7826:20:1"},"referencedDeclaration":258,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":432,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":430,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$258_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":433,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":257,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":438,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":440,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":254,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":443,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":467,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":466,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":448,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":254,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":452,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":457,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":460,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":459,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":458,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":469,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":501,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":479,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":475,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$258_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":254,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":474,"id":478,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":480,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":472,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":501,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":486,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$258_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":257,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":485,"id":489,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":491,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":483,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":501,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":499,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":496,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":261,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":498,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":500,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":495,"nodeType":"UserDefinedTypeName","pathNode":{"id":494,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":258,"src":"8795:20:1"},"referencedDeclaration":258,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$258_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":501,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":502,"src":"2349:6560:1","usedErrors":[264,267],"usedEvents":[272]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[3651],"IERC1822Proxiable":[3211],"Initializable":[501],"UUPSUpgradeable":[683]},"id":684,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":503,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":505,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":684,"sourceUnit":3212,"src":"141:88:2","symbolAliases":[{"foreign":{"id":504,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":684,"sourceUnit":3652,"src":"230:84:2","symbolAliases":[{"foreign":{"id":506,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":509,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":684,"sourceUnit":502,"src":"315:50:2","symbolAliases":[{"foreign":{"id":508,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":511,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"1023:13:2"},"id":512,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":513,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":3211,"src":"1038:17:2"},"id":514,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":683,"linearizedBaseContracts":[683,3211,501],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":521,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":683,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":519,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$683","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$683","typeString":"contract UUPSUpgradeable"}],"id":518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":525,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":683,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":523,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":528,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":533,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":533,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":540,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":536,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":539,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":541,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":548,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":544,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":547,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":549,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":554,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":555,"implemented":true,"kind":"function","modifiers":[{"id":552,"kind":"modifierInvocation","modifierName":{"id":551,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":683,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":560,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":561,"implemented":true,"kind":"function","modifiers":[{"id":558,"kind":"modifierInvocation","modifierName":{"id":557,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":683,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3210],"body":{"id":572,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":569,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3651_$","typeString":"type(library ERC1967Utils)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":568,"id":571,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":573,"implemented":true,"kind":"function","modifiers":[{"id":565,"kind":"modifierInvocation","modifierName":{"id":564,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":549,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":573,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":683,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":592,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":584,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":583,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":588,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":587,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":593,"implemented":true,"kind":"function","modifiers":[{"id":581,"kind":"modifierInvocation","modifierName":{"id":580,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":541,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":593,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":593,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":577,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":683,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":614,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":599,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$683","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$683","typeString":"contract UUPSUpgradeable"}],"id":598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":601,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":603,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3651_$","typeString":"type(library ERC1967Utils)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":606,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":613,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":612,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":609,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":683,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":621,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$683","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$683","typeString":"contract UUPSUpgradeable"}],"id":620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":623,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":629,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":628,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":625,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":683,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":637,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":637,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":683,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":670,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":653,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":654,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3651_$","typeString":"type(library ERC1967Utils)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":662,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":661,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":658,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":657,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":666,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":663,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3651_$","typeString":"type(library ERC1967Utils)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":3470,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":671,"nodeType":"TryCatchClause","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":671,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":678,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":675,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":672,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3651_$","typeString":"type(library ERC1967Utils)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":679,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":646,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$3211_$","typeString":"type(contract IERC1822Proxiable)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$3211","typeString":"contract IERC1822Proxiable"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":3210,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":680,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":682,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":682,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":641,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":683,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":684,"src":"986:5606:2","usedErrors":[264,267,528,533,3383,3396,3941,3944],"usedEvents":[272,3362]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2585],"ERC20Upgradeable":[1300],"IERC20":[3739],"IERC20Errors":[3253],"IERC20Metadata":[3765],"Initializable":[501]},"id":1301,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":685,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":687,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1301,"sourceUnit":3740,"src":"131:70:3","symbolAliases":[{"foreign":{"id":686,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":689,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1301,"sourceUnit":3766,"src":"202:97:3","symbolAliases":[{"foreign":{"id":688,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":691,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1301,"sourceUnit":2586,"src":"300:70:3","symbolAliases":[{"foreign":{"id":690,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":693,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1301,"sourceUnit":3349,"src":"371:83:3","symbolAliases":[{"foreign":{"id":692,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":695,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1301,"sourceUnit":502,"src":"455:66:3","symbolAliases":[{"foreign":{"id":694,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":697,"name":"Initializable","nameLocations":["1614:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"1614:13:3"},"id":698,"nodeType":"InheritanceSpecifier","src":"1614:13:3"},{"baseName":{"id":699,"name":"ContextUpgradeable","nameLocations":["1629:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"1629:18:3"},"id":700,"nodeType":"InheritanceSpecifier","src":"1629:18:3"},{"baseName":{"id":701,"name":"IERC20","nameLocations":["1649:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3739,"src":"1649:6:3"},"id":702,"nodeType":"InheritanceSpecifier","src":"1649:6:3"},{"baseName":{"id":703,"name":"IERC20Metadata","nameLocations":["1657:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"1657:14:3"},"id":704,"nodeType":"InheritanceSpecifier","src":"1657:14:3"},{"baseName":{"id":705,"name":"IERC20Errors","nameLocations":["1673:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":3253,"src":"1673:12:3"},"id":706,"nodeType":"InheritanceSpecifier","src":"1673:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"523:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1300,"linearizedBaseContracts":[1300,3253,3765,3739,2585,501],"name":"ERC20Upgradeable","nameLocation":"1594:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1692:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":724,"members":[{"constant":false,"id":711,"mutability":"mutable","name":"_balances","nameLocation":"1826:9:3","nodeType":"VariableDeclaration","scope":724,"src":"1790:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":710,"keyName":"account","keyNameLocation":"1806:7:3","keyType":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"_allowances","nameLocation":"1910:11:3","nodeType":"VariableDeclaration","scope":724,"src":"1846:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":716,"keyName":"account","keyNameLocation":"1862:7:3","keyType":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"1854:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1846:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":715,"keyName":"spender","keyNameLocation":"1889:7:3","keyType":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1873:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"_totalSupply","nameLocation":"1940:12:3","nodeType":"VariableDeclaration","scope":724,"src":"1932:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"_name","nameLocation":"1970:5:3","nodeType":"VariableDeclaration","scope":724,"src":"1963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":720,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"_symbol","nameLocation":"1992:7:3","nodeType":"VariableDeclaration","scope":724,"src":"1985:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":722,"name":"string","nodeType":"ElementaryTypeName","src":"1985:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1767:12:3","nodeType":"StructDefinition","scope":1300,"src":"1760:246:3","visibility":"public"},{"constant":true,"id":727,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"2146:20:3","nodeType":"VariableDeclaration","scope":1300,"src":"2121:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":734,"nodeType":"Block","src":"2316:79:3","statements":[{"AST":{"nativeSrc":"2335:54:3","nodeType":"YulBlock","src":"2335:54:3","statements":[{"nativeSrc":"2349:30:3","nodeType":"YulAssignment","src":"2349:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2359:20:3","nodeType":"YulIdentifier","src":"2359:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2349:6:3","nodeType":"YulIdentifier","src":"2349:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":731,"isOffset":false,"isSlot":true,"src":"2349:6:3","suffix":"slot","valueSize":1},{"declaration":727,"isOffset":false,"isSlot":false,"src":"2359:20:3","valueSize":1}],"id":733,"nodeType":"InlineAssembly","src":"2326:63:3"}]},"id":735,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"2251:16:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"2267:2:3"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"$","nameLocation":"2313:1:3","nodeType":"VariableDeclaration","scope":735,"src":"2292:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":730,"nodeType":"UserDefinedTypeName","pathNode":{"id":729,"name":"ERC20Storage","nameLocations":["2292:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"2292:12:3"},"referencedDeclaration":724,"src":"2292:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"2291:24:3"},"scope":1300,"src":"2242:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":750,"nodeType":"Block","src":"2669:55:3","statements":[{"expression":{"arguments":[{"id":746,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":747,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2709:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":745,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2679:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"ExpressionStatement","src":"2679:38:3"}]},"documentation":{"id":736,"nodeType":"StructuredDocumentation","src":"2401:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":751,"implemented":true,"kind":"function","modifiers":[{"id":743,"kind":"modifierInvocation","modifierName":{"id":742,"name":"onlyInitializing","nameLocations":["2652:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"2652:16:3"},"nodeType":"ModifierInvocation","src":"2652:16:3"}],"name":"__ERC20_init","nameLocation":"2586:12:3","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"name_","nameLocation":"2613:5:3","nodeType":"VariableDeclaration","scope":751,"src":"2599:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":737,"name":"string","nodeType":"ElementaryTypeName","src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"symbol_","nameLocation":"2634:7:3","nodeType":"VariableDeclaration","scope":751,"src":"2620:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2598:44:3"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"2669:0:3"},"scope":1300,"src":"2577:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"2832:114:3","statements":[{"assignments":[762],"declarations":[{"constant":false,"id":762,"mutability":"mutable","name":"$","nameLocation":"2863:1:3","nodeType":"VariableDeclaration","scope":778,"src":"2842:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":761,"nodeType":"UserDefinedTypeName","pathNode":{"id":760,"name":"ERC20Storage","nameLocations":["2842:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"2842:12:3"},"referencedDeclaration":724,"src":"2842:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":765,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":763,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"2867:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$724_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2842:43:3"},{"expression":{"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":766,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2897:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":721,"src":"2895:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":769,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"2905:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2895:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":771,"nodeType":"ExpressionStatement","src":"2895:15:3"},{"expression":{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":772,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2920:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2922:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":723,"src":"2920:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":775,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"2932:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2920:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":777,"nodeType":"ExpressionStatement","src":"2920:19:3"}]},"id":779,"implemented":true,"kind":"function","modifiers":[{"id":758,"kind":"modifierInvocation","modifierName":{"id":757,"name":"onlyInitializing","nameLocations":["2815:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"2815:16:3"},"nodeType":"ModifierInvocation","src":"2815:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2739:22:3","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"name_","nameLocation":"2776:5:3","nodeType":"VariableDeclaration","scope":779,"src":"2762:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":752,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"symbol_","nameLocation":"2797:7:3","nodeType":"VariableDeclaration","scope":779,"src":"2783:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":754,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:44:3"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"2832:0:3"},"scope":1300,"src":"2730:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3752],"body":{"id":794,"nodeType":"Block","src":"3071:84:3","statements":[{"assignments":[787],"declarations":[{"constant":false,"id":787,"mutability":"mutable","name":"$","nameLocation":"3102:1:3","nodeType":"VariableDeclaration","scope":794,"src":"3081:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":786,"nodeType":"UserDefinedTypeName","pathNode":{"id":785,"name":"ERC20Storage","nameLocations":["3081:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"3081:12:3"},"referencedDeclaration":724,"src":"3081:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":790,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":788,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"3106:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$724_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3081:43:3"},{"expression":{"expression":{"id":791,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"3141:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":721,"src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":784,"id":793,"nodeType":"Return","src":"3134:14:3"}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"2952:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":795,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3020:4:3","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"3024:2:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"3056:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":782,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3055:15:3"},"scope":1300,"src":"3011:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3758],"body":{"id":810,"nodeType":"Block","src":"3330:86:3","statements":[{"assignments":[803],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"$","nameLocation":"3361:1:3","nodeType":"VariableDeclaration","scope":810,"src":"3340:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":802,"nodeType":"UserDefinedTypeName","pathNode":{"id":801,"name":"ERC20Storage","nameLocations":["3340:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"3340:12:3"},"referencedDeclaration":724,"src":"3340:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":806,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":804,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"3365:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$724_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3340:43:3"},{"expression":{"expression":{"id":807,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3400:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":723,"src":"3400:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":800,"id":809,"nodeType":"Return","src":"3393:16:3"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"3161:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":811,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3277:6:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"3283:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":811,"src":"3315:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":798,"name":"string","nodeType":"ElementaryTypeName","src":"3315:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3314:15:3"},"scope":1300,"src":"3268:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3764],"body":{"id":819,"nodeType":"Block","src":"4105:26:3","statements":[{"expression":{"hexValue":"3138","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4122:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":816,"id":818,"nodeType":"Return","src":"4115:9:3"}]},"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"3422:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":820,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"4058:8:3","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"4066:2:3"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"4098:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":814,"name":"uint8","nodeType":"ElementaryTypeName","src":"4098:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4097:7:3"},"scope":1300,"src":"4049:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3688],"body":{"id":835,"nodeType":"Block","src":"4252:91:3","statements":[{"assignments":[828],"declarations":[{"constant":false,"id":828,"mutability":"mutable","name":"$","nameLocation":"4283:1:3","nodeType":"VariableDeclaration","scope":835,"src":"4262:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":827,"nodeType":"UserDefinedTypeName","pathNode":{"id":826,"name":"ERC20Storage","nameLocations":["4262:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"4262:12:3"},"referencedDeclaration":724,"src":"4262:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":831,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":829,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"4287:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$724_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4262:43:3"},{"expression":{"expression":{"id":832,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"4322:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":719,"src":"4322:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":825,"id":834,"nodeType":"Return","src":"4315:21:3"}]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"4137:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":836,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4200:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"4211:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":836,"src":"4243:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:9:3"},"scope":1300,"src":"4191:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3696],"body":{"id":855,"nodeType":"Block","src":"4475:97:3","statements":[{"assignments":[846],"declarations":[{"constant":false,"id":846,"mutability":"mutable","name":"$","nameLocation":"4506:1:3","nodeType":"VariableDeclaration","scope":855,"src":"4485:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":845,"nodeType":"UserDefinedTypeName","pathNode":{"id":844,"name":"ERC20Storage","nameLocations":["4485:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"4485:12:3"},"referencedDeclaration":724,"src":"4485:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":849,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":847,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"4510:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$724_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4485:43:3"},{"expression":{"baseExpression":{"expression":{"id":850,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"4545:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":711,"src":"4545:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":853,"indexExpression":{"id":852,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"4557:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4545:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":843,"id":854,"nodeType":"Return","src":"4538:27:3"}]},"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"4349:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":856,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4410:9:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"account","nameLocation":"4428:7:3","nodeType":"VariableDeclaration","scope":856,"src":"4420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:17:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"4466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4465:9:3"},"scope":1300,"src":"4401:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3706],"body":{"id":879,"nodeType":"Block","src":"4842:103:3","statements":[{"assignments":[867],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"owner","nameLocation":"4860:5:3","nodeType":"VariableDeclaration","scope":879,"src":"4852:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":870,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":868,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4868:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4852:28:3"},{"expression":{"arguments":[{"id":872,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"4900:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"4907:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"4911:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":871,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"4890:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"ExpressionStatement","src":"4890:27:3"},{"expression":{"hexValue":"74727565","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4934:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":865,"id":878,"nodeType":"Return","src":"4927:11:3"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"4578:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":880,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4776:8:3","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"to","nameLocation":"4793:2:3","nodeType":"VariableDeclaration","scope":880,"src":"4785:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"value","nameLocation":"4805:5:3","nodeType":"VariableDeclaration","scope":880,"src":"4797:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:27:3"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":880,"src":"4836:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":863,"name":"bool","nodeType":"ElementaryTypeName","src":"4836:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4835:6:3"},"scope":1300,"src":"4767:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3716],"body":{"id":903,"nodeType":"Block","src":"5092:106:3","statements":[{"assignments":[892],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"$","nameLocation":"5123:1:3","nodeType":"VariableDeclaration","scope":903,"src":"5102:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":891,"nodeType":"UserDefinedTypeName","pathNode":{"id":890,"name":"ERC20Storage","nameLocations":["5102:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"5102:12:3"},"referencedDeclaration":724,"src":"5102:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":895,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":893,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"5127:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$724_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5102:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":896,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"5162:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":717,"src":"5162:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":899,"indexExpression":{"id":898,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"5176:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":901,"indexExpression":{"id":900,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"5183:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":889,"id":902,"nodeType":"Return","src":"5155:36:3"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"4951:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":904,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"5012:9:3","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"owner","nameLocation":"5030:5:3","nodeType":"VariableDeclaration","scope":904,"src":"5022:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"spender","nameLocation":"5045:7:3","nodeType":"VariableDeclaration","scope":904,"src":"5037:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"5037:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5021:32:3"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"5083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:9:3"},"scope":1300,"src":"5003:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3726],"body":{"id":927,"nodeType":"Block","src":"5584:107:3","statements":[{"assignments":[915],"declarations":[{"constant":false,"id":915,"mutability":"mutable","name":"owner","nameLocation":"5602:5:3","nodeType":"VariableDeclaration","scope":927,"src":"5594:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":918,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":916,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5610:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:28:3"},{"expression":{"arguments":[{"id":920,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5641:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":921,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"5648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"5657:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1183,1251],"referencedDeclaration":1183,"src":"5632:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"5632:31:3"},{"expression":{"hexValue":"74727565","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":913,"id":926,"nodeType":"Return","src":"5673:11:3"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"5204:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":928,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5514:7:3","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"spender","nameLocation":"5530:7:3","nodeType":"VariableDeclaration","scope":928,"src":"5522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"value","nameLocation":"5547:5:3","nodeType":"VariableDeclaration","scope":928,"src":"5539:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5521:32:3"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":928,"src":"5578:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":911,"name":"bool","nodeType":"ElementaryTypeName","src":"5578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5577:6:3"},"scope":1300,"src":"5505:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3738],"body":{"id":959,"nodeType":"Block","src":"6344:151:3","statements":[{"assignments":[941],"declarations":[{"constant":false,"id":941,"mutability":"mutable","name":"spender","nameLocation":"6362:7:3","nodeType":"VariableDeclaration","scope":959,"src":"6354:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"6354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":944,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":942,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"6372:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6354:30:3"},{"expression":{"arguments":[{"id":946,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"6410:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":947,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6416:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"6425:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":945,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"6394:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":950,"nodeType":"ExpressionStatement","src":"6394:37:3"},{"expression":{"arguments":[{"id":952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"6451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":953,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"6457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"6461:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":951,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6441:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"ExpressionStatement","src":"6441:26:3"},{"expression":{"hexValue":"74727565","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6484:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":939,"id":958,"nodeType":"Return","src":"6477:11:3"}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"5697:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":960,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6260:12:3","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"from","nameLocation":"6281:4:3","nodeType":"VariableDeclaration","scope":960,"src":"6273:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"to","nameLocation":"6295:2:3","nodeType":"VariableDeclaration","scope":960,"src":"6287:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"6287:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"value","nameLocation":"6307:5:3","nodeType":"VariableDeclaration","scope":960,"src":"6299:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:41:3"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":960,"src":"6338:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":937,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6337:6:3"},"scope":1300,"src":"6251:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1006,"nodeType":"Block","src":"6937:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"6951:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6959:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"6959:7:3","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6959:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6951:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":984,"nodeType":"IfStatement","src":"6947:86:3","trueBody":{"id":983,"nodeType":"Block","src":"6971:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7019:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"7011:7:3","typeDescriptions":{}}},"id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":976,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"6992:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"RevertStatement","src":"6985:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":985,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"7046:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:3","typeDescriptions":{}}},"id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7046:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":999,"nodeType":"IfStatement","src":"7042:86:3","trueBody":{"id":998,"nodeType":"Block","src":"7064:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:3","typeDescriptions":{}}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":991,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"7085:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7085:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"RevertStatement","src":"7078:39:3"}]}},{"expression":{"arguments":[{"id":1001,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"7145:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"7151:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"7155:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1000,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1005,"nodeType":"ExpressionStatement","src":"7137:24:3"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"6501:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6877:9:3","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"from","nameLocation":"6895:4:3","nodeType":"VariableDeclaration","scope":1007,"src":"6887:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"6887:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"to","nameLocation":"6909:2:3","nodeType":"VariableDeclaration","scope":1007,"src":"6901:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"6901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"value","nameLocation":"6921:5:3","nodeType":"VariableDeclaration","scope":1007,"src":"6913:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6886:41:3"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"6937:0:3"},"scope":1300,"src":"6868:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"7558:1095:3","statements":[{"assignments":[1019],"declarations":[{"constant":false,"id":1019,"mutability":"mutable","name":"$","nameLocation":"7589:1:3","nodeType":"VariableDeclaration","scope":1098,"src":"7568:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1018,"nodeType":"UserDefinedTypeName","pathNode":{"id":1017,"name":"ERC20Storage","nameLocations":["7568:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"7568:12:3"},"referencedDeclaration":724,"src":"7568:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1022,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1020,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"7593:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$724_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7568:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"7625:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7633:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:3","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7625:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1065,"nodeType":"Block","src":"7801:366:3","statements":[{"assignments":[1037],"declarations":[{"constant":false,"id":1037,"mutability":"mutable","name":"fromBalance","nameLocation":"7823:11:3","nodeType":"VariableDeclaration","scope":1065,"src":"7815:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1042,"initialValue":{"baseExpression":{"expression":{"id":1038,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7837:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7839:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":711,"src":"7837:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1041,"indexExpression":{"id":1040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"7849:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7837:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7815:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"7872:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7886:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1053,"nodeType":"IfStatement","src":"7868:115:3","trueBody":{"id":1052,"nodeType":"Block","src":"7893:90:3","statements":[{"errorCall":{"arguments":[{"id":1047,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"7943:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"7949:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7962:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1046,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"7918:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"RevertStatement","src":"7911:57:3"}]}},{"id":1064,"nodeType":"UncheckedBlock","src":"7996:161:3","statements":[{"expression":{"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1054,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":711,"src":"8103:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1058,"indexExpression":{"id":1056,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8115:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8103:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1059,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8123:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"8137:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8123:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"nodeType":"ExpressionStatement","src":"8103:39:3"}]}]},"id":1066,"nodeType":"IfStatement","src":"7621:546:3","trueBody":{"id":1035,"nodeType":"Block","src":"7645:150:3","statements":[{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1029,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7761:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7763:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":719,"src":"7761:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7779:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7761:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ExpressionStatement","src":"7761:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1067,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"8181:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:3","typeDescriptions":{}}},"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1090,"nodeType":"Block","src":"8398:208:3","statements":[{"id":1089,"nodeType":"UncheckedBlock","src":"8412:184:3","statements":[{"expression":{"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1081,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8557:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8559:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":711,"src":"8557:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1085,"indexExpression":{"id":1083,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"8569:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"8576:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8557:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1088,"nodeType":"ExpressionStatement","src":"8557:24:3"}]}]},"id":1091,"nodeType":"IfStatement","src":"8177:429:3","trueBody":{"id":1080,"nodeType":"Block","src":"8199:193:3","statements":[{"id":1079,"nodeType":"UncheckedBlock","src":"8213:169:3","statements":[{"expression":{"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1073,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8344:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8346:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":719,"src":"8344:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"8362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1078,"nodeType":"ExpressionStatement","src":"8344:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1093,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8630:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"8636:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"8640:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1092,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"8621:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"EmitStatement","src":"8616:30:3"}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"7174:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7492:7:3","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"from","nameLocation":"7508:4:3","nodeType":"VariableDeclaration","scope":1099,"src":"7500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"7500:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"to","nameLocation":"7522:2:3","nodeType":"VariableDeclaration","scope":1099,"src":"7514:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"7514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"value","nameLocation":"7534:5:3","nodeType":"VariableDeclaration","scope":1099,"src":"7526:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7499:41:3"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"7558:0:3"},"scope":1300,"src":"7483:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1131,"nodeType":"Block","src":"9052:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"9066:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:3","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9066:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1121,"nodeType":"IfStatement","src":"9062:91:3","trueBody":{"id":1120,"nodeType":"Block","src":"9089:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:3","typeDescriptions":{}}},"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1113,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"9110:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"RevertStatement","src":"9103:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:3","typeDescriptions":{}}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1127,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"9182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"9191:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"9162:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"9162:35:3"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"8659:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9005:5:3","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"account","nameLocation":"9019:7:3","nodeType":"VariableDeclaration","scope":1132,"src":"9011:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"value","nameLocation":"9036:5:3","nodeType":"VariableDeclaration","scope":1132,"src":"9028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"9028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9010:32:3"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[],"src":"9052:0:3"},"scope":1300,"src":"8996:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1164,"nodeType":"Block","src":"9578:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9592:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9611:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:3","typeDescriptions":{}}},"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9592:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1154,"nodeType":"IfStatement","src":"9588:89:3","trueBody":{"id":1153,"nodeType":"Block","src":"9615:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9663:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{}}},"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1146,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"9636:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1152,"nodeType":"RevertStatement","src":"9629:37:3"}]}},{"expression":{"arguments":[{"id":1156,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9694:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:3","typeDescriptions":{}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9703:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"9715:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1155,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"9686:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1163,"nodeType":"ExpressionStatement","src":"9686:35:3"}]},"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"9210:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1165,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9531:5:3","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"account","nameLocation":"9545:7:3","nodeType":"VariableDeclaration","scope":1165,"src":"9537:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"value","nameLocation":"9562:5:3","nodeType":"VariableDeclaration","scope":1165,"src":"9554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:32:3"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[],"src":"9578:0:3"},"scope":1300,"src":"9522:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"10338:54:3","statements":[{"expression":{"arguments":[{"id":1176,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"10357:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1177,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"10364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"10373:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10380:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1175,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1183,1251],"referencedDeclaration":1251,"src":"10348:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"ExpressionStatement","src":"10348:37:3"}]},"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"9734:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10273:8:3","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"owner","nameLocation":"10290:5:3","nodeType":"VariableDeclaration","scope":1183,"src":"10282:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"spender","nameLocation":"10305:7:3","nodeType":"VariableDeclaration","scope":1183,"src":"10297:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"10297:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"value","nameLocation":"10322:5:3","nodeType":"VariableDeclaration","scope":1183,"src":"10314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:47:3"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"10338:0:3"},"scope":1300,"src":"10264:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"11322:389:3","statements":[{"assignments":[1197],"declarations":[{"constant":false,"id":1197,"mutability":"mutable","name":"$","nameLocation":"11353:1:3","nodeType":"VariableDeclaration","scope":1250,"src":"11332:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1196,"nodeType":"UserDefinedTypeName","pathNode":{"id":1195,"name":"ERC20Storage","nameLocations":["11332:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"11332:12:3"},"referencedDeclaration":724,"src":"11332:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1200,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1198,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"11357:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$724_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11332:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1201,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"11389:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11406:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11398:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"11398:7:3","typeDescriptions":{}}},"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11389:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1215,"nodeType":"IfStatement","src":"11385:89:3","trueBody":{"id":1214,"nodeType":"Block","src":"11410:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"11452:7:3","typeDescriptions":{}}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11452:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1207,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"11431:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11431:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1213,"nodeType":"RevertStatement","src":"11424:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"11487:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11498:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"11498:7:3","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11487:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1230,"nodeType":"IfStatement","src":"11483:90:3","trueBody":{"id":1229,"nodeType":"Block","src":"11510:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1222,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"11531:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"RevertStatement","src":"11524:38:3"}]}},{"expression":{"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1231,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"11582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$724_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11584:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":717,"src":"11582:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1236,"indexExpression":{"id":1233,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"11596:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1237,"indexExpression":{"id":1234,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"11603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11582:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"11614:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11582:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1240,"nodeType":"ExpressionStatement","src":"11582:37:3"},{"condition":{"id":1241,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"11633:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1249,"nodeType":"IfStatement","src":"11629:76:3","trueBody":{"id":1248,"nodeType":"Block","src":"11644:61:3","statements":[{"eventCall":{"arguments":[{"id":1243,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"11672:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1244,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"11679:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"11688:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1242,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"11663:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11663:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1247,"nodeType":"EmitStatement","src":"11658:36:3"}]}}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"10398:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11233:8:3","nodeType":"FunctionDefinition","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"owner","nameLocation":"11250:5:3","nodeType":"VariableDeclaration","scope":1251,"src":"11242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"11242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"spender","nameLocation":"11265:7:3","nodeType":"VariableDeclaration","scope":1251,"src":"11257:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"value","nameLocation":"11282:5:3","nodeType":"VariableDeclaration","scope":1251,"src":"11274:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"emitEvent","nameLocation":"11294:9:3","nodeType":"VariableDeclaration","scope":1251,"src":"11289:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1191,"name":"bool","nodeType":"ElementaryTypeName","src":"11289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11241:63:3"},"returnParameters":{"id":1194,"nodeType":"ParameterList","parameters":[],"src":"11322:0:3"},"scope":1300,"src":"11224:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1298,"nodeType":"Block","src":"12082:388:3","statements":[{"assignments":[1262],"declarations":[{"constant":false,"id":1262,"mutability":"mutable","name":"currentAllowance","nameLocation":"12100:16:3","nodeType":"VariableDeclaration","scope":1298,"src":"12092:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"12092:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1267,"initialValue":{"arguments":[{"id":1264,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"12129:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1263,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"12119:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12092:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"12158:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"12183:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12178:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12178:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12192:3:3","memberName":"max","nodeType":"MemberAccess","src":"12178:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1297,"nodeType":"IfStatement","src":"12154:310:3","trueBody":{"id":1296,"nodeType":"Block","src":"12197:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1275,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"12215:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"12234:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12215:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"nodeType":"IfStatement","src":"12211:130:3","trueBody":{"id":1284,"nodeType":"Block","src":"12241:100:3","statements":[{"errorCall":{"arguments":[{"id":1279,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"12293:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1280,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"12302:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"12320:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1278,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"12266:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"RevertStatement","src":"12259:67:3"}]}},{"id":1295,"nodeType":"UncheckedBlock","src":"12354:100:3","statements":[{"expression":{"arguments":[{"id":1287,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"12391:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1288,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"12398:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"12407:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"12426:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12407:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12433:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1286,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1183,1251],"referencedDeclaration":1251,"src":"12382:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"12382:57:3"}]}]}}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"11717:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1299,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"12002:15:3","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"owner","nameLocation":"12026:5:3","nodeType":"VariableDeclaration","scope":1299,"src":"12018:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"spender","nameLocation":"12041:7:3","nodeType":"VariableDeclaration","scope":1299,"src":"12033:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"value","nameLocation":"12058:5:3","nodeType":"VariableDeclaration","scope":1299,"src":"12050:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"12050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:47:3"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[],"src":"12082:0:3"},"scope":1300,"src":"11993:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1301,"src":"1576:10896:3","usedErrors":[264,267,3223,3228,3233,3242,3247,3252],"usedEvents":[272,3673,3682]}],"src":"105:12368:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2585],"ERC20BurnableUpgradeable":[1362],"ERC20Upgradeable":[1300],"Initializable":[501]},"id":1363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1302,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1363,"sourceUnit":1301,"src":"150:57:4","symbolAliases":[{"foreign":{"id":1303,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"158:16:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":1306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1363,"sourceUnit":2586,"src":"208:73:4","symbolAliases":[{"foreign":{"id":1305,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"216:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1363,"sourceUnit":502,"src":"282:69:4","symbolAliases":[{"foreign":{"id":1307,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"290:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1310,"name":"Initializable","nameLocations":["608:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"608:13:4"},"id":1311,"nodeType":"InheritanceSpecifier","src":"608:13:4"},{"baseName":{"id":1312,"name":"ContextUpgradeable","nameLocations":["623:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"623:18:4"},"id":1313,"nodeType":"InheritanceSpecifier","src":"623:18:4"},{"baseName":{"id":1314,"name":"ERC20Upgradeable","nameLocations":["643:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"643:16:4"},"id":1315,"nodeType":"InheritanceSpecifier","src":"643:16:4"}],"canonicalName":"ERC20BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"353:208:4","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1362,"linearizedBaseContracts":[1362,1300,3253,3765,3739,2585,501],"name":"ERC20BurnableUpgradeable","nameLocation":"580:24:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1320,"nodeType":"Block","src":"724:7:4","statements":[]},"id":1321,"implemented":true,"kind":"function","modifiers":[{"id":1318,"kind":"modifierInvocation","modifierName":{"id":1317,"name":"onlyInitializing","nameLocations":["707:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"707:16:4"},"nodeType":"ModifierInvocation","src":"707:16:4"}],"name":"__ERC20Burnable_init","nameLocation":"675:20:4","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[],"src":"695:2:4"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[],"src":"724:0:4"},"scope":1362,"src":"666:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1326,"nodeType":"Block","src":"805:7:4","statements":[]},"id":1327,"implemented":true,"kind":"function","modifiers":[{"id":1324,"kind":"modifierInvocation","modifierName":{"id":1323,"name":"onlyInitializing","nameLocations":["788:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"788:16:4"},"nodeType":"ModifierInvocation","src":"788:16:4"}],"name":"__ERC20Burnable_init_unchained","nameLocation":"746:30:4","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"776:2:4"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"805:0:4"},"scope":1362,"src":"737:75:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1339,"nodeType":"Block","src":"975:43:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1334,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"991:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"991:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"1005:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1333,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"985:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"985:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"ExpressionStatement","src":"985:26:4"}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"817:109:4","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"940:4:4","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"value","nameLocation":"953:5:4","nodeType":"VariableDeclaration","scope":1340,"src":"945:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"944:15:4"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[],"src":"975:0:4"},"scope":1362,"src":"931:87:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1360,"nodeType":"Block","src":"1399:93:4","statements":[{"expression":{"arguments":[{"id":1349,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"1425:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1350,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"1434:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1434:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"1448:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1348,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"1409:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1409:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"ExpressionStatement","src":"1409:45:4"},{"expression":{"arguments":[{"id":1356,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"1470:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"1479:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1355,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1464:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1464:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1359,"nodeType":"ExpressionStatement","src":"1464:21:4"}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"1024:305:4","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1343:8:4","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"account","nameLocation":"1360:7:4","nodeType":"VariableDeclaration","scope":1361,"src":"1352:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"value","nameLocation":"1377:5:4","nodeType":"VariableDeclaration","scope":1361,"src":"1369:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1351:32:4"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"1399:0:4"},"scope":1362,"src":"1334:158:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1363,"src":"562:932:4","usedErrors":[264,267,3223,3228,3233,3242,3247,3252],"usedEvents":[272,3673,3682]}],"src":"124:1371:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2585],"ERC165Upgradeable":[2625],"ERC721Upgradeable":[2494],"IERC165":[4558],"IERC721":[3882],"IERC721Errors":[3301],"IERC721Metadata":[3928],"IERC721Receiver":[3900],"Initializable":[501],"Strings":[4546]},"id":2495,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2495,"sourceUnit":3883,"src":"133:73:5","symbolAliases":[{"foreign":{"id":1365,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"141:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":1368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2495,"sourceUnit":3901,"src":"207:89:5","symbolAliases":[{"foreign":{"id":1367,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"215:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":1370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2495,"sourceUnit":3929,"src":"297:100:5","symbolAliases":[{"foreign":{"id":1369,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"305:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2495,"sourceUnit":2586,"src":"398:70:5","symbolAliases":[{"foreign":{"id":1371,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"406:18:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1374,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2495,"sourceUnit":4547,"src":"469:66:5","symbolAliases":[{"foreign":{"id":1373,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"477:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2495,"sourceUnit":4559,"src":"536:80:5","symbolAliases":[{"foreign":{"id":1375,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"544:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":1378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2495,"sourceUnit":2626,"src":"617:82:5","symbolAliases":[{"foreign":{"id":1377,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"625:17:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":1380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2495,"sourceUnit":3349,"src":"700:84:5","symbolAliases":[{"foreign":{"id":1379,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"708:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2495,"sourceUnit":502,"src":"785:66:5","symbolAliases":[{"foreign":{"id":1381,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"793:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1384,"name":"Initializable","nameLocations":["1139:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"1139:13:5"},"id":1385,"nodeType":"InheritanceSpecifier","src":"1139:13:5"},{"baseName":{"id":1386,"name":"ContextUpgradeable","nameLocations":["1154:18:5"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"1154:18:5"},"id":1387,"nodeType":"InheritanceSpecifier","src":"1154:18:5"},{"baseName":{"id":1388,"name":"ERC165Upgradeable","nameLocations":["1174:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":2625,"src":"1174:17:5"},"id":1389,"nodeType":"InheritanceSpecifier","src":"1174:17:5"},{"baseName":{"id":1390,"name":"IERC721","nameLocations":["1193:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3882,"src":"1193:7:5"},"id":1391,"nodeType":"InheritanceSpecifier","src":"1193:7:5"},{"baseName":{"id":1392,"name":"IERC721Metadata","nameLocations":["1202:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":3928,"src":"1202:15:5"},"id":1393,"nodeType":"InheritanceSpecifier","src":"1202:15:5"},{"baseName":{"id":1394,"name":"IERC721Errors","nameLocations":["1219:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":3301,"src":"1219:13:5"},"id":1395,"nodeType":"InheritanceSpecifier","src":"1219:13:5"}],"canonicalName":"ERC721Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"853:246:5","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2494,"linearizedBaseContracts":[2494,3301,3928,3882,2625,4558,2585,501],"name":"ERC721Upgradeable","nameLocation":"1118:17:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1398,"libraryName":{"id":1396,"name":"Strings","nameLocations":["1245:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":4546,"src":"1245:7:5"},"nodeType":"UsingForDirective","src":"1239:26:5","typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1257:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"ERC721Upgradeable.ERC721Storage","documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"1271:64:5","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC721"},"id":1422,"members":[{"constant":false,"id":1401,"mutability":"mutable","name":"_name","nameLocation":"1400:5:5","nodeType":"VariableDeclaration","scope":1422,"src":"1393:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"1393:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"_symbol","nameLocation":"1447:7:5","nodeType":"VariableDeclaration","scope":1422,"src":"1440:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1402,"name":"string","nodeType":"ElementaryTypeName","src":"1440:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"_owners","nameLocation":"1501:7:5","nodeType":"VariableDeclaration","scope":1422,"src":"1465:43:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1406,"keyName":"tokenId","keyNameLocation":"1481:7:5","keyType":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1473:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1465:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"1492:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"_balances","nameLocation":"1553:9:5","nodeType":"VariableDeclaration","scope":1422,"src":"1519:43:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1410,"keyName":"owner","keyNameLocation":"1535:5:5","keyType":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1519:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1415,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1609:15:5","nodeType":"VariableDeclaration","scope":1422,"src":"1573:51:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1414,"keyName":"tokenId","keyNameLocation":"1589:7:5","keyType":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1573:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"1600:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1695:18:5","nodeType":"VariableDeclaration","scope":1422,"src":"1635:78:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1420,"keyName":"owner","keyNameLocation":"1651:5:5","keyType":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"1643:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1635:59:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1419,"keyName":"operator","keyNameLocation":"1676:8:5","keyType":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1660:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1418,"name":"bool","nodeType":"ElementaryTypeName","src":"1688:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"}],"name":"ERC721Storage","nameLocation":"1347:13:5","nodeType":"StructDefinition","scope":2494,"src":"1340:380:5","visibility":"public"},{"constant":true,"id":1425,"mutability":"constant","name":"ERC721StorageLocation","nameLocation":"1861:21:5","nodeType":"VariableDeclaration","scope":2494,"src":"1836:115:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1836:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838306262326236333863633230626334643061363064363639343066336162346130306331643762333133343937636138326662306234616230303739333030","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1885:66:5","typeDescriptions":{"typeIdentifier":"t_rational_58226744478722834339948329933988999792353370511964151963072532422914231210752_by_1","typeString":"int_const 5822...(69 digits omitted)...0752"},"value":"0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300"},"visibility":"private"},{"body":{"id":1432,"nodeType":"Block","src":"2034:80:5","statements":[{"AST":{"nativeSrc":"2053:55:5","nodeType":"YulBlock","src":"2053:55:5","statements":[{"nativeSrc":"2067:31:5","nodeType":"YulAssignment","src":"2067:31:5","value":{"name":"ERC721StorageLocation","nativeSrc":"2077:21:5","nodeType":"YulIdentifier","src":"2077:21:5"},"variableNames":[{"name":"$.slot","nativeSrc":"2067:6:5","nodeType":"YulIdentifier","src":"2067:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1429,"isOffset":false,"isSlot":true,"src":"2067:6:5","suffix":"slot","valueSize":1},{"declaration":1425,"isOffset":false,"isSlot":false,"src":"2077:21:5","valueSize":1}],"id":1431,"nodeType":"InlineAssembly","src":"2044:64:5"}]},"id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC721Storage","nameLocation":"1967:17:5","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[],"src":"1984:2:5"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"$","nameLocation":"2031:1:5","nodeType":"VariableDeclaration","scope":1433,"src":"2009:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1428,"nodeType":"UserDefinedTypeName","pathNode":{"id":1427,"name":"ERC721Storage","nameLocations":["2009:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2009:13:5"},"referencedDeclaration":1422,"src":"2009:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"src":"2008:25:5"},"scope":2494,"src":"1958:156:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1448,"nodeType":"Block","src":"2326:56:5","statements":[{"expression":{"arguments":[{"id":1444,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"2360:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1445,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2367:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1443,"name":"__ERC721_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2336:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2336:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"ExpressionStatement","src":"2336:39:5"}]},"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"2120:108:5","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1449,"implemented":true,"kind":"function","modifiers":[{"id":1441,"kind":"modifierInvocation","modifierName":{"id":1440,"name":"onlyInitializing","nameLocations":["2309:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"2309:16:5"},"nodeType":"ModifierInvocation","src":"2309:16:5"}],"name":"__ERC721_init","nameLocation":"2242:13:5","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"name_","nameLocation":"2270:5:5","nodeType":"VariableDeclaration","scope":1449,"src":"2256:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1435,"name":"string","nodeType":"ElementaryTypeName","src":"2256:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"symbol_","nameLocation":"2291:7:5","nodeType":"VariableDeclaration","scope":1449,"src":"2277:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1437,"name":"string","nodeType":"ElementaryTypeName","src":"2277:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2255:44:5"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[],"src":"2326:0:5"},"scope":2494,"src":"2233:149:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1476,"nodeType":"Block","src":"2491:116:5","statements":[{"assignments":[1460],"declarations":[{"constant":false,"id":1460,"mutability":"mutable","name":"$","nameLocation":"2523:1:5","nodeType":"VariableDeclaration","scope":1476,"src":"2501:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1459,"nodeType":"UserDefinedTypeName","pathNode":{"id":1458,"name":"ERC721Storage","nameLocations":["2501:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2501:13:5"},"referencedDeclaration":1422,"src":"2501:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1463,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1461,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2527:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2501:45:5"},{"expression":{"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1464,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2556:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2558:5:5","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"2556:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1467,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2566:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2556:15:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1469,"nodeType":"ExpressionStatement","src":"2556:15:5"},{"expression":{"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1470,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2581:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2583:7:5","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":1403,"src":"2581:9:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1473,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"2593:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2581:19:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1475,"nodeType":"ExpressionStatement","src":"2581:19:5"}]},"id":1477,"implemented":true,"kind":"function","modifiers":[{"id":1456,"kind":"modifierInvocation","modifierName":{"id":1455,"name":"onlyInitializing","nameLocations":["2474:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"2474:16:5"},"nodeType":"ModifierInvocation","src":"2474:16:5"}],"name":"__ERC721_init_unchained","nameLocation":"2397:23:5","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"name_","nameLocation":"2435:5:5","nodeType":"VariableDeclaration","scope":1477,"src":"2421:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1450,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"symbol_","nameLocation":"2456:7:5","nodeType":"VariableDeclaration","scope":1477,"src":"2442:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1452,"name":"string","nodeType":"ElementaryTypeName","src":"2442:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:44:5"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"2491:0:5"},"scope":2494,"src":"2388:219:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2624,4557],"body":{"id":1507,"nodeType":"Block","src":"2793:192:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1488,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2822:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1490,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"2842:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3882_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$3882_$","typeString":"type(contract IERC721)"}],"id":1489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2837:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2837:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$3882","typeString":"type(contract IERC721)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2851:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"2837:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2822:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1494,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2878:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1496,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"2898:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3928_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3928_$","typeString":"type(contract IERC721Metadata)"}],"id":1495,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2893:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2893:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3928","typeString":"type(contract IERC721Metadata)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2915:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"2893:33:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2878:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2822:104:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1503,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2966:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1501,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2942:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Upgradeable_$2494_$","typeString":"type(contract super ERC721Upgradeable)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2948:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"2942:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2942:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2822:156:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1487,"id":1506,"nodeType":"Return","src":"2803:175:5"}]},"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"2613:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2683:17:5","nodeType":"FunctionDefinition","overrides":{"id":1484,"nodeType":"OverrideSpecifier","overrides":[{"id":1482,"name":"ERC165Upgradeable","nameLocations":["2750:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":2625,"src":"2750:17:5"},{"id":1483,"name":"IERC165","nameLocations":["2769:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":4558,"src":"2769:7:5"}],"src":"2741:36:5"},"parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"interfaceId","nameLocation":"2708:11:5","nodeType":"VariableDeclaration","scope":1508,"src":"2701:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1479,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2701:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2700:20:5"},"returnParameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"2787:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1485,"name":"bool","nodeType":"ElementaryTypeName","src":"2787:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2786:6:5"},"scope":2494,"src":"2674:311:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3807],"body":{"id":1542,"nodeType":"Block","src":"3116:193:5","statements":[{"assignments":[1518],"declarations":[{"constant":false,"id":1518,"mutability":"mutable","name":"$","nameLocation":"3148:1:5","nodeType":"VariableDeclaration","scope":1542,"src":"3126:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1517,"nodeType":"UserDefinedTypeName","pathNode":{"id":1516,"name":"ERC721Storage","nameLocations":["3126:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3126:13:5"},"referencedDeclaration":1422,"src":"3126:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1521,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1519,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3152:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3126:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"3185:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3202:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3194:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"3194:7:5","typeDescriptions":{}}},"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3194:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3185:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1536,"nodeType":"IfStatement","src":"3181:87:5","trueBody":{"id":1535,"nodeType":"Block","src":"3206:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3254:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3246:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"3246:7:5","typeDescriptions":{}}},"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3246:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1528,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"3227:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3227:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1534,"nodeType":"RevertStatement","src":"3220:37:5"}]}},{"expression":{"baseExpression":{"expression":{"id":1537,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"3284:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3286:9:5","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"3284:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1540,"indexExpression":{"id":1539,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"3296:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3284:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1515,"id":1541,"nodeType":"Return","src":"3277:25:5"}]},"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"2991:48:5","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1543,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3053:9:5","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"owner","nameLocation":"3071:5:5","nodeType":"VariableDeclaration","scope":1543,"src":"3063:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"3063:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3062:15:5"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1543,"src":"3107:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3107:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3106:9:5"},"scope":2494,"src":"3044:265:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3815],"body":{"id":1555,"nodeType":"Block","src":"3438:46:5","statements":[{"expression":{"arguments":[{"id":1552,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"3469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1551,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"3455:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1550,"id":1554,"nodeType":"Return","src":"3448:29:5"}]},"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"3315:46:5","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3375:7:5","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"tokenId","nameLocation":"3391:7:5","nodeType":"VariableDeclaration","scope":1556,"src":"3383:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"3383:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3382:17:5"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1556,"src":"3429:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"3429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3428:9:5"},"scope":2494,"src":"3366:118:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3913],"body":{"id":1571,"nodeType":"Block","src":"3606:86:5","statements":[{"assignments":[1564],"declarations":[{"constant":false,"id":1564,"mutability":"mutable","name":"$","nameLocation":"3638:1:5","nodeType":"VariableDeclaration","scope":1571,"src":"3616:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1563,"nodeType":"UserDefinedTypeName","pathNode":{"id":1562,"name":"ERC721Storage","nameLocations":["3616:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3616:13:5"},"referencedDeclaration":1422,"src":"3616:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1567,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1565,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3642:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3616:45:5"},{"expression":{"expression":{"id":1568,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"3678:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3680:5:5","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"3678:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1561,"id":1570,"nodeType":"Return","src":"3671:14:5"}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"3490:51:5","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3555:4:5","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"3559:2:5"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"3591:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1559,"name":"string","nodeType":"ElementaryTypeName","src":"3591:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3590:15:5"},"scope":2494,"src":"3546:146:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3919],"body":{"id":1587,"nodeType":"Block","src":"3818:88:5","statements":[{"assignments":[1580],"declarations":[{"constant":false,"id":1580,"mutability":"mutable","name":"$","nameLocation":"3850:1:5","nodeType":"VariableDeclaration","scope":1587,"src":"3828:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1579,"nodeType":"UserDefinedTypeName","pathNode":{"id":1578,"name":"ERC721Storage","nameLocations":["3828:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"3828:13:5"},"referencedDeclaration":1422,"src":"3828:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1583,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1581,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3854:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3828:45:5"},{"expression":{"expression":{"id":1584,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"3890:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3892:7:5","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":1403,"src":"3890:9:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1577,"id":1586,"nodeType":"Return","src":"3883:16:5"}]},"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"3698:53:5","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3765:6:5","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"3771:2:5"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"3803:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1575,"name":"string","nodeType":"ElementaryTypeName","src":"3803:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3802:15:5"},"scope":2494,"src":"3756:150:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3927],"body":{"id":1623,"nodeType":"Block","src":"4051:176:5","statements":[{"expression":{"arguments":[{"id":1597,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"4075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1596,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"4061:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1599,"nodeType":"ExpressionStatement","src":"4061:22:5"},{"assignments":[1601],"declarations":[{"constant":false,"id":1601,"mutability":"mutable","name":"baseURI","nameLocation":"4108:7:5","nodeType":"VariableDeclaration","scope":1623,"src":"4094:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1600,"name":"string","nodeType":"ElementaryTypeName","src":"4094:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1604,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1602,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"4118:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"4094:34:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1607,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"4151:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4145:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1605,"name":"bytes","nodeType":"ElementaryTypeName","src":"4145:5:5","typeDescriptions":{}}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4145:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:6:5","memberName":"length","nodeType":"MemberAccess","src":"4145:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4169:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4145:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4218:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4145:75:5","trueExpression":{"arguments":[{"id":1615,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"4187:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1616,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"4196:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4359,"src":"4196:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4196:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4173:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1612,"name":"string","nodeType":"ElementaryTypeName","src":"4173:6:5","typeDescriptions":{}}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4180:6:5","memberName":"concat","nodeType":"MemberAccess","src":"4173:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4173:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1595,"id":1622,"nodeType":"Return","src":"4138:82:5"}]},"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"3912:55:5","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3981:8:5","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"tokenId","nameLocation":"3998:7:5","nodeType":"VariableDeclaration","scope":1624,"src":"3990:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"3990:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3989:17:5"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1624,"src":"4036:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1593,"name":"string","nodeType":"ElementaryTypeName","src":"4036:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4035:15:5"},"scope":2494,"src":"3972:255:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1632,"nodeType":"Block","src":"4535:26:5","statements":[{"expression":{"hexValue":"","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4552:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1629,"id":1631,"nodeType":"Return","src":"4545:9:5"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"4233:231:5","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"4478:8:5","nodeType":"FunctionDefinition","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[],"src":"4486:2:5"},"returnParameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"4520:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1627,"name":"string","nodeType":"ElementaryTypeName","src":"4520:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4519:15:5"},"scope":2494,"src":"4469:92:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3855],"body":{"id":1648,"nodeType":"Block","src":"4679:52:5","statements":[{"expression":{"arguments":[{"id":1642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"4698:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1643,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4702:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1644,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4711:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4711:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1641,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2281,2355],"referencedDeclaration":2281,"src":"4689:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4689:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1647,"nodeType":"ExpressionStatement","src":"4689:35:5"}]},"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"4567:46:5","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1649,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4627:7:5","nodeType":"FunctionDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"to","nameLocation":"4643:2:5","nodeType":"VariableDeclaration","scope":1649,"src":"4635:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"4635:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"tokenId","nameLocation":"4655:7:5","nodeType":"VariableDeclaration","scope":1649,"src":"4647:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"4647:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4634:29:5"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[],"src":"4679:0:5"},"scope":2494,"src":"4618:113:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3871],"body":{"id":1665,"nodeType":"Block","src":"4868:78:5","statements":[{"expression":{"arguments":[{"id":1658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"4892:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1657,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"4878:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1660,"nodeType":"ExpressionStatement","src":"4878:22:5"},{"expression":{"arguments":[{"id":1662,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"4931:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1661,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"4918:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4918:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1656,"id":1664,"nodeType":"Return","src":"4911:28:5"}]},"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"4737:50:5","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4801:11:5","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"tokenId","nameLocation":"4821:7:5","nodeType":"VariableDeclaration","scope":1666,"src":"4813:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"4813:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4812:17:5"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"4859:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"4859:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4858:9:5"},"scope":2494,"src":"4792:154:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3863],"body":{"id":1681,"nodeType":"Block","src":"5088:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1675,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5117:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5117:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1677,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5131:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1678,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"5141:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1674,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"5098:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"5098:52:5"}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"4952:56:5","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"5022:17:5","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"operator","nameLocation":"5048:8:5","nodeType":"VariableDeclaration","scope":1682,"src":"5040:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"5040:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"approved","nameLocation":"5063:8:5","nodeType":"VariableDeclaration","scope":1682,"src":"5058:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1670,"name":"bool","nodeType":"ElementaryTypeName","src":"5058:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5039:33:5"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"5088:0:5"},"scope":2494,"src":"5013:144:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3881],"body":{"id":1705,"nodeType":"Block","src":"5317:116:5","statements":[{"assignments":[1694],"declarations":[{"constant":false,"id":1694,"mutability":"mutable","name":"$","nameLocation":"5349:1:5","nodeType":"VariableDeclaration","scope":1705,"src":"5327:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1693,"nodeType":"UserDefinedTypeName","pathNode":{"id":1692,"name":"ERC721Storage","nameLocations":["5327:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"5327:13:5"},"referencedDeclaration":1422,"src":"5327:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1697,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1695,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"5353:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5327:45:5"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1698,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"5389:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5391:18:5","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"5389:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1701,"indexExpression":{"id":1700,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"5410:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5389:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1703,"indexExpression":{"id":1702,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"5417:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5389:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1691,"id":1704,"nodeType":"Return","src":"5382:44:5"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"5163:55:5","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"5232:16:5","nodeType":"FunctionDefinition","parameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"owner","nameLocation":"5257:5:5","nodeType":"VariableDeclaration","scope":1706,"src":"5249:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"5249:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1687,"mutability":"mutable","name":"operator","nameLocation":"5272:8:5","nodeType":"VariableDeclaration","scope":1706,"src":"5264:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"5264:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5248:33:5"},"returnParameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"5311:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1689,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5310:6:5"},"scope":2494,"src":"5223:210:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3847],"body":{"id":1751,"nodeType":"Block","src":"5575:498:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1716,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5589:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5603:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5595:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"5595:7:5","typeDescriptions":{}}},"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5595:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5589:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1730,"nodeType":"IfStatement","src":"5585:87:5","trueBody":{"id":1729,"nodeType":"Block","src":"5607:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5650:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"5650:7:5","typeDescriptions":{}}},"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5650:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1722,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5628:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5628:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"RevertStatement","src":"5621:40:5"}]}},{"assignments":[1732],"declarations":[{"constant":false,"id":1732,"mutability":"mutable","name":"previousOwner","nameLocation":"5898:13:5","nodeType":"VariableDeclaration","scope":1751,"src":"5890:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"5890:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1739,"initialValue":{"arguments":[{"id":1734,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5922:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1735,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"5926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1736,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5935:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5935:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1733,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"5914:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5914:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5890:58:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"5962:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5979:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5962:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1750,"nodeType":"IfStatement","src":"5958:109:5","trueBody":{"id":1749,"nodeType":"Block","src":"5985:82:5","statements":[{"errorCall":{"arguments":[{"id":1744,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6027:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1745,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"6033:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1746,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"6042:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1743,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"6006:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6006:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1748,"nodeType":"RevertStatement","src":"5999:57:5"}]}}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"5439:51:5","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1752,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5504:12:5","nodeType":"FunctionDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"from","nameLocation":"5525:4:5","nodeType":"VariableDeclaration","scope":1752,"src":"5517:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"to","nameLocation":"5539:2:5","nodeType":"VariableDeclaration","scope":1752,"src":"5531:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"5531:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"tokenId","nameLocation":"5551:7:5","nodeType":"VariableDeclaration","scope":1752,"src":"5543:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1712,"name":"uint256","nodeType":"ElementaryTypeName","src":"5543:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5516:43:5"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[],"src":"5575:0:5"},"scope":2494,"src":"5495:578:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3837],"body":{"id":1769,"nodeType":"Block","src":"6215:56:5","statements":[{"expression":{"arguments":[{"id":1763,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"6242:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"6248:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"6252:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6261:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1762,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1770,1796],"referencedDeclaration":1796,"src":"6225:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1768,"nodeType":"ExpressionStatement","src":"6225:39:5"}]},"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"6079:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1770,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6148:16:5","nodeType":"FunctionDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"from","nameLocation":"6173:4:5","nodeType":"VariableDeclaration","scope":1770,"src":"6165:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"6165:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"to","nameLocation":"6187:2:5","nodeType":"VariableDeclaration","scope":1770,"src":"6179:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"6179:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"tokenId","nameLocation":"6199:7:5","nodeType":"VariableDeclaration","scope":1770,"src":"6191:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"6191:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6164:43:5"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[],"src":"6215:0:5"},"scope":2494,"src":"6139:132:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3827],"body":{"id":1795,"nodeType":"Block","src":"6440:105:5","statements":[{"expression":{"arguments":[{"id":1783,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6463:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"6469:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1785,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"6473:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1782,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6450:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6450:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1787,"nodeType":"ExpressionStatement","src":"6450:31:5"},{"expression":{"arguments":[{"id":1789,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6514:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1790,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"6520:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"6524:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1792,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"6533:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1788,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"6491:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6491:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1794,"nodeType":"ExpressionStatement","src":"6491:47:5"}]},"documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"6277:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1796,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6346:16:5","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"from","nameLocation":"6371:4:5","nodeType":"VariableDeclaration","scope":1796,"src":"6363:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"to","nameLocation":"6385:2:5","nodeType":"VariableDeclaration","scope":1796,"src":"6377:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"6377:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"tokenId","nameLocation":"6397:7:5","nodeType":"VariableDeclaration","scope":1796,"src":"6389:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"6389:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"data","nameLocation":"6419:4:5","nodeType":"VariableDeclaration","scope":1796,"src":"6406:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1778,"name":"bytes","nodeType":"ElementaryTypeName","src":"6406:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6362:62:5"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[],"src":"6440:0:5"},"scope":2494,"src":"6337:208:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1815,"nodeType":"Block","src":"7134:97:5","statements":[{"assignments":[1806],"declarations":[{"constant":false,"id":1806,"mutability":"mutable","name":"$","nameLocation":"7166:1:5","nodeType":"VariableDeclaration","scope":1815,"src":"7144:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1805,"nodeType":"UserDefinedTypeName","pathNode":{"id":1804,"name":"ERC721Storage","nameLocations":["7144:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"7144:13:5"},"referencedDeclaration":1422,"src":"7144:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1809,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1807,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"7170:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7170:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7144:45:5"},{"expression":{"baseExpression":{"expression":{"id":1810,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7206:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7208:7:5","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"7206:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1813,"indexExpression":{"id":1812,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"7216:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7206:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1803,"id":1814,"nodeType":"Return","src":"7199:25:5"}]},"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"6551:503:5","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"7068:8:5","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"tokenId","nameLocation":"7085:7:5","nodeType":"VariableDeclaration","scope":1816,"src":"7077:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"7077:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7076:17:5"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"7125:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1801,"name":"address","nodeType":"ElementaryTypeName","src":"7125:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7124:9:5"},"scope":2494,"src":"7059:172:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1835,"nodeType":"Block","src":"7426:105:5","statements":[{"assignments":[1826],"declarations":[{"constant":false,"id":1826,"mutability":"mutable","name":"$","nameLocation":"7458:1:5","nodeType":"VariableDeclaration","scope":1835,"src":"7436:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1825,"nodeType":"UserDefinedTypeName","pathNode":{"id":1824,"name":"ERC721Storage","nameLocations":["7436:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"7436:13:5"},"referencedDeclaration":1422,"src":"7436:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1829,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1827,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"7462:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7436:45:5"},{"expression":{"baseExpression":{"expression":{"id":1830,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"7498:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7500:15:5","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":1415,"src":"7498:17:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1833,"indexExpression":{"id":1832,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"7516:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7498:26:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1823,"id":1834,"nodeType":"Return","src":"7491:33:5"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"7237:105:5","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1836,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"7356:12:5","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"tokenId","nameLocation":"7377:7:5","nodeType":"VariableDeclaration","scope":1836,"src":"7369:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"7369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7368:17:5"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1836,"src":"7417:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"7417:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7416:9:5"},"scope":2494,"src":"7347:184:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"7951:163:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1848,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"7980:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7999:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7991:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"7991:7:5","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7991:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7980:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1854,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"8018:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1855,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"8027:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8018:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1858,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"8055:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1859,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"8062:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1857,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"8038:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8038:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8018:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1863,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"8087:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1862,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8074:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1865,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"8099:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8074:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8018:88:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8017:90:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7980:127:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1847,"id":1870,"nodeType":"Return","src":"7961:146:5"}]},"documentation":{"id":1837,"nodeType":"StructuredDocumentation","src":"7537:300:5","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"7851:13:5","nodeType":"FunctionDefinition","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"owner","nameLocation":"7873:5:5","nodeType":"VariableDeclaration","scope":1872,"src":"7865:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"7865:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1841,"mutability":"mutable","name":"spender","nameLocation":"7888:7:5","nodeType":"VariableDeclaration","scope":1872,"src":"7880:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"7880:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"tokenId","nameLocation":"7905:7:5","nodeType":"VariableDeclaration","scope":1872,"src":"7897:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"7897:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7864:49:5"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"7945:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1845,"name":"bool","nodeType":"ElementaryTypeName","src":"7945:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7944:6:5"},"scope":2494,"src":"7842:272:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1908,"nodeType":"Block","src":"8645:271:5","statements":[{"condition":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8659:39:5","subExpression":{"arguments":[{"id":1883,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"8674:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1884,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"8681:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1885,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"8690:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1882,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"8660:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1907,"nodeType":"IfStatement","src":"8655:255:5","trueBody":{"id":1906,"nodeType":"Block","src":"8700:210:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"8718:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8735:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8727:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"8727:7:5","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8727:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8718:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1904,"nodeType":"Block","src":"8816:84:5","statements":[{"errorCall":{"arguments":[{"id":1900,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"8868:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1901,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"8877:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1899,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"8841:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8841:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1903,"nodeType":"RevertStatement","src":"8834:51:5"}]},"id":1905,"nodeType":"IfStatement","src":"8714:186:5","trueBody":{"id":1898,"nodeType":"Block","src":"8739:71:5","statements":[{"errorCall":{"arguments":[{"id":1895,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"8787:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1894,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"8764:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8764:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1897,"nodeType":"RevertStatement","src":"8757:38:5"}]}}]}}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"8120:423:5","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1909,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"8557:16:5","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"owner","nameLocation":"8582:5:5","nodeType":"VariableDeclaration","scope":1909,"src":"8574:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"8574:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"spender","nameLocation":"8597:7:5","nodeType":"VariableDeclaration","scope":1909,"src":"8589:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"8589:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"tokenId","nameLocation":"8614:7:5","nodeType":"VariableDeclaration","scope":1909,"src":"8606:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"8606:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8573:49:5"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[],"src":"8645:0:5"},"scope":2494,"src":"8548:368:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"9633:135:5","statements":[{"assignments":[1919],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"$","nameLocation":"9665:1:5","nodeType":"VariableDeclaration","scope":1932,"src":"9643:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1918,"nodeType":"UserDefinedTypeName","pathNode":{"id":1917,"name":"ERC721Storage","nameLocations":["9643:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"9643:13:5"},"referencedDeclaration":1422,"src":"9643:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1922,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1920,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"9669:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9669:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"9643:45:5"},{"id":1931,"nodeType":"UncheckedBlock","src":"9698:64:5","statements":[{"expression":{"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1923,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"9722:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9724:9:5","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"9722:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1927,"indexExpression":{"id":1925,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"9734:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9722:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"9746:5:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9722:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"nodeType":"ExpressionStatement","src":"9722:29:5"}]}]},"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"8922:631:5","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"9567:16:5","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"account","nameLocation":"9592:7:5","nodeType":"VariableDeclaration","scope":1933,"src":"9584:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"9584:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"value","nameLocation":"9609:5:5","nodeType":"VariableDeclaration","scope":1933,"src":"9601:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1913,"name":"uint128","nodeType":"ElementaryTypeName","src":"9601:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9583:32:5"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[],"src":"9633:0:5"},"scope":2494,"src":"9558:210:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2034,"nodeType":"Block","src":"10456:761:5","statements":[{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"$","nameLocation":"10488:1:5","nodeType":"VariableDeclaration","scope":2034,"src":"10466:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1946,"nodeType":"UserDefinedTypeName","pathNode":{"id":1945,"name":"ERC721Storage","nameLocations":["10466:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"10466:13:5"},"referencedDeclaration":1422,"src":"10466:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1950,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1948,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10492:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10492:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10466:45:5"},{"assignments":[1952],"declarations":[{"constant":false,"id":1952,"mutability":"mutable","name":"from","nameLocation":"10529:4:5","nodeType":"VariableDeclaration","scope":2034,"src":"10521:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"10521:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1956,"initialValue":{"arguments":[{"id":1954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1953,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"10536:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10536:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10521:32:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"10613:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10629:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10621:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"10621:7:5","typeDescriptions":{}}},"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10621:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10613:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1970,"nodeType":"IfStatement","src":"10609:86:5","trueBody":{"id":1969,"nodeType":"Block","src":"10633:62:5","statements":[{"expression":{"arguments":[{"id":1964,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"10664:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1965,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"10670:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1966,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10676:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1963,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"10647:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1968,"nodeType":"ExpressionStatement","src":"10647:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1971,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"10739:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10755:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10747:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"10747:7:5","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10747:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10739:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2000,"nodeType":"IfStatement","src":"10735:258:5","trueBody":{"id":1999,"nodeType":"Block","src":"10759:234:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10864:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"10864:7:5","typeDescriptions":{}}},"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10864:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1982,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10893:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10885:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"10885:7:5","typeDescriptions":{}}},"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10885:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10897:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1977,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2281,2355],"referencedDeclaration":2355,"src":"10855:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10855:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1989,"nodeType":"ExpressionStatement","src":"10855:48:5"},{"id":1998,"nodeType":"UncheckedBlock","src":"10918:65:5","statements":[{"expression":{"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1990,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"10946:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10948:9:5","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"10946:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1994,"indexExpression":{"id":1992,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"10958:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10946:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10967:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10946:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1997,"nodeType":"ExpressionStatement","src":"10946:22:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2001,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"11007:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11021:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11013:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"11013:7:5","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11013:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11007:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2017,"nodeType":"IfStatement","src":"11003:109:5","trueBody":{"id":2016,"nodeType":"Block","src":"11025:87:5","statements":[{"id":2015,"nodeType":"UncheckedBlock","src":"11039:63:5","statements":[{"expression":{"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2007,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"11067:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11069:9:5","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"11067:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2011,"indexExpression":{"id":2009,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"11079:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11067:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11086:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11067:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2014,"nodeType":"ExpressionStatement","src":"11067:20:5"}]}]}},{"expression":{"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2018,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"11122:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11124:7:5","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"11122:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2022,"indexExpression":{"id":2020,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"11132:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11122:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2023,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"11143:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11122:23:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2025,"nodeType":"ExpressionStatement","src":"11122:23:5"},{"eventCall":{"arguments":[{"id":2027,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"11170:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"11176:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2029,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"11180:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2026,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"11161:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11161:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2031,"nodeType":"EmitStatement","src":"11156:32:5"},{"expression":{"id":2032,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"11206:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1944,"id":2033,"nodeType":"Return","src":"11199:11:5"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"9774:582:5","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"10370:7:5","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"to","nameLocation":"10386:2:5","nodeType":"VariableDeclaration","scope":2035,"src":"10378:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"10378:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"tokenId","nameLocation":"10398:7:5","nodeType":"VariableDeclaration","scope":2035,"src":"10390:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"10390:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"auth","nameLocation":"10415:4:5","nodeType":"VariableDeclaration","scope":2035,"src":"10407:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"10407:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10377:43:5"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"10447:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"10447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10446:9:5"},"scope":2494,"src":"10361:856:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2084,"nodeType":"Block","src":"11592:274:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"11606:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11620:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11612:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2044,"name":"address","nodeType":"ElementaryTypeName","src":"11612:7:5","typeDescriptions":{}}},"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11612:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11606:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2057,"nodeType":"IfStatement","src":"11602:87:5","trueBody":{"id":2056,"nodeType":"Block","src":"11624:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11675:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11667:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"11667:7:5","typeDescriptions":{}}},"id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11667:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2049,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"11645:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11645:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2055,"nodeType":"RevertStatement","src":"11638:40:5"}]}},{"assignments":[2059],"declarations":[{"constant":false,"id":2059,"mutability":"mutable","name":"previousOwner","nameLocation":"11706:13:5","nodeType":"VariableDeclaration","scope":2084,"src":"11698:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2058,"name":"address","nodeType":"ElementaryTypeName","src":"11698:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2068,"initialValue":{"arguments":[{"id":2061,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"11730:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2062,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"11734:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11751:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11743:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"11743:7:5","typeDescriptions":{}}},"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11743:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2060,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"11722:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11722:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11698:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"11768:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11793:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11785:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2070,"name":"address","nodeType":"ElementaryTypeName","src":"11785:7:5","typeDescriptions":{}}},"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11785:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11768:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2083,"nodeType":"IfStatement","src":"11764:96:5","trueBody":{"id":2082,"nodeType":"Block","src":"11797:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11838:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"11838:7:5","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11838:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2075,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"11818:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2081,"nodeType":"RevertStatement","src":"11811:38:5"}]}}]},"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"11223:311:5","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11548:5:5","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"to","nameLocation":"11562:2:5","nodeType":"VariableDeclaration","scope":2085,"src":"11554:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"11554:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"tokenId","nameLocation":"11574:7:5","nodeType":"VariableDeclaration","scope":2085,"src":"11566:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"11566:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11553:29:5"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[],"src":"11592:0:5"},"scope":2494,"src":"11539:327:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2099,"nodeType":"Block","src":"12274:43:5","statements":[{"expression":{"arguments":[{"id":2094,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"12294:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2095,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12298:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12307:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2093,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2100,2126],"referencedDeclaration":2126,"src":"12284:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12284:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2098,"nodeType":"ExpressionStatement","src":"12284:26:5"}]},"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"11872:340:5","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2100,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12226:9:5","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"to","nameLocation":"12244:2:5","nodeType":"VariableDeclaration","scope":2100,"src":"12236:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"12236:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"tokenId","nameLocation":"12256:7:5","nodeType":"VariableDeclaration","scope":2100,"src":"12248:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"12248:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12235:29:5"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[],"src":"12274:0:5"},"scope":2494,"src":"12217:100:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2125,"nodeType":"Block","src":"12622:98:5","statements":[{"expression":{"arguments":[{"id":2111,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"12638:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2112,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"12642:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2110,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12632:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12632:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2114,"nodeType":"ExpressionStatement","src":"12632:18:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12691:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12683:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"12683:7:5","typeDescriptions":{}}},"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12683:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2120,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"12695:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2121,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"12699:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2122,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"12708:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2115,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"12660:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12660:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2124,"nodeType":"ExpressionStatement","src":"12660:53:5"}]},"documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"12323:210:5","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12547:9:5","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"to","nameLocation":"12565:2:5","nodeType":"VariableDeclaration","scope":2126,"src":"12557:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2102,"name":"address","nodeType":"ElementaryTypeName","src":"12557:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2105,"mutability":"mutable","name":"tokenId","nameLocation":"12577:7:5","nodeType":"VariableDeclaration","scope":2126,"src":"12569:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"12569:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"data","nameLocation":"12599:4:5","nodeType":"VariableDeclaration","scope":2126,"src":"12586:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2106,"name":"bytes","nodeType":"ElementaryTypeName","src":"12586:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12556:48:5"},"returnParameters":{"id":2109,"nodeType":"ParameterList","parameters":[],"src":"12622:0:5"},"scope":2494,"src":"12538:182:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2158,"nodeType":"Block","src":"13087:186:5","statements":[{"assignments":[2133],"declarations":[{"constant":false,"id":2133,"mutability":"mutable","name":"previousOwner","nameLocation":"13105:13:5","nodeType":"VariableDeclaration","scope":2158,"src":"13097:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"13097:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2145,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13137:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13129:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"13129:7:5","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13129:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2139,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"13141:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13158:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13150:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"13150:7:5","typeDescriptions":{}}},"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13150:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2134,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"13121:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13121:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13097:64:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2146,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"13175:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13200:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13192:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"13192:7:5","typeDescriptions":{}}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13192:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13175:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2157,"nodeType":"IfStatement","src":"13171:96:5","trueBody":{"id":2156,"nodeType":"Block","src":"13204:63:5","statements":[{"errorCall":{"arguments":[{"id":2153,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"13248:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2152,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"13225:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13225:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2155,"nodeType":"RevertStatement","src":"13218:38:5"}]}}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"12726:315:5","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13055:5:5","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"tokenId","nameLocation":"13069:7:5","nodeType":"VariableDeclaration","scope":2159,"src":"13061:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"13061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13060:17:5"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[],"src":"13087:0:5"},"scope":2494,"src":"13046:227:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"13668:389:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"13682:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13696:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13688:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"13688:7:5","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13688:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13682:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"13678:87:5","trueBody":{"id":2182,"nodeType":"Block","src":"13700:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13751:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13743:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2176,"name":"address","nodeType":"ElementaryTypeName","src":"13743:7:5","typeDescriptions":{}}},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13743:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2175,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"13721:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13721:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2181,"nodeType":"RevertStatement","src":"13714:40:5"}]}},{"assignments":[2185],"declarations":[{"constant":false,"id":2185,"mutability":"mutable","name":"previousOwner","nameLocation":"13782:13:5","nodeType":"VariableDeclaration","scope":2218,"src":"13774:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"13774:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2194,"initialValue":{"arguments":[{"id":2187,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"13806:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"13810:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13827:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13819:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"13819:7:5","typeDescriptions":{}}},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2186,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"13798:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13798:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13774:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"13844:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13869:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13861:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"13861:7:5","typeDescriptions":{}}},"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13861:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13844:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"13946:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2207,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"13963:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13946:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2216,"nodeType":"IfStatement","src":"13942:109:5","trueBody":{"id":2215,"nodeType":"Block","src":"13969:82:5","statements":[{"errorCall":{"arguments":[{"id":2210,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"14011:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2211,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"14017:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2212,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"14026:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2209,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"13990:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13990:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2214,"nodeType":"RevertStatement","src":"13983:57:5"}]}},"id":2217,"nodeType":"IfStatement","src":"13840:211:5","trueBody":{"id":2205,"nodeType":"Block","src":"13873:63:5","statements":[{"errorCall":{"arguments":[{"id":2202,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"13917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2201,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"13894:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13894:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2204,"nodeType":"RevertStatement","src":"13887:38:5"}]}}]},"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"13279:313:5","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"13606:9:5","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"from","nameLocation":"13624:4:5","nodeType":"VariableDeclaration","scope":2219,"src":"13616:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"to","nameLocation":"13638:2:5","nodeType":"VariableDeclaration","scope":2219,"src":"13630:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2163,"name":"address","nodeType":"ElementaryTypeName","src":"13630:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"tokenId","nameLocation":"13650:7:5","nodeType":"VariableDeclaration","scope":2219,"src":"13642:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"13642:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13615:43:5"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[],"src":"13668:0:5"},"scope":2494,"src":"13597:460:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2236,"nodeType":"Block","src":"15065:53:5","statements":[{"expression":{"arguments":[{"id":2230,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"15089:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2231,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"15095:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"15099:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15108:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2229,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2237,2263],"referencedDeclaration":2263,"src":"15075:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15075:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"ExpressionStatement","src":"15075:36:5"}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"14063:922:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2237,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"14999:13:5","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"from","nameLocation":"15021:4:5","nodeType":"VariableDeclaration","scope":2237,"src":"15013:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"15013:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2224,"mutability":"mutable","name":"to","nameLocation":"15035:2:5","nodeType":"VariableDeclaration","scope":2237,"src":"15027:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"15027:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"tokenId","nameLocation":"15047:7:5","nodeType":"VariableDeclaration","scope":2237,"src":"15039:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"15039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15012:43:5"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[],"src":"15065:0:5"},"scope":2494,"src":"14990:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2262,"nodeType":"Block","src":"15457:102:5","statements":[{"expression":{"arguments":[{"id":2250,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"15477:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2251,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"15483:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"15487:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2249,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"15467:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15467:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2254,"nodeType":"ExpressionStatement","src":"15467:28:5"},{"expression":{"arguments":[{"id":2256,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"15528:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2257,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"15534:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2258,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"15538:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2259,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"15547:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2255,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"15505:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15505:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2261,"nodeType":"ExpressionStatement","src":"15505:47:5"}]},"documentation":{"id":2238,"nodeType":"StructuredDocumentation","src":"15124:226:5","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"15364:13:5","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"from","nameLocation":"15386:4:5","nodeType":"VariableDeclaration","scope":2263,"src":"15378:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"15378:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"to","nameLocation":"15400:2:5","nodeType":"VariableDeclaration","scope":2263,"src":"15392:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2244,"mutability":"mutable","name":"tokenId","nameLocation":"15412:7:5","nodeType":"VariableDeclaration","scope":2263,"src":"15404:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"15404:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"data","nameLocation":"15434:4:5","nodeType":"VariableDeclaration","scope":2263,"src":"15421:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"15421:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15377:62:5"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[],"src":"15457:0:5"},"scope":2494,"src":"15355:204:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2280,"nodeType":"Block","src":"16072:50:5","statements":[{"expression":{"arguments":[{"id":2274,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"16091:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2275,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"16095:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2276,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"16104:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16110:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2273,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2281,2355],"referencedDeclaration":2355,"src":"16082:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16082:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2279,"nodeType":"ExpressionStatement","src":"16082:33:5"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"15565:432:5","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2281,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16011:8:5","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"to","nameLocation":"16028:2:5","nodeType":"VariableDeclaration","scope":2281,"src":"16020:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"16020:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"tokenId","nameLocation":"16040:7:5","nodeType":"VariableDeclaration","scope":2281,"src":"16032:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"16032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"auth","nameLocation":"16057:4:5","nodeType":"VariableDeclaration","scope":2281,"src":"16049:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"16049:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16019:43:5"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[],"src":"16072:0:5"},"scope":2494,"src":"16002:120:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2354,"nodeType":"Block","src":"16398:625:5","statements":[{"assignments":[2295],"declarations":[{"constant":false,"id":2295,"mutability":"mutable","name":"$","nameLocation":"16430:1:5","nodeType":"VariableDeclaration","scope":2354,"src":"16408:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":2294,"nodeType":"UserDefinedTypeName","pathNode":{"id":2293,"name":"ERC721Storage","nameLocations":["16408:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"16408:13:5"},"referencedDeclaration":1422,"src":"16408:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":2298,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2296,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"16434:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16434:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"16408:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2299,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"16519:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2300,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"16532:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16548:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16540:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"16540:7:5","typeDescriptions":{}}},"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16540:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16532:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16519:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2345,"nodeType":"IfStatement","src":"16515:460:5","trueBody":{"id":2344,"nodeType":"Block","src":"16552:423:5","statements":[{"assignments":[2308],"declarations":[{"constant":false,"id":2308,"mutability":"mutable","name":"owner","nameLocation":"16574:5:5","nodeType":"VariableDeclaration","scope":2344,"src":"16566:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2307,"name":"address","nodeType":"ElementaryTypeName","src":"16566:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2312,"initialValue":{"arguments":[{"id":2310,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"16596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2309,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"16582:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16582:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16566:38:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"16732:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16748:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16740:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"16740:7:5","typeDescriptions":{}}},"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16740:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16732:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"16754:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2320,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"16763:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16754:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16732:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16771:30:5","subExpression":{"arguments":[{"id":2324,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"16789:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2325,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"16796:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2323,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"16772:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16772:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16732:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2334,"nodeType":"IfStatement","src":"16728:142:5","trueBody":{"id":2333,"nodeType":"Block","src":"16803:67:5","statements":[{"errorCall":{"arguments":[{"id":2330,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"16850:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2329,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"16828:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16828:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2332,"nodeType":"RevertStatement","src":"16821:34:5"}]}},{"condition":{"id":2335,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"16888:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2343,"nodeType":"IfStatement","src":"16884:81:5","trueBody":{"id":2342,"nodeType":"Block","src":"16899:66:5","statements":[{"eventCall":{"arguments":[{"id":2337,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"16931:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2338,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"16938:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2339,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"16942:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2336,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"16922:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16922:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2341,"nodeType":"EmitStatement","src":"16917:33:5"}]}}]}},{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2346,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"16985:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16987:15:5","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":1415,"src":"16985:17:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2350,"indexExpression":{"id":2348,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"17003:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16985:26:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2351,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"17014:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16985:31:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2353,"nodeType":"ExpressionStatement","src":"16985:31:5"}]},"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"16128:171:5","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2355,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16313:8:5","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"to","nameLocation":"16330:2:5","nodeType":"VariableDeclaration","scope":2355,"src":"16322:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"16322:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"tokenId","nameLocation":"16342:7:5","nodeType":"VariableDeclaration","scope":2355,"src":"16334:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"16334:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"auth","nameLocation":"16359:4:5","nodeType":"VariableDeclaration","scope":2355,"src":"16351:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"16351:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"emitEvent","nameLocation":"16370:9:5","nodeType":"VariableDeclaration","scope":2355,"src":"16365:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2289,"name":"bool","nodeType":"ElementaryTypeName","src":"16365:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16321:59:5"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"16398:0:5"},"scope":2494,"src":"16304:719:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"17325:276:5","statements":[{"assignments":[2367],"declarations":[{"constant":false,"id":2367,"mutability":"mutable","name":"$","nameLocation":"17357:1:5","nodeType":"VariableDeclaration","scope":2399,"src":"17335:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":2366,"nodeType":"UserDefinedTypeName","pathNode":{"id":2365,"name":"ERC721Storage","nameLocations":["17335:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"17335:13:5"},"referencedDeclaration":1422,"src":"17335:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":2370,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2368,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"17361:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1422_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17361:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17335:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2371,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"17394:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17414:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17406:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"17406:7:5","typeDescriptions":{}}},"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17406:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17394:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2382,"nodeType":"IfStatement","src":"17390:91:5","trueBody":{"id":2381,"nodeType":"Block","src":"17418:63:5","statements":[{"errorCall":{"arguments":[{"id":2378,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"17461:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2377,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"17439:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17439:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2380,"nodeType":"RevertStatement","src":"17432:38:5"}]}},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":2383,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"17490:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1422_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17492:18:5","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"17490:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2388,"indexExpression":{"id":2385,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"17511:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17490:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2389,"indexExpression":{"id":2386,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"17518:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17490:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2390,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"17530:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17490:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2392,"nodeType":"ExpressionStatement","src":"17490:48:5"},{"eventCall":{"arguments":[{"id":2394,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"17568:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2395,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"17575:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2396,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"17585:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2393,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"17553:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17553:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2398,"nodeType":"EmitStatement","src":"17548:46:5"}]},"documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"17029:198:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"17241:18:5","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"owner","nameLocation":"17268:5:5","nodeType":"VariableDeclaration","scope":2400,"src":"17260:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2357,"name":"address","nodeType":"ElementaryTypeName","src":"17260:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"operator","nameLocation":"17283:8:5","nodeType":"VariableDeclaration","scope":2400,"src":"17275:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"17275:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"approved","nameLocation":"17298:8:5","nodeType":"VariableDeclaration","scope":2400,"src":"17293:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2361,"name":"bool","nodeType":"ElementaryTypeName","src":"17293:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17259:48:5"},"returnParameters":{"id":2364,"nodeType":"ParameterList","parameters":[],"src":"17325:0:5"},"scope":2494,"src":"17232:369:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"17908:169:5","statements":[{"assignments":[2409],"declarations":[{"constant":false,"id":2409,"mutability":"mutable","name":"owner","nameLocation":"17926:5:5","nodeType":"VariableDeclaration","scope":2428,"src":"17918:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"17918:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2413,"initialValue":{"arguments":[{"id":2411,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"17943:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2410,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"17934:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17934:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17918:33:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2414,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"17965:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17982:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17974:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2415,"name":"address","nodeType":"ElementaryTypeName","src":"17974:7:5","typeDescriptions":{}}},"id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17974:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17965:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2425,"nodeType":"IfStatement","src":"17961:88:5","trueBody":{"id":2424,"nodeType":"Block","src":"17986:63:5","statements":[{"errorCall":{"arguments":[{"id":2421,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"18030:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2420,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"18007:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18007:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2423,"nodeType":"RevertStatement","src":"18000:38:5"}]}},{"expression":{"id":2426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"18065:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2407,"id":2427,"nodeType":"Return","src":"18058:12:5"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"17607:224:5","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"17845:13:5","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"tokenId","nameLocation":"17867:7:5","nodeType":"VariableDeclaration","scope":2429,"src":"17859:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"17859:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17858:17:5"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"17899:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"17899:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17898:9:5"},"scope":2494,"src":"17836:241:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2492,"nodeType":"Block","src":"18718:680:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2441,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"18732:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18735:4:5","memberName":"code","nodeType":"MemberAccess","src":"18732:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18740:6:5","memberName":"length","nodeType":"MemberAccess","src":"18732:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18749:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18732:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2491,"nodeType":"IfStatement","src":"18728:664:5","trueBody":{"id":2490,"nodeType":"Block","src":"18752:640:5","statements":[{"clauses":[{"block":{"id":2470,"nodeType":"Block","src":"18866:162:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"18888:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2460,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"18898:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3900_$","typeString":"type(contract IERC721Receiver)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18914:16:5","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3899,"src":"18898:32:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18931:8:5","memberName":"selector","nodeType":"MemberAccess","src":"18898:41:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"18888:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"18884:130:5","trueBody":{"id":2468,"nodeType":"Block","src":"18941:73:5","statements":[{"errorCall":{"arguments":[{"id":2465,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"18992:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2464,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"18970:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18970:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"RevertStatement","src":"18963:32:5"}]}}]},"errorName":"","id":2471,"nodeType":"TryCatchClause","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"retval","nameLocation":"18858:6:5","nodeType":"VariableDeclaration","scope":2471,"src":"18851:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2456,"name":"bytes4","nodeType":"ElementaryTypeName","src":"18851:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"18850:15:5"},"src":"18842:186:5"},{"block":{"id":2487,"nodeType":"Block","src":"19057:325:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2475,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"19079:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19086:6:5","memberName":"length","nodeType":"MemberAccess","src":"19079:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19096:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19079:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2485,"nodeType":"Block","src":"19178:190:5","statements":[{"AST":{"nativeSrc":"19264:86:5","nodeType":"YulBlock","src":"19264:86:5","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19301:2:5","nodeType":"YulLiteral","src":"19301:2:5","type":"","value":"32"},{"name":"reason","nativeSrc":"19305:6:5","nodeType":"YulIdentifier","src":"19305:6:5"}],"functionName":{"name":"add","nativeSrc":"19297:3:5","nodeType":"YulIdentifier","src":"19297:3:5"},"nativeSrc":"19297:15:5","nodeType":"YulFunctionCall","src":"19297:15:5"},{"arguments":[{"name":"reason","nativeSrc":"19320:6:5","nodeType":"YulIdentifier","src":"19320:6:5"}],"functionName":{"name":"mload","nativeSrc":"19314:5:5","nodeType":"YulIdentifier","src":"19314:5:5"},"nativeSrc":"19314:13:5","nodeType":"YulFunctionCall","src":"19314:13:5"}],"functionName":{"name":"revert","nativeSrc":"19290:6:5","nodeType":"YulIdentifier","src":"19290:6:5"},"nativeSrc":"19290:38:5","nodeType":"YulFunctionCall","src":"19290:38:5"},"nativeSrc":"19290:38:5","nodeType":"YulExpressionStatement","src":"19290:38:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2473,"isOffset":false,"isSlot":false,"src":"19305:6:5","valueSize":1},{"declaration":2473,"isOffset":false,"isSlot":false,"src":"19320:6:5","valueSize":1}],"id":2484,"nodeType":"InlineAssembly","src":"19255:95:5"}]},"id":2486,"nodeType":"IfStatement","src":"19075:293:5","trueBody":{"id":2483,"nodeType":"Block","src":"19099:73:5","statements":[{"errorCall":{"arguments":[{"id":2480,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"19150:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2479,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"19128:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19128:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2482,"nodeType":"RevertStatement","src":"19121:32:5"}]}}]},"errorName":"","id":2488,"nodeType":"TryCatchClause","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"reason","nameLocation":"19049:6:5","nodeType":"VariableDeclaration","scope":2488,"src":"19036:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2472,"name":"bytes","nodeType":"ElementaryTypeName","src":"19036:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19035:21:5"},"src":"19029:353:5"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2450,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"18807:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18807:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"18821:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"18827:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2454,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"18836:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2447,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"18786:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2446,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"18770:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3900_$","typeString":"type(contract IERC721Receiver)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18770:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3900","typeString":"contract IERC721Receiver"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18790:16:5","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3899,"src":"18770:36:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18770:71:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2489,"nodeType":"TryStatement","src":"18766:616:5"}]}}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"18083:528:5","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"},"id":2493,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"18625:22:5","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"from","nameLocation":"18656:4:5","nodeType":"VariableDeclaration","scope":2493,"src":"18648:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2431,"name":"address","nodeType":"ElementaryTypeName","src":"18648:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"to","nameLocation":"18670:2:5","nodeType":"VariableDeclaration","scope":2493,"src":"18662:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"18662:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"tokenId","nameLocation":"18682:7:5","nodeType":"VariableDeclaration","scope":2493,"src":"18674:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"18674:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"data","nameLocation":"18704:4:5","nodeType":"VariableDeclaration","scope":2493,"src":"18691:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2437,"name":"bytes","nodeType":"ElementaryTypeName","src":"18691:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18647:62:5"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[],"src":"18718:0:5"},"scope":2494,"src":"18616:782:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2495,"src":"1100:18300:5","usedErrors":[264,267,3259,3264,3273,3278,3283,3290,3295,3300],"usedEvents":[272,3781,3790,3799]}],"src":"107:19294:5"},"id":5},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2585],"ERC721BurnableUpgradeable":[2539],"ERC721Upgradeable":[2494],"Initializable":[501]},"id":2540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2496,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"../ERC721Upgradeable.sol","id":2498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":2495,"src":"152:59:6","symbolAliases":[{"foreign":{"id":2497,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"160:17:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":2500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":2586,"src":"212:73:6","symbolAliases":[{"foreign":{"id":2499,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"220:18:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":502,"src":"286:69:6","symbolAliases":[{"foreign":{"id":2501,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"294:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2504,"name":"Initializable","nameLocations":["497:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"497:13:6"},"id":2505,"nodeType":"InheritanceSpecifier","src":"497:13:6"},{"baseName":{"id":2506,"name":"ContextUpgradeable","nameLocations":["512:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"512:18:6"},"id":2507,"nodeType":"InheritanceSpecifier","src":"512:18:6"},{"baseName":{"id":2508,"name":"ERC721Upgradeable","nameLocations":["532:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"532:17:6"},"id":2509,"nodeType":"InheritanceSpecifier","src":"532:17:6"}],"canonicalName":"ERC721BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"357:92:6","text":" @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."},"fullyImplemented":true,"id":2539,"linearizedBaseContracts":[2539,2494,3301,3928,3882,2625,4558,2585,501],"name":"ERC721BurnableUpgradeable","nameLocation":"468:25:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":2514,"nodeType":"Block","src":"615:7:6","statements":[]},"id":2515,"implemented":true,"kind":"function","modifiers":[{"id":2512,"kind":"modifierInvocation","modifierName":{"id":2511,"name":"onlyInitializing","nameLocations":["598:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"598:16:6"},"nodeType":"ModifierInvocation","src":"598:16:6"}],"name":"__ERC721Burnable_init","nameLocation":"565:21:6","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[],"src":"586:2:6"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"615:0:6"},"scope":2539,"src":"556:66:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2520,"nodeType":"Block","src":"697:7:6","statements":[]},"id":2521,"implemented":true,"kind":"function","modifiers":[{"id":2518,"kind":"modifierInvocation","modifierName":{"id":2517,"name":"onlyInitializing","nameLocations":["680:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"680:16:6"},"nodeType":"ModifierInvocation","src":"680:16:6"}],"name":"__ERC721Burnable_init_unchained","nameLocation":"637:31:6","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[],"src":"668:2:6"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[],"src":"697:0:6"},"scope":2539,"src":"628:76:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2537,"nodeType":"Block","src":"922:268:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1157:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1149:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:6","typeDescriptions":{}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1161:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2533,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"1170:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1170:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2527,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"1141:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1141:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2536,"nodeType":"ExpressionStatement","src":"1141:42:6"}]},"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"709:162:6","text":" @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."},"functionSelector":"42966c68","id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"885:4:6","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"tokenId","nameLocation":"898:7:6","nodeType":"VariableDeclaration","scope":2538,"src":"890:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"889:17:6"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[],"src":"922:0:6"},"scope":2539,"src":"876:314:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2540,"src":"450:742:6","usedErrors":[264,267,3259,3264,3273,3278,3283,3290,3295,3300],"usedEvents":[272,3781,3790,3799]}],"src":"126:1067:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2585],"Initializable":[501]},"id":2586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2541,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2586,"sourceUnit":502,"src":"126:63:7","symbolAliases":[{"foreign":{"id":2542,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"134:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2545,"name":"Initializable","nameLocations":["728:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"728:13:7"},"id":2546,"nodeType":"InheritanceSpecifier","src":"728:13:7"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"191:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2585,"linearizedBaseContracts":[2585,501],"name":"ContextUpgradeable","nameLocation":"706:18:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":2551,"nodeType":"Block","src":"800:7:7","statements":[]},"id":2552,"implemented":true,"kind":"function","modifiers":[{"id":2549,"kind":"modifierInvocation","modifierName":{"id":2548,"name":"onlyInitializing","nameLocations":["783:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"783:16:7"},"nodeType":"ModifierInvocation","src":"783:16:7"}],"name":"__Context_init","nameLocation":"757:14:7","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[],"src":"771:2:7"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[],"src":"800:0:7"},"scope":2585,"src":"748:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2557,"nodeType":"Block","src":"875:7:7","statements":[]},"id":2558,"implemented":true,"kind":"function","modifiers":[{"id":2555,"kind":"modifierInvocation","modifierName":{"id":2554,"name":"onlyInitializing","nameLocations":["858:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"858:16:7"},"nodeType":"ModifierInvocation","src":"858:16:7"}],"name":"__Context_init_unchained","nameLocation":"822:24:7","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[],"src":"846:2:7"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[],"src":"875:0:7"},"scope":2585,"src":"813:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2566,"nodeType":"Block","src":"949:34:7","statements":[{"expression":{"expression":{"id":2563,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:7","memberName":"sender","nodeType":"MemberAccess","src":"966:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2562,"id":2565,"nodeType":"Return","src":"959:17:7"}]},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:7","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[],"src":"906:2:7"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2567,"src":"940:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2560,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:7"},"scope":2585,"src":"887:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2575,"nodeType":"Block","src":"1056:32:7","statements":[{"expression":{"expression":{"id":2572,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:7","memberName":"data","nodeType":"MemberAccess","src":"1073:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2571,"id":2574,"nodeType":"Return","src":"1066:15:7"}]},"id":2576,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:7","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[],"src":"1006:2:7"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2576,"src":"1040:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2569,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:7"},"scope":2585,"src":"989:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"1166:25:7","statements":[{"expression":{"hexValue":"30","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2580,"id":2582,"nodeType":"Return","src":"1176:8:7"}]},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:7","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[],"src":"1123:2:7"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"1157:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:7"},"scope":2585,"src":"1094:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2586,"src":"688:505:7","usedErrors":[264,267],"usedEvents":[272]}],"src":"101:1093:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2625],"IERC165":[4558],"Initializable":[501]},"id":2626,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2587,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2626,"sourceUnit":4559,"src":"140:80:8","symbolAliases":[{"foreign":{"id":2588,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2626,"sourceUnit":502,"src":"221:66:8","symbolAliases":[{"foreign":{"id":2590,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"229:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2593,"name":"Initializable","nameLocations":["807:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"807:13:8"},"id":2594,"nodeType":"InheritanceSpecifier","src":"807:13:8"},{"baseName":{"id":2595,"name":"IERC165","nameLocations":["822:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4558,"src":"822:7:8"},"id":2596,"nodeType":"InheritanceSpecifier","src":"822:7:8"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"289:478:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2625,"linearizedBaseContracts":[2625,4558,501],"name":"ERC165Upgradeable","nameLocation":"786:17:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2601,"nodeType":"Block","src":"887:7:8","statements":[]},"id":2602,"implemented":true,"kind":"function","modifiers":[{"id":2599,"kind":"modifierInvocation","modifierName":{"id":2598,"name":"onlyInitializing","nameLocations":["870:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"870:16:8"},"nodeType":"ModifierInvocation","src":"870:16:8"}],"name":"__ERC165_init","nameLocation":"845:13:8","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[],"src":"858:2:8"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[],"src":"887:0:8"},"scope":2625,"src":"836:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"961:7:8","statements":[]},"id":2608,"implemented":true,"kind":"function","modifiers":[{"id":2605,"kind":"modifierInvocation","modifierName":{"id":2604,"name":"onlyInitializing","nameLocations":["944:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"944:16:8"},"nodeType":"ModifierInvocation","src":"944:16:8"}],"name":"__ERC165_init_unchained","nameLocation":"909:23:8","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[],"src":"932:2:8"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[],"src":"961:0:8"},"scope":2625,"src":"900:68:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4557],"body":{"id":2623,"nodeType":"Block","src":"1116:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"1133:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2618,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"1153:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4558_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4558_$","typeString":"type(contract IERC165)"}],"id":2617,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1148:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1148:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4558","typeString":"type(contract IERC165)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1162:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1148:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1133:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2615,"id":2622,"nodeType":"Return","src":"1126:47:8"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"973:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1043:17:8","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"interfaceId","nameLocation":"1068:11:8","nodeType":"VariableDeclaration","scope":2624,"src":"1061:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2610,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1061:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1060:20:8"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2624,"src":"1110:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2613,"name":"bool","nodeType":"ElementaryTypeName","src":"1110:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1109:6:8"},"scope":2625,"src":"1034:146:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2626,"src":"768:414:8","usedErrors":[264,267],"usedEvents":[272]}],"src":"114:1069:8"},"id":8},"@openzeppelin/contracts/access/manager/AuthorityUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/manager/AuthorityUtils.sol","exportedSymbols":{"AuthorityUtils":[2707],"IAuthority":[3201]},"id":2708,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2627,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"117:24:9"},{"absolutePath":"@openzeppelin/contracts/access/manager/IAuthority.sol","file":"./IAuthority.sol","id":2629,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2708,"sourceUnit":3202,"src":"143:44:9","symbolAliases":[{"foreign":{"id":2628,"name":"IAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"151:10:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AuthorityUtils","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2707,"linearizedBaseContracts":[2707],"name":"AuthorityUtils","nameLocation":"197:14:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2705,"nodeType":"Block","src":"776:451:9","statements":[{"assignments":[2646,2648],"declarations":[{"constant":false,"id":2646,"mutability":"mutable","name":"success","nameLocation":"792:7:9","nodeType":"VariableDeclaration","scope":2705,"src":"787:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2645,"name":"bool","nodeType":"ElementaryTypeName","src":"787:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"data","nameLocation":"814:4:9","nodeType":"VariableDeclaration","scope":2705,"src":"801:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2647,"name":"bytes","nodeType":"ElementaryTypeName","src":"801:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2661,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":2653,"name":"IAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"871:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAuthority_$3201_$","typeString":"type(contract IAuthority)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"882:7:9","memberName":"canCall","nodeType":"MemberAccess","referencedDeclaration":3200,"src":"871:18:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function IAuthority.canCall(address,address,bytes4) view returns (bool)"}},{"components":[{"id":2655,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"892:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2656,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"900:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2657,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"908:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"id":2658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:26:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bytes4_$","typeString":"tuple(address,address,bytes4)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function IAuthority.canCall(address,address,bytes4) view returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bytes4_$","typeString":"tuple(address,address,bytes4)"}],"expression":{"id":2651,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"856:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"860:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"856:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"856:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2649,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"822:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"832:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"822:20:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"822:106:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"786:142:9"},{"condition":{"id":2662,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"942:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2700,"nodeType":"IfStatement","src":"938:248:9","trueBody":{"id":2699,"nodeType":"Block","src":"951:235:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2663,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"969:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"974:6:9","memberName":"length","nodeType":"MemberAccess","src":"969:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783430","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"984:4:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"969:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2682,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"1086:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1091:6:9","memberName":"length","nodeType":"MemberAccess","src":"1086:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1101:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"1086:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2697,"nodeType":"IfStatement","src":"1082:94:9","trueBody":{"id":2696,"nodeType":"Block","src":"1107:69:9","statements":[{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2686,"name":"immediate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"1125:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2689,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"1148:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1155:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2690,"name":"bool","nodeType":"ElementaryTypeName","src":"1155:4:9","typeDescriptions":{}}}],"id":2692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1154:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2687,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1137:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1141:6:9","memberName":"decode","nodeType":"MemberAccess","src":"1137:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1137:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1125:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2695,"nodeType":"ExpressionStatement","src":"1125:36:9"}]}},"id":2698,"nodeType":"IfStatement","src":"965:211:9","trueBody":{"id":2681,"nodeType":"Block","src":"990:86:9","statements":[{"expression":{"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2667,"name":"immediate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"1009:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2668,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"1020:5:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":2669,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1008:18:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$","typeString":"tuple(bool,uint32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2672,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"1040:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1047:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2673,"name":"bool","nodeType":"ElementaryTypeName","src":"1047:4:9","typeDescriptions":{}}},{"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1053:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2675,"name":"uint32","nodeType":"ElementaryTypeName","src":"1053:6:9","typeDescriptions":{}}}],"id":2677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1046:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_uint32_$_$","typeString":"tuple(type(bool),type(uint32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_uint32_$_$","typeString":"tuple(type(bool),type(uint32))"}],"expression":{"id":2670,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1029:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1033:6:9","memberName":"decode","nodeType":"MemberAccess","src":"1029:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1029:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$","typeString":"tuple(bool,uint32)"}},"src":"1008:53:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2680,"nodeType":"ExpressionStatement","src":"1008:53:9"}]}}]}},{"expression":{"components":[{"id":2701,"name":"immediate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"1203:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2702,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"1214:5:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":2703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1202:18:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$","typeString":"tuple(bool,uint32)"}},"functionReturnParameters":2644,"id":2704,"nodeType":"Return","src":"1195:25:9"}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"218:368:9","text":" @dev Since `AccessManager` implements an extended IAuthority interface, invoking `canCall` with backwards compatibility\n for the preexisting `IAuthority` interface requires special care to avoid reverting on insufficient return data.\n This helper function takes care of invoking `canCall` in a backwards compatible way without reverting."},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"canCallWithDelay","nameLocation":"600:16:9","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"authority","nameLocation":"634:9:9","nodeType":"VariableDeclaration","scope":2706,"src":"626:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2631,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"caller","nameLocation":"661:6:9","nodeType":"VariableDeclaration","scope":2706,"src":"653:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2633,"name":"address","nodeType":"ElementaryTypeName","src":"653:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2636,"mutability":"mutable","name":"target","nameLocation":"685:6:9","nodeType":"VariableDeclaration","scope":2706,"src":"677:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"selector","nameLocation":"708:8:9","nodeType":"VariableDeclaration","scope":2706,"src":"701:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2637,"name":"bytes4","nodeType":"ElementaryTypeName","src":"701:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"616:106:9"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"immediate","nameLocation":"751:9:9","nodeType":"VariableDeclaration","scope":2706,"src":"746:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2640,"name":"bool","nodeType":"ElementaryTypeName","src":"746:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"delay","nameLocation":"769:5:9","nodeType":"VariableDeclaration","scope":2706,"src":"762:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2642,"name":"uint32","nodeType":"ElementaryTypeName","src":"762:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"745:30:9"},"scope":2707,"src":"591:636:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2708,"src":"189:1040:9","usedErrors":[],"usedEvents":[]}],"src":"117:1113:9"},"id":9},"@openzeppelin/contracts/access/manager/IAccessManaged.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManaged.sol","exportedSymbols":{"IAccessManaged":[2747]},"id":2748,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2709,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"117:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessManaged","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2747,"linearizedBaseContracts":[2747],"name":"IAccessManaged","nameLocation":"153:14:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"174:73:10","text":" @dev Authority that manages this contract was updated."},"eventSelector":"2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad","id":2714,"name":"AuthorityUpdated","nameLocation":"258:16:10","nodeType":"EventDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"indexed":false,"mutability":"mutable","name":"authority","nameLocation":"283:9:10","nodeType":"VariableDeclaration","scope":2714,"src":"275:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"274:19:10"},"src":"252:42:10"},{"errorSelector":"068ca9d8","id":2718,"name":"AccessManagedUnauthorized","nameLocation":"306:25:10","nodeType":"ErrorDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"caller","nameLocation":"340:6:10","nodeType":"VariableDeclaration","scope":2718,"src":"332:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"331:16:10"},"src":"300:48:10"},{"errorSelector":"af77169d","id":2724,"name":"AccessManagedRequiredDelay","nameLocation":"359:26:10","nodeType":"ErrorDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"caller","nameLocation":"394:6:10","nodeType":"VariableDeclaration","scope":2724,"src":"386:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2722,"mutability":"mutable","name":"delay","nameLocation":"409:5:10","nodeType":"VariableDeclaration","scope":2724,"src":"402:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2721,"name":"uint32","nodeType":"ElementaryTypeName","src":"402:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"385:30:10"},"src":"353:63:10"},{"errorSelector":"c2f31e5e","id":2728,"name":"AccessManagedInvalidAuthority","nameLocation":"427:29:10","nodeType":"ErrorDefinition","parameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"authority","nameLocation":"465:9:10","nodeType":"VariableDeclaration","scope":2728,"src":"457:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2725,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"456:19:10"},"src":"421:55:10"},{"documentation":{"id":2729,"nodeType":"StructuredDocumentation","src":"482:54:10","text":" @dev Returns the current authority."},"functionSelector":"bf7e214f","id":2734,"implemented":false,"kind":"function","modifiers":[],"name":"authority","nameLocation":"550:9:10","nodeType":"FunctionDefinition","parameters":{"id":2730,"nodeType":"ParameterList","parameters":[],"src":"559:2:10"},"returnParameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"585:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2731,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"584:9:10"},"scope":2747,"src":"541:53:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"600:103:10","text":" @dev Transfers control to a new authority. The caller must be the current authority."},"functionSelector":"7a9e5e4b","id":2740,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthority","nameLocation":"717:12:10","nodeType":"FunctionDefinition","parameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2740,"src":"730:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"729:9:10"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[],"src":"747:0:10"},"scope":2747,"src":"708:40:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"754:284:10","text":" @dev Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is\n being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs\n attacker controlled calls."},"functionSelector":"8fb36037","id":2746,"implemented":false,"kind":"function","modifiers":[],"name":"isConsumingScheduledOp","nameLocation":"1052:22:10","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[],"src":"1074:2:10"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2746,"src":"1100:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2743,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1100:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1099:8:10"},"scope":2747,"src":"1043:65:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2748,"src":"143:967:10","usedErrors":[2718,2724,2728],"usedEvents":[2714]}],"src":"117:994:10"},"id":10},"@openzeppelin/contracts/access/manager/IAccessManager.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManager.sol","exportedSymbols":{"IAccessManaged":[2747],"IAccessManager":[3185],"Time":[7747]},"id":3186,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2749,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"117:24:11"},{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManaged.sol","file":"./IAccessManaged.sol","id":2751,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3186,"sourceUnit":2748,"src":"143:52:11","symbolAliases":[{"foreign":{"id":2750,"name":"IAccessManaged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"151:14:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":2753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3186,"sourceUnit":7748,"src":"196:48:11","symbolAliases":[{"foreign":{"id":2752,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"204:4:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3185,"linearizedBaseContracts":[3185],"name":"IAccessManager","nameLocation":"256:14:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"277:58:11","text":" @dev A delayed operation was scheduled."},"eventSelector":"82a2da5dee54ea8021c6545b4444620291e07ee83be6dd57edb175062715f3b4","id":2768,"name":"OperationScheduled","nameLocation":"346:18:11","nodeType":"EventDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"indexed":true,"mutability":"mutable","name":"operationId","nameLocation":"390:11:11","nodeType":"VariableDeclaration","scope":2768,"src":"374:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2758,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"426:5:11","nodeType":"VariableDeclaration","scope":2768,"src":"411:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2757,"name":"uint32","nodeType":"ElementaryTypeName","src":"411:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2760,"indexed":false,"mutability":"mutable","name":"schedule","nameLocation":"448:8:11","nodeType":"VariableDeclaration","scope":2768,"src":"441:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2759,"name":"uint48","nodeType":"ElementaryTypeName","src":"441:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2762,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"474:6:11","nodeType":"VariableDeclaration","scope":2768,"src":"466:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"466:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2764,"indexed":false,"mutability":"mutable","name":"target","nameLocation":"498:6:11","nodeType":"VariableDeclaration","scope":2768,"src":"490:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2763,"name":"address","nodeType":"ElementaryTypeName","src":"490:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2766,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"520:4:11","nodeType":"VariableDeclaration","scope":2768,"src":"514:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2765,"name":"bytes","nodeType":"ElementaryTypeName","src":"514:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"364:166:11"},"src":"340:191:11"},{"anonymous":false,"documentation":{"id":2769,"nodeType":"StructuredDocumentation","src":"537:59:11","text":" @dev A scheduled operation was executed."},"eventSelector":"76a2a46953689d4861a5d3f6ed883ad7e6af674a21f8e162707159fc9dde614d","id":2775,"name":"OperationExecuted","nameLocation":"607:17:11","nodeType":"EventDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"indexed":true,"mutability":"mutable","name":"operationId","nameLocation":"641:11:11","nodeType":"VariableDeclaration","scope":2775,"src":"625:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"625:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2773,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"669:5:11","nodeType":"VariableDeclaration","scope":2775,"src":"654:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2772,"name":"uint32","nodeType":"ElementaryTypeName","src":"654:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"624:51:11"},"src":"601:75:11"},{"anonymous":false,"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"682:59:11","text":" @dev A scheduled operation was canceled."},"eventSelector":"bd9ac67a6e2f6463b80927326310338bcbb4bdb7936ce1365ea3e01067e7b9f7","id":2782,"name":"OperationCanceled","nameLocation":"752:17:11","nodeType":"EventDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"indexed":true,"mutability":"mutable","name":"operationId","nameLocation":"786:11:11","nodeType":"VariableDeclaration","scope":2782,"src":"770:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"770:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2780,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"814:5:11","nodeType":"VariableDeclaration","scope":2782,"src":"799:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2779,"name":"uint32","nodeType":"ElementaryTypeName","src":"799:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"769:51:11"},"src":"746:75:11"},{"anonymous":false,"documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"827:61:11","text":" @dev Informational labelling for a roleId."},"eventSelector":"1256f5b5ecb89caec12db449738f2fbcd1ba5806cf38f35413f4e5c15bf6a450","id":2789,"name":"RoleLabel","nameLocation":"899:9:11","nodeType":"EventDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"924:6:11","nodeType":"VariableDeclaration","scope":2789,"src":"909:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2784,"name":"uint64","nodeType":"ElementaryTypeName","src":"909:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2787,"indexed":false,"mutability":"mutable","name":"label","nameLocation":"939:5:11","nodeType":"VariableDeclaration","scope":2789,"src":"932:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2786,"name":"string","nodeType":"ElementaryTypeName","src":"932:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"908:37:11"},"src":"893:53:11"},{"anonymous":false,"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"952:375:11","text":" @dev Emitted when `account` is granted `roleId`.\n NOTE: The meaning of the `since` argument depends on the `newMember` argument.\n If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role,\n otherwise it indicates the execution delay for this account and roleId is updated."},"eventSelector":"f98448b987f1428e0e230e1f3c6e2ce15b5693eaf31827fbd0b1ec4b424ae7cf","id":2802,"name":"RoleGranted","nameLocation":"1338:11:11","nodeType":"EventDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"1365:6:11","nodeType":"VariableDeclaration","scope":2802,"src":"1350:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2791,"name":"uint64","nodeType":"ElementaryTypeName","src":"1350:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2794,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1389:7:11","nodeType":"VariableDeclaration","scope":2802,"src":"1373:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2793,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2796,"indexed":false,"mutability":"mutable","name":"delay","nameLocation":"1405:5:11","nodeType":"VariableDeclaration","scope":2802,"src":"1398:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2795,"name":"uint32","nodeType":"ElementaryTypeName","src":"1398:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2798,"indexed":false,"mutability":"mutable","name":"since","nameLocation":"1419:5:11","nodeType":"VariableDeclaration","scope":2802,"src":"1412:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2797,"name":"uint48","nodeType":"ElementaryTypeName","src":"1412:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2800,"indexed":false,"mutability":"mutable","name":"newMember","nameLocation":"1431:9:11","nodeType":"VariableDeclaration","scope":2802,"src":"1426:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2799,"name":"bool","nodeType":"ElementaryTypeName","src":"1426:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1349:92:11"},"src":"1332:110:11"},{"anonymous":false,"documentation":{"id":2803,"nodeType":"StructuredDocumentation","src":"1448:125:11","text":" @dev Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous."},"eventSelector":"f229baa593af28c41b1d16b748cd7688f0c83aaf92d4be41c44005defe84c166","id":2809,"name":"RoleRevoked","nameLocation":"1584:11:11","nodeType":"EventDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"1611:6:11","nodeType":"VariableDeclaration","scope":2809,"src":"1596:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2804,"name":"uint64","nodeType":"ElementaryTypeName","src":"1596:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2807,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1635:7:11","nodeType":"VariableDeclaration","scope":2809,"src":"1619:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"1619:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1595:48:11"},"src":"1578:66:11"},{"anonymous":false,"documentation":{"id":2810,"nodeType":"StructuredDocumentation","src":"1650:78:11","text":" @dev Role acting as admin over a given `roleId` is updated."},"eventSelector":"1fd6dd7631312dfac2205b52913f99de03b4d7e381d5d27d3dbfe0713e6e6340","id":2816,"name":"RoleAdminChanged","nameLocation":"1739:16:11","nodeType":"EventDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"1771:6:11","nodeType":"VariableDeclaration","scope":2816,"src":"1756:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2811,"name":"uint64","nodeType":"ElementaryTypeName","src":"1756:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2814,"indexed":true,"mutability":"mutable","name":"admin","nameLocation":"1794:5:11","nodeType":"VariableDeclaration","scope":2816,"src":"1779:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2813,"name":"uint64","nodeType":"ElementaryTypeName","src":"1779:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1755:45:11"},"src":"1733:68:11"},{"anonymous":false,"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"1807:81:11","text":" @dev Role acting as guardian over a given `roleId` is updated."},"eventSelector":"7a8059630b897b5de4c08ade69f8b90c3ead1f8596d62d10b6c4d14a0afb4ae2","id":2823,"name":"RoleGuardianChanged","nameLocation":"1899:19:11","nodeType":"EventDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"1934:6:11","nodeType":"VariableDeclaration","scope":2823,"src":"1919:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2818,"name":"uint64","nodeType":"ElementaryTypeName","src":"1919:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2821,"indexed":true,"mutability":"mutable","name":"guardian","nameLocation":"1957:8:11","nodeType":"VariableDeclaration","scope":2823,"src":"1942:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2820,"name":"uint64","nodeType":"ElementaryTypeName","src":"1942:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1918:48:11"},"src":"1893:74:11"},{"anonymous":false,"documentation":{"id":2824,"nodeType":"StructuredDocumentation","src":"1973:108:11","text":" @dev Grant delay for a given `roleId` will be updated to `delay` when `since` is reached."},"eventSelector":"feb69018ee8b8fd50ea86348f1267d07673379f72cffdeccec63853ee8ce8b48","id":2832,"name":"RoleGrantDelayChanged","nameLocation":"2092:21:11","nodeType":"EventDefinition","parameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"2129:6:11","nodeType":"VariableDeclaration","scope":2832,"src":"2114:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2825,"name":"uint64","nodeType":"ElementaryTypeName","src":"2114:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2828,"indexed":false,"mutability":"mutable","name":"delay","nameLocation":"2144:5:11","nodeType":"VariableDeclaration","scope":2832,"src":"2137:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2827,"name":"uint32","nodeType":"ElementaryTypeName","src":"2137:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2830,"indexed":false,"mutability":"mutable","name":"since","nameLocation":"2158:5:11","nodeType":"VariableDeclaration","scope":2832,"src":"2151:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2829,"name":"uint48","nodeType":"ElementaryTypeName","src":"2151:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2113:51:11"},"src":"2086:79:11"},{"anonymous":false,"documentation":{"id":2833,"nodeType":"StructuredDocumentation","src":"2171:77:11","text":" @dev Target mode is updated (true = closed, false = open)."},"eventSelector":"90d4e7bb7e5d933792b3562e1741306f8be94837e1348dacef9b6f1df56eb138","id":2839,"name":"TargetClosed","nameLocation":"2259:12:11","nodeType":"EventDefinition","parameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"2288:6:11","nodeType":"VariableDeclaration","scope":2839,"src":"2272:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2834,"name":"address","nodeType":"ElementaryTypeName","src":"2272:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2837,"indexed":false,"mutability":"mutable","name":"closed","nameLocation":"2301:6:11","nodeType":"VariableDeclaration","scope":2839,"src":"2296:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2836,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2271:37:11"},"src":"2253:56:11"},{"anonymous":false,"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"2315:94:11","text":" @dev Role required to invoke `selector` on `target` is updated to `roleId`."},"eventSelector":"9ea6790c7dadfd01c9f8b9762b3682607af2c7e79e05a9f9fdf5580dde949151","id":2848,"name":"TargetFunctionRoleUpdated","nameLocation":"2420:25:11","nodeType":"EventDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"2462:6:11","nodeType":"VariableDeclaration","scope":2848,"src":"2446:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"2446:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2844,"indexed":false,"mutability":"mutable","name":"selector","nameLocation":"2477:8:11","nodeType":"VariableDeclaration","scope":2848,"src":"2470:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2843,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2470:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":2846,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"2502:6:11","nodeType":"VariableDeclaration","scope":2848,"src":"2487:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2845,"name":"uint64","nodeType":"ElementaryTypeName","src":"2487:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2445:64:11"},"src":"2414:96:11"},{"anonymous":false,"documentation":{"id":2849,"nodeType":"StructuredDocumentation","src":"2516:108:11","text":" @dev Admin delay for a given `target` will be updated to `delay` when `since` is reached."},"eventSelector":"a56b76017453f399ec2327ba00375dbfb1fd070ff854341ad6191e6a2e2de19c","id":2857,"name":"TargetAdminDelayUpdated","nameLocation":"2635:23:11","nodeType":"EventDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"2675:6:11","nodeType":"VariableDeclaration","scope":2857,"src":"2659:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2850,"name":"address","nodeType":"ElementaryTypeName","src":"2659:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2853,"indexed":false,"mutability":"mutable","name":"delay","nameLocation":"2690:5:11","nodeType":"VariableDeclaration","scope":2857,"src":"2683:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2852,"name":"uint32","nodeType":"ElementaryTypeName","src":"2683:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2855,"indexed":false,"mutability":"mutable","name":"since","nameLocation":"2704:5:11","nodeType":"VariableDeclaration","scope":2857,"src":"2697:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2854,"name":"uint48","nodeType":"ElementaryTypeName","src":"2697:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2658:52:11"},"src":"2629:82:11"},{"errorSelector":"813e9459","id":2861,"name":"AccessManagerAlreadyScheduled","nameLocation":"2723:29:11","nodeType":"ErrorDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"operationId","nameLocation":"2761:11:11","nodeType":"VariableDeclaration","scope":2861,"src":"2753:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:21:11"},"src":"2717:57:11"},{"errorSelector":"60a299b0","id":2865,"name":"AccessManagerNotScheduled","nameLocation":"2785:25:11","nodeType":"ErrorDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"operationId","nameLocation":"2819:11:11","nodeType":"VariableDeclaration","scope":2865,"src":"2811:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2811:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2810:21:11"},"src":"2779:53:11"},{"errorSelector":"18cb6b7a","id":2869,"name":"AccessManagerNotReady","nameLocation":"2843:21:11","nodeType":"ErrorDefinition","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"operationId","nameLocation":"2873:11:11","nodeType":"VariableDeclaration","scope":2869,"src":"2865:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2865:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2864:21:11"},"src":"2837:49:11"},{"errorSelector":"78a5d6e4","id":2873,"name":"AccessManagerExpired","nameLocation":"2897:20:11","nodeType":"ErrorDefinition","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"operationId","nameLocation":"2926:11:11","nodeType":"VariableDeclaration","scope":2873,"src":"2918:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2918:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2917:21:11"},"src":"2891:48:11"},{"errorSelector":"5a068bc8","id":2877,"name":"AccessManagerLockedAccount","nameLocation":"2950:26:11","nodeType":"ErrorDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"account","nameLocation":"2985:7:11","nodeType":"VariableDeclaration","scope":2877,"src":"2977:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2874,"name":"address","nodeType":"ElementaryTypeName","src":"2977:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2976:17:11"},"src":"2944:50:11"},{"errorSelector":"1871a90c","id":2881,"name":"AccessManagerLockedRole","nameLocation":"3005:23:11","nodeType":"ErrorDefinition","parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"roleId","nameLocation":"3036:6:11","nodeType":"VariableDeclaration","scope":2881,"src":"3029:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2878,"name":"uint64","nodeType":"ElementaryTypeName","src":"3029:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3028:15:11"},"src":"2999:45:11"},{"errorSelector":"5f159e63","id":2883,"name":"AccessManagerBadConfirmation","nameLocation":"3055:28:11","nodeType":"ErrorDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[],"src":"3083:2:11"},"src":"3049:37:11"},{"errorSelector":"f07e038f","id":2889,"name":"AccessManagerUnauthorizedAccount","nameLocation":"3097:32:11","nodeType":"ErrorDefinition","parameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"msgsender","nameLocation":"3138:9:11","nodeType":"VariableDeclaration","scope":2889,"src":"3130:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"roleId","nameLocation":"3156:6:11","nodeType":"VariableDeclaration","scope":2889,"src":"3149:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2886,"name":"uint64","nodeType":"ElementaryTypeName","src":"3149:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3129:34:11"},"src":"3091:73:11"},{"errorSelector":"81c6f24b","id":2897,"name":"AccessManagerUnauthorizedCall","nameLocation":"3175:29:11","nodeType":"ErrorDefinition","parameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"caller","nameLocation":"3213:6:11","nodeType":"VariableDeclaration","scope":2897,"src":"3205:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"3205:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"target","nameLocation":"3229:6:11","nodeType":"VariableDeclaration","scope":2897,"src":"3221:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"3221:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"selector","nameLocation":"3244:8:11","nodeType":"VariableDeclaration","scope":2897,"src":"3237:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2894,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3237:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3204:49:11"},"src":"3169:85:11"},{"errorSelector":"320ff748","id":2901,"name":"AccessManagerUnauthorizedConsume","nameLocation":"3265:32:11","nodeType":"ErrorDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"target","nameLocation":"3306:6:11","nodeType":"VariableDeclaration","scope":2901,"src":"3298:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3297:16:11"},"src":"3259:55:11"},{"errorSelector":"3fe2751c","id":2911,"name":"AccessManagerUnauthorizedCancel","nameLocation":"3325:31:11","nodeType":"ErrorDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"msgsender","nameLocation":"3365:9:11","nodeType":"VariableDeclaration","scope":2911,"src":"3357:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2902,"name":"address","nodeType":"ElementaryTypeName","src":"3357:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"caller","nameLocation":"3384:6:11","nodeType":"VariableDeclaration","scope":2911,"src":"3376:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2904,"name":"address","nodeType":"ElementaryTypeName","src":"3376:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"target","nameLocation":"3400:6:11","nodeType":"VariableDeclaration","scope":2911,"src":"3392:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2906,"name":"address","nodeType":"ElementaryTypeName","src":"3392:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"selector","nameLocation":"3415:8:11","nodeType":"VariableDeclaration","scope":2911,"src":"3408:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2908,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3408:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3356:68:11"},"src":"3319:106:11"},{"errorSelector":"0813ada2","id":2915,"name":"AccessManagerInvalidInitialAdmin","nameLocation":"3436:32:11","nodeType":"ErrorDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"initialAdmin","nameLocation":"3477:12:11","nodeType":"VariableDeclaration","scope":2915,"src":"3469:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2912,"name":"address","nodeType":"ElementaryTypeName","src":"3469:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3468:22:11"},"src":"3430:61:11"},{"documentation":{"id":2916,"nodeType":"StructuredDocumentation","src":"3497:1373:11","text":" @dev Check if an address (`caller`) is authorised to call a given function on a given contract directly (with\n no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule}\n & {execute} workflow.\n This function is usually called by the targeted contract to control immediate execution of restricted functions.\n Therefore we only return true if the call can be performed without any delay. If the call is subject to a\n previously set delay (not zero), then the function should return false and the caller should schedule the operation\n for future execution.\n If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise\n the operation can be executed if and only if delay is greater than 0.\n NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that\n is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail\n to identify the indirect workflow, and will consider calls that require a delay to be forbidden.\n NOTE: This function does not report the permissions of this manager itself. These are defined by the\n {_canCallSelf} function instead."},"functionSelector":"b7009613","id":2929,"implemented":false,"kind":"function","modifiers":[],"name":"canCall","nameLocation":"4884:7:11","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"caller","nameLocation":"4909:6:11","nodeType":"VariableDeclaration","scope":2929,"src":"4901:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"4901:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"target","nameLocation":"4933:6:11","nodeType":"VariableDeclaration","scope":2929,"src":"4925:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"4925:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"selector","nameLocation":"4956:8:11","nodeType":"VariableDeclaration","scope":2929,"src":"4949:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2921,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4949:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4891:79:11"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"allowed","nameLocation":"4999:7:11","nodeType":"VariableDeclaration","scope":2929,"src":"4994:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2924,"name":"bool","nodeType":"ElementaryTypeName","src":"4994:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"delay","nameLocation":"5015:5:11","nodeType":"VariableDeclaration","scope":2929,"src":"5008:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2926,"name":"uint32","nodeType":"ElementaryTypeName","src":"5008:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4993:28:11"},"scope":3185,"src":"4875:147:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"5028:252:11","text":" @dev Expiration delay for scheduled proposals. Defaults to 1 week.\n IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately,\n disabling any scheduling usage."},"functionSelector":"4665096d","id":2935,"implemented":false,"kind":"function","modifiers":[],"name":"expiration","nameLocation":"5294:10:11","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[],"src":"5304:2:11"},"returnParameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2935,"src":"5330:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2932,"name":"uint32","nodeType":"ElementaryTypeName","src":"5330:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5329:8:11"},"scope":3185,"src":"5285:53:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2936,"nodeType":"StructuredDocumentation","src":"5344:246:11","text":" @dev Minimum setback for all delay updates, with the exception of execution delays. It\n can be increased without setback (and reset via {revokeRole} in the case event of an\n accidental increase). Defaults to 5 days."},"functionSelector":"cc1b6c81","id":2941,"implemented":false,"kind":"function","modifiers":[],"name":"minSetback","nameLocation":"5604:10:11","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[],"src":"5614:2:11"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2941,"src":"5640:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2938,"name":"uint32","nodeType":"ElementaryTypeName","src":"5640:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5639:8:11"},"scope":3185,"src":"5595:53:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2942,"nodeType":"StructuredDocumentation","src":"5654:120:11","text":" @dev Get whether the contract is closed disabling any access. Otherwise role permissions are applied."},"functionSelector":"a166aa89","id":2949,"implemented":false,"kind":"function","modifiers":[],"name":"isTargetClosed","nameLocation":"5788:14:11","nodeType":"FunctionDefinition","parameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"target","nameLocation":"5811:6:11","nodeType":"VariableDeclaration","scope":2949,"src":"5803:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"5803:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5802:16:11"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2949,"src":"5842:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2946,"name":"bool","nodeType":"ElementaryTypeName","src":"5842:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5841:6:11"},"scope":3185,"src":"5779:69:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2950,"nodeType":"StructuredDocumentation","src":"5854:65:11","text":" @dev Get the role required to call a function."},"functionSelector":"6d5115bd","id":2959,"implemented":false,"kind":"function","modifiers":[],"name":"getTargetFunctionRole","nameLocation":"5933:21:11","nodeType":"FunctionDefinition","parameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"target","nameLocation":"5963:6:11","nodeType":"VariableDeclaration","scope":2959,"src":"5955:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2951,"name":"address","nodeType":"ElementaryTypeName","src":"5955:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2954,"mutability":"mutable","name":"selector","nameLocation":"5978:8:11","nodeType":"VariableDeclaration","scope":2959,"src":"5971:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2953,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5971:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"5954:33:11"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2959,"src":"6011:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2956,"name":"uint64","nodeType":"ElementaryTypeName","src":"6011:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6010:8:11"},"scope":3185,"src":"5924:95:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2960,"nodeType":"StructuredDocumentation","src":"6025:127:11","text":" @dev Get the admin delay for a target contract. Changes to contract configuration are subject to this delay."},"functionSelector":"4c1da1e2","id":2967,"implemented":false,"kind":"function","modifiers":[],"name":"getTargetAdminDelay","nameLocation":"6166:19:11","nodeType":"FunctionDefinition","parameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"target","nameLocation":"6194:6:11","nodeType":"VariableDeclaration","scope":2967,"src":"6186:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6185:16:11"},"returnParameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2967,"src":"6225:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2964,"name":"uint32","nodeType":"ElementaryTypeName","src":"6225:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6224:8:11"},"scope":3185,"src":"6157:76:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"6239:265:11","text":" @dev Get the id of the role that acts as an admin for the given role.\n The admin permission is required to grant the role, revoke the role and update the execution delay to execute\n an operation that is restricted to this role."},"functionSelector":"530dd456","id":2975,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"6518:12:11","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"roleId","nameLocation":"6538:6:11","nodeType":"VariableDeclaration","scope":2975,"src":"6531:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2969,"name":"uint64","nodeType":"ElementaryTypeName","src":"6531:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6530:15:11"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2975,"src":"6569:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2972,"name":"uint64","nodeType":"ElementaryTypeName","src":"6569:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6568:8:11"},"scope":3185,"src":"6509:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"6583:185:11","text":" @dev Get the role that acts as a guardian for a given role.\n The guardian permission allows canceling operations that have been scheduled under the role."},"functionSelector":"0b0a93ba","id":2983,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleGuardian","nameLocation":"6782:15:11","nodeType":"FunctionDefinition","parameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"roleId","nameLocation":"6805:6:11","nodeType":"VariableDeclaration","scope":2983,"src":"6798:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2977,"name":"uint64","nodeType":"ElementaryTypeName","src":"6798:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6797:15:11"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2983,"src":"6836:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2980,"name":"uint64","nodeType":"ElementaryTypeName","src":"6836:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6835:8:11"},"scope":3185,"src":"6773:71:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2984,"nodeType":"StructuredDocumentation","src":"6850:286:11","text":" @dev Get the role current grant delay.\n Its value may change at any point without an event emitted following a call to {setGrantDelay}.\n Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event."},"functionSelector":"12be8727","id":2991,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleGrantDelay","nameLocation":"7150:17:11","nodeType":"FunctionDefinition","parameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2986,"mutability":"mutable","name":"roleId","nameLocation":"7175:6:11","nodeType":"VariableDeclaration","scope":2991,"src":"7168:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2985,"name":"uint64","nodeType":"ElementaryTypeName","src":"7168:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7167:15:11"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"7206:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2988,"name":"uint32","nodeType":"ElementaryTypeName","src":"7206:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"7205:8:11"},"scope":3185,"src":"7141:73:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"7220:599:11","text":" @dev Get the access details for a given account for a given role. These details include the timepoint at which\n membership becomes active, and the delay applied to all operation by this user that requires this permission\n level.\n Returns:\n [0] Timestamp at which the account membership becomes valid. 0 means role is not granted.\n [1] Current execution delay for the account.\n [2] Pending execution delay for the account.\n [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled."},"functionSelector":"3078f114","id":3007,"implemented":false,"kind":"function","modifiers":[],"name":"getAccess","nameLocation":"7833:9:11","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"roleId","nameLocation":"7850:6:11","nodeType":"VariableDeclaration","scope":3007,"src":"7843:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2993,"name":"uint64","nodeType":"ElementaryTypeName","src":"7843:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"account","nameLocation":"7866:7:11","nodeType":"VariableDeclaration","scope":3007,"src":"7858:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"7858:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7842:32:11"},"returnParameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"7898:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2998,"name":"uint48","nodeType":"ElementaryTypeName","src":"7898:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"7906:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3000,"name":"uint32","nodeType":"ElementaryTypeName","src":"7906:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"7914:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3002,"name":"uint32","nodeType":"ElementaryTypeName","src":"7914:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"7922:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3004,"name":"uint48","nodeType":"ElementaryTypeName","src":"7922:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"7897:32:11"},"scope":3185,"src":"7824:106:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"7936:230:11","text":" @dev Check if a given account currently has the permission level corresponding to a given role. Note that this\n permission might be associated with an execution delay. {getAccess} can provide more details."},"functionSelector":"d1f856ee","id":3019,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"8180:7:11","nodeType":"FunctionDefinition","parameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"roleId","nameLocation":"8195:6:11","nodeType":"VariableDeclaration","scope":3019,"src":"8188:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3009,"name":"uint64","nodeType":"ElementaryTypeName","src":"8188:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"account","nameLocation":"8211:7:11","nodeType":"VariableDeclaration","scope":3019,"src":"8203:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"8203:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8187:32:11"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3019,"src":"8243:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3014,"name":"bool","nodeType":"ElementaryTypeName","src":"8243:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3019,"src":"8249:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3016,"name":"uint32","nodeType":"ElementaryTypeName","src":"8249:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8242:14:11"},"scope":3185,"src":"8171:86:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"8263:208:11","text":" @dev Give a label to a role, for improved role discoverability by UIs.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleLabel} event."},"functionSelector":"853551b8","id":3027,"implemented":false,"kind":"function","modifiers":[],"name":"labelRole","nameLocation":"8485:9:11","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"roleId","nameLocation":"8502:6:11","nodeType":"VariableDeclaration","scope":3027,"src":"8495:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3021,"name":"uint64","nodeType":"ElementaryTypeName","src":"8495:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"label","nameLocation":"8526:5:11","nodeType":"VariableDeclaration","scope":3027,"src":"8510:21:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3023,"name":"string","nodeType":"ElementaryTypeName","src":"8510:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8494:38:11"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[],"src":"8541:0:11"},"scope":3185,"src":"8476:66:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"8548:1222:11","text":" @dev Add `account` to `roleId`, or change its execution delay.\n This gives the account the authorization to call any function that is restricted to this role. An optional\n execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation\n that is restricted to members of this role. The user will only be able to execute the operation after the delay has\n passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}).\n If the account has already been granted this role, the execution delay will be updated. This update is not\n immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is\n called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any\n operation executed in the 3 hours that follows this update was indeed scheduled before this update.\n Requirements:\n - the caller must be an admin for the role (see {getRoleAdmin})\n - granted role must not be the `PUBLIC_ROLE`\n Emits a {RoleGranted} event."},"functionSelector":"25c471a0","id":3037,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"9784:9:11","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"roleId","nameLocation":"9801:6:11","nodeType":"VariableDeclaration","scope":3037,"src":"9794:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3029,"name":"uint64","nodeType":"ElementaryTypeName","src":"9794:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"account","nameLocation":"9817:7:11","nodeType":"VariableDeclaration","scope":3037,"src":"9809:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"9809:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"executionDelay","nameLocation":"9833:14:11","nodeType":"VariableDeclaration","scope":3037,"src":"9826:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3033,"name":"uint32","nodeType":"ElementaryTypeName","src":"9826:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9793:55:11"},"returnParameters":{"id":3036,"nodeType":"ParameterList","parameters":[],"src":"9857:0:11"},"scope":3185,"src":"9775:83:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"9864:377:11","text":" @dev Remove an account from a role, with immediate effect. If the account does not have the role, this call has\n no effect.\n Requirements:\n - the caller must be an admin for the role (see {getRoleAdmin})\n - revoked role must not be the `PUBLIC_ROLE`\n Emits a {RoleRevoked} event if the account had the role."},"functionSelector":"b7d2b162","id":3045,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"10255:10:11","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"roleId","nameLocation":"10273:6:11","nodeType":"VariableDeclaration","scope":3045,"src":"10266:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3039,"name":"uint64","nodeType":"ElementaryTypeName","src":"10266:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"account","nameLocation":"10289:7:11","nodeType":"VariableDeclaration","scope":3045,"src":"10281:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3041,"name":"address","nodeType":"ElementaryTypeName","src":"10281:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10265:32:11"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[],"src":"10306:0:11"},"scope":3185,"src":"10246:61:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"10313:317:11","text":" @dev Renounce role permissions for the calling account with immediate effect. If the sender is not in\n the role this call has no effect.\n Requirements:\n - the caller must be `callerConfirmation`.\n Emits a {RoleRevoked} event if the account had the role."},"functionSelector":"fe0776f5","id":3053,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"10644:12:11","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"roleId","nameLocation":"10664:6:11","nodeType":"VariableDeclaration","scope":3053,"src":"10657:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3047,"name":"uint64","nodeType":"ElementaryTypeName","src":"10657:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"callerConfirmation","nameLocation":"10680:18:11","nodeType":"VariableDeclaration","scope":3053,"src":"10672:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"10672:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10656:43:11"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[],"src":"10708:0:11"},"scope":3185,"src":"10635:74:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"10715:184:11","text":" @dev Change admin role for a given role.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleAdminChanged} event"},"functionSelector":"30cae187","id":3061,"implemented":false,"kind":"function","modifiers":[],"name":"setRoleAdmin","nameLocation":"10913:12:11","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"roleId","nameLocation":"10933:6:11","nodeType":"VariableDeclaration","scope":3061,"src":"10926:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3055,"name":"uint64","nodeType":"ElementaryTypeName","src":"10926:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"admin","nameLocation":"10948:5:11","nodeType":"VariableDeclaration","scope":3061,"src":"10941:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3057,"name":"uint64","nodeType":"ElementaryTypeName","src":"10941:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"10925:29:11"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[],"src":"10963:0:11"},"scope":3185,"src":"10904:60:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"10970:190:11","text":" @dev Change guardian role for a given role.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleGuardianChanged} event"},"functionSelector":"52962952","id":3069,"implemented":false,"kind":"function","modifiers":[],"name":"setRoleGuardian","nameLocation":"11174:15:11","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"roleId","nameLocation":"11197:6:11","nodeType":"VariableDeclaration","scope":3069,"src":"11190:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3063,"name":"uint64","nodeType":"ElementaryTypeName","src":"11190:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"guardian","nameLocation":"11212:8:11","nodeType":"VariableDeclaration","scope":3069,"src":"11205:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3065,"name":"uint64","nodeType":"ElementaryTypeName","src":"11205:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11189:32:11"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[],"src":"11230:0:11"},"scope":3185,"src":"11165:66:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3070,"nodeType":"StructuredDocumentation","src":"11237:196:11","text":" @dev Update the delay for granting a `roleId`.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleGrantDelayChanged} event."},"functionSelector":"a64d95ce","id":3077,"implemented":false,"kind":"function","modifiers":[],"name":"setGrantDelay","nameLocation":"11447:13:11","nodeType":"FunctionDefinition","parameters":{"id":3075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"roleId","nameLocation":"11468:6:11","nodeType":"VariableDeclaration","scope":3077,"src":"11461:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3071,"name":"uint64","nodeType":"ElementaryTypeName","src":"11461:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"newDelay","nameLocation":"11483:8:11","nodeType":"VariableDeclaration","scope":3077,"src":"11476:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3073,"name":"uint32","nodeType":"ElementaryTypeName","src":"11476:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11460:32:11"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[],"src":"11501:0:11"},"scope":3185,"src":"11438:64:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"11508:267:11","text":" @dev Set the role required to call functions identified by the `selectors` in the `target` contract.\n Requirements:\n - the caller must be a global admin\n Emits a {TargetFunctionRoleUpdated} event per selector."},"functionSelector":"08d6122d","id":3088,"implemented":false,"kind":"function","modifiers":[],"name":"setTargetFunctionRole","nameLocation":"11789:21:11","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"target","nameLocation":"11819:6:11","nodeType":"VariableDeclaration","scope":3088,"src":"11811:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"11811:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"selectors","nameLocation":"11845:9:11","nodeType":"VariableDeclaration","scope":3088,"src":"11827:27:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_calldata_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3081,"name":"bytes4","nodeType":"ElementaryTypeName","src":"11827:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3082,"nodeType":"ArrayTypeName","src":"11827:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"roleId","nameLocation":"11863:6:11","nodeType":"VariableDeclaration","scope":3088,"src":"11856:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3084,"name":"uint64","nodeType":"ElementaryTypeName","src":"11856:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11810:60:11"},"returnParameters":{"id":3087,"nodeType":"ParameterList","parameters":[],"src":"11879:0:11"},"scope":3185,"src":"11780:100:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"11886:229:11","text":" @dev Set the delay for changing the configuration of a given target contract.\n Requirements:\n - the caller must be a global admin\n Emits a {TargetAdminDelayUpdated} event."},"functionSelector":"d22b5989","id":3096,"implemented":false,"kind":"function","modifiers":[],"name":"setTargetAdminDelay","nameLocation":"12129:19:11","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"target","nameLocation":"12157:6:11","nodeType":"VariableDeclaration","scope":3096,"src":"12149:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"12149:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"newDelay","nameLocation":"12172:8:11","nodeType":"VariableDeclaration","scope":3096,"src":"12165:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3092,"name":"uint32","nodeType":"ElementaryTypeName","src":"12165:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12148:33:11"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[],"src":"12190:0:11"},"scope":3185,"src":"12120:71:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"12197:181:11","text":" @dev Set the closed flag for a contract.\n Requirements:\n - the caller must be a global admin\n Emits a {TargetClosed} event."},"functionSelector":"167bd395","id":3104,"implemented":false,"kind":"function","modifiers":[],"name":"setTargetClosed","nameLocation":"12392:15:11","nodeType":"FunctionDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"target","nameLocation":"12416:6:11","nodeType":"VariableDeclaration","scope":3104,"src":"12408:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"12408:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"closed","nameLocation":"12429:6:11","nodeType":"VariableDeclaration","scope":3104,"src":"12424:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3100,"name":"bool","nodeType":"ElementaryTypeName","src":"12424:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12407:29:11"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[],"src":"12445:0:11"},"scope":3185,"src":"12383:63:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3105,"nodeType":"StructuredDocumentation","src":"12452:209:11","text":" @dev Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the\n operation is not yet scheduled, has expired, was executed, or was canceled."},"functionSelector":"3adc277a","id":3112,"implemented":false,"kind":"function","modifiers":[],"name":"getSchedule","nameLocation":"12675:11:11","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"id","nameLocation":"12695:2:11","nodeType":"VariableDeclaration","scope":3112,"src":"12687:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12687:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12686:12:11"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3112,"src":"12722:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3109,"name":"uint48","nodeType":"ElementaryTypeName","src":"12722:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"12721:8:11"},"scope":3185,"src":"12666:64:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"12736:152:11","text":" @dev Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never\n been scheduled."},"functionSelector":"4136a33c","id":3120,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"12902:8:11","nodeType":"FunctionDefinition","parameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"id","nameLocation":"12919:2:11","nodeType":"VariableDeclaration","scope":3120,"src":"12911:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12911:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12910:12:11"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3120,"src":"12946:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3117,"name":"uint32","nodeType":"ElementaryTypeName","src":"12946:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12945:8:11"},"scope":3185,"src":"12893:61:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"12960:1068:11","text":" @dev Schedule a delayed operation for future execution, and return the operation identifier. It is possible to\n choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays\n required for the caller. The special value zero will automatically set the earliest possible time.\n Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when\n the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this\n scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}.\n Emits a {OperationScheduled} event.\n NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If\n this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target\n contract if it is using standard Solidity ABI encoding."},"functionSelector":"f801a698","id":3134,"implemented":false,"kind":"function","modifiers":[],"name":"schedule","nameLocation":"14042:8:11","nodeType":"FunctionDefinition","parameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"target","nameLocation":"14059:6:11","nodeType":"VariableDeclaration","scope":3134,"src":"14051:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3122,"name":"address","nodeType":"ElementaryTypeName","src":"14051:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"data","nameLocation":"14082:4:11","nodeType":"VariableDeclaration","scope":3134,"src":"14067:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3124,"name":"bytes","nodeType":"ElementaryTypeName","src":"14067:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"when","nameLocation":"14095:4:11","nodeType":"VariableDeclaration","scope":3134,"src":"14088:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3126,"name":"uint48","nodeType":"ElementaryTypeName","src":"14088:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14050:50:11"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3134,"src":"14119:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14119:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3134,"src":"14128:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3131,"name":"uint32","nodeType":"ElementaryTypeName","src":"14128:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14118:17:11"},"scope":3185,"src":"14033:103:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3135,"nodeType":"StructuredDocumentation","src":"14142:451:11","text":" @dev Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the\n execution delay is 0.\n Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the\n operation wasn't previously scheduled (if the caller doesn't have an execution delay).\n Emits an {OperationExecuted} event only if the call was scheduled and delayed."},"functionSelector":"1cff79cd","id":3144,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"14607:7:11","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"target","nameLocation":"14623:6:11","nodeType":"VariableDeclaration","scope":3144,"src":"14615:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"14615:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"data","nameLocation":"14646:4:11","nodeType":"VariableDeclaration","scope":3144,"src":"14631:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3138,"name":"bytes","nodeType":"ElementaryTypeName","src":"14631:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14614:37:11"},"returnParameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3144,"src":"14678:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3141,"name":"uint32","nodeType":"ElementaryTypeName","src":"14678:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14677:8:11"},"scope":3185,"src":"14598:88:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3145,"nodeType":"StructuredDocumentation","src":"14692:339:11","text":" @dev Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled\n operation that is cancelled.\n Requirements:\n - the caller must be the proposer, a guardian of the targeted function, or a global admin\n Emits a {OperationCanceled} event."},"functionSelector":"d6bb62c6","id":3156,"implemented":false,"kind":"function","modifiers":[],"name":"cancel","nameLocation":"15045:6:11","nodeType":"FunctionDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"caller","nameLocation":"15060:6:11","nodeType":"VariableDeclaration","scope":3156,"src":"15052:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3146,"name":"address","nodeType":"ElementaryTypeName","src":"15052:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3149,"mutability":"mutable","name":"target","nameLocation":"15076:6:11","nodeType":"VariableDeclaration","scope":3156,"src":"15068:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3148,"name":"address","nodeType":"ElementaryTypeName","src":"15068:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"data","nameLocation":"15099:4:11","nodeType":"VariableDeclaration","scope":3156,"src":"15084:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3150,"name":"bytes","nodeType":"ElementaryTypeName","src":"15084:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15051:53:11"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3156,"src":"15123:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3153,"name":"uint32","nodeType":"ElementaryTypeName","src":"15123:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15122:8:11"},"scope":3185,"src":"15036:95:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"15137:434:11","text":" @dev Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed\n (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error.\n This is useful for contract that want to enforce that calls targeting them were scheduled on the manager,\n with all the verifications that it implies.\n Emit a {OperationExecuted} event."},"functionSelector":"94c7d7ee","id":3164,"implemented":false,"kind":"function","modifiers":[],"name":"consumeScheduledOp","nameLocation":"15585:18:11","nodeType":"FunctionDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"caller","nameLocation":"15612:6:11","nodeType":"VariableDeclaration","scope":3164,"src":"15604:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3158,"name":"address","nodeType":"ElementaryTypeName","src":"15604:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"data","nameLocation":"15635:4:11","nodeType":"VariableDeclaration","scope":3164,"src":"15620:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3160,"name":"bytes","nodeType":"ElementaryTypeName","src":"15620:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15603:37:11"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[],"src":"15649:0:11"},"scope":3185,"src":"15576:74:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"15656:64:11","text":" @dev Hashing function for delayed operations."},"functionSelector":"abd9bd2a","id":3176,"implemented":false,"kind":"function","modifiers":[],"name":"hashOperation","nameLocation":"15734:13:11","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"caller","nameLocation":"15756:6:11","nodeType":"VariableDeclaration","scope":3176,"src":"15748:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"15748:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"target","nameLocation":"15772:6:11","nodeType":"VariableDeclaration","scope":3176,"src":"15764:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3168,"name":"address","nodeType":"ElementaryTypeName","src":"15764:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"data","nameLocation":"15795:4:11","nodeType":"VariableDeclaration","scope":3176,"src":"15780:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3170,"name":"bytes","nodeType":"ElementaryTypeName","src":"15780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15747:53:11"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3176,"src":"15824:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15824:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15823:9:11"},"scope":3185,"src":"15725:108:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3177,"nodeType":"StructuredDocumentation","src":"15839:169:11","text":" @dev Changes the authority of a target managed by this manager instance.\n Requirements:\n - the caller must be a global admin"},"functionSelector":"18ff183c","id":3184,"implemented":false,"kind":"function","modifiers":[],"name":"updateAuthority","nameLocation":"16022:15:11","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"target","nameLocation":"16046:6:11","nodeType":"VariableDeclaration","scope":3184,"src":"16038:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"16038:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"newAuthority","nameLocation":"16062:12:11","nodeType":"VariableDeclaration","scope":3184,"src":"16054:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"16054:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16037:38:11"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"16084:0:11"},"scope":3185,"src":"16013:72:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3186,"src":"246:15841:11","usedErrors":[2861,2865,2869,2873,2877,2881,2883,2889,2897,2901,2911,2915],"usedEvents":[2768,2775,2782,2789,2802,2809,2816,2823,2832,2839,2848,2857]}],"src":"117:15971:11"},"id":11},"@openzeppelin/contracts/access/manager/IAuthority.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/manager/IAuthority.sol","exportedSymbols":{"IAuthority":[3201]},"id":3202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3187,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthority","contractDependencies":[],"contractKind":"interface","documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"139:83:12","text":" @dev Standard interface for permissioning originally defined in Dappsys."},"fullyImplemented":false,"id":3201,"linearizedBaseContracts":[3201],"name":"IAuthority","nameLocation":"233:10:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"250:121:12","text":" @dev Returns true if the caller can invoke on a target the function identified by a function selector."},"functionSelector":"b7009613","id":3200,"implemented":false,"kind":"function","modifiers":[],"name":"canCall","nameLocation":"385:7:12","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"caller","nameLocation":"401:6:12","nodeType":"VariableDeclaration","scope":3200,"src":"393:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3190,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"target","nameLocation":"417:6:12","nodeType":"VariableDeclaration","scope":3200,"src":"409:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3192,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"selector","nameLocation":"432:8:12","nodeType":"VariableDeclaration","scope":3200,"src":"425:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3194,"name":"bytes4","nodeType":"ElementaryTypeName","src":"425:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"392:49:12"},"returnParameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"allowed","nameLocation":"470:7:12","nodeType":"VariableDeclaration","scope":3200,"src":"465:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3197,"name":"bool","nodeType":"ElementaryTypeName","src":"465:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"464:14:12"},"scope":3201,"src":"376:103:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3202,"src":"223:258:12","usedErrors":[],"usedEvents":[]}],"src":"113:369:12"},"id":12},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[3211]},"id":3212,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3204,"nodeType":"StructuredDocumentation","src":"139:203:13","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":3211,"linearizedBaseContracts":[3211],"name":"IERC1822Proxiable","nameLocation":"353:17:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"377:438:13","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":3210,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:13","nodeType":"FunctionDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[],"src":"842:2:13"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3210,"src":"868:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:13"},"scope":3211,"src":"820:57:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3212,"src":"343:536:13","usedErrors":[],"usedEvents":[]}],"src":"113:767:13"},"id":13},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[3348],"IERC20Errors":[3253],"IERC721Errors":[3301]},"id":3349,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3213,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":3214,"nodeType":"StructuredDocumentation","src":"138:139:14","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":3253,"linearizedBaseContracts":[3253],"name":"IERC20Errors","nameLocation":"288:12:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3215,"nodeType":"StructuredDocumentation","src":"307:309:14","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":3223,"name":"ERC20InsufficientBalance","nameLocation":"627:24:14","nodeType":"ErrorDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"sender","nameLocation":"660:6:14","nodeType":"VariableDeclaration","scope":3223,"src":"652:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3216,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3219,"mutability":"mutable","name":"balance","nameLocation":"676:7:14","nodeType":"VariableDeclaration","scope":3223,"src":"668:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"needed","nameLocation":"693:6:14","nodeType":"VariableDeclaration","scope":3223,"src":"685:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:14"},"src":"621:80:14"},{"documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"707:152:14","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":3228,"name":"ERC20InvalidSender","nameLocation":"870:18:14","nodeType":"ErrorDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"sender","nameLocation":"897:6:14","nodeType":"VariableDeclaration","scope":3228,"src":"889:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3225,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:14"},"src":"864:41:14"},{"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"911:159:14","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":3233,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:14","nodeType":"ErrorDefinition","parameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:14","nodeType":"VariableDeclaration","scope":3233,"src":"1102:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3230,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:14"},"src":"1075:45:14"},{"documentation":{"id":3234,"nodeType":"StructuredDocumentation","src":"1126:345:14","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":3242,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:14","nodeType":"ErrorDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"spender","nameLocation":"1517:7:14","nodeType":"VariableDeclaration","scope":3242,"src":"1509:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3235,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:14","nodeType":"VariableDeclaration","scope":3242,"src":"1526:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"needed","nameLocation":"1553:6:14","nodeType":"VariableDeclaration","scope":3242,"src":"1545:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:14"},"src":"1476:85:14"},{"documentation":{"id":3243,"nodeType":"StructuredDocumentation","src":"1567:174:14","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":3247,"name":"ERC20InvalidApprover","nameLocation":"1752:20:14","nodeType":"ErrorDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"approver","nameLocation":"1781:8:14","nodeType":"VariableDeclaration","scope":3247,"src":"1773:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:14"},"src":"1746:45:14"},{"documentation":{"id":3248,"nodeType":"StructuredDocumentation","src":"1797:195:14","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":3252,"name":"ERC20InvalidSpender","nameLocation":"2003:19:14","nodeType":"ErrorDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"spender","nameLocation":"2031:7:14","nodeType":"VariableDeclaration","scope":3252,"src":"2023:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3249,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:14"},"src":"1997:43:14"}],"scope":3349,"src":"278:1764:14","usedErrors":[3223,3228,3233,3242,3247,3252],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":3254,"nodeType":"StructuredDocumentation","src":"2044:141:14","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":3301,"linearizedBaseContracts":[3301],"name":"IERC721Errors","nameLocation":"2196:13:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"2216:219:14","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":3259,"name":"ERC721InvalidOwner","nameLocation":"2446:18:14","nodeType":"ErrorDefinition","parameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"owner","nameLocation":"2473:5:14","nodeType":"VariableDeclaration","scope":3259,"src":"2465:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3256,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:14"},"src":"2440:40:14"},{"documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"2486:132:14","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":3264,"name":"ERC721NonexistentToken","nameLocation":"2629:22:14","nodeType":"ErrorDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:14","nodeType":"VariableDeclaration","scope":3264,"src":"2652:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:14"},"src":"2623:46:14"},{"documentation":{"id":3265,"nodeType":"StructuredDocumentation","src":"2675:289:14","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":3273,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:14","nodeType":"ErrorDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"sender","nameLocation":"3004:6:14","nodeType":"VariableDeclaration","scope":3273,"src":"2996:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3269,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:14","nodeType":"VariableDeclaration","scope":3273,"src":"3012:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"owner","nameLocation":"3037:5:14","nodeType":"VariableDeclaration","scope":3273,"src":"3029:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3270,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:14"},"src":"2969:75:14"},{"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"3050:152:14","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":3278,"name":"ERC721InvalidSender","nameLocation":"3213:19:14","nodeType":"ErrorDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"sender","nameLocation":"3241:6:14","nodeType":"VariableDeclaration","scope":3278,"src":"3233:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3275,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:14"},"src":"3207:42:14"},{"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"3255:159:14","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":3283,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:14","nodeType":"ErrorDefinition","parameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:14","nodeType":"VariableDeclaration","scope":3283,"src":"3447:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3280,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:14"},"src":"3419:46:14"},{"documentation":{"id":3284,"nodeType":"StructuredDocumentation","src":"3471:247:14","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":3290,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:14","nodeType":"ErrorDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"operator","nameLocation":"3764:8:14","nodeType":"VariableDeclaration","scope":3290,"src":"3756:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3285,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:14","nodeType":"VariableDeclaration","scope":3290,"src":"3774:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:14"},"src":"3723:68:14"},{"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"3797:174:14","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":3295,"name":"ERC721InvalidApprover","nameLocation":"3982:21:14","nodeType":"ErrorDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"approver","nameLocation":"4012:8:14","nodeType":"VariableDeclaration","scope":3295,"src":"4004:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:14"},"src":"3976:46:14"},{"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"4028:197:14","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":3300,"name":"ERC721InvalidOperator","nameLocation":"4236:21:14","nodeType":"ErrorDefinition","parameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"operator","nameLocation":"4266:8:14","nodeType":"VariableDeclaration","scope":3300,"src":"4258:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:14"},"src":"4230:46:14"}],"scope":3349,"src":"2186:2092:14","usedErrors":[3259,3264,3273,3278,3283,3290,3295,3300],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"4280:143:14","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":3348,"linearizedBaseContracts":[3348],"name":"IERC1155Errors","nameLocation":"4434:14:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3303,"nodeType":"StructuredDocumentation","src":"4455:361:14","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":3313,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:14","nodeType":"ErrorDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"sender","nameLocation":"4862:6:14","nodeType":"VariableDeclaration","scope":3313,"src":"4854:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3304,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"balance","nameLocation":"4878:7:14","nodeType":"VariableDeclaration","scope":3313,"src":"4870:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3309,"mutability":"mutable","name":"needed","nameLocation":"4895:6:14","nodeType":"VariableDeclaration","scope":3313,"src":"4887:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3311,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:14","nodeType":"VariableDeclaration","scope":3313,"src":"4903:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:14"},"src":"4821:99:14"},{"documentation":{"id":3314,"nodeType":"StructuredDocumentation","src":"4926:152:14","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":3318,"name":"ERC1155InvalidSender","nameLocation":"5089:20:14","nodeType":"ErrorDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"sender","nameLocation":"5118:6:14","nodeType":"VariableDeclaration","scope":3318,"src":"5110:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3315,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:14"},"src":"5083:43:14"},{"documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"5132:159:14","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":3323,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:14","nodeType":"ErrorDefinition","parameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:14","nodeType":"VariableDeclaration","scope":3323,"src":"5325:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:14"},"src":"5296:47:14"},{"documentation":{"id":3324,"nodeType":"StructuredDocumentation","src":"5349:256:14","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":3330,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:14","nodeType":"ErrorDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"operator","nameLocation":"5653:8:14","nodeType":"VariableDeclaration","scope":3330,"src":"5645:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3325,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3328,"mutability":"mutable","name":"owner","nameLocation":"5671:5:14","nodeType":"VariableDeclaration","scope":3330,"src":"5663:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3327,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:14"},"src":"5610:68:14"},{"documentation":{"id":3331,"nodeType":"StructuredDocumentation","src":"5684:174:14","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":3335,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:14","nodeType":"ErrorDefinition","parameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"approver","nameLocation":"5900:8:14","nodeType":"VariableDeclaration","scope":3335,"src":"5892:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3332,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:14"},"src":"5863:47:14"},{"documentation":{"id":3336,"nodeType":"StructuredDocumentation","src":"5916:197:14","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":3340,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:14","nodeType":"ErrorDefinition","parameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"operator","nameLocation":"6155:8:14","nodeType":"VariableDeclaration","scope":3340,"src":"6147:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3337,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:14"},"src":"6118:47:14"},{"documentation":{"id":3341,"nodeType":"StructuredDocumentation","src":"6171:280:14","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":3347,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:14","nodeType":"ErrorDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:14","nodeType":"VariableDeclaration","scope":3347,"src":"6488:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:14","nodeType":"VariableDeclaration","scope":3347,"src":"6507:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:14"},"src":"6456:73:14"}],"scope":3349,"src":"4424:2107:14","usedErrors":[3313,3318,3323,3330,3335,3340,3347],"usedEvents":[]}],"src":"112:6420:14"},"id":14},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[4181],"ERC1967Utils":[3651],"IBeacon":[3661],"StorageSlot":[4291]},"id":3652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3350,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:15"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":3352,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3652,"sourceUnit":3662,"src":"140:46:15","symbolAliases":[{"foreign":{"id":3351,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"148:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":3354,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3652,"sourceUnit":4182,"src":"187:48:15","symbolAliases":[{"foreign":{"id":3353,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"195:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":3356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3652,"sourceUnit":4292,"src":"236:56:15","symbolAliases":[{"foreign":{"id":3355,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"244:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3357,"nodeType":"StructuredDocumentation","src":"294:154:15","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":3651,"linearizedBaseContracts":[3651],"name":"ERC1967Utils","nameLocation":"457:12:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3358,"nodeType":"StructuredDocumentation","src":"660:68:15","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":3362,"name":"Upgraded","nameLocation":"739:8:15","nodeType":"EventDefinition","parameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:15","nodeType":"VariableDeclaration","scope":3362,"src":"748:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3359,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:15"},"src":"733:47:15"},{"anonymous":false,"documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"786:67:15","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":3369,"name":"AdminChanged","nameLocation":"864:12:15","nodeType":"EventDefinition","parameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:15","nodeType":"VariableDeclaration","scope":3369,"src":"877:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3364,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3367,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:15","nodeType":"VariableDeclaration","scope":3369,"src":"900:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3366,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:15"},"src":"858:60:15"},{"anonymous":false,"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"924:59:15","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":3374,"name":"BeaconUpgraded","nameLocation":"994:14:15","nodeType":"EventDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:15","nodeType":"VariableDeclaration","scope":3374,"src":"1009:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3371,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:15"},"src":"988:45:15"},{"constant":true,"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"1039:170:15","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":3378,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:15","nodeType":"VariableDeclaration","scope":3651,"src":"1279:114:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:15","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"1400:69:15","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":3383,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:15","nodeType":"ErrorDefinition","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:15","nodeType":"VariableDeclaration","scope":3383,"src":"1509:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3380,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:15"},"src":"1474:59:15"},{"documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"1539:60:15","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":3388,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:15","nodeType":"ErrorDefinition","parameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"admin","nameLocation":"1638:5:15","nodeType":"VariableDeclaration","scope":3388,"src":"1630:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:15"},"src":"1604:41:15"},{"documentation":{"id":3389,"nodeType":"StructuredDocumentation","src":"1651:61:15","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":3393,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:15","nodeType":"ErrorDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:15","nodeType":"VariableDeclaration","scope":3393,"src":"1744:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:15"},"src":"1717:43:15"},{"documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"1766:82:15","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":3396,"name":"ERC1967NonPayable","nameLocation":"1859:17:15","nodeType":"ErrorDefinition","parameters":{"id":3395,"nodeType":"ParameterList","parameters":[],"src":"1876:2:15"},"src":"1853:26:15"},{"body":{"id":3408,"nodeType":"Block","src":"2018:77:15","statements":[{"expression":{"expression":{"arguments":[{"id":3404,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"2062:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3402,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"2035:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4291_$","typeString":"type(library StorageSlot)"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"2035:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4187_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4187_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4186,"src":"2035:53:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3401,"id":3407,"nodeType":"Return","src":"2028:60:15"}]},"documentation":{"id":3397,"nodeType":"StructuredDocumentation","src":"1885:67:15","text":" @dev Returns the current implementation address."},"id":3409,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:15","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[],"src":"1983:2:15"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3409,"src":"2009:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3399,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:15"},"scope":3651,"src":"1957:138:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3435,"nodeType":"Block","src":"2249:218:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3415,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"2263:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:15","memberName":"code","nodeType":"MemberAccess","src":"2263:22:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:15","memberName":"length","nodeType":"MemberAccess","src":"2263:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3425,"nodeType":"IfStatement","src":"2259:119:15","trueBody":{"id":3424,"nodeType":"Block","src":"2299:79:15","statements":[{"errorCall":{"arguments":[{"id":3421,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"2349:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3420,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"2320:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3423,"nodeType":"RevertStatement","src":"2313:54:15"}]}},{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3429,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"2414:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3426,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"2387:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4291_$","typeString":"type(library StorageSlot)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"2387:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4187_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4187_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4186,"src":"2387:53:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3432,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"2443:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3434,"nodeType":"ExpressionStatement","src":"2387:73:15"}]},"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"2101:80:15","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":3436,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:15","nodeType":"FunctionDefinition","parameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:15","nodeType":"VariableDeclaration","scope":3436,"src":"2214:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3411,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:15"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[],"src":"2249:0:15"},"scope":3651,"src":"2186:281:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3469,"nodeType":"Block","src":"2860:254:15","statements":[{"expression":{"arguments":[{"id":3445,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"2889:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3444,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"2870:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3447,"nodeType":"ExpressionStatement","src":"2870:37:15"},{"eventCall":{"arguments":[{"id":3449,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"2931:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3448,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"2922:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3451,"nodeType":"EmitStatement","src":"2917:32:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3452,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"2964:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:15","memberName":"length","nodeType":"MemberAccess","src":"2964:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3467,"nodeType":"Block","src":"3065:43:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3464,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"3079:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3466,"nodeType":"ExpressionStatement","src":"3079:18:15"}]},"id":3468,"nodeType":"IfStatement","src":"2960:148:15","trueBody":{"id":3463,"nodeType":"Block","src":"2981:78:15","statements":[{"expression":{"arguments":[{"id":3459,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"3024:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3460,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"3043:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3456,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"2995:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4181_$","typeString":"type(library Address)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:15","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":4100,"src":"2995:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3462,"nodeType":"ExpressionStatement","src":"2995:53:15"}]}}]},"documentation":{"id":3437,"nodeType":"StructuredDocumentation","src":"2473:301:15","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":3470,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:15","nodeType":"FunctionDefinition","parameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:15","nodeType":"VariableDeclaration","scope":3470,"src":"2805:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3438,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"data","nameLocation":"2845:4:15","nodeType":"VariableDeclaration","scope":3470,"src":"2832:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3440,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:15"},"returnParameters":{"id":3443,"nodeType":"ParameterList","parameters":[],"src":"2860:0:15"},"scope":3651,"src":"2779:335:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"3120:145:15","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":3474,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:15","nodeType":"VariableDeclaration","scope":3651,"src":"3335:105:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:15","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":3486,"nodeType":"Block","src":"3844:68:15","statements":[{"expression":{"expression":{"arguments":[{"id":3482,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"3888:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3480,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"3861:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4291_$","typeString":"type(library StorageSlot)"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"3861:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4187_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4187_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4186,"src":"3861:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3479,"id":3485,"nodeType":"Return","src":"3854:51:15"}]},"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"3447:340:15","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":3487,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:15","nodeType":"FunctionDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[],"src":"3809:2:15"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"3835:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3477,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:15"},"scope":3651,"src":"3792:120:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3517,"nodeType":"Block","src":"4039:172:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3493,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"4053:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3494,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:15","typeDescriptions":{}}},"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3507,"nodeType":"IfStatement","src":"4049:91:15","trueBody":{"id":3506,"nodeType":"Block","src":"4077:63:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3500,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:15","typeDescriptions":{}}},"id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3499,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"4098:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3505,"nodeType":"RevertStatement","src":"4091:38:15"}]}},{"expression":{"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3511,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"4176:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3508,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"4149:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4291_$","typeString":"type(library StorageSlot)"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"4149:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4187_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4187_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4186,"src":"4149:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3514,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"4196:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3516,"nodeType":"ExpressionStatement","src":"4149:55:15"}]},"documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"3918:71:15","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":3518,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:15","nodeType":"FunctionDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:15","nodeType":"VariableDeclaration","scope":3518,"src":"4013:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3489,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:15"},"returnParameters":{"id":3492,"nodeType":"ParameterList","parameters":[],"src":"4039:0:15"},"scope":3651,"src":"3994:217:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3534,"nodeType":"Block","src":"4379:85:15","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3525,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"4407:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3527,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"4419:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3524,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"4394:12:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3529,"nodeType":"EmitStatement","src":"4389:39:15"},{"expression":{"arguments":[{"id":3531,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"4448:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3530,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"4438:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3533,"nodeType":"ExpressionStatement","src":"4438:19:15"}]},"documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"4217:109:15","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:15","nodeType":"FunctionDefinition","parameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:15","nodeType":"VariableDeclaration","scope":3535,"src":"4352:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:15"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[],"src":"4379:0:15"},"scope":3651,"src":"4331:133:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"4470:201:15","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":3539,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:15","nodeType":"VariableDeclaration","scope":3651,"src":"4741:106:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:15","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":3551,"nodeType":"Block","src":"4963:69:15","statements":[{"expression":{"expression":{"arguments":[{"id":3547,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"5007:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3545,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"4980:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4291_$","typeString":"type(library StorageSlot)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"4980:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4187_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4187_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4186,"src":"4980:45:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3544,"id":3550,"nodeType":"Return","src":"4973:52:15"}]},"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"4854:51:15","text":" @dev Returns the current beacon."},"id":3552,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:15","nodeType":"FunctionDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[],"src":"4928:2:15"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3552,"src":"4954:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3542,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:15"},"scope":3651,"src":"4910:122:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3597,"nodeType":"Block","src":"5161:390:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3558,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5175:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:15","memberName":"code","nodeType":"MemberAccess","src":"5175:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:15","memberName":"length","nodeType":"MemberAccess","src":"5175:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3568,"nodeType":"IfStatement","src":"5171:95:15","trueBody":{"id":3567,"nodeType":"Block","src":"5203:63:15","statements":[{"errorCall":{"arguments":[{"id":3564,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5245:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3563,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"5224:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3566,"nodeType":"RevertStatement","src":"5217:38:15"}]}},{"expression":{"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3572,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"5303:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3569,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"5276:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4291_$","typeString":"type(library StorageSlot)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"5276:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4187_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4187_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4186,"src":"5276:45:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3575,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5324:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3577,"nodeType":"ExpressionStatement","src":"5276:57:15"},{"assignments":[3579],"declarations":[{"constant":false,"id":3579,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:15","nodeType":"VariableDeclaration","scope":3597,"src":"5344:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3578,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3585,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3581,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5383:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3580,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"5375:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$3661_$","typeString":"type(contract IBeacon)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$3661","typeString":"contract IBeacon"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:15","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"5375:33:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3586,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"5424:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:15","memberName":"code","nodeType":"MemberAccess","src":"5424:25:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:15","memberName":"length","nodeType":"MemberAccess","src":"5424:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3596,"nodeType":"IfStatement","src":"5420:125:15","trueBody":{"id":3595,"nodeType":"Block","src":"5463:82:15","statements":[{"errorCall":{"arguments":[{"id":3592,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"5513:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3591,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"5484:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3594,"nodeType":"RevertStatement","src":"5477:57:15"}]}}]},"documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"5038:71:15","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":3598,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:15","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:15","nodeType":"VariableDeclaration","scope":3598,"src":"5134:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3554,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:15"},"returnParameters":{"id":3557,"nodeType":"ParameterList","parameters":[],"src":"5161:0:15"},"scope":3651,"src":"5114:437:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3635,"nodeType":"Block","src":"6155:254:15","statements":[{"expression":{"arguments":[{"id":3607,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"6176:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3606,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"6165:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3609,"nodeType":"ExpressionStatement","src":"6165:21:15"},{"eventCall":{"arguments":[{"id":3611,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"6216:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3610,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"6201:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3613,"nodeType":"EmitStatement","src":"6196:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"6241:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:15","memberName":"length","nodeType":"MemberAccess","src":"6241:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3633,"nodeType":"Block","src":"6360:43:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3630,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"6374:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3632,"nodeType":"ExpressionStatement","src":"6374:18:15"}]},"id":3634,"nodeType":"IfStatement","src":"6237:166:15","trueBody":{"id":3629,"nodeType":"Block","src":"6258:96:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3622,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"6309:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3621,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"6301:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$3661_$","typeString":"type(contract IBeacon)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$3661","typeString":"contract IBeacon"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:15","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"6301:33:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3626,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"6338:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3618,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"6272:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4181_$","typeString":"type(library Address)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:15","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":4100,"src":"6272:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3628,"nodeType":"ExpressionStatement","src":"6272:71:15"}]}}]},"documentation":{"id":3599,"nodeType":"StructuredDocumentation","src":"5557:514:15","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":3636,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:15","nodeType":"FunctionDefinition","parameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:15","nodeType":"VariableDeclaration","scope":3636,"src":"6108:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3600,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"data","nameLocation":"6140:4:15","nodeType":"VariableDeclaration","scope":3636,"src":"6127:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3602,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:15"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[],"src":"6155:0:15"},"scope":3651,"src":"6076:333:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3649,"nodeType":"Block","src":"6634:86:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3640,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:15","memberName":"value","nodeType":"MemberAccess","src":"6648:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3648,"nodeType":"IfStatement","src":"6644:70:15","trueBody":{"id":3647,"nodeType":"Block","src":"6663:51:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3644,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"6684:17:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3646,"nodeType":"RevertStatement","src":"6677:26:15"}]}}]},"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"6415:178:15","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":3650,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:15","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[],"src":"6623:2:15"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[],"src":"6634:0:15"},"scope":3651,"src":"6598:122:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3652,"src":"449:6273:15","usedErrors":[3383,3388,3393,3396],"usedEvents":[3362,3369,3374]}],"src":"114:6609:15"},"id":15},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[3661]},"id":3662,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"134:79:16","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":3661,"linearizedBaseContracts":[3661],"name":"IBeacon","nameLocation":"224:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"238:168:16","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":3660,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:16","nodeType":"FunctionDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[],"src":"434:2:16"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3660,"src":"460:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3657,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:16"},"scope":3661,"src":"411:58:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3662,"src":"214:257:16","usedErrors":[],"usedEvents":[]}],"src":"108:364:16"},"id":16},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3739]},"id":3740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3663,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":3664,"nodeType":"StructuredDocumentation","src":"132:70:17","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3739,"linearizedBaseContracts":[3739],"name":"IERC20","nameLocation":"213:6:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"226:158:17","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3673,"name":"Transfer","nameLocation":"395:8:17","nodeType":"EventDefinition","parameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:17","nodeType":"VariableDeclaration","scope":3673,"src":"404:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3669,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:17","nodeType":"VariableDeclaration","scope":3673,"src":"426:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3671,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:17","nodeType":"VariableDeclaration","scope":3673,"src":"446:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:17"},"src":"389:72:17"},{"anonymous":false,"documentation":{"id":3674,"nodeType":"StructuredDocumentation","src":"467:148:17","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3682,"name":"Approval","nameLocation":"626:8:17","nodeType":"EventDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:17","nodeType":"VariableDeclaration","scope":3682,"src":"635:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3675,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3678,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:17","nodeType":"VariableDeclaration","scope":3682,"src":"658:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3677,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3680,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:17","nodeType":"VariableDeclaration","scope":3682,"src":"683:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:17"},"src":"620:78:17"},{"documentation":{"id":3683,"nodeType":"StructuredDocumentation","src":"704:65:17","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":3688,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:17","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[],"src":"794:2:17"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3688,"src":"820:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:17"},"scope":3739,"src":"774:55:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3689,"nodeType":"StructuredDocumentation","src":"835:71:17","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":3696,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:17","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"account","nameLocation":"938:7:17","nodeType":"VariableDeclaration","scope":3696,"src":"930:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3690,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:17"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3696,"src":"970:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:17"},"scope":3739,"src":"911:68:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"985:213:17","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3706,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:17","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"to","nameLocation":"1229:2:17","nodeType":"VariableDeclaration","scope":3706,"src":"1221:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3698,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"value","nameLocation":"1241:5:17","nodeType":"VariableDeclaration","scope":3706,"src":"1233:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:17"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3706,"src":"1266:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3703,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:17"},"scope":3739,"src":"1203:69:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"1278:264:17","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3716,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:17","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"owner","nameLocation":"1574:5:17","nodeType":"VariableDeclaration","scope":3716,"src":"1566:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3708,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"spender","nameLocation":"1589:7:17","nodeType":"VariableDeclaration","scope":3716,"src":"1581:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3710,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:17"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3716,"src":"1621:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:17"},"scope":3739,"src":"1547:83:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"1636:667:17","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3726,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:17","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"spender","nameLocation":"2333:7:17","nodeType":"VariableDeclaration","scope":3726,"src":"2325:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3718,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"value","nameLocation":"2350:5:17","nodeType":"VariableDeclaration","scope":3726,"src":"2342:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:17"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"2375:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3723,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:17"},"scope":3739,"src":"2308:73:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"2387:297:17","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3738,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:17","nodeType":"FunctionDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"from","nameLocation":"2719:4:17","nodeType":"VariableDeclaration","scope":3738,"src":"2711:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3728,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"to","nameLocation":"2733:2:17","nodeType":"VariableDeclaration","scope":3738,"src":"2725:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3730,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"value","nameLocation":"2745:5:17","nodeType":"VariableDeclaration","scope":3738,"src":"2737:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:17"},"returnParameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3738,"src":"2770:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3735,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:17"},"scope":3739,"src":"2689:87:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3740,"src":"203:2575:17","usedErrors":[],"usedEvents":[3673,3682]}],"src":"106:2673:17"},"id":17},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[3739],"IERC20Metadata":[3765]},"id":3766,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3741,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3743,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3766,"sourceUnit":3740,"src":"151:37:18","symbolAliases":[{"foreign":{"id":3742,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"159:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3745,"name":"IERC20","nameLocations":["305:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3739,"src":"305:6:18"},"id":3746,"nodeType":"InheritanceSpecifier","src":"305:6:18"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"190:86:18","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":3765,"linearizedBaseContracts":[3765,3739],"name":"IERC20Metadata","nameLocation":"287:14:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"318:54:18","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":3752,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:18","nodeType":"FunctionDefinition","parameters":{"id":3748,"nodeType":"ParameterList","parameters":[],"src":"390:2:18"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3752,"src":"416:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3749,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:18"},"scope":3765,"src":"377:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3753,"nodeType":"StructuredDocumentation","src":"437:56:18","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":3758,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:18","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[],"src":"513:2:18"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3758,"src":"539:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3755,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:18"},"scope":3765,"src":"498:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3759,"nodeType":"StructuredDocumentation","src":"560:65:18","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":3764,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:18","nodeType":"FunctionDefinition","parameters":{"id":3760,"nodeType":"ParameterList","parameters":[],"src":"647:2:18"},"returnParameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3764,"src":"673:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3761,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:18"},"scope":3765,"src":"630:50:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3766,"src":"277:405:18","usedErrors":[],"usedEvents":[3673,3682]}],"src":"125:558:18"},"id":18},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4558],"IERC721":[3882]},"id":3883,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3767,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3769,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3883,"sourceUnit":4559,"src":"134:62:19","symbolAliases":[{"foreign":{"id":3768,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"142:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3771,"name":"IERC165","nameLocations":["287:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":4558,"src":"287:7:19"},"id":3772,"nodeType":"InheritanceSpecifier","src":"287:7:19"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"198:67:19","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":3882,"linearizedBaseContracts":[3882,4558],"name":"IERC721","nameLocation":"276:7:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"301:88:19","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3781,"name":"Transfer","nameLocation":"400:8:19","nodeType":"EventDefinition","parameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:19","nodeType":"VariableDeclaration","scope":3781,"src":"409:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3777,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:19","nodeType":"VariableDeclaration","scope":3781,"src":"431:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3776,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3779,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:19","nodeType":"VariableDeclaration","scope":3781,"src":"451:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:19"},"src":"394:82:19"},{"anonymous":false,"documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"482:94:19","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3790,"name":"Approval","nameLocation":"587:8:19","nodeType":"EventDefinition","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:19","nodeType":"VariableDeclaration","scope":3790,"src":"596:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3783,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3786,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:19","nodeType":"VariableDeclaration","scope":3790,"src":"619:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3785,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3788,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:19","nodeType":"VariableDeclaration","scope":3790,"src":"645:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:19"},"src":"581:89:19"},{"anonymous":false,"documentation":{"id":3791,"nodeType":"StructuredDocumentation","src":"676:117:19","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3799,"name":"ApprovalForAll","nameLocation":"804:14:19","nodeType":"EventDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:19","nodeType":"VariableDeclaration","scope":3799,"src":"819:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3792,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3795,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:19","nodeType":"VariableDeclaration","scope":3799,"src":"842:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3794,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3797,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:19","nodeType":"VariableDeclaration","scope":3799,"src":"868:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3796,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:19"},"src":"798:85:19"},{"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"889:76:19","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":3807,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:19","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"owner","nameLocation":"997:5:19","nodeType":"VariableDeclaration","scope":3807,"src":"989:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3801,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:19"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"balance","nameLocation":"1035:7:19","nodeType":"VariableDeclaration","scope":3807,"src":"1027:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:19"},"scope":3882,"src":"970:74:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"1050:131:19","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":3815,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:19","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:19","nodeType":"VariableDeclaration","scope":3815,"src":"1203:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:19"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"owner","nameLocation":"1251:5:19","nodeType":"VariableDeclaration","scope":3815,"src":"1243:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3812,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:19"},"scope":3882,"src":"1186:72:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3816,"nodeType":"StructuredDocumentation","src":"1264:565:19","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":3827,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:19","nodeType":"FunctionDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"from","nameLocation":"1868:4:19","nodeType":"VariableDeclaration","scope":3827,"src":"1860:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3817,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"to","nameLocation":"1882:2:19","nodeType":"VariableDeclaration","scope":3827,"src":"1874:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3819,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:19","nodeType":"VariableDeclaration","scope":3827,"src":"1886:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"data","nameLocation":"1918:4:19","nodeType":"VariableDeclaration","scope":3827,"src":"1903:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3823,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:19"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[],"src":"1932:0:19"},"scope":3882,"src":"1834:99:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3828,"nodeType":"StructuredDocumentation","src":"1939:705:19","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":3837,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:19","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"from","nameLocation":"2683:4:19","nodeType":"VariableDeclaration","scope":3837,"src":"2675:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3829,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"to","nameLocation":"2697:2:19","nodeType":"VariableDeclaration","scope":3837,"src":"2689:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3831,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:19","nodeType":"VariableDeclaration","scope":3837,"src":"2701:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:19"},"returnParameters":{"id":3836,"nodeType":"ParameterList","parameters":[],"src":"2726:0:19"},"scope":3882,"src":"2649:78:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3838,"nodeType":"StructuredDocumentation","src":"2733:732:19","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3847,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:19","nodeType":"FunctionDefinition","parameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3840,"mutability":"mutable","name":"from","nameLocation":"3500:4:19","nodeType":"VariableDeclaration","scope":3847,"src":"3492:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3842,"mutability":"mutable","name":"to","nameLocation":"3514:2:19","nodeType":"VariableDeclaration","scope":3847,"src":"3506:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:19","nodeType":"VariableDeclaration","scope":3847,"src":"3518:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:19"},"returnParameters":{"id":3846,"nodeType":"ParameterList","parameters":[],"src":"3543:0:19"},"scope":3882,"src":"3470:74:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"3550:452:19","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3855,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:19","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"to","nameLocation":"4032:2:19","nodeType":"VariableDeclaration","scope":3855,"src":"4024:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3849,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:19","nodeType":"VariableDeclaration","scope":3855,"src":"4036:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:19"},"returnParameters":{"id":3854,"nodeType":"ParameterList","parameters":[],"src":"4061:0:19"},"scope":3882,"src":"4007:55:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3856,"nodeType":"StructuredDocumentation","src":"4068:315:19","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":3863,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:19","nodeType":"FunctionDefinition","parameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"operator","nameLocation":"4423:8:19","nodeType":"VariableDeclaration","scope":3863,"src":"4415:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3857,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"approved","nameLocation":"4438:8:19","nodeType":"VariableDeclaration","scope":3863,"src":"4433:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3859,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:19"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[],"src":"4456:0:19"},"scope":3882,"src":"4388:69:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3864,"nodeType":"StructuredDocumentation","src":"4463:139:19","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":3871,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:19","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:19","nodeType":"VariableDeclaration","scope":3871,"src":"4628:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:19"},"returnParameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"operator","nameLocation":"4676:8:19","nodeType":"VariableDeclaration","scope":3871,"src":"4668:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3868,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:19"},"scope":3882,"src":"4607:79:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"4692:138:19","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":3881,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:19","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"owner","nameLocation":"4869:5:19","nodeType":"VariableDeclaration","scope":3881,"src":"4861:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3873,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"operator","nameLocation":"4884:8:19","nodeType":"VariableDeclaration","scope":3881,"src":"4876:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:19"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3881,"src":"4917:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3878,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:19"},"scope":3882,"src":"4835:88:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3883,"src":"266:4659:19","usedErrors":[],"usedEvents":[3781,3790,3799]}],"src":"108:4818:19"},"id":19},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3900]},"id":3901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3884,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3885,"nodeType":"StructuredDocumentation","src":"142:152:20","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":3900,"linearizedBaseContracts":[3900],"name":"IERC721Receiver","nameLocation":"305:15:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"327:500:20","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3899,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"841:16:20","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"operator","nameLocation":"875:8:20","nodeType":"VariableDeclaration","scope":3899,"src":"867:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3887,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"from","nameLocation":"901:4:20","nodeType":"VariableDeclaration","scope":3899,"src":"893:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3889,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3892,"mutability":"mutable","name":"tokenId","nameLocation":"923:7:20","nodeType":"VariableDeclaration","scope":3899,"src":"915:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3894,"mutability":"mutable","name":"data","nameLocation":"955:4:20","nodeType":"VariableDeclaration","scope":3899,"src":"940:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3893,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"857:108:20"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3899,"src":"984:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3896,"name":"bytes4","nodeType":"ElementaryTypeName","src":"984:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"983:8:20"},"scope":3900,"src":"832:160:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3901,"src":"295:699:20","usedErrors":[],"usedEvents":[]}],"src":"116:879:20"},"id":20},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[3882],"IERC721Metadata":[3928]},"id":3929,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3902,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3929,"sourceUnit":3883,"src":"153:39:21","symbolAliases":[{"foreign":{"id":3903,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"161:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3906,"name":"IERC721","nameLocations":["357:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3882,"src":"357:7:21"},"id":3907,"nodeType":"InheritanceSpecifier","src":"357:7:21"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3905,"nodeType":"StructuredDocumentation","src":"194:133:21","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3928,"linearizedBaseContracts":[3928,3882,4558],"name":"IERC721Metadata","nameLocation":"338:15:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3908,"nodeType":"StructuredDocumentation","src":"371:58:21","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3913,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:21","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[],"src":"447:2:21"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3913,"src":"473:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3910,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:21"},"scope":3928,"src":"434:54:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3914,"nodeType":"StructuredDocumentation","src":"494:60:21","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3919,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:21","nodeType":"FunctionDefinition","parameters":{"id":3915,"nodeType":"ParameterList","parameters":[],"src":"574:2:21"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"600:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3916,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:21"},"scope":3928,"src":"559:56:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"621:90:21","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3927,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:21","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:21","nodeType":"VariableDeclaration","scope":3927,"src":"734:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:21"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3927,"src":"774:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3924,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:21"},"scope":3928,"src":"716:73:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3929,"src":"328:463:21","usedErrors":[],"usedEvents":[3781,3790,3799]}],"src":"127:665:21"},"id":21},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[4181]},"id":4182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3930,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3931,"nodeType":"StructuredDocumentation","src":"127:67:22","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":4181,"linearizedBaseContracts":[4181],"name":"Address","nameLocation":"203:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3932,"nodeType":"StructuredDocumentation","src":"217:94:22","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":3936,"name":"AddressInsufficientBalance","nameLocation":"322:26:22","nodeType":"ErrorDefinition","parameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"account","nameLocation":"357:7:22","nodeType":"VariableDeclaration","scope":3936,"src":"349:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3933,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:22"},"src":"316:50:22"},{"documentation":{"id":3937,"nodeType":"StructuredDocumentation","src":"372:75:22","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":3941,"name":"AddressEmptyCode","nameLocation":"458:16:22","nodeType":"ErrorDefinition","parameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"target","nameLocation":"483:6:22","nodeType":"VariableDeclaration","scope":3941,"src":"475:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3938,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:22"},"src":"452:39:22"},{"documentation":{"id":3942,"nodeType":"StructuredDocumentation","src":"497:89:22","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":3944,"name":"FailedInnerCall","nameLocation":"597:15:22","nodeType":"ErrorDefinition","parameters":{"id":3943,"nodeType":"ParameterList","parameters":[],"src":"612:2:22"},"src":"591:24:22"},{"body":{"id":3984,"nodeType":"Block","src":"1602:260:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3954,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4181","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4181","typeString":"library Address"}],"id":3953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:22","typeDescriptions":{}}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:22","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3957,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"1640:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3967,"nodeType":"IfStatement","src":"1612:109:22","trueBody":{"id":3966,"nodeType":"Block","src":"1648:73:22","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3962,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4181","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4181","typeString":"library Address"}],"id":3961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3960,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:22","typeDescriptions":{}}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3959,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"1669:26:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3965,"nodeType":"RevertStatement","src":"1662:48:22"}]}},{"assignments":[3969,null],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"success","nameLocation":"1737:7:22","nodeType":"VariableDeclaration","scope":3984,"src":"1732:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3968,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3976,"initialValue":{"arguments":[{"hexValue":"","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3970,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"1750:9:22","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:22","memberName":"call","nodeType":"MemberAccess","src":"1750:14:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3972,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"1772:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:22"},{"condition":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:22","subExpression":{"id":3977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"1798:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3983,"nodeType":"IfStatement","src":"1793:63:22","trueBody":{"id":3982,"nodeType":"Block","src":"1807:49:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3979,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"1828:15:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3981,"nodeType":"RevertStatement","src":"1821:24:22"}]}}]},"documentation":{"id":3945,"nodeType":"StructuredDocumentation","src":"621:905:22","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3985,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:22","nodeType":"FunctionDefinition","parameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:22","nodeType":"VariableDeclaration","scope":3985,"src":"1550:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3946,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:22","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"amount","nameLocation":"1585:6:22","nodeType":"VariableDeclaration","scope":3985,"src":"1577:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:22"},"returnParameters":{"id":3951,"nodeType":"ParameterList","parameters":[],"src":"1602:0:22"},"scope":4181,"src":"1531:331:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4001,"nodeType":"Block","src":"2794:62:22","statements":[{"expression":{"arguments":[{"id":3996,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"2833:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3997,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"2841:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3995,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"2811:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3994,"id":4000,"nodeType":"Return","src":"2804:45:22"}]},"documentation":{"id":3986,"nodeType":"StructuredDocumentation","src":"1868:832:22","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":4002,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:22","nodeType":"FunctionDefinition","parameters":{"id":3991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"target","nameLocation":"2735:6:22","nodeType":"VariableDeclaration","scope":4002,"src":"2727:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3987,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3990,"mutability":"mutable","name":"data","nameLocation":"2756:4:22","nodeType":"VariableDeclaration","scope":4002,"src":"2743:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3989,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:22"},"returnParameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4002,"src":"2780:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3992,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:22"},"scope":4181,"src":"2705:151:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4047,"nodeType":"Block","src":"3293:279:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4016,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4181","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4181","typeString":"library Address"}],"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4014,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:22","typeDescriptions":{}}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:22","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"3331:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4029,"nodeType":"IfStatement","src":"3303:108:22","trueBody":{"id":4028,"nodeType":"Block","src":"3338:73:22","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4181","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4181","typeString":"library Address"}],"id":4023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4022,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:22","typeDescriptions":{}}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4021,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"3359:26:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4027,"nodeType":"RevertStatement","src":"3352:48:22"}]}},{"assignments":[4031,4033],"declarations":[{"constant":false,"id":4031,"mutability":"mutable","name":"success","nameLocation":"3426:7:22","nodeType":"VariableDeclaration","scope":4047,"src":"3421:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4030,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:22","nodeType":"VariableDeclaration","scope":4047,"src":"3435:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4032,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4040,"initialValue":{"arguments":[{"id":4038,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"3488:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4034,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"3462:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:22","memberName":"call","nodeType":"MemberAccess","src":"3462:11:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"3481:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:22"},{"expression":{"arguments":[{"id":4042,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"3537:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4043,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"3545:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4044,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"3554:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4041,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"3510:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4013,"id":4046,"nodeType":"Return","src":"3503:62:22"}]},"documentation":{"id":4003,"nodeType":"StructuredDocumentation","src":"2862:313:22","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":4048,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:22","nodeType":"FunctionDefinition","parameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"target","nameLocation":"3219:6:22","nodeType":"VariableDeclaration","scope":4048,"src":"3211:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"data","nameLocation":"3240:4:22","nodeType":"VariableDeclaration","scope":4048,"src":"3227:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4006,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"value","nameLocation":"3254:5:22","nodeType":"VariableDeclaration","scope":4048,"src":"3246:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:22"},"returnParameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4048,"src":"3279:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4011,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:22"},"scope":4181,"src":"3180:392:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4073,"nodeType":"Block","src":"3811:154:22","statements":[{"assignments":[4059,4061],"declarations":[{"constant":false,"id":4059,"mutability":"mutable","name":"success","nameLocation":"3827:7:22","nodeType":"VariableDeclaration","scope":4073,"src":"3822:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4058,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:22","nodeType":"VariableDeclaration","scope":4073,"src":"3836:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4060,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4066,"initialValue":{"arguments":[{"id":4064,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"3881:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4062,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"3863:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:22","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:22","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:22"},{"expression":{"arguments":[{"id":4068,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"3930:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4069,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"3938:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4070,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"3947:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4067,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"3903:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4057,"id":4072,"nodeType":"Return","src":"3896:62:22"}]},"documentation":{"id":4049,"nodeType":"StructuredDocumentation","src":"3578:128:22","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:22","nodeType":"FunctionDefinition","parameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"target","nameLocation":"3747:6:22","nodeType":"VariableDeclaration","scope":4074,"src":"3739:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4050,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4053,"mutability":"mutable","name":"data","nameLocation":"3768:4:22","nodeType":"VariableDeclaration","scope":4074,"src":"3755:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4052,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:22"},"returnParameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4074,"src":"3797:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4055,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:22"},"scope":4181,"src":"3711:254:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4099,"nodeType":"Block","src":"4203:156:22","statements":[{"assignments":[4085,4087],"declarations":[{"constant":false,"id":4085,"mutability":"mutable","name":"success","nameLocation":"4219:7:22","nodeType":"VariableDeclaration","scope":4099,"src":"4214:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4084,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4087,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:22","nodeType":"VariableDeclaration","scope":4099,"src":"4228:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4086,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4092,"initialValue":{"arguments":[{"id":4090,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"4275:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4088,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"4255:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:22","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:22","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:22"},{"expression":{"arguments":[{"id":4094,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"4324:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4095,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"4332:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4096,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"4341:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4093,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"4297:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4083,"id":4098,"nodeType":"Return","src":"4290:62:22"}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"3971:130:22","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":4100,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:22","nodeType":"FunctionDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"target","nameLocation":"4144:6:22","nodeType":"VariableDeclaration","scope":4100,"src":"4136:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4076,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4079,"mutability":"mutable","name":"data","nameLocation":"4165:4:22","nodeType":"VariableDeclaration","scope":4100,"src":"4152:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4078,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:22"},"returnParameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4100,"src":"4189:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4081,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:22"},"scope":4181,"src":"4106:253:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4139,"nodeType":"Block","src":"4783:424:22","statements":[{"condition":{"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:22","subExpression":{"id":4112,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"4798:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4137,"nodeType":"Block","src":"4857:344:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4119,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"5045:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:22","memberName":"length","nodeType":"MemberAccess","src":"5045:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4123,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"5071:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:22","memberName":"code","nodeType":"MemberAccess","src":"5071:11:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:22","memberName":"length","nodeType":"MemberAccess","src":"5071:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4134,"nodeType":"IfStatement","src":"5041:119:22","trueBody":{"id":4133,"nodeType":"Block","src":"5096:64:22","statements":[{"errorCall":{"arguments":[{"id":4130,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"5138:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4129,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"5121:16:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4132,"nodeType":"RevertStatement","src":"5114:31:22"}]}},{"expression":{"id":4135,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"5180:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4111,"id":4136,"nodeType":"Return","src":"5173:17:22"}]},"id":4138,"nodeType":"IfStatement","src":"4793:408:22","trueBody":{"id":4118,"nodeType":"Block","src":"4807:44:22","statements":[{"expression":{"arguments":[{"id":4115,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"4829:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4114,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"4821:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4117,"nodeType":"ExpressionStatement","src":"4821:19:22"}]}}]},"documentation":{"id":4101,"nodeType":"StructuredDocumentation","src":"4365:255:22","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":4140,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:22","nodeType":"FunctionDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"target","nameLocation":"4678:6:22","nodeType":"VariableDeclaration","scope":4140,"src":"4670:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4102,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"success","nameLocation":"4699:7:22","nodeType":"VariableDeclaration","scope":4140,"src":"4694:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4104,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:22","nodeType":"VariableDeclaration","scope":4140,"src":"4716:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4106,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:22"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4140,"src":"4769:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4109,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:22"},"scope":4181,"src":"4625:582:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4161,"nodeType":"Block","src":"5509:122:22","statements":[{"condition":{"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:22","subExpression":{"id":4150,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"5524:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4159,"nodeType":"Block","src":"5583:42:22","statements":[{"expression":{"id":4157,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"5604:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4149,"id":4158,"nodeType":"Return","src":"5597:17:22"}]},"id":4160,"nodeType":"IfStatement","src":"5519:106:22","trueBody":{"id":4156,"nodeType":"Block","src":"5533:44:22","statements":[{"expression":{"arguments":[{"id":4153,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"5555:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4152,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"5547:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4155,"nodeType":"ExpressionStatement","src":"5547:19:22"}]}}]},"documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"5213:189:22","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":4162,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:22","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"success","nameLocation":"5438:7:22","nodeType":"VariableDeclaration","scope":4162,"src":"5433:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4142,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4145,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:22","nodeType":"VariableDeclaration","scope":4162,"src":"5447:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4144,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:22"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4162,"src":"5495:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4147,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:22"},"scope":4181,"src":"5407:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4179,"nodeType":"Block","src":"5798:461:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4168,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"5874:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:22","memberName":"length","nodeType":"MemberAccess","src":"5874:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4177,"nodeType":"Block","src":"6204:49:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4174,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"6225:15:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4176,"nodeType":"RevertStatement","src":"6218:24:22"}]},"id":4178,"nodeType":"IfStatement","src":"5870:383:22","trueBody":{"id":4173,"nodeType":"Block","src":"5897:301:22","statements":[{"AST":{"nativeSrc":"6055:133:22","nodeType":"YulBlock","src":"6055:133:22","statements":[{"nativeSrc":"6073:40:22","nodeType":"YulVariableDeclaration","src":"6073:40:22","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:22","nodeType":"YulIdentifier","src":"6102:10:22"}],"functionName":{"name":"mload","nativeSrc":"6096:5:22","nodeType":"YulIdentifier","src":"6096:5:22"},"nativeSrc":"6096:17:22","nodeType":"YulFunctionCall","src":"6096:17:22"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:22","nodeType":"YulTypedName","src":"6077:15:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:22","nodeType":"YulLiteral","src":"6141:2:22","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:22","nodeType":"YulIdentifier","src":"6145:10:22"}],"functionName":{"name":"add","nativeSrc":"6137:3:22","nodeType":"YulIdentifier","src":"6137:3:22"},"nativeSrc":"6137:19:22","nodeType":"YulFunctionCall","src":"6137:19:22"},{"name":"returndata_size","nativeSrc":"6158:15:22","nodeType":"YulIdentifier","src":"6158:15:22"}],"functionName":{"name":"revert","nativeSrc":"6130:6:22","nodeType":"YulIdentifier","src":"6130:6:22"},"nativeSrc":"6130:44:22","nodeType":"YulFunctionCall","src":"6130:44:22"},"nativeSrc":"6130:44:22","nodeType":"YulExpressionStatement","src":"6130:44:22"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4165,"isOffset":false,"isSlot":false,"src":"6102:10:22","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":false,"src":"6145:10:22","valueSize":1}],"id":4172,"nodeType":"InlineAssembly","src":"6046:142:22"}]}}]},"documentation":{"id":4163,"nodeType":"StructuredDocumentation","src":"5637:101:22","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":4180,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:22","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:22","nodeType":"VariableDeclaration","scope":4180,"src":"5760:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4164,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:22"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[],"src":"5798:0:22"},"scope":4181,"src":"5743:516:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4182,"src":"195:6066:22","usedErrors":[3936,3941,3944],"usedEvents":[]}],"src":"101:6161:22"},"id":22},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4291]},"id":4292,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4183,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4184,"nodeType":"StructuredDocumentation","src":"219:1025:23","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":4291,"linearizedBaseContracts":[4291],"name":"StorageSlot","nameLocation":"1253:11:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4187,"members":[{"constant":false,"id":4186,"mutability":"mutable","name":"value","nameLocation":"1308:5:23","nodeType":"VariableDeclaration","scope":4187,"src":"1300:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4185,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:23","nodeType":"StructDefinition","scope":4291,"src":"1271:49:23","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4190,"members":[{"constant":false,"id":4189,"mutability":"mutable","name":"value","nameLocation":"1360:5:23","nodeType":"VariableDeclaration","scope":4190,"src":"1355:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4188,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:23","nodeType":"StructDefinition","scope":4291,"src":"1326:46:23","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4193,"members":[{"constant":false,"id":4192,"mutability":"mutable","name":"value","nameLocation":"1415:5:23","nodeType":"VariableDeclaration","scope":4193,"src":"1407:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:23","nodeType":"StructDefinition","scope":4291,"src":"1378:49:23","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4196,"members":[{"constant":false,"id":4195,"mutability":"mutable","name":"value","nameLocation":"1470:5:23","nodeType":"VariableDeclaration","scope":4196,"src":"1462:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:23","nodeType":"StructDefinition","scope":4291,"src":"1433:49:23","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4199,"members":[{"constant":false,"id":4198,"mutability":"mutable","name":"value","nameLocation":"1523:5:23","nodeType":"VariableDeclaration","scope":4199,"src":"1516:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4197,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:23","nodeType":"StructDefinition","scope":4291,"src":"1488:47:23","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4202,"members":[{"constant":false,"id":4201,"mutability":"mutable","name":"value","nameLocation":"1574:5:23","nodeType":"VariableDeclaration","scope":4202,"src":"1568:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4200,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:23","nodeType":"StructDefinition","scope":4291,"src":"1541:45:23","visibility":"public"},{"body":{"id":4212,"nodeType":"Block","src":"1768:106:23","statements":[{"AST":{"nativeSrc":"1830:38:23","nodeType":"YulBlock","src":"1830:38:23","statements":[{"nativeSrc":"1844:14:23","nodeType":"YulAssignment","src":"1844:14:23","value":{"name":"slot","nativeSrc":"1854:4:23","nodeType":"YulIdentifier","src":"1854:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:23","nodeType":"YulIdentifier","src":"1844:6:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4209,"isOffset":false,"isSlot":true,"src":"1844:6:23","suffix":"slot","valueSize":1},{"declaration":4205,"isOffset":false,"isSlot":false,"src":"1854:4:23","valueSize":1}],"id":4211,"nodeType":"InlineAssembly","src":"1821:47:23"}]},"documentation":{"id":4203,"nodeType":"StructuredDocumentation","src":"1592:87:23","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4213,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:23","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"slot","nameLocation":"1716:4:23","nodeType":"VariableDeclaration","scope":4213,"src":"1708:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:23"},"returnParameters":{"id":4210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4209,"mutability":"mutable","name":"r","nameLocation":"1765:1:23","nodeType":"VariableDeclaration","scope":4213,"src":"1745:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4187_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4208,"nodeType":"UserDefinedTypeName","pathNode":{"id":4207,"name":"AddressSlot","nameLocations":["1745:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4187,"src":"1745:11:23"},"referencedDeclaration":4187,"src":"1745:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4187_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:23"},"scope":4291,"src":"1684:190:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"2056:106:23","statements":[{"AST":{"nativeSrc":"2118:38:23","nodeType":"YulBlock","src":"2118:38:23","statements":[{"nativeSrc":"2132:14:23","nodeType":"YulAssignment","src":"2132:14:23","value":{"name":"slot","nativeSrc":"2142:4:23","nodeType":"YulIdentifier","src":"2142:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:23","nodeType":"YulIdentifier","src":"2132:6:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4220,"isOffset":false,"isSlot":true,"src":"2132:6:23","suffix":"slot","valueSize":1},{"declaration":4216,"isOffset":false,"isSlot":false,"src":"2142:4:23","valueSize":1}],"id":4222,"nodeType":"InlineAssembly","src":"2109:47:23"}]},"documentation":{"id":4214,"nodeType":"StructuredDocumentation","src":"1880:87:23","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:23","nodeType":"FunctionDefinition","parameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"slot","nameLocation":"2004:4:23","nodeType":"VariableDeclaration","scope":4224,"src":"1996:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:23"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"r","nameLocation":"2053:1:23","nodeType":"VariableDeclaration","scope":4224,"src":"2033:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4190_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4219,"nodeType":"UserDefinedTypeName","pathNode":{"id":4218,"name":"BooleanSlot","nameLocations":["2033:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4190,"src":"2033:11:23"},"referencedDeclaration":4190,"src":"2033:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4190_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:23"},"scope":4291,"src":"1972:190:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4234,"nodeType":"Block","src":"2344:106:23","statements":[{"AST":{"nativeSrc":"2406:38:23","nodeType":"YulBlock","src":"2406:38:23","statements":[{"nativeSrc":"2420:14:23","nodeType":"YulAssignment","src":"2420:14:23","value":{"name":"slot","nativeSrc":"2430:4:23","nodeType":"YulIdentifier","src":"2430:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:23","nodeType":"YulIdentifier","src":"2420:6:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4231,"isOffset":false,"isSlot":true,"src":"2420:6:23","suffix":"slot","valueSize":1},{"declaration":4227,"isOffset":false,"isSlot":false,"src":"2430:4:23","valueSize":1}],"id":4233,"nodeType":"InlineAssembly","src":"2397:47:23"}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"2168:87:23","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":4235,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:23","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"slot","nameLocation":"2292:4:23","nodeType":"VariableDeclaration","scope":4235,"src":"2284:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:23"},"returnParameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4231,"mutability":"mutable","name":"r","nameLocation":"2341:1:23","nodeType":"VariableDeclaration","scope":4235,"src":"2321:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4193_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4230,"nodeType":"UserDefinedTypeName","pathNode":{"id":4229,"name":"Bytes32Slot","nameLocations":["2321:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4193,"src":"2321:11:23"},"referencedDeclaration":4193,"src":"2321:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4193_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:23"},"scope":4291,"src":"2260:190:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"2632:106:23","statements":[{"AST":{"nativeSrc":"2694:38:23","nodeType":"YulBlock","src":"2694:38:23","statements":[{"nativeSrc":"2708:14:23","nodeType":"YulAssignment","src":"2708:14:23","value":{"name":"slot","nativeSrc":"2718:4:23","nodeType":"YulIdentifier","src":"2718:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:23","nodeType":"YulIdentifier","src":"2708:6:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4242,"isOffset":false,"isSlot":true,"src":"2708:6:23","suffix":"slot","valueSize":1},{"declaration":4238,"isOffset":false,"isSlot":false,"src":"2718:4:23","valueSize":1}],"id":4244,"nodeType":"InlineAssembly","src":"2685:47:23"}]},"documentation":{"id":4236,"nodeType":"StructuredDocumentation","src":"2456:87:23","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:23","nodeType":"FunctionDefinition","parameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"slot","nameLocation":"2580:4:23","nodeType":"VariableDeclaration","scope":4246,"src":"2572:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:23"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"r","nameLocation":"2629:1:23","nodeType":"VariableDeclaration","scope":4246,"src":"2609:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4196_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4241,"nodeType":"UserDefinedTypeName","pathNode":{"id":4240,"name":"Uint256Slot","nameLocations":["2609:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4196,"src":"2609:11:23"},"referencedDeclaration":4196,"src":"2609:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4196_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:23"},"scope":4291,"src":"2548:190:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4256,"nodeType":"Block","src":"2917:106:23","statements":[{"AST":{"nativeSrc":"2979:38:23","nodeType":"YulBlock","src":"2979:38:23","statements":[{"nativeSrc":"2993:14:23","nodeType":"YulAssignment","src":"2993:14:23","value":{"name":"slot","nativeSrc":"3003:4:23","nodeType":"YulIdentifier","src":"3003:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:23","nodeType":"YulIdentifier","src":"2993:6:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4253,"isOffset":false,"isSlot":true,"src":"2993:6:23","suffix":"slot","valueSize":1},{"declaration":4249,"isOffset":false,"isSlot":false,"src":"3003:4:23","valueSize":1}],"id":4255,"nodeType":"InlineAssembly","src":"2970:47:23"}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"2744:86:23","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":4257,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:23","nodeType":"FunctionDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"slot","nameLocation":"2866:4:23","nodeType":"VariableDeclaration","scope":4257,"src":"2858:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:23"},"returnParameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"r","nameLocation":"2914:1:23","nodeType":"VariableDeclaration","scope":4257,"src":"2895:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4199_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4252,"nodeType":"UserDefinedTypeName","pathNode":{"id":4251,"name":"StringSlot","nameLocations":["2895:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":4199,"src":"2895:10:23"},"referencedDeclaration":4199,"src":"2895:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4199_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:23"},"scope":4291,"src":"2835:188:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4267,"nodeType":"Block","src":"3225:112:23","statements":[{"AST":{"nativeSrc":"3287:44:23","nodeType":"YulBlock","src":"3287:44:23","statements":[{"nativeSrc":"3301:20:23","nodeType":"YulAssignment","src":"3301:20:23","value":{"name":"store.slot","nativeSrc":"3311:10:23","nodeType":"YulIdentifier","src":"3311:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:23","nodeType":"YulIdentifier","src":"3301:6:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4264,"isOffset":false,"isSlot":true,"src":"3301:6:23","suffix":"slot","valueSize":1},{"declaration":4260,"isOffset":false,"isSlot":true,"src":"3311:10:23","suffix":"slot","valueSize":1}],"id":4266,"nodeType":"InlineAssembly","src":"3278:53:23"}]},"documentation":{"id":4258,"nodeType":"StructuredDocumentation","src":"3029:101:23","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:23","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"store","nameLocation":"3173:5:23","nodeType":"VariableDeclaration","scope":4268,"src":"3158:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4259,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:23"},"returnParameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"mutability":"mutable","name":"r","nameLocation":"3222:1:23","nodeType":"VariableDeclaration","scope":4268,"src":"3203:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4199_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4263,"nodeType":"UserDefinedTypeName","pathNode":{"id":4262,"name":"StringSlot","nameLocations":["3203:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":4199,"src":"3203:10:23"},"referencedDeclaration":4199,"src":"3203:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4199_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:23"},"scope":4291,"src":"3135:202:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4278,"nodeType":"Block","src":"3513:106:23","statements":[{"AST":{"nativeSrc":"3575:38:23","nodeType":"YulBlock","src":"3575:38:23","statements":[{"nativeSrc":"3589:14:23","nodeType":"YulAssignment","src":"3589:14:23","value":{"name":"slot","nativeSrc":"3599:4:23","nodeType":"YulIdentifier","src":"3599:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:23","nodeType":"YulIdentifier","src":"3589:6:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4275,"isOffset":false,"isSlot":true,"src":"3589:6:23","suffix":"slot","valueSize":1},{"declaration":4271,"isOffset":false,"isSlot":false,"src":"3599:4:23","valueSize":1}],"id":4277,"nodeType":"InlineAssembly","src":"3566:47:23"}]},"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"3343:85:23","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:23","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"slot","nameLocation":"3463:4:23","nodeType":"VariableDeclaration","scope":4279,"src":"3455:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:23"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"r","nameLocation":"3510:1:23","nodeType":"VariableDeclaration","scope":4279,"src":"3492:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4202_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4274,"nodeType":"UserDefinedTypeName","pathNode":{"id":4273,"name":"BytesSlot","nameLocations":["3492:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":4202,"src":"3492:9:23"},"referencedDeclaration":4202,"src":"3492:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4202_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:23"},"scope":4291,"src":"3433:186:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4289,"nodeType":"Block","src":"3816:112:23","statements":[{"AST":{"nativeSrc":"3878:44:23","nodeType":"YulBlock","src":"3878:44:23","statements":[{"nativeSrc":"3892:20:23","nodeType":"YulAssignment","src":"3892:20:23","value":{"name":"store.slot","nativeSrc":"3902:10:23","nodeType":"YulIdentifier","src":"3902:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:23","nodeType":"YulIdentifier","src":"3892:6:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4286,"isOffset":false,"isSlot":true,"src":"3892:6:23","suffix":"slot","valueSize":1},{"declaration":4282,"isOffset":false,"isSlot":true,"src":"3902:10:23","suffix":"slot","valueSize":1}],"id":4288,"nodeType":"InlineAssembly","src":"3869:53:23"}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"3625:99:23","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4290,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:23","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"store","nameLocation":"3765:5:23","nodeType":"VariableDeclaration","scope":4290,"src":"3751:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4281,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:23"},"returnParameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"r","nameLocation":"3813:1:23","nodeType":"VariableDeclaration","scope":4290,"src":"3795:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4202_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4285,"nodeType":"UserDefinedTypeName","pathNode":{"id":4284,"name":"BytesSlot","nameLocations":["3795:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":4202,"src":"3795:9:23"},"referencedDeclaration":4202,"src":"3795:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4202_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:23"},"scope":4291,"src":"3729:199:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4292,"src":"1245:2685:23","usedErrors":[],"usedEvents":[]}],"src":"193:3738:23"},"id":23},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5612],"SignedMath":[7472],"Strings":[4546]},"id":4547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4293,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4547,"sourceUnit":5613,"src":"127:37:24","symbolAliases":[{"foreign":{"id":4294,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"135:4:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4547,"sourceUnit":7473,"src":"165:49:24","symbolAliases":[{"foreign":{"id":4296,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"173:10:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4298,"nodeType":"StructuredDocumentation","src":"216:34:24","text":" @dev String operations."},"fullyImplemented":true,"id":4546,"linearizedBaseContracts":[4546],"name":"Strings","nameLocation":"259:7:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4301,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:24","nodeType":"VariableDeclaration","scope":4546,"src":"273:56:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4299,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4304,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:24","nodeType":"VariableDeclaration","scope":4546,"src":"335:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4302,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:24","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":4305,"nodeType":"StructuredDocumentation","src":"384:81:24","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4311,"name":"StringsInsufficientHexLength","nameLocation":"476:28:24","nodeType":"ErrorDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"value","nameLocation":"513:5:24","nodeType":"VariableDeclaration","scope":4311,"src":"505:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4309,"mutability":"mutable","name":"length","nameLocation":"528:6:24","nodeType":"VariableDeclaration","scope":4311,"src":"520:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:24"},"src":"470:66:24"},{"body":{"id":4358,"nodeType":"Block","src":"708:627:24","statements":[{"id":4357,"nodeType":"UncheckedBlock","src":"718:611:24","statements":[{"assignments":[4320],"declarations":[{"constant":false,"id":4320,"mutability":"mutable","name":"length","nameLocation":"750:6:24","nodeType":"VariableDeclaration","scope":4357,"src":"742:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4327,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"770:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4321,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"759:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5612_$","typeString":"type(library Math)"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:24","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5432,"src":"759:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:24"},{"assignments":[4329],"declarations":[{"constant":false,"id":4329,"mutability":"mutable","name":"buffer","nameLocation":"808:6:24","nodeType":"VariableDeclaration","scope":4357,"src":"794:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4328,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4334,"initialValue":{"arguments":[{"id":4332,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"828:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4330,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:24"},{"assignments":[4336],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"ptr","nameLocation":"857:3:24","nodeType":"VariableDeclaration","scope":4357,"src":"849:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4337,"nodeType":"VariableDeclarationStatement","src":"849:11:24"},{"AST":{"nativeSrc":"930:67:24","nodeType":"YulBlock","src":"930:67:24","statements":[{"nativeSrc":"948:35:24","nodeType":"YulAssignment","src":"948:35:24","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:24","nodeType":"YulIdentifier","src":"959:6:24"},{"arguments":[{"kind":"number","nativeSrc":"971:2:24","nodeType":"YulLiteral","src":"971:2:24","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:24","nodeType":"YulIdentifier","src":"975:6:24"}],"functionName":{"name":"add","nativeSrc":"967:3:24","nodeType":"YulIdentifier","src":"967:3:24"},"nativeSrc":"967:15:24","nodeType":"YulFunctionCall","src":"967:15:24"}],"functionName":{"name":"add","nativeSrc":"955:3:24","nodeType":"YulIdentifier","src":"955:3:24"},"nativeSrc":"955:28:24","nodeType":"YulFunctionCall","src":"955:28:24"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:24","nodeType":"YulIdentifier","src":"948:3:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4329,"isOffset":false,"isSlot":false,"src":"959:6:24","valueSize":1},{"declaration":4320,"isOffset":false,"isSlot":false,"src":"975:6:24","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"948:3:24","valueSize":1}],"id":4338,"nodeType":"InlineAssembly","src":"921:76:24"},{"body":{"id":4353,"nodeType":"Block","src":"1023:269:24","statements":[{"expression":{"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:24","subExpression":{"id":4340,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"1041:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4342,"nodeType":"ExpressionStatement","src":"1041:5:24"},{"AST":{"nativeSrc":"1124:86:24","nodeType":"YulBlock","src":"1124:86:24","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:24","nodeType":"YulIdentifier","src":"1154:3:24"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:24","nodeType":"YulIdentifier","src":"1168:5:24"},{"kind":"number","nativeSrc":"1175:2:24","nodeType":"YulLiteral","src":"1175:2:24","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:24","nodeType":"YulIdentifier","src":"1164:3:24"},"nativeSrc":"1164:14:24","nodeType":"YulFunctionCall","src":"1164:14:24"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:24","nodeType":"YulIdentifier","src":"1180:10:24"}],"functionName":{"name":"byte","nativeSrc":"1159:4:24","nodeType":"YulIdentifier","src":"1159:4:24"},"nativeSrc":"1159:32:24","nodeType":"YulFunctionCall","src":"1159:32:24"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:24","nodeType":"YulIdentifier","src":"1146:7:24"},"nativeSrc":"1146:46:24","nodeType":"YulFunctionCall","src":"1146:46:24"},"nativeSrc":"1146:46:24","nodeType":"YulExpressionStatement","src":"1146:46:24"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4301,"isOffset":false,"isSlot":false,"src":"1180:10:24","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"1154:3:24","valueSize":1},{"declaration":4314,"isOffset":false,"isSlot":false,"src":"1168:5:24","valueSize":1}],"id":4343,"nodeType":"InlineAssembly","src":"1115:95:24"},{"expression":{"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"1227:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4347,"nodeType":"ExpressionStatement","src":"1227:11:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"1260:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4352,"nodeType":"IfStatement","src":"1256:21:24","trueBody":{"id":4351,"nodeType":"Break","src":"1272:5:24"}}]},"condition":{"hexValue":"74727565","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4354,"nodeType":"WhileStatement","src":"1010:282:24"},{"expression":{"id":4355,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"1312:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4318,"id":4356,"nodeType":"Return","src":"1305:13:24"}]}]},"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"542:90:24","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4359,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:24","nodeType":"FunctionDefinition","parameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"value","nameLocation":"663:5:24","nodeType":"VariableDeclaration","scope":4359,"src":"655:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:24"},"returnParameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4359,"src":"693:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4316,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:24"},"scope":4546,"src":"637:698:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4384,"nodeType":"Block","src":"1511:92:24","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"1542:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:24","trueExpression":{"hexValue":"2d","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"1588:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4377,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"1573:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7472_$","typeString":"type(library SignedMath)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:24","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"1573:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4376,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"1564:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4367,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:24","typeDescriptions":{}}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:24","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:24","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4366,"id":4383,"nodeType":"Return","src":"1521:75:24"}]},"documentation":{"id":4360,"nodeType":"StructuredDocumentation","src":"1341:89:24","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4385,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:24","nodeType":"FunctionDefinition","parameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4362,"mutability":"mutable","name":"value","nameLocation":"1466:5:24","nodeType":"VariableDeclaration","scope":4385,"src":"1459:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4361,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:24"},"returnParameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4385,"src":"1496:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4364,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:24"},"scope":4546,"src":"1435:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4404,"nodeType":"Block","src":"1782:100:24","statements":[{"id":4403,"nodeType":"UncheckedBlock","src":"1792:84:24","statements":[{"expression":{"arguments":[{"id":4394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"1835:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"1854:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4395,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"1842:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5612_$","typeString":"type(library Math)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:24","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5554,"src":"1842:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4393,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4405,4488,4508],"referencedDeclaration":4488,"src":"1823:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4392,"id":4402,"nodeType":"Return","src":"1816:49:24"}]}]},"documentation":{"id":4386,"nodeType":"StructuredDocumentation","src":"1609:94:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4405,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:24","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"value","nameLocation":"1737:5:24","nodeType":"VariableDeclaration","scope":4405,"src":"1729:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:24"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4405,"src":"1767:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4390,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:24"},"scope":4546,"src":"1708:174:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4487,"nodeType":"Block","src":"2095:435:24","statements":[{"assignments":[4416],"declarations":[{"constant":false,"id":4416,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:24","nodeType":"VariableDeclaration","scope":4487,"src":"2105:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4418,"initialValue":{"id":4417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"2126:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:24"},{"assignments":[4420],"declarations":[{"constant":false,"id":4420,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:24","nodeType":"VariableDeclaration","scope":4487,"src":"2141:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4419,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4429,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4424,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"2177:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4421,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:24"},{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4430,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"2198:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4432,"indexExpression":{"hexValue":"30","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4435,"nodeType":"ExpressionStatement","src":"2198:15:24"},{"expression":{"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4436,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"2223:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4438,"indexExpression":{"hexValue":"31","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4441,"nodeType":"ExpressionStatement","src":"2223:15:24"},{"body":{"id":4470,"nodeType":"Block","src":"2293:95:24","statements":[{"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4456,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"2307:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4458,"indexExpression":{"id":4457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"2314:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4459,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"2319:10:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4463,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"2330:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4465,"nodeType":"ExpressionStatement","src":"2307:40:24"},{"expression":{"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4466,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"2361:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"nodeType":"ExpressionStatement","src":"2361:16:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"2281:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4471,"initializationExpression":{"assignments":[4443],"declarations":[{"constant":false,"id":4443,"mutability":"mutable","name":"i","nameLocation":"2261:1:24","nodeType":"VariableDeclaration","scope":4471,"src":"2253:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4449,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4445,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"2269:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:24"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:24","subExpression":{"id":4453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"2290:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4455,"nodeType":"ExpressionStatement","src":"2288:3:24"},"nodeType":"ForStatement","src":"2248:140:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4472,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"2401:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4481,"nodeType":"IfStatement","src":"2397:96:24","trueBody":{"id":4480,"nodeType":"Block","src":"2418:75:24","statements":[{"errorCall":{"arguments":[{"id":4476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"2468:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4477,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"2475:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4475,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"2439:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4479,"nodeType":"RevertStatement","src":"2432:50:24"}]}},{"expression":{"arguments":[{"id":4484,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"2516:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4482,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:24","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4414,"id":4486,"nodeType":"Return","src":"2502:21:24"}]},"documentation":{"id":4406,"nodeType":"StructuredDocumentation","src":"1888:112:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4488,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:24","nodeType":"FunctionDefinition","parameters":{"id":4411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"value","nameLocation":"2034:5:24","nodeType":"VariableDeclaration","scope":4488,"src":"2026:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4410,"mutability":"mutable","name":"length","nameLocation":"2049:6:24","nodeType":"VariableDeclaration","scope":4488,"src":"2041:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:24"},"returnParameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4488,"src":"2080:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4412,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:24"},"scope":4546,"src":"2005:525:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4507,"nodeType":"Block","src":"2762:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4501,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"2807:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4499,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:24","typeDescriptions":{}}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:24","typeDescriptions":{}}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4504,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"2815:14:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4496,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4405,4488,4508],"referencedDeclaration":4488,"src":"2779:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4495,"id":4506,"nodeType":"Return","src":"2772:58:24"}]},"documentation":{"id":4489,"nodeType":"StructuredDocumentation","src":"2536:148:24","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4508,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:24","nodeType":"FunctionDefinition","parameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"addr","nameLocation":"2718:4:24","nodeType":"VariableDeclaration","scope":4508,"src":"2710:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4490,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:24"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4508,"src":"2747:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4493,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:24"},"scope":4546,"src":"2689:148:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4544,"nodeType":"Block","src":"2992:104:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4520,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"3015:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4518,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:24","typeDescriptions":{}}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:24","memberName":"length","nodeType":"MemberAccess","src":"3009:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"3034:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4523,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:24","typeDescriptions":{}}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:24","memberName":"length","nodeType":"MemberAccess","src":"3028:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"3063:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4530,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:24","typeDescriptions":{}}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4529,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4538,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"3086:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4536,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:24","typeDescriptions":{}}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4535,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4517,"id":4543,"nodeType":"Return","src":"3002:87:24"}]},"documentation":{"id":4509,"nodeType":"StructuredDocumentation","src":"2843:66:24","text":" @dev Returns true if the two strings are equal."},"id":4545,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:24","nodeType":"FunctionDefinition","parameters":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4511,"mutability":"mutable","name":"a","nameLocation":"2943:1:24","nodeType":"VariableDeclaration","scope":4545,"src":"2929:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4510,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4513,"mutability":"mutable","name":"b","nameLocation":"2960:1:24","nodeType":"VariableDeclaration","scope":4545,"src":"2946:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4512,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:24"},"returnParameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4545,"src":"2986:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4515,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:24"},"scope":4546,"src":"2914:182:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4547,"src":"251:2847:24","usedErrors":[4311],"usedEvents":[]}],"src":"101:2998:24"},"id":24},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4558]},"id":4559,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4548,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4549,"nodeType":"StructuredDocumentation","src":"141:279:25","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4558,"linearizedBaseContracts":[4558],"name":"IERC165","nameLocation":"431:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"445:340:25","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4557,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:25","nodeType":"FunctionDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:25","nodeType":"VariableDeclaration","scope":4557,"src":"817:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4551,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:25"},"returnParameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4557,"src":"860:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4554,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:25"},"scope":4558,"src":"790:76:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4559,"src":"421:447:25","usedErrors":[],"usedEvents":[]}],"src":"115:754:25"},"id":25},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5612]},"id":5613,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4560,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4561,"nodeType":"StructuredDocumentation","src":"129:73:26","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5612,"linearizedBaseContracts":[5612],"name":"Math","nameLocation":"211:4:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"222:50:26","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":4564,"name":"MathOverflowedMulDiv","nameLocation":"283:20:26","nodeType":"ErrorDefinition","parameters":{"id":4563,"nodeType":"ParameterList","parameters":[],"src":"303:2:26"},"src":"277:29:26"},{"canonicalName":"Math.Rounding","id":4569,"members":[{"id":4565,"name":"Floor","nameLocation":"336:5:26","nodeType":"EnumValue","src":"336:5:26"},{"id":4566,"name":"Ceil","nameLocation":"379:4:26","nodeType":"EnumValue","src":"379:4:26"},{"id":4567,"name":"Trunc","nameLocation":"421:5:26","nodeType":"EnumValue","src":"421:5:26"},{"id":4568,"name":"Expand","nameLocation":"451:6:26","nodeType":"EnumValue","src":"451:6:26"}],"name":"Rounding","nameLocation":"317:8:26","nodeType":"EnumDefinition","src":"312:169:26"},{"body":{"id":4600,"nodeType":"Block","src":"661:140:26","statements":[{"id":4599,"nodeType":"UncheckedBlock","src":"671:124:26","statements":[{"assignments":[4582],"declarations":[{"constant":false,"id":4582,"mutability":"mutable","name":"c","nameLocation":"703:1:26","nodeType":"VariableDeclaration","scope":4599,"src":"695:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4586,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"707:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"711:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"730:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"734:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4594,"nodeType":"IfStatement","src":"726:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4580,"id":4593,"nodeType":"Return","src":"737:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4596,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"782:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4580,"id":4598,"nodeType":"Return","src":"768:16:26"}]}]},"documentation":{"id":4570,"nodeType":"StructuredDocumentation","src":"487:93:26","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":4601,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:26","nodeType":"FunctionDefinition","parameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4572,"mutability":"mutable","name":"a","nameLocation":"609:1:26","nodeType":"VariableDeclaration","scope":4601,"src":"601:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4574,"mutability":"mutable","name":"b","nameLocation":"620:1:26","nodeType":"VariableDeclaration","scope":4601,"src":"612:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:26"},"returnParameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4601,"src":"646:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4576,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4601,"src":"652:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:26"},"scope":5612,"src":"585:216:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4628,"nodeType":"Block","src":"984:113:26","statements":[{"id":4627,"nodeType":"UncheckedBlock","src":"994:97:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"1022:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"1026:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4620,"nodeType":"IfStatement","src":"1018:28:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4612,"id":4619,"nodeType":"Return","src":"1029:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"1074:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"1078:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4612,"id":4626,"nodeType":"Return","src":"1060:20:26"}]}]},"documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"807:96:26","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":4629,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:26","nodeType":"FunctionDefinition","parameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"a","nameLocation":"932:1:26","nodeType":"VariableDeclaration","scope":4629,"src":"924:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"b","nameLocation":"943:1:26","nodeType":"VariableDeclaration","scope":4629,"src":"935:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:26"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4629,"src":"969:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4608,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4629,"src":"975:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4610,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:26"},"scope":5612,"src":"908:189:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4670,"nodeType":"Block","src":"1283:417:26","statements":[{"id":4669,"nodeType":"UncheckedBlock","src":"1293:401:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"1551:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4648,"nodeType":"IfStatement","src":"1547:28:26","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4640,"id":4647,"nodeType":"Return","src":"1559:16:26"}},{"assignments":[4650],"declarations":[{"constant":false,"id":4650,"mutability":"mutable","name":"c","nameLocation":"1597:1:26","nodeType":"VariableDeclaration","scope":4669,"src":"1589:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4654,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"1601:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4652,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"1605:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"1624:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"1628:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"1633:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4664,"nodeType":"IfStatement","src":"1620:33:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4640,"id":4663,"nodeType":"Return","src":"1636:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4666,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"1681:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4640,"id":4668,"nodeType":"Return","src":"1667:16:26"}]}]},"documentation":{"id":4630,"nodeType":"StructuredDocumentation","src":"1103:99:26","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":4671,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:26","nodeType":"FunctionDefinition","parameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"a","nameLocation":"1231:1:26","nodeType":"VariableDeclaration","scope":4671,"src":"1223:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4634,"mutability":"mutable","name":"b","nameLocation":"1242:1:26","nodeType":"VariableDeclaration","scope":4671,"src":"1234:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:26"},"returnParameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4671,"src":"1268:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4636,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4671,"src":"1274:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:26"},"scope":5612,"src":"1207:493:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4698,"nodeType":"Block","src":"1887:114:26","statements":[{"id":4697,"nodeType":"UncheckedBlock","src":"1897:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"1925:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4690,"nodeType":"IfStatement","src":"1921:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4682,"id":4689,"nodeType":"Return","src":"1933:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"1978:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"1982:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4682,"id":4696,"nodeType":"Return","src":"1964:20:26"}]}]},"documentation":{"id":4672,"nodeType":"StructuredDocumentation","src":"1706:100:26","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":4699,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:26","nodeType":"FunctionDefinition","parameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"a","nameLocation":"1835:1:26","nodeType":"VariableDeclaration","scope":4699,"src":"1827:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4676,"mutability":"mutable","name":"b","nameLocation":"1846:1:26","nodeType":"VariableDeclaration","scope":4699,"src":"1838:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:26"},"returnParameters":{"id":4682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4699,"src":"1872:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4678,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4699,"src":"1878:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:26"},"scope":5612,"src":"1811:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4726,"nodeType":"Block","src":"2198:114:26","statements":[{"id":4725,"nodeType":"UncheckedBlock","src":"2208:98:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"2236:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"2232:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4710,"id":4717,"nodeType":"Return","src":"2244:17:26"}},{"expression":{"components":[{"hexValue":"74727565","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"2289:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4721,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"2293:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4710,"id":4724,"nodeType":"Return","src":"2275:20:26"}]}]},"documentation":{"id":4700,"nodeType":"StructuredDocumentation","src":"2007:110:26","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":4727,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:26","nodeType":"FunctionDefinition","parameters":{"id":4705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"mutability":"mutable","name":"a","nameLocation":"2146:1:26","nodeType":"VariableDeclaration","scope":4727,"src":"2138:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4704,"mutability":"mutable","name":"b","nameLocation":"2157:1:26","nodeType":"VariableDeclaration","scope":4727,"src":"2149:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:26"},"returnParameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4727,"src":"2183:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4706,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4727,"src":"2189:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:26"},"scope":5612,"src":"2122:190:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4744,"nodeType":"Block","src":"2449:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"2466:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4738,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"2470:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4741,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"2478:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:26","trueExpression":{"id":4740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"2474:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4736,"id":4743,"nodeType":"Return","src":"2459:20:26"}]},"documentation":{"id":4728,"nodeType":"StructuredDocumentation","src":"2318:59:26","text":" @dev Returns the largest of two numbers."},"id":4745,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:26","nodeType":"FunctionDefinition","parameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4730,"mutability":"mutable","name":"a","nameLocation":"2403:1:26","nodeType":"VariableDeclaration","scope":4745,"src":"2395:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"b","nameLocation":"2414:1:26","nodeType":"VariableDeclaration","scope":4745,"src":"2406:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:26"},"returnParameters":{"id":4736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4745,"src":"2440:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:26"},"scope":5612,"src":"2382:104:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4762,"nodeType":"Block","src":"2624:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"2641:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4756,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"2645:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4759,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"2653:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:26","trueExpression":{"id":4758,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"2649:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4754,"id":4761,"nodeType":"Return","src":"2634:20:26"}]},"documentation":{"id":4746,"nodeType":"StructuredDocumentation","src":"2492:60:26","text":" @dev Returns the smallest of two numbers."},"id":4763,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:26","nodeType":"FunctionDefinition","parameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"a","nameLocation":"2578:1:26","nodeType":"VariableDeclaration","scope":4763,"src":"2570:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4750,"mutability":"mutable","name":"b","nameLocation":"2589:1:26","nodeType":"VariableDeclaration","scope":4763,"src":"2581:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:26"},"returnParameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4763,"src":"2615:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:26"},"scope":5612,"src":"2557:104:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4785,"nodeType":"Block","src":"2845:82:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"2900:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4774,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"2904:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4777,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"2910:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4778,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"2914:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4772,"id":4784,"nodeType":"Return","src":"2892:28:26"}]},"documentation":{"id":4764,"nodeType":"StructuredDocumentation","src":"2667:102:26","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4786,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:26","nodeType":"FunctionDefinition","parameters":{"id":4769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"a","nameLocation":"2799:1:26","nodeType":"VariableDeclaration","scope":4786,"src":"2791:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4768,"mutability":"mutable","name":"b","nameLocation":"2810:1:26","nodeType":"VariableDeclaration","scope":4786,"src":"2802:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:26"},"returnParameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4786,"src":"2836:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:26"},"scope":5612,"src":"2774:153:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4819,"nodeType":"Block","src":"3219:260:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"3233:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4804,"nodeType":"IfStatement","src":"3229:127:26","trueBody":{"id":4803,"nodeType":"Block","src":"3241:115:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"3340:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4800,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"3344:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4795,"id":4802,"nodeType":"Return","src":"3333:12:26"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"3444:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"3458:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4813,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"3467:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:26","trueExpression":{"hexValue":"30","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4795,"id":4818,"nodeType":"Return","src":"3437:35:26"}]},"documentation":{"id":4787,"nodeType":"StructuredDocumentation","src":"2933:210:26","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:26","nodeType":"FunctionDefinition","parameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"a","nameLocation":"3173:1:26","nodeType":"VariableDeclaration","scope":4820,"src":"3165:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4791,"mutability":"mutable","name":"b","nameLocation":"3184:1:26","nodeType":"VariableDeclaration","scope":4820,"src":"3176:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:26"},"returnParameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4820,"src":"3210:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:26"},"scope":5612,"src":"3148:331:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4945,"nodeType":"Block","src":"3901:4018:26","statements":[{"id":4944,"nodeType":"UncheckedBlock","src":"3911:4002:26","statements":[{"assignments":[4833],"declarations":[{"constant":false,"id":4833,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:26","nodeType":"VariableDeclaration","scope":4944,"src":"4232:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4837,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4834,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"4248:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4835,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"4252:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:26"},{"assignments":[4839],"declarations":[{"constant":false,"id":4839,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:26","nodeType":"VariableDeclaration","scope":4944,"src":"4312:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4840,"nodeType":"VariableDeclarationStatement","src":"4312:13:26"},{"AST":{"nativeSrc":"4392:122:26","nodeType":"YulBlock","src":"4392:122:26","statements":[{"nativeSrc":"4410:30:26","nodeType":"YulVariableDeclaration","src":"4410:30:26","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:26","nodeType":"YulIdentifier","src":"4427:1:26"},{"name":"y","nativeSrc":"4430:1:26","nodeType":"YulIdentifier","src":"4430:1:26"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:26","nodeType":"YulLiteral","src":"4437:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:26","nodeType":"YulIdentifier","src":"4433:3:26"},"nativeSrc":"4433:6:26","nodeType":"YulFunctionCall","src":"4433:6:26"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:26","nodeType":"YulIdentifier","src":"4420:6:26"},"nativeSrc":"4420:20:26","nodeType":"YulFunctionCall","src":"4420:20:26"},"variables":[{"name":"mm","nativeSrc":"4414:2:26","nodeType":"YulTypedName","src":"4414:2:26","type":""}]},{"nativeSrc":"4457:43:26","nodeType":"YulAssignment","src":"4457:43:26","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:26","nodeType":"YulIdentifier","src":"4474:2:26"},{"name":"prod0","nativeSrc":"4478:5:26","nodeType":"YulIdentifier","src":"4478:5:26"}],"functionName":{"name":"sub","nativeSrc":"4470:3:26","nodeType":"YulIdentifier","src":"4470:3:26"},"nativeSrc":"4470:14:26","nodeType":"YulFunctionCall","src":"4470:14:26"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:26","nodeType":"YulIdentifier","src":"4489:2:26"},{"name":"prod0","nativeSrc":"4493:5:26","nodeType":"YulIdentifier","src":"4493:5:26"}],"functionName":{"name":"lt","nativeSrc":"4486:2:26","nodeType":"YulIdentifier","src":"4486:2:26"},"nativeSrc":"4486:13:26","nodeType":"YulFunctionCall","src":"4486:13:26"}],"functionName":{"name":"sub","nativeSrc":"4466:3:26","nodeType":"YulIdentifier","src":"4466:3:26"},"nativeSrc":"4466:34:26","nodeType":"YulFunctionCall","src":"4466:34:26"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:26","nodeType":"YulIdentifier","src":"4457:5:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4833,"isOffset":false,"isSlot":false,"src":"4478:5:26","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"4493:5:26","valueSize":1},{"declaration":4839,"isOffset":false,"isSlot":false,"src":"4457:5:26","valueSize":1},{"declaration":4823,"isOffset":false,"isSlot":false,"src":"4427:1:26","valueSize":1},{"declaration":4825,"isOffset":false,"isSlot":false,"src":"4430:1:26","valueSize":1}],"id":4841,"nodeType":"InlineAssembly","src":"4383:131:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"4595:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4850,"nodeType":"IfStatement","src":"4591:368:26","trueBody":{"id":4849,"nodeType":"Block","src":"4607:352:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"4925:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4846,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"4933:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4831,"id":4848,"nodeType":"Return","src":"4918:26:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4851,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"5065:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4852,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"5080:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"nodeType":"IfStatement","src":"5061:88:26","trueBody":{"id":4857,"nodeType":"Block","src":"5087:62:26","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4854,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"5112:20:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4856,"nodeType":"RevertStatement","src":"5105:29:26"}]}},{"assignments":[4860],"declarations":[{"constant":false,"id":4860,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:26","nodeType":"VariableDeclaration","scope":4944,"src":"5404:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4861,"nodeType":"VariableDeclarationStatement","src":"5404:17:26"},{"AST":{"nativeSrc":"5444:291:26","nodeType":"YulBlock","src":"5444:291:26","statements":[{"nativeSrc":"5513:38:26","nodeType":"YulAssignment","src":"5513:38:26","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:26","nodeType":"YulIdentifier","src":"5533:1:26"},{"name":"y","nativeSrc":"5536:1:26","nodeType":"YulIdentifier","src":"5536:1:26"},{"name":"denominator","nativeSrc":"5539:11:26","nodeType":"YulIdentifier","src":"5539:11:26"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:26","nodeType":"YulIdentifier","src":"5526:6:26"},"nativeSrc":"5526:25:26","nodeType":"YulFunctionCall","src":"5526:25:26"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:26","nodeType":"YulIdentifier","src":"5513:9:26"}]},{"nativeSrc":"5633:41:26","nodeType":"YulAssignment","src":"5633:41:26","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:26","nodeType":"YulIdentifier","src":"5646:5:26"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:26","nodeType":"YulIdentifier","src":"5656:9:26"},{"name":"prod0","nativeSrc":"5667:5:26","nodeType":"YulIdentifier","src":"5667:5:26"}],"functionName":{"name":"gt","nativeSrc":"5653:2:26","nodeType":"YulIdentifier","src":"5653:2:26"},"nativeSrc":"5653:20:26","nodeType":"YulFunctionCall","src":"5653:20:26"}],"functionName":{"name":"sub","nativeSrc":"5642:3:26","nodeType":"YulIdentifier","src":"5642:3:26"},"nativeSrc":"5642:32:26","nodeType":"YulFunctionCall","src":"5642:32:26"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:26","nodeType":"YulIdentifier","src":"5633:5:26"}]},{"nativeSrc":"5691:30:26","nodeType":"YulAssignment","src":"5691:30:26","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:26","nodeType":"YulIdentifier","src":"5704:5:26"},{"name":"remainder","nativeSrc":"5711:9:26","nodeType":"YulIdentifier","src":"5711:9:26"}],"functionName":{"name":"sub","nativeSrc":"5700:3:26","nodeType":"YulIdentifier","src":"5700:3:26"},"nativeSrc":"5700:21:26","nodeType":"YulFunctionCall","src":"5700:21:26"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:26","nodeType":"YulIdentifier","src":"5691:5:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4827,"isOffset":false,"isSlot":false,"src":"5539:11:26","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"5667:5:26","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"5691:5:26","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"5704:5:26","valueSize":1},{"declaration":4839,"isOffset":false,"isSlot":false,"src":"5633:5:26","valueSize":1},{"declaration":4839,"isOffset":false,"isSlot":false,"src":"5646:5:26","valueSize":1},{"declaration":4860,"isOffset":false,"isSlot":false,"src":"5513:9:26","valueSize":1},{"declaration":4860,"isOffset":false,"isSlot":false,"src":"5656:9:26","valueSize":1},{"declaration":4860,"isOffset":false,"isSlot":false,"src":"5711:9:26","valueSize":1},{"declaration":4823,"isOffset":false,"isSlot":false,"src":"5533:1:26","valueSize":1},{"declaration":4825,"isOffset":false,"isSlot":false,"src":"5536:1:26","valueSize":1}],"id":4862,"nodeType":"InlineAssembly","src":"5435:300:26"},{"assignments":[4864],"declarations":[{"constant":false,"id":4864,"mutability":"mutable","name":"twos","nameLocation":"5947:4:26","nodeType":"VariableDeclaration","scope":4944,"src":"5939:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4871,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4865,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"5954:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4867,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"5973:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:26"},{"AST":{"nativeSrc":"6008:362:26","nodeType":"YulBlock","src":"6008:362:26","statements":[{"nativeSrc":"6073:37:26","nodeType":"YulAssignment","src":"6073:37:26","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:26","nodeType":"YulIdentifier","src":"6092:11:26"},{"name":"twos","nativeSrc":"6105:4:26","nodeType":"YulIdentifier","src":"6105:4:26"}],"functionName":{"name":"div","nativeSrc":"6088:3:26","nodeType":"YulIdentifier","src":"6088:3:26"},"nativeSrc":"6088:22:26","nodeType":"YulFunctionCall","src":"6088:22:26"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:26","nodeType":"YulIdentifier","src":"6073:11:26"}]},{"nativeSrc":"6177:25:26","nodeType":"YulAssignment","src":"6177:25:26","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:26","nodeType":"YulIdentifier","src":"6190:5:26"},{"name":"twos","nativeSrc":"6197:4:26","nodeType":"YulIdentifier","src":"6197:4:26"}],"functionName":{"name":"div","nativeSrc":"6186:3:26","nodeType":"YulIdentifier","src":"6186:3:26"},"nativeSrc":"6186:16:26","nodeType":"YulFunctionCall","src":"6186:16:26"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:26","nodeType":"YulIdentifier","src":"6177:5:26"}]},{"nativeSrc":"6317:39:26","nodeType":"YulAssignment","src":"6317:39:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:26","nodeType":"YulLiteral","src":"6337:1:26","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:26","nodeType":"YulIdentifier","src":"6340:4:26"}],"functionName":{"name":"sub","nativeSrc":"6333:3:26","nodeType":"YulIdentifier","src":"6333:3:26"},"nativeSrc":"6333:12:26","nodeType":"YulFunctionCall","src":"6333:12:26"},{"name":"twos","nativeSrc":"6347:4:26","nodeType":"YulIdentifier","src":"6347:4:26"}],"functionName":{"name":"div","nativeSrc":"6329:3:26","nodeType":"YulIdentifier","src":"6329:3:26"},"nativeSrc":"6329:23:26","nodeType":"YulFunctionCall","src":"6329:23:26"},{"kind":"number","nativeSrc":"6354:1:26","nodeType":"YulLiteral","src":"6354:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:26","nodeType":"YulIdentifier","src":"6325:3:26"},"nativeSrc":"6325:31:26","nodeType":"YulFunctionCall","src":"6325:31:26"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:26","nodeType":"YulIdentifier","src":"6317:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4827,"isOffset":false,"isSlot":false,"src":"6073:11:26","valueSize":1},{"declaration":4827,"isOffset":false,"isSlot":false,"src":"6092:11:26","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"6177:5:26","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"6190:5:26","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"6105:4:26","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"6197:4:26","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"6317:4:26","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"6340:4:26","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"6347:4:26","valueSize":1}],"id":4872,"nodeType":"InlineAssembly","src":"5999:371:26"},{"expression":{"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4873,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"6436:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4874,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"6445:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4875,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"6453:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4878,"nodeType":"ExpressionStatement","src":"6436:21:26"},{"assignments":[4880],"declarations":[{"constant":false,"id":4880,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:26","nodeType":"VariableDeclaration","scope":4944,"src":"6775:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4887,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4882,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"6798:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:26"},{"expression":{"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4888,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7031:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4890,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7046:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4891,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7060:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4895,"nodeType":"ExpressionStatement","src":"7031:36:26"},{"expression":{"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4896,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7100:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4898,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7115:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4899,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7129:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4903,"nodeType":"ExpressionStatement","src":"7100:36:26"},{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4904,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7170:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7185:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4907,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7199:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4911,"nodeType":"ExpressionStatement","src":"7170:36:26"},{"expression":{"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4912,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7240:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4914,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7255:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4915,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7269:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4919,"nodeType":"ExpressionStatement","src":"7240:36:26"},{"expression":{"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4920,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7310:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7325:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4923,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7339:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4927,"nodeType":"ExpressionStatement","src":"7310:36:26"},{"expression":{"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4928,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7381:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7396:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4931,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7410:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4935,"nodeType":"ExpressionStatement","src":"7381:36:26"},{"expression":{"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4936,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"7851:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"7860:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4938,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7868:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4941,"nodeType":"ExpressionStatement","src":"7851:24:26"},{"expression":{"id":4942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"7896:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4831,"id":4943,"nodeType":"Return","src":"7889:13:26"}]}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"3485:313:26","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4946,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:26","nodeType":"FunctionDefinition","parameters":{"id":4828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"x","nameLocation":"3827:1:26","nodeType":"VariableDeclaration","scope":4946,"src":"3819:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"y","nameLocation":"3838:1:26","nodeType":"VariableDeclaration","scope":4946,"src":"3830:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4827,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:26","nodeType":"VariableDeclaration","scope":4946,"src":"3841:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:26"},"returnParameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"result","nameLocation":"3893:6:26","nodeType":"VariableDeclaration","scope":4946,"src":"3885:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:26"},"scope":5612,"src":"3803:4116:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4988,"nodeType":"Block","src":"8161:192:26","statements":[{"assignments":[4962],"declarations":[{"constant":false,"id":4962,"mutability":"mutable","name":"result","nameLocation":"8179:6:26","nodeType":"VariableDeclaration","scope":4988,"src":"8171:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4961,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4968,"initialValue":{"arguments":[{"id":4964,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"8195:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4965,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8198:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4966,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"8201:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4963,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4946,4989],"referencedDeclaration":4946,"src":"8188:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4970,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"8244:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}],"id":4969,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"8227:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4569_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4973,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"8264:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4974,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"8267:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4975,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"8270:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4985,"nodeType":"IfStatement","src":"8223:101:26","trueBody":{"id":4984,"nodeType":"Block","src":"8288:36:26","statements":[{"expression":{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"8302:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4983,"nodeType":"ExpressionStatement","src":"8302:11:26"}]}},{"expression":{"id":4986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"8340:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4960,"id":4987,"nodeType":"Return","src":"8333:13:26"}]},"documentation":{"id":4947,"nodeType":"StructuredDocumentation","src":"7925:121:26","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4989,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:26","nodeType":"FunctionDefinition","parameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"x","nameLocation":"8075:1:26","nodeType":"VariableDeclaration","scope":4989,"src":"8067:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4951,"mutability":"mutable","name":"y","nameLocation":"8086:1:26","nodeType":"VariableDeclaration","scope":4989,"src":"8078:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4953,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:26","nodeType":"VariableDeclaration","scope":4989,"src":"8089:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:26","nodeType":"VariableDeclaration","scope":4989,"src":"8110:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"},"typeName":{"id":4955,"nodeType":"UserDefinedTypeName","pathNode":{"id":4954,"name":"Rounding","nameLocations":["8110:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4569,"src":"8110:8:26"},"referencedDeclaration":4569,"src":"8110:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:26"},"returnParameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4989,"src":"8152:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:26"},"scope":5612,"src":"8051:302:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5100,"nodeType":"Block","src":"8644:1585:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"8658:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5003,"nodeType":"IfStatement","src":"8654:45:26","trueBody":{"id":5002,"nodeType":"Block","src":"8666:33:26","statements":[{"expression":{"hexValue":"30","id":5000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4996,"id":5001,"nodeType":"Return","src":"8680:8:26"}]}},{"assignments":[5005],"declarations":[{"constant":false,"id":5005,"mutability":"mutable","name":"result","nameLocation":"9386:6:26","nodeType":"VariableDeclaration","scope":5100,"src":"9378:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5014,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"9406:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5007,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5268,5303],"referencedDeclaration":5268,"src":"9401:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:26"},{"id":5099,"nodeType":"UncheckedBlock","src":"9815:408:26","statements":[{"expression":{"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9839:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9849:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"9858:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9862:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5025,"nodeType":"ExpressionStatement","src":"9839:35:26"},{"expression":{"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5026,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9888:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9898:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"9907:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9911:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5036,"nodeType":"ExpressionStatement","src":"9888:35:26"},{"expression":{"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9937:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9947:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"9956:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5040,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9960:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5047,"nodeType":"ExpressionStatement","src":"9937:35:26"},{"expression":{"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9986:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"9996:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"10005:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10009:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5058,"nodeType":"ExpressionStatement","src":"9986:35:26"},{"expression":{"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5059,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10035:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10045:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"10054:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10058:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5069,"nodeType":"ExpressionStatement","src":"10035:35:26"},{"expression":{"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10084:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10094:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5072,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"10103:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10107:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5080,"nodeType":"ExpressionStatement","src":"10084:35:26"},{"expression":{"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5081,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10133:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10143:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5083,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"10152:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10156:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5091,"nodeType":"ExpressionStatement","src":"10133:35:26"},{"expression":{"arguments":[{"id":5093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10193:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"10201:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10205:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5092,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"10189:3:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4996,"id":5098,"nodeType":"Return","src":"10182:30:26"}]}]},"documentation":{"id":4990,"nodeType":"StructuredDocumentation","src":"8359:223:26","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5101,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:26","nodeType":"FunctionDefinition","parameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"a","nameLocation":"8609:1:26","nodeType":"VariableDeclaration","scope":5101,"src":"8601:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:26"},"returnParameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5101,"src":"8635:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:26"},"scope":5612,"src":"8587:1642:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5135,"nodeType":"Block","src":"10405:164:26","statements":[{"id":5134,"nodeType":"UncheckedBlock","src":"10415:148:26","statements":[{"assignments":[5113],"declarations":[{"constant":false,"id":5113,"mutability":"mutable","name":"result","nameLocation":"10447:6:26","nodeType":"VariableDeclaration","scope":5134,"src":"10439:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5117,"initialValue":{"arguments":[{"id":5115,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"10461:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5114,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5101,5136],"referencedDeclaration":5101,"src":"10456:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"10484:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5120,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"10511:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}],"id":5119,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"10494:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4569_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"10524:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5123,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"10533:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"10542:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:26","trueExpression":{"hexValue":"31","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5111,"id":5133,"nodeType":"Return","src":"10477:75:26"}]}]},"documentation":{"id":5102,"nodeType":"StructuredDocumentation","src":"10235:89:26","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5136,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:26","nodeType":"FunctionDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5104,"mutability":"mutable","name":"a","nameLocation":"10351:1:26","nodeType":"VariableDeclaration","scope":5136,"src":"10343:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5107,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:26","nodeType":"VariableDeclaration","scope":5136,"src":"10354:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"},"typeName":{"id":5106,"nodeType":"UserDefinedTypeName","pathNode":{"id":5105,"name":"Rounding","nameLocations":["10354:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4569,"src":"10354:8:26"},"referencedDeclaration":4569,"src":"10354:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:26"},"returnParameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5136,"src":"10396:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:26"},"scope":5612,"src":"10329:240:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5267,"nodeType":"Block","src":"10760:922:26","statements":[{"assignments":[5145],"declarations":[{"constant":false,"id":5145,"mutability":"mutable","name":"result","nameLocation":"10778:6:26","nodeType":"VariableDeclaration","scope":5267,"src":"10770:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5147,"initialValue":{"hexValue":"30","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:26"},{"id":5264,"nodeType":"UncheckedBlock","src":"10798:855:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"10826:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5162,"nodeType":"IfStatement","src":"10822:99:26","trueBody":{"id":5161,"nodeType":"Block","src":"10844:77:26","statements":[{"expression":{"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"10862:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5156,"nodeType":"ExpressionStatement","src":"10862:13:26"},{"expression":{"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"10893:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5160,"nodeType":"ExpressionStatement","src":"10893:13:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"10938:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5177,"nodeType":"IfStatement","src":"10934:96:26","trueBody":{"id":5176,"nodeType":"Block","src":"10955:75:26","statements":[{"expression":{"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"10973:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5171,"nodeType":"ExpressionStatement","src":"10973:12:26"},{"expression":{"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11003:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5175,"nodeType":"ExpressionStatement","src":"11003:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11047:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5192,"nodeType":"IfStatement","src":"11043:96:26","trueBody":{"id":5191,"nodeType":"Block","src":"11064:75:26","statements":[{"expression":{"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11082:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5186,"nodeType":"ExpressionStatement","src":"11082:12:26"},{"expression":{"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11112:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5190,"nodeType":"ExpressionStatement","src":"11112:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11156:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5207,"nodeType":"IfStatement","src":"11152:96:26","trueBody":{"id":5206,"nodeType":"Block","src":"11173:75:26","statements":[{"expression":{"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11191:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5201,"nodeType":"ExpressionStatement","src":"11191:12:26"},{"expression":{"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11221:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5205,"nodeType":"ExpressionStatement","src":"11221:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11265:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"nodeType":"IfStatement","src":"11261:93:26","trueBody":{"id":5221,"nodeType":"Block","src":"11281:73:26","statements":[{"expression":{"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11299:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5216,"nodeType":"ExpressionStatement","src":"11299:11:26"},{"expression":{"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11328:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5220,"nodeType":"ExpressionStatement","src":"11328:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11371:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5237,"nodeType":"IfStatement","src":"11367:93:26","trueBody":{"id":5236,"nodeType":"Block","src":"11387:73:26","statements":[{"expression":{"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11405:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5231,"nodeType":"ExpressionStatement","src":"11405:11:26"},{"expression":{"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11434:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5235,"nodeType":"ExpressionStatement","src":"11434:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11477:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5252,"nodeType":"IfStatement","src":"11473:93:26","trueBody":{"id":5251,"nodeType":"Block","src":"11493:73:26","statements":[{"expression":{"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11511:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5246,"nodeType":"ExpressionStatement","src":"11511:11:26"},{"expression":{"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11540:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5250,"nodeType":"ExpressionStatement","src":"11540:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"11583:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5263,"nodeType":"IfStatement","src":"11579:64:26","trueBody":{"id":5262,"nodeType":"Block","src":"11599:44:26","statements":[{"expression":{"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5258,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11617:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5261,"nodeType":"ExpressionStatement","src":"11617:11:26"}]}}]},{"expression":{"id":5265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11669:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5143,"id":5266,"nodeType":"Return","src":"11662:13:26"}]},"documentation":{"id":5137,"nodeType":"StructuredDocumentation","src":"10575:119:26","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5268,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:26","nodeType":"FunctionDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"mutability":"mutable","name":"value","nameLocation":"10721:5:26","nodeType":"VariableDeclaration","scope":5268,"src":"10713:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:26"},"returnParameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5268,"src":"10751:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5141,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:26"},"scope":5612,"src":"10699:983:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5302,"nodeType":"Block","src":"11915:168:26","statements":[{"id":5301,"nodeType":"UncheckedBlock","src":"11925:152:26","statements":[{"assignments":[5280],"declarations":[{"constant":false,"id":5280,"mutability":"mutable","name":"result","nameLocation":"11957:6:26","nodeType":"VariableDeclaration","scope":5301,"src":"11949:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5279,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5284,"initialValue":{"arguments":[{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"11971:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5281,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5268,5303],"referencedDeclaration":5268,"src":"11966:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"11998:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5287,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"12025:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}],"id":5286,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"12008:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4569_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"12043:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"12052:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:26","trueExpression":{"hexValue":"31","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5278,"id":5300,"nodeType":"Return","src":"11991:75:26"}]}]},"documentation":{"id":5269,"nodeType":"StructuredDocumentation","src":"11688:142:26","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5303,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:26","nodeType":"FunctionDefinition","parameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5271,"mutability":"mutable","name":"value","nameLocation":"11857:5:26","nodeType":"VariableDeclaration","scope":5303,"src":"11849:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5270,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5274,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:26","nodeType":"VariableDeclaration","scope":5303,"src":"11864:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"},"typeName":{"id":5273,"nodeType":"UserDefinedTypeName","pathNode":{"id":5272,"name":"Rounding","nameLocations":["11864:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4569,"src":"11864:8:26"},"referencedDeclaration":4569,"src":"11864:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:26"},"returnParameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5303,"src":"11906:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5276,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:26"},"scope":5612,"src":"11835:248:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5431,"nodeType":"Block","src":"12276:854:26","statements":[{"assignments":[5312],"declarations":[{"constant":false,"id":5312,"mutability":"mutable","name":"result","nameLocation":"12294:6:26","nodeType":"VariableDeclaration","scope":5431,"src":"12286:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5311,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5314,"initialValue":{"hexValue":"30","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:26"},{"id":5428,"nodeType":"UncheckedBlock","src":"12314:787:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12342:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5331,"nodeType":"IfStatement","src":"12338:103:26","trueBody":{"id":5330,"nodeType":"Block","src":"12361:80:26","statements":[{"expression":{"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12379:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5325,"nodeType":"ExpressionStatement","src":"12379:17:26"},{"expression":{"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5326,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"12414:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5329,"nodeType":"ExpressionStatement","src":"12414:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12458:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5348,"nodeType":"IfStatement","src":"12454:103:26","trueBody":{"id":5347,"nodeType":"Block","src":"12477:80:26","statements":[{"expression":{"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12495:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5342,"nodeType":"ExpressionStatement","src":"12495:17:26"},{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"12530:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5346,"nodeType":"ExpressionStatement","src":"12530:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12574:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5365,"nodeType":"IfStatement","src":"12570:103:26","trueBody":{"id":5364,"nodeType":"Block","src":"12593:80:26","statements":[{"expression":{"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12611:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5359,"nodeType":"ExpressionStatement","src":"12611:17:26"},{"expression":{"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"12646:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5363,"nodeType":"ExpressionStatement","src":"12646:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12690:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5382,"nodeType":"IfStatement","src":"12686:100:26","trueBody":{"id":5381,"nodeType":"Block","src":"12708:78:26","statements":[{"expression":{"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12726:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5376,"nodeType":"ExpressionStatement","src":"12726:16:26"},{"expression":{"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"12760:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5380,"nodeType":"ExpressionStatement","src":"12760:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12803:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5399,"nodeType":"IfStatement","src":"12799:100:26","trueBody":{"id":5398,"nodeType":"Block","src":"12821:78:26","statements":[{"expression":{"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12839:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5393,"nodeType":"ExpressionStatement","src":"12839:16:26"},{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"12873:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5397,"nodeType":"ExpressionStatement","src":"12873:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12916:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5416,"nodeType":"IfStatement","src":"12912:100:26","trueBody":{"id":5415,"nodeType":"Block","src":"12934:78:26","statements":[{"expression":{"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"12952:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5410,"nodeType":"ExpressionStatement","src":"12952:16:26"},{"expression":{"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"12986:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5414,"nodeType":"ExpressionStatement","src":"12986:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"13029:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5427,"nodeType":"IfStatement","src":"13025:66:26","trueBody":{"id":5426,"nodeType":"Block","src":"13047:44:26","statements":[{"expression":{"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"13065:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5425,"nodeType":"ExpressionStatement","src":"13065:11:26"}]}}]},{"expression":{"id":5429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"13117:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5310,"id":5430,"nodeType":"Return","src":"13110:13:26"}]},"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"12089:120:26","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5432,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:26","nodeType":"FunctionDefinition","parameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"value","nameLocation":"12237:5:26","nodeType":"VariableDeclaration","scope":5432,"src":"12229:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:26"},"returnParameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5432,"src":"12267:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5308,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:26"},"scope":5612,"src":"12214:916:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5466,"nodeType":"Block","src":"13365:170:26","statements":[{"id":5465,"nodeType":"UncheckedBlock","src":"13375:154:26","statements":[{"assignments":[5444],"declarations":[{"constant":false,"id":5444,"mutability":"mutable","name":"result","nameLocation":"13407:6:26","nodeType":"VariableDeclaration","scope":5465,"src":"13399:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5448,"initialValue":{"arguments":[{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"13422:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5445,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5432,5467],"referencedDeclaration":5432,"src":"13416:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"13449:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5451,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"13476:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}],"id":5450,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"13459:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4569_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"13495:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"13504:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:26","trueExpression":{"hexValue":"31","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5442,"id":5464,"nodeType":"Return","src":"13442:76:26"}]}]},"documentation":{"id":5433,"nodeType":"StructuredDocumentation","src":"13136:143:26","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5467,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:26","nodeType":"FunctionDefinition","parameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"value","nameLocation":"13307:5:26","nodeType":"VariableDeclaration","scope":5467,"src":"13299:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5434,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5438,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:26","nodeType":"VariableDeclaration","scope":5467,"src":"13314:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"},"typeName":{"id":5437,"nodeType":"UserDefinedTypeName","pathNode":{"id":5436,"name":"Rounding","nameLocations":["13314:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4569,"src":"13314:8:26"},"referencedDeclaration":4569,"src":"13314:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:26"},"returnParameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5467,"src":"13356:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5440,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:26"},"scope":5612,"src":"13284:251:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5553,"nodeType":"Block","src":"13855:600:26","statements":[{"assignments":[5476],"declarations":[{"constant":false,"id":5476,"mutability":"mutable","name":"result","nameLocation":"13873:6:26","nodeType":"VariableDeclaration","scope":5553,"src":"13865:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5478,"initialValue":{"hexValue":"30","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:26"},{"id":5550,"nodeType":"UncheckedBlock","src":"13893:533:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"13921:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5493,"nodeType":"IfStatement","src":"13917:98:26","trueBody":{"id":5492,"nodeType":"Block","src":"13939:76:26","statements":[{"expression":{"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"13957:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5487,"nodeType":"ExpressionStatement","src":"13957:13:26"},{"expression":{"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"13988:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5491,"nodeType":"ExpressionStatement","src":"13988:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"14032:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5508,"nodeType":"IfStatement","src":"14028:95:26","trueBody":{"id":5507,"nodeType":"Block","src":"14049:74:26","statements":[{"expression":{"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"14067:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5502,"nodeType":"ExpressionStatement","src":"14067:12:26"},{"expression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"14097:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5506,"nodeType":"ExpressionStatement","src":"14097:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"14140:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5523,"nodeType":"IfStatement","src":"14136:95:26","trueBody":{"id":5522,"nodeType":"Block","src":"14157:74:26","statements":[{"expression":{"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"14175:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5517,"nodeType":"ExpressionStatement","src":"14175:12:26"},{"expression":{"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"14205:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5521,"nodeType":"ExpressionStatement","src":"14205:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"14248:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5538,"nodeType":"IfStatement","src":"14244:95:26","trueBody":{"id":5537,"nodeType":"Block","src":"14265:74:26","statements":[{"expression":{"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"14283:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5532,"nodeType":"ExpressionStatement","src":"14283:12:26"},{"expression":{"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"14313:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5536,"nodeType":"ExpressionStatement","src":"14313:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"14356:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5549,"nodeType":"IfStatement","src":"14352:64:26","trueBody":{"id":5548,"nodeType":"Block","src":"14372:44:26","statements":[{"expression":{"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"14390:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5547,"nodeType":"ExpressionStatement","src":"14390:11:26"}]}}]},{"expression":{"id":5551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"14442:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5474,"id":5552,"nodeType":"Return","src":"14435:13:26"}]},"documentation":{"id":5468,"nodeType":"StructuredDocumentation","src":"13541:246:26","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5554,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:26","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"value","nameLocation":"13816:5:26","nodeType":"VariableDeclaration","scope":5554,"src":"13808:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:26"},"returnParameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5554,"src":"13846:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:26"},"scope":5612,"src":"13792:663:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5591,"nodeType":"Block","src":"14692:177:26","statements":[{"id":5590,"nodeType":"UncheckedBlock","src":"14702:161:26","statements":[{"assignments":[5566],"declarations":[{"constant":false,"id":5566,"mutability":"mutable","name":"result","nameLocation":"14734:6:26","nodeType":"VariableDeclaration","scope":5590,"src":"14726:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5570,"initialValue":{"arguments":[{"id":5568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"14750:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5567,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5554,5592],"referencedDeclaration":5554,"src":"14743:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"14777:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5573,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"14804:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}],"id":5572,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"14787:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4569_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"14823:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"14838:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:26","trueExpression":{"hexValue":"31","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5564,"id":5589,"nodeType":"Return","src":"14770:82:26"}]}]},"documentation":{"id":5555,"nodeType":"StructuredDocumentation","src":"14461:144:26","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5592,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:26","nodeType":"FunctionDefinition","parameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5557,"mutability":"mutable","name":"value","nameLocation":"14634:5:26","nodeType":"VariableDeclaration","scope":5592,"src":"14626:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5556,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5560,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:26","nodeType":"VariableDeclaration","scope":5592,"src":"14641:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"},"typeName":{"id":5559,"nodeType":"UserDefinedTypeName","pathNode":{"id":5558,"name":"Rounding","nameLocations":["14641:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4569,"src":"14641:8:26"},"referencedDeclaration":4569,"src":"14641:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:26"},"returnParameters":{"id":5564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5592,"src":"14683:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5562,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:26"},"scope":5612,"src":"14610:259:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5610,"nodeType":"Block","src":"15067:48:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5603,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"15090:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}],"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5601,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:26","typeDescriptions":{}}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5600,"id":5609,"nodeType":"Return","src":"15077:31:26"}]},"documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"14875:113:26","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5611,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:26","nodeType":"FunctionDefinition","parameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:26","nodeType":"VariableDeclaration","scope":5611,"src":"15019:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"},"typeName":{"id":5595,"nodeType":"UserDefinedTypeName","pathNode":{"id":5594,"name":"Rounding","nameLocations":["15019:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4569,"src":"15019:8:26"},"referencedDeclaration":4569,"src":"15019:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4569","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:26"},"returnParameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5611,"src":"15061:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5598,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:26"},"scope":5612,"src":"14993:122:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5613,"src":"203:14914:26","usedErrors":[4564],"usedEvents":[]}],"src":"103:15015:26"},"id":26},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7367]},"id":7368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5614,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5615,"nodeType":"StructuredDocumentation","src":"218:545:27","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7367,"linearizedBaseContracts":[7367],"name":"SafeCast","nameLocation":"772:8:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5616,"nodeType":"StructuredDocumentation","src":"787:68:27","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5622,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:27","nodeType":"ErrorDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"bits","nameLocation":"903:4:27","nodeType":"VariableDeclaration","scope":5622,"src":"897:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5617,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5620,"mutability":"mutable","name":"value","nameLocation":"917:5:27","nodeType":"VariableDeclaration","scope":5622,"src":"909:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:27"},"src":"860:64:27"},{"documentation":{"id":5623,"nodeType":"StructuredDocumentation","src":"930:75:27","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5627,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:27","nodeType":"ErrorDefinition","parameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"value","nameLocation":"1051:5:27","nodeType":"VariableDeclaration","scope":5627,"src":"1044:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5624,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:27"},"src":"1010:48:27"},{"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"1064:67:27","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5634,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:27","nodeType":"ErrorDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"bits","nameLocation":"1178:4:27","nodeType":"VariableDeclaration","scope":5634,"src":"1172:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5629,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5632,"mutability":"mutable","name":"value","nameLocation":"1191:5:27","nodeType":"VariableDeclaration","scope":5634,"src":"1184:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5631,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:27"},"src":"1136:62:27"},{"documentation":{"id":5635,"nodeType":"StructuredDocumentation","src":"1204:75:27","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5639,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:27","nodeType":"ErrorDefinition","parameters":{"id":5638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"value","nameLocation":"1326:5:27","nodeType":"VariableDeclaration","scope":5639,"src":"1318:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:27"},"src":"1284:49:27"},{"body":{"id":5666,"nodeType":"Block","src":"1690:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"1704:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5649,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:27","memberName":"max","nodeType":"MemberAccess","src":"1712:17:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5660,"nodeType":"IfStatement","src":"1700:105:27","trueBody":{"id":5659,"nodeType":"Block","src":"1731:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"1788:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5654,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"1752:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5658,"nodeType":"RevertStatement","src":"1745:49:27"}]}},{"expression":{"arguments":[{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"1829:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5661,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:27","typeDescriptions":{}}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5646,"id":5665,"nodeType":"Return","src":"1814:21:27"}]},"documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"1339:280:27","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:27","nodeType":"FunctionDefinition","parameters":{"id":5643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"value","nameLocation":"1651:5:27","nodeType":"VariableDeclaration","scope":5667,"src":"1643:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:27"},"returnParameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5667,"src":"1681:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5644,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:27"},"scope":7367,"src":"1624:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5694,"nodeType":"Block","src":"2199:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"2213:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5677,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:27","memberName":"max","nodeType":"MemberAccess","src":"2221:17:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5688,"nodeType":"IfStatement","src":"2209:105:27","trueBody":{"id":5687,"nodeType":"Block","src":"2240:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"2297:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5682,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"2261:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5686,"nodeType":"RevertStatement","src":"2254:49:27"}]}},{"expression":{"arguments":[{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"2338:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5689,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:27","typeDescriptions":{}}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5674,"id":5693,"nodeType":"Return","src":"2323:21:27"}]},"documentation":{"id":5668,"nodeType":"StructuredDocumentation","src":"1848:280:27","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:27","nodeType":"FunctionDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"value","nameLocation":"2160:5:27","nodeType":"VariableDeclaration","scope":5695,"src":"2152:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:27"},"returnParameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5695,"src":"2190:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5672,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:27"},"scope":7367,"src":"2133:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5722,"nodeType":"Block","src":"2708:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"2722:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5705,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:27","memberName":"max","nodeType":"MemberAccess","src":"2730:17:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5716,"nodeType":"IfStatement","src":"2718:105:27","trueBody":{"id":5715,"nodeType":"Block","src":"2749:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"2806:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5710,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"2770:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5714,"nodeType":"RevertStatement","src":"2763:49:27"}]}},{"expression":{"arguments":[{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"2847:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5717,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:27","typeDescriptions":{}}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5702,"id":5721,"nodeType":"Return","src":"2832:21:27"}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"2357:280:27","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5723,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:27","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"value","nameLocation":"2669:5:27","nodeType":"VariableDeclaration","scope":5723,"src":"2661:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:27"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5723,"src":"2699:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5700,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:27"},"scope":7367,"src":"2642:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5750,"nodeType":"Block","src":"3217:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"3231:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5733,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:27","memberName":"max","nodeType":"MemberAccess","src":"3239:17:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5744,"nodeType":"IfStatement","src":"3227:105:27","trueBody":{"id":5743,"nodeType":"Block","src":"3258:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"3315:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5738,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"3279:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5742,"nodeType":"RevertStatement","src":"3272:49:27"}]}},{"expression":{"arguments":[{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"3356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5745,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:27","typeDescriptions":{}}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5730,"id":5749,"nodeType":"Return","src":"3341:21:27"}]},"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"2866:280:27","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5751,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:27","nodeType":"FunctionDefinition","parameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"value","nameLocation":"3178:5:27","nodeType":"VariableDeclaration","scope":5751,"src":"3170:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:27"},"returnParameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5751,"src":"3208:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5728,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:27"},"scope":7367,"src":"3151:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5778,"nodeType":"Block","src":"3726:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"3740:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5761,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:27","memberName":"max","nodeType":"MemberAccess","src":"3748:17:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5772,"nodeType":"IfStatement","src":"3736:105:27","trueBody":{"id":5771,"nodeType":"Block","src":"3767:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"3824:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5766,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"3788:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5770,"nodeType":"RevertStatement","src":"3781:49:27"}]}},{"expression":{"arguments":[{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"3865:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5773,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:27","typeDescriptions":{}}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5758,"id":5777,"nodeType":"Return","src":"3850:21:27"}]},"documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"3375:280:27","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5779,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:27","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"value","nameLocation":"3687:5:27","nodeType":"VariableDeclaration","scope":5779,"src":"3679:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:27"},"returnParameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5779,"src":"3717:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5756,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:27"},"scope":7367,"src":"3660:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5806,"nodeType":"Block","src":"4235:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"4249:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5789,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5788,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:27","memberName":"max","nodeType":"MemberAccess","src":"4257:17:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5800,"nodeType":"IfStatement","src":"4245:105:27","trueBody":{"id":5799,"nodeType":"Block","src":"4276:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"4333:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5794,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"4297:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5798,"nodeType":"RevertStatement","src":"4290:49:27"}]}},{"expression":{"arguments":[{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"4374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5801,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:27","typeDescriptions":{}}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5786,"id":5805,"nodeType":"Return","src":"4359:21:27"}]},"documentation":{"id":5780,"nodeType":"StructuredDocumentation","src":"3884:280:27","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:27","nodeType":"FunctionDefinition","parameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"value","nameLocation":"4196:5:27","nodeType":"VariableDeclaration","scope":5807,"src":"4188:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:27"},"returnParameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5807,"src":"4226:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5784,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:27"},"scope":7367,"src":"4169:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5834,"nodeType":"Block","src":"4744:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"4758:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5817,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5816,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:27","memberName":"max","nodeType":"MemberAccess","src":"4766:17:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5828,"nodeType":"IfStatement","src":"4754:105:27","trueBody":{"id":5827,"nodeType":"Block","src":"4785:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"4842:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5822,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"4806:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5826,"nodeType":"RevertStatement","src":"4799:49:27"}]}},{"expression":{"arguments":[{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"4883:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5829,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:27","typeDescriptions":{}}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5814,"id":5833,"nodeType":"Return","src":"4868:21:27"}]},"documentation":{"id":5808,"nodeType":"StructuredDocumentation","src":"4393:280:27","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5835,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:27","nodeType":"FunctionDefinition","parameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5810,"mutability":"mutable","name":"value","nameLocation":"4705:5:27","nodeType":"VariableDeclaration","scope":5835,"src":"4697:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:27"},"returnParameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5835,"src":"4735:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5812,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:27"},"scope":7367,"src":"4678:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5862,"nodeType":"Block","src":"5253:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"5267:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5845,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:27","memberName":"max","nodeType":"MemberAccess","src":"5275:17:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5856,"nodeType":"IfStatement","src":"5263:105:27","trueBody":{"id":5855,"nodeType":"Block","src":"5294:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"5351:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5850,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"5315:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5854,"nodeType":"RevertStatement","src":"5308:49:27"}]}},{"expression":{"arguments":[{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"5392:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5857,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:27","typeDescriptions":{}}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5842,"id":5861,"nodeType":"Return","src":"5377:21:27"}]},"documentation":{"id":5836,"nodeType":"StructuredDocumentation","src":"4902:280:27","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5863,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:27","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"value","nameLocation":"5214:5:27","nodeType":"VariableDeclaration","scope":5863,"src":"5206:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:27"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5863,"src":"5244:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5840,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:27"},"scope":7367,"src":"5187:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5890,"nodeType":"Block","src":"5762:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"5776:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5873,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:27","memberName":"max","nodeType":"MemberAccess","src":"5784:17:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5884,"nodeType":"IfStatement","src":"5772:105:27","trueBody":{"id":5883,"nodeType":"Block","src":"5803:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"5860:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5878,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"5824:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5882,"nodeType":"RevertStatement","src":"5817:49:27"}]}},{"expression":{"arguments":[{"id":5887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"5901:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5885,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:27","typeDescriptions":{}}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5870,"id":5889,"nodeType":"Return","src":"5886:21:27"}]},"documentation":{"id":5864,"nodeType":"StructuredDocumentation","src":"5411:280:27","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:27","nodeType":"FunctionDefinition","parameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"value","nameLocation":"5723:5:27","nodeType":"VariableDeclaration","scope":5891,"src":"5715:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5865,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:27"},"returnParameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5891,"src":"5753:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5868,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:27"},"scope":7367,"src":"5696:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5918,"nodeType":"Block","src":"6271:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"6285:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5901,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:27","memberName":"max","nodeType":"MemberAccess","src":"6293:17:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5912,"nodeType":"IfStatement","src":"6281:105:27","trueBody":{"id":5911,"nodeType":"Block","src":"6312:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"6369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"6333:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5910,"nodeType":"RevertStatement","src":"6326:49:27"}]}},{"expression":{"arguments":[{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"6410:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5913,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:27","typeDescriptions":{}}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5898,"id":5917,"nodeType":"Return","src":"6395:21:27"}]},"documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"5920:280:27","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:27","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"value","nameLocation":"6232:5:27","nodeType":"VariableDeclaration","scope":5919,"src":"6224:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:27"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5919,"src":"6262:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5896,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:27"},"scope":7367,"src":"6205:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5946,"nodeType":"Block","src":"6780:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"6794:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5929,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:27","memberName":"max","nodeType":"MemberAccess","src":"6802:17:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5940,"nodeType":"IfStatement","src":"6790:105:27","trueBody":{"id":5939,"nodeType":"Block","src":"6821:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"6878:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5934,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"6842:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5938,"nodeType":"RevertStatement","src":"6835:49:27"}]}},{"expression":{"arguments":[{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"6919:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5941,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:27","typeDescriptions":{}}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5926,"id":5945,"nodeType":"Return","src":"6904:21:27"}]},"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"6429:280:27","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:27","nodeType":"FunctionDefinition","parameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"value","nameLocation":"6741:5:27","nodeType":"VariableDeclaration","scope":5947,"src":"6733:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:27"},"returnParameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5947,"src":"6771:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5924,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:27"},"scope":7367,"src":"6714:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5974,"nodeType":"Block","src":"7289:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"7303:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5957,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:27","memberName":"max","nodeType":"MemberAccess","src":"7311:17:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5968,"nodeType":"IfStatement","src":"7299:105:27","trueBody":{"id":5967,"nodeType":"Block","src":"7330:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"7387:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"7351:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5966,"nodeType":"RevertStatement","src":"7344:49:27"}]}},{"expression":{"arguments":[{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"7428:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5969,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:27","typeDescriptions":{}}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5954,"id":5973,"nodeType":"Return","src":"7413:21:27"}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"6938:280:27","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:27","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"value","nameLocation":"7250:5:27","nodeType":"VariableDeclaration","scope":5975,"src":"7242:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:27"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5975,"src":"7280:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5952,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:27"},"scope":7367,"src":"7223:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"7798:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"7812:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5985,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:27","memberName":"max","nodeType":"MemberAccess","src":"7820:17:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"7808:105:27","trueBody":{"id":5995,"nodeType":"Block","src":"7839:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"7896:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"7860:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5994,"nodeType":"RevertStatement","src":"7853:49:27"}]}},{"expression":{"arguments":[{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"7937:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5997,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:27","typeDescriptions":{}}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5982,"id":6001,"nodeType":"Return","src":"7922:21:27"}]},"documentation":{"id":5976,"nodeType":"StructuredDocumentation","src":"7447:280:27","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:27","nodeType":"FunctionDefinition","parameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"value","nameLocation":"7759:5:27","nodeType":"VariableDeclaration","scope":6003,"src":"7751:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:27"},"returnParameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6003,"src":"7789:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5980,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:27"},"scope":7367,"src":"7732:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"8307:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"8321:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6013,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:27","memberName":"max","nodeType":"MemberAccess","src":"8329:17:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"8317:105:27","trueBody":{"id":6023,"nodeType":"Block","src":"8348:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"8405:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"8369:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6022,"nodeType":"RevertStatement","src":"8362:49:27"}]}},{"expression":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"8446:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6025,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:27","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6010,"id":6029,"nodeType":"Return","src":"8431:21:27"}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"7956:280:27","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:27","nodeType":"FunctionDefinition","parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"value","nameLocation":"8268:5:27","nodeType":"VariableDeclaration","scope":6031,"src":"8260:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:27"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6031,"src":"8298:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6008,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:27"},"scope":7367,"src":"8241:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6058,"nodeType":"Block","src":"8816:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"8830:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6041,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:27","memberName":"max","nodeType":"MemberAccess","src":"8838:17:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6052,"nodeType":"IfStatement","src":"8826:105:27","trueBody":{"id":6051,"nodeType":"Block","src":"8857:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"8914:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"8878:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6050,"nodeType":"RevertStatement","src":"8871:49:27"}]}},{"expression":{"arguments":[{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"8955:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6053,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:27","typeDescriptions":{}}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6038,"id":6057,"nodeType":"Return","src":"8940:21:27"}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"8465:280:27","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:27","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"value","nameLocation":"8777:5:27","nodeType":"VariableDeclaration","scope":6059,"src":"8769:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:27"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6059,"src":"8807:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6036,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:27"},"scope":7367,"src":"8750:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6086,"nodeType":"Block","src":"9325:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"9339:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6069,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:27","memberName":"max","nodeType":"MemberAccess","src":"9347:17:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6080,"nodeType":"IfStatement","src":"9335:105:27","trueBody":{"id":6079,"nodeType":"Block","src":"9366:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"9423:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"9387:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6078,"nodeType":"RevertStatement","src":"9380:49:27"}]}},{"expression":{"arguments":[{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"9464:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6081,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:27","typeDescriptions":{}}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6066,"id":6085,"nodeType":"Return","src":"9449:21:27"}]},"documentation":{"id":6060,"nodeType":"StructuredDocumentation","src":"8974:280:27","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:27","nodeType":"FunctionDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"value","nameLocation":"9286:5:27","nodeType":"VariableDeclaration","scope":6087,"src":"9278:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:27"},"returnParameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6087,"src":"9316:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6064,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:27"},"scope":7367,"src":"9259:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6114,"nodeType":"Block","src":"9834:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"9848:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6097,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:27","memberName":"max","nodeType":"MemberAccess","src":"9856:17:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6108,"nodeType":"IfStatement","src":"9844:105:27","trueBody":{"id":6107,"nodeType":"Block","src":"9875:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"9932:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"9896:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6106,"nodeType":"RevertStatement","src":"9889:49:27"}]}},{"expression":{"arguments":[{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"9973:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6109,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:27","typeDescriptions":{}}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6094,"id":6113,"nodeType":"Return","src":"9958:21:27"}]},"documentation":{"id":6088,"nodeType":"StructuredDocumentation","src":"9483:280:27","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:27","nodeType":"FunctionDefinition","parameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"value","nameLocation":"9795:5:27","nodeType":"VariableDeclaration","scope":6115,"src":"9787:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6089,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:27"},"returnParameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6115,"src":"9825:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6092,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:27"},"scope":7367,"src":"9768:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6142,"nodeType":"Block","src":"10343:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"10357:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6125,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:27","memberName":"max","nodeType":"MemberAccess","src":"10365:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"10353:105:27","trueBody":{"id":6135,"nodeType":"Block","src":"10384:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"10441:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"10405:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6134,"nodeType":"RevertStatement","src":"10398:49:27"}]}},{"expression":{"arguments":[{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"10482:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6137,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:27","typeDescriptions":{}}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6122,"id":6141,"nodeType":"Return","src":"10467:21:27"}]},"documentation":{"id":6116,"nodeType":"StructuredDocumentation","src":"9992:280:27","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:27","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"value","nameLocation":"10304:5:27","nodeType":"VariableDeclaration","scope":6143,"src":"10296:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:27"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6143,"src":"10334:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6120,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:27"},"scope":7367,"src":"10277:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6170,"nodeType":"Block","src":"10852:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"10866:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6153,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:27","memberName":"max","nodeType":"MemberAccess","src":"10874:17:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6164,"nodeType":"IfStatement","src":"10862:105:27","trueBody":{"id":6163,"nodeType":"Block","src":"10893:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"10950:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"10914:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6162,"nodeType":"RevertStatement","src":"10907:49:27"}]}},{"expression":{"arguments":[{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"10991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6165,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:27","typeDescriptions":{}}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6150,"id":6169,"nodeType":"Return","src":"10976:21:27"}]},"documentation":{"id":6144,"nodeType":"StructuredDocumentation","src":"10501:280:27","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:27","nodeType":"FunctionDefinition","parameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"value","nameLocation":"10813:5:27","nodeType":"VariableDeclaration","scope":6171,"src":"10805:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:27"},"returnParameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6171,"src":"10843:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6148,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:27"},"scope":7367,"src":"10786:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"11355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"11369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6181,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:27","memberName":"max","nodeType":"MemberAccess","src":"11377:16:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"nodeType":"IfStatement","src":"11365:103:27","trueBody":{"id":6191,"nodeType":"Block","src":"11395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"11451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"11416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6190,"nodeType":"RevertStatement","src":"11409:48:27"}]}},{"expression":{"arguments":[{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"11491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6193,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:27","typeDescriptions":{}}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6178,"id":6197,"nodeType":"Return","src":"11477:20:27"}]},"documentation":{"id":6172,"nodeType":"StructuredDocumentation","src":"11010:276:27","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:27","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"value","nameLocation":"11317:5:27","nodeType":"VariableDeclaration","scope":6199,"src":"11309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6173,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:27"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6199,"src":"11347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6176,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:27"},"scope":7367,"src":"11291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6226,"nodeType":"Block","src":"11855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"11869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6209,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:27","memberName":"max","nodeType":"MemberAccess","src":"11877:16:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6220,"nodeType":"IfStatement","src":"11865:103:27","trueBody":{"id":6219,"nodeType":"Block","src":"11895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"11951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"11916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6218,"nodeType":"RevertStatement","src":"11909:48:27"}]}},{"expression":{"arguments":[{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"11991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6221,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:27","typeDescriptions":{}}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6206,"id":6225,"nodeType":"Return","src":"11977:20:27"}]},"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"11510:276:27","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:27","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"value","nameLocation":"11817:5:27","nodeType":"VariableDeclaration","scope":6227,"src":"11809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:27"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6227,"src":"11847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6204,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:27"},"scope":7367,"src":"11791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6254,"nodeType":"Block","src":"12355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"12369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6237,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:27","memberName":"max","nodeType":"MemberAccess","src":"12377:16:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6248,"nodeType":"IfStatement","src":"12365:103:27","trueBody":{"id":6247,"nodeType":"Block","src":"12395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"12451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"12416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6246,"nodeType":"RevertStatement","src":"12409:48:27"}]}},{"expression":{"arguments":[{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"12491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6249,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:27","typeDescriptions":{}}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6234,"id":6253,"nodeType":"Return","src":"12477:20:27"}]},"documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"12010:276:27","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:27","nodeType":"FunctionDefinition","parameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"value","nameLocation":"12317:5:27","nodeType":"VariableDeclaration","scope":6255,"src":"12309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:27"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6255,"src":"12347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6232,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:27"},"scope":7367,"src":"12291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6282,"nodeType":"Block","src":"12855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"12869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6265,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:27","memberName":"max","nodeType":"MemberAccess","src":"12877:16:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6276,"nodeType":"IfStatement","src":"12865:103:27","trueBody":{"id":6275,"nodeType":"Block","src":"12895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"12951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"12916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6274,"nodeType":"RevertStatement","src":"12909:48:27"}]}},{"expression":{"arguments":[{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"12991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6277,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:27","typeDescriptions":{}}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6262,"id":6281,"nodeType":"Return","src":"12977:20:27"}]},"documentation":{"id":6256,"nodeType":"StructuredDocumentation","src":"12510:276:27","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:27","nodeType":"FunctionDefinition","parameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"value","nameLocation":"12817:5:27","nodeType":"VariableDeclaration","scope":6283,"src":"12809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:27"},"returnParameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6283,"src":"12847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6260,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:27"},"scope":7367,"src":"12791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6310,"nodeType":"Block","src":"13355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"13369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6293,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:27","memberName":"max","nodeType":"MemberAccess","src":"13377:16:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6304,"nodeType":"IfStatement","src":"13365:103:27","trueBody":{"id":6303,"nodeType":"Block","src":"13395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"13451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"13416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6302,"nodeType":"RevertStatement","src":"13409:48:27"}]}},{"expression":{"arguments":[{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"13491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6305,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:27","typeDescriptions":{}}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6290,"id":6309,"nodeType":"Return","src":"13477:20:27"}]},"documentation":{"id":6284,"nodeType":"StructuredDocumentation","src":"13010:276:27","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:27","nodeType":"FunctionDefinition","parameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"value","nameLocation":"13317:5:27","nodeType":"VariableDeclaration","scope":6311,"src":"13309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6285,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:27"},"returnParameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6311,"src":"13347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6288,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:27"},"scope":7367,"src":"13291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6338,"nodeType":"Block","src":"13855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"13869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6321,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:27","memberName":"max","nodeType":"MemberAccess","src":"13877:16:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6332,"nodeType":"IfStatement","src":"13865:103:27","trueBody":{"id":6331,"nodeType":"Block","src":"13895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"13951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"13916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6330,"nodeType":"RevertStatement","src":"13909:48:27"}]}},{"expression":{"arguments":[{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"13991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6333,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:27","typeDescriptions":{}}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6318,"id":6337,"nodeType":"Return","src":"13977:20:27"}]},"documentation":{"id":6312,"nodeType":"StructuredDocumentation","src":"13510:276:27","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:27","nodeType":"FunctionDefinition","parameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"value","nameLocation":"13817:5:27","nodeType":"VariableDeclaration","scope":6339,"src":"13809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6313,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:27"},"returnParameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6339,"src":"13847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6316,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:27"},"scope":7367,"src":"13791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6366,"nodeType":"Block","src":"14355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"14369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6349,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:27","memberName":"max","nodeType":"MemberAccess","src":"14377:16:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6360,"nodeType":"IfStatement","src":"14365:103:27","trueBody":{"id":6359,"nodeType":"Block","src":"14395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"14451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"14416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6358,"nodeType":"RevertStatement","src":"14409:48:27"}]}},{"expression":{"arguments":[{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"14491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6361,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:27","typeDescriptions":{}}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6346,"id":6365,"nodeType":"Return","src":"14477:20:27"}]},"documentation":{"id":6340,"nodeType":"StructuredDocumentation","src":"14010:276:27","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:27","nodeType":"FunctionDefinition","parameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6342,"mutability":"mutable","name":"value","nameLocation":"14317:5:27","nodeType":"VariableDeclaration","scope":6367,"src":"14309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6341,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:27"},"returnParameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6367,"src":"14347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6344,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:27"},"scope":7367,"src":"14291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6394,"nodeType":"Block","src":"14855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"14869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6377,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:27","memberName":"max","nodeType":"MemberAccess","src":"14877:16:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6388,"nodeType":"IfStatement","src":"14865:103:27","trueBody":{"id":6387,"nodeType":"Block","src":"14895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"14951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"14916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6386,"nodeType":"RevertStatement","src":"14909:48:27"}]}},{"expression":{"arguments":[{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"14991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6389,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:27","typeDescriptions":{}}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6374,"id":6393,"nodeType":"Return","src":"14977:20:27"}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"14510:276:27","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:27","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"value","nameLocation":"14817:5:27","nodeType":"VariableDeclaration","scope":6395,"src":"14809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:27"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6395,"src":"14847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6372,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:27"},"scope":7367,"src":"14791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6422,"nodeType":"Block","src":"15355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"15369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6405,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:27","memberName":"max","nodeType":"MemberAccess","src":"15377:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6416,"nodeType":"IfStatement","src":"15365:103:27","trueBody":{"id":6415,"nodeType":"Block","src":"15395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"15451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"15416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6414,"nodeType":"RevertStatement","src":"15409:48:27"}]}},{"expression":{"arguments":[{"id":6419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"15491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6417,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:27","typeDescriptions":{}}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6402,"id":6421,"nodeType":"Return","src":"15477:20:27"}]},"documentation":{"id":6396,"nodeType":"StructuredDocumentation","src":"15010:276:27","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:27","nodeType":"FunctionDefinition","parameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"value","nameLocation":"15317:5:27","nodeType":"VariableDeclaration","scope":6423,"src":"15309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6397,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:27"},"returnParameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6423,"src":"15347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6400,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:27"},"scope":7367,"src":"15291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6450,"nodeType":"Block","src":"15855:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"15869:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6433,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:27","memberName":"max","nodeType":"MemberAccess","src":"15877:16:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6444,"nodeType":"IfStatement","src":"15865:103:27","trueBody":{"id":6443,"nodeType":"Block","src":"15895:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"15951:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"15916:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6442,"nodeType":"RevertStatement","src":"15909:48:27"}]}},{"expression":{"arguments":[{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"15991:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6445,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:27","typeDescriptions":{}}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6430,"id":6449,"nodeType":"Return","src":"15977:20:27"}]},"documentation":{"id":6424,"nodeType":"StructuredDocumentation","src":"15510:276:27","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:27","nodeType":"FunctionDefinition","parameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"value","nameLocation":"15817:5:27","nodeType":"VariableDeclaration","scope":6451,"src":"15809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6425,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:27"},"returnParameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6451,"src":"15847:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6428,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:27"},"scope":7367,"src":"15791:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6478,"nodeType":"Block","src":"16355:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"16369:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6461,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:27","memberName":"max","nodeType":"MemberAccess","src":"16377:16:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6472,"nodeType":"IfStatement","src":"16365:103:27","trueBody":{"id":6471,"nodeType":"Block","src":"16395:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"16451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"16416:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6470,"nodeType":"RevertStatement","src":"16409:48:27"}]}},{"expression":{"arguments":[{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"16491:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6473,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:27","typeDescriptions":{}}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6458,"id":6477,"nodeType":"Return","src":"16477:20:27"}]},"documentation":{"id":6452,"nodeType":"StructuredDocumentation","src":"16010:276:27","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:27","nodeType":"FunctionDefinition","parameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"mutability":"mutable","name":"value","nameLocation":"16317:5:27","nodeType":"VariableDeclaration","scope":6479,"src":"16309:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6453,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:27"},"returnParameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6479,"src":"16347:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6456,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:27"},"scope":7367,"src":"16291:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6506,"nodeType":"Block","src":"16849:146:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"16863:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6489,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:27","memberName":"max","nodeType":"MemberAccess","src":"16871:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6500,"nodeType":"IfStatement","src":"16859:101:27","trueBody":{"id":6499,"nodeType":"Block","src":"16888:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"16943:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"16909:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6498,"nodeType":"RevertStatement","src":"16902:47:27"}]}},{"expression":{"arguments":[{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"16982:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6501,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:27","typeDescriptions":{}}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6486,"id":6505,"nodeType":"Return","src":"16969:19:27"}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"16510:272:27","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:27","nodeType":"FunctionDefinition","parameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"value","nameLocation":"16812:5:27","nodeType":"VariableDeclaration","scope":6507,"src":"16804:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6481,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:27"},"returnParameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6507,"src":"16842:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6484,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:27"},"scope":7367,"src":"16787:208:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6529,"nodeType":"Block","src":"17231:128:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"17245:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6523,"nodeType":"IfStatement","src":"17241:81:27","trueBody":{"id":6522,"nodeType":"Block","src":"17256:66:27","statements":[{"errorCall":{"arguments":[{"id":6519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"17305:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6518,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"17277:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6521,"nodeType":"RevertStatement","src":"17270:41:27"}]}},{"expression":{"arguments":[{"id":6526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"17346:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6524,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:27","typeDescriptions":{}}},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6514,"id":6528,"nodeType":"Return","src":"17331:21:27"}]},"documentation":{"id":6508,"nodeType":"StructuredDocumentation","src":"17001:160:27","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6530,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:27","nodeType":"FunctionDefinition","parameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"value","nameLocation":"17192:5:27","nodeType":"VariableDeclaration","scope":6530,"src":"17185:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6509,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:27"},"returnParameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6530,"src":"17222:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6512,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:27"},"scope":7367,"src":"17166:193:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6555,"nodeType":"Block","src":"17756:150:27","statements":[{"expression":{"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"17766:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"17786:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6539,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:27","typeDescriptions":{}}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6544,"nodeType":"ExpressionStatement","src":"17766:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"17806:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"17820:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6554,"nodeType":"IfStatement","src":"17802:98:27","trueBody":{"id":6553,"nodeType":"Block","src":"17827:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"17883:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"17848:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6552,"nodeType":"RevertStatement","src":"17841:48:27"}]}}]},"documentation":{"id":6531,"nodeType":"StructuredDocumentation","src":"17365:312:27","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:27","nodeType":"FunctionDefinition","parameters":{"id":6534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6533,"mutability":"mutable","name":"value","nameLocation":"17707:5:27","nodeType":"VariableDeclaration","scope":6556,"src":"17700:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6532,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:27"},"returnParameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6536,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:27","nodeType":"VariableDeclaration","scope":6556,"src":"17737:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6535,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:27"},"scope":7367,"src":"17682:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6581,"nodeType":"Block","src":"18303:150:27","statements":[{"expression":{"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"18313:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"18333:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6565,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:27","typeDescriptions":{}}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6570,"nodeType":"ExpressionStatement","src":"18313:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"18353:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"18367:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6580,"nodeType":"IfStatement","src":"18349:98:27","trueBody":{"id":6579,"nodeType":"Block","src":"18374:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"18430:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"18395:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6578,"nodeType":"RevertStatement","src":"18388:48:27"}]}}]},"documentation":{"id":6557,"nodeType":"StructuredDocumentation","src":"17912:312:27","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:27","nodeType":"FunctionDefinition","parameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6559,"mutability":"mutable","name":"value","nameLocation":"18254:5:27","nodeType":"VariableDeclaration","scope":6582,"src":"18247:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6558,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:27"},"returnParameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6562,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:27","nodeType":"VariableDeclaration","scope":6582,"src":"18284:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6561,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:27"},"scope":7367,"src":"18229:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6607,"nodeType":"Block","src":"18850:150:27","statements":[{"expression":{"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"18860:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"18880:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6591,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:27","typeDescriptions":{}}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6596,"nodeType":"ExpressionStatement","src":"18860:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"18900:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"18914:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6606,"nodeType":"IfStatement","src":"18896:98:27","trueBody":{"id":6605,"nodeType":"Block","src":"18921:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"18977:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6600,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"18942:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6604,"nodeType":"RevertStatement","src":"18935:48:27"}]}}]},"documentation":{"id":6583,"nodeType":"StructuredDocumentation","src":"18459:312:27","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:27","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"value","nameLocation":"18801:5:27","nodeType":"VariableDeclaration","scope":6608,"src":"18794:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6584,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:27"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:27","nodeType":"VariableDeclaration","scope":6608,"src":"18831:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6587,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:27"},"scope":7367,"src":"18776:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6633,"nodeType":"Block","src":"19397:150:27","statements":[{"expression":{"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"19407:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"19427:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6617,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:27","typeDescriptions":{}}},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6622,"nodeType":"ExpressionStatement","src":"19407:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"19447:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"19461:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6632,"nodeType":"IfStatement","src":"19443:98:27","trueBody":{"id":6631,"nodeType":"Block","src":"19468:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"19524:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6626,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"19489:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6630,"nodeType":"RevertStatement","src":"19482:48:27"}]}}]},"documentation":{"id":6609,"nodeType":"StructuredDocumentation","src":"19006:312:27","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6634,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:27","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"value","nameLocation":"19348:5:27","nodeType":"VariableDeclaration","scope":6634,"src":"19341:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6610,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:27"},"returnParameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6614,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:27","nodeType":"VariableDeclaration","scope":6634,"src":"19378:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6613,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:27"},"scope":7367,"src":"19323:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6659,"nodeType":"Block","src":"19944:150:27","statements":[{"expression":{"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6642,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"19954:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"19974:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6643,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:27","typeDescriptions":{}}},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6648,"nodeType":"ExpressionStatement","src":"19954:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6649,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"19994:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"20008:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6658,"nodeType":"IfStatement","src":"19990:98:27","trueBody":{"id":6657,"nodeType":"Block","src":"20015:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"20071:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6652,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"20036:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6656,"nodeType":"RevertStatement","src":"20029:48:27"}]}}]},"documentation":{"id":6635,"nodeType":"StructuredDocumentation","src":"19553:312:27","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6660,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:27","nodeType":"FunctionDefinition","parameters":{"id":6638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6637,"mutability":"mutable","name":"value","nameLocation":"19895:5:27","nodeType":"VariableDeclaration","scope":6660,"src":"19888:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6636,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:27"},"returnParameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:27","nodeType":"VariableDeclaration","scope":6660,"src":"19925:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6639,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:27"},"scope":7367,"src":"19870:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6685,"nodeType":"Block","src":"20491:150:27","statements":[{"expression":{"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6668,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"20501:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"20521:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6669,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:27","typeDescriptions":{}}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6674,"nodeType":"ExpressionStatement","src":"20501:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"20541:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"20555:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6684,"nodeType":"IfStatement","src":"20537:98:27","trueBody":{"id":6683,"nodeType":"Block","src":"20562:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"20618:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6678,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"20583:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6682,"nodeType":"RevertStatement","src":"20576:48:27"}]}}]},"documentation":{"id":6661,"nodeType":"StructuredDocumentation","src":"20100:312:27","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6686,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:27","nodeType":"FunctionDefinition","parameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"value","nameLocation":"20442:5:27","nodeType":"VariableDeclaration","scope":6686,"src":"20435:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6662,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:27"},"returnParameters":{"id":6667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6666,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:27","nodeType":"VariableDeclaration","scope":6686,"src":"20472:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6665,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:27"},"scope":7367,"src":"20417:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6711,"nodeType":"Block","src":"21038:150:27","statements":[{"expression":{"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6694,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"21048:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"21068:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6695,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:27","typeDescriptions":{}}},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6700,"nodeType":"ExpressionStatement","src":"21048:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"21088:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"21102:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6710,"nodeType":"IfStatement","src":"21084:98:27","trueBody":{"id":6709,"nodeType":"Block","src":"21109:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"21165:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6704,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"21130:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6708,"nodeType":"RevertStatement","src":"21123:48:27"}]}}]},"documentation":{"id":6687,"nodeType":"StructuredDocumentation","src":"20647:312:27","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6712,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:27","nodeType":"FunctionDefinition","parameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6689,"mutability":"mutable","name":"value","nameLocation":"20989:5:27","nodeType":"VariableDeclaration","scope":6712,"src":"20982:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6688,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:27"},"returnParameters":{"id":6693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6692,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:27","nodeType":"VariableDeclaration","scope":6712,"src":"21019:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6691,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:27"},"scope":7367,"src":"20964:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6737,"nodeType":"Block","src":"21585:150:27","statements":[{"expression":{"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"21595:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"21615:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6721,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:27","typeDescriptions":{}}},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6726,"nodeType":"ExpressionStatement","src":"21595:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"21635:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"21649:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6736,"nodeType":"IfStatement","src":"21631:98:27","trueBody":{"id":6735,"nodeType":"Block","src":"21656:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"21712:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6730,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"21677:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6734,"nodeType":"RevertStatement","src":"21670:48:27"}]}}]},"documentation":{"id":6713,"nodeType":"StructuredDocumentation","src":"21194:312:27","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6738,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:27","nodeType":"FunctionDefinition","parameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6715,"mutability":"mutable","name":"value","nameLocation":"21536:5:27","nodeType":"VariableDeclaration","scope":6738,"src":"21529:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6714,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:27"},"returnParameters":{"id":6719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6718,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:27","nodeType":"VariableDeclaration","scope":6738,"src":"21566:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6717,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:27"},"scope":7367,"src":"21511:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6763,"nodeType":"Block","src":"22132:150:27","statements":[{"expression":{"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6746,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"22142:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"22162:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6747,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:27","typeDescriptions":{}}},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6752,"nodeType":"ExpressionStatement","src":"22142:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6753,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"22182:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"22196:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6762,"nodeType":"IfStatement","src":"22178:98:27","trueBody":{"id":6761,"nodeType":"Block","src":"22203:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"22259:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6756,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"22224:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6760,"nodeType":"RevertStatement","src":"22217:48:27"}]}}]},"documentation":{"id":6739,"nodeType":"StructuredDocumentation","src":"21741:312:27","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6764,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:27","nodeType":"FunctionDefinition","parameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"value","nameLocation":"22083:5:27","nodeType":"VariableDeclaration","scope":6764,"src":"22076:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6740,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:27"},"returnParameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:27","nodeType":"VariableDeclaration","scope":6764,"src":"22113:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6743,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:27"},"scope":7367,"src":"22058:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6789,"nodeType":"Block","src":"22679:150:27","statements":[{"expression":{"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6772,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"22689:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"22709:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6773,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:27","typeDescriptions":{}}},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6778,"nodeType":"ExpressionStatement","src":"22689:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"22729:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"22743:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6788,"nodeType":"IfStatement","src":"22725:98:27","trueBody":{"id":6787,"nodeType":"Block","src":"22750:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"22806:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6782,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"22771:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6786,"nodeType":"RevertStatement","src":"22764:48:27"}]}}]},"documentation":{"id":6765,"nodeType":"StructuredDocumentation","src":"22288:312:27","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6790,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:27","nodeType":"FunctionDefinition","parameters":{"id":6768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6767,"mutability":"mutable","name":"value","nameLocation":"22630:5:27","nodeType":"VariableDeclaration","scope":6790,"src":"22623:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6766,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:27"},"returnParameters":{"id":6771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6770,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:27","nodeType":"VariableDeclaration","scope":6790,"src":"22660:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6769,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:27"},"scope":7367,"src":"22605:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6815,"nodeType":"Block","src":"23226:150:27","statements":[{"expression":{"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6798,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6796,"src":"23236:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"23256:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6799,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:27","typeDescriptions":{}}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6804,"nodeType":"ExpressionStatement","src":"23236:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6796,"src":"23276:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"23290:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6814,"nodeType":"IfStatement","src":"23272:98:27","trueBody":{"id":6813,"nodeType":"Block","src":"23297:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"23353:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6808,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"23318:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6812,"nodeType":"RevertStatement","src":"23311:48:27"}]}}]},"documentation":{"id":6791,"nodeType":"StructuredDocumentation","src":"22835:312:27","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6816,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:27","nodeType":"FunctionDefinition","parameters":{"id":6794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"value","nameLocation":"23177:5:27","nodeType":"VariableDeclaration","scope":6816,"src":"23170:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6792,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:27"},"returnParameters":{"id":6797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6796,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:27","nodeType":"VariableDeclaration","scope":6816,"src":"23207:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6795,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:27"},"scope":7367,"src":"23152:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6841,"nodeType":"Block","src":"23773:150:27","statements":[{"expression":{"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6824,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"23783:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"23803:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6825,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:27","typeDescriptions":{}}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6830,"nodeType":"ExpressionStatement","src":"23783:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6831,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"23823:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"23837:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6840,"nodeType":"IfStatement","src":"23819:98:27","trueBody":{"id":6839,"nodeType":"Block","src":"23844:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"23900:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6834,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"23865:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6838,"nodeType":"RevertStatement","src":"23858:48:27"}]}}]},"documentation":{"id":6817,"nodeType":"StructuredDocumentation","src":"23382:312:27","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6842,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:27","nodeType":"FunctionDefinition","parameters":{"id":6820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"value","nameLocation":"23724:5:27","nodeType":"VariableDeclaration","scope":6842,"src":"23717:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6818,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:27"},"returnParameters":{"id":6823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6822,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:27","nodeType":"VariableDeclaration","scope":6842,"src":"23754:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6821,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:27"},"scope":7367,"src":"23699:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6867,"nodeType":"Block","src":"24320:150:27","statements":[{"expression":{"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6850,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"24330:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"24350:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6851,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:27","typeDescriptions":{}}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6856,"nodeType":"ExpressionStatement","src":"24330:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"24370:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"24384:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6866,"nodeType":"IfStatement","src":"24366:98:27","trueBody":{"id":6865,"nodeType":"Block","src":"24391:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"24447:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6860,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"24412:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6864,"nodeType":"RevertStatement","src":"24405:48:27"}]}}]},"documentation":{"id":6843,"nodeType":"StructuredDocumentation","src":"23929:312:27","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6868,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:27","nodeType":"FunctionDefinition","parameters":{"id":6846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6845,"mutability":"mutable","name":"value","nameLocation":"24271:5:27","nodeType":"VariableDeclaration","scope":6868,"src":"24264:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6844,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:27"},"returnParameters":{"id":6849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:27","nodeType":"VariableDeclaration","scope":6868,"src":"24301:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6847,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:27"},"scope":7367,"src":"24246:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6893,"nodeType":"Block","src":"24867:150:27","statements":[{"expression":{"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6876,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"24877:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"24897:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6877,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:27","typeDescriptions":{}}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6882,"nodeType":"ExpressionStatement","src":"24877:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"24917:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"24931:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6892,"nodeType":"IfStatement","src":"24913:98:27","trueBody":{"id":6891,"nodeType":"Block","src":"24938:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"24994:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6886,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"24959:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6890,"nodeType":"RevertStatement","src":"24952:48:27"}]}}]},"documentation":{"id":6869,"nodeType":"StructuredDocumentation","src":"24476:312:27","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6894,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:27","nodeType":"FunctionDefinition","parameters":{"id":6872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6871,"mutability":"mutable","name":"value","nameLocation":"24818:5:27","nodeType":"VariableDeclaration","scope":6894,"src":"24811:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6870,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:27"},"returnParameters":{"id":6875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6874,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:27","nodeType":"VariableDeclaration","scope":6894,"src":"24848:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6873,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:27"},"scope":7367,"src":"24793:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6919,"nodeType":"Block","src":"25414:150:27","statements":[{"expression":{"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6902,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"25424:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"25444:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6903,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:27","typeDescriptions":{}}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6908,"nodeType":"ExpressionStatement","src":"25424:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"25464:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"25478:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6918,"nodeType":"IfStatement","src":"25460:98:27","trueBody":{"id":6917,"nodeType":"Block","src":"25485:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"25541:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6912,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"25506:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6916,"nodeType":"RevertStatement","src":"25499:48:27"}]}}]},"documentation":{"id":6895,"nodeType":"StructuredDocumentation","src":"25023:312:27","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6920,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:27","nodeType":"FunctionDefinition","parameters":{"id":6898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6897,"mutability":"mutable","name":"value","nameLocation":"25365:5:27","nodeType":"VariableDeclaration","scope":6920,"src":"25358:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6896,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:27"},"returnParameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6900,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:27","nodeType":"VariableDeclaration","scope":6920,"src":"25395:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6899,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:27"},"scope":7367,"src":"25340:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6945,"nodeType":"Block","src":"25961:150:27","statements":[{"expression":{"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6928,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"25971:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"25991:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6929,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:27","typeDescriptions":{}}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6934,"nodeType":"ExpressionStatement","src":"25971:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"26011:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"26025:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6944,"nodeType":"IfStatement","src":"26007:98:27","trueBody":{"id":6943,"nodeType":"Block","src":"26032:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"26088:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6938,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"26053:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6942,"nodeType":"RevertStatement","src":"26046:48:27"}]}}]},"documentation":{"id":6921,"nodeType":"StructuredDocumentation","src":"25570:312:27","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6946,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:27","nodeType":"FunctionDefinition","parameters":{"id":6924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6923,"mutability":"mutable","name":"value","nameLocation":"25912:5:27","nodeType":"VariableDeclaration","scope":6946,"src":"25905:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6922,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:27"},"returnParameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6926,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:27","nodeType":"VariableDeclaration","scope":6946,"src":"25942:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6925,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:27"},"scope":7367,"src":"25887:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6971,"nodeType":"Block","src":"26508:150:27","statements":[{"expression":{"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6954,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"26518:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"26538:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6955,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:27","typeDescriptions":{}}},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6960,"nodeType":"ExpressionStatement","src":"26518:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6961,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"26558:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"26572:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6970,"nodeType":"IfStatement","src":"26554:98:27","trueBody":{"id":6969,"nodeType":"Block","src":"26579:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"26635:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6964,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"26600:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6968,"nodeType":"RevertStatement","src":"26593:48:27"}]}}]},"documentation":{"id":6947,"nodeType":"StructuredDocumentation","src":"26117:312:27","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6972,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:27","nodeType":"FunctionDefinition","parameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6949,"mutability":"mutable","name":"value","nameLocation":"26459:5:27","nodeType":"VariableDeclaration","scope":6972,"src":"26452:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6948,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:27"},"returnParameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6952,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:27","nodeType":"VariableDeclaration","scope":6972,"src":"26489:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6951,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:27"},"scope":7367,"src":"26434:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6997,"nodeType":"Block","src":"27055:150:27","statements":[{"expression":{"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6980,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"27065:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"27085:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6981,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:27","typeDescriptions":{}}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6986,"nodeType":"ExpressionStatement","src":"27065:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6987,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"27105:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"27119:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6996,"nodeType":"IfStatement","src":"27101:98:27","trueBody":{"id":6995,"nodeType":"Block","src":"27126:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"27182:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6990,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"27147:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6994,"nodeType":"RevertStatement","src":"27140:48:27"}]}}]},"documentation":{"id":6973,"nodeType":"StructuredDocumentation","src":"26664:312:27","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6998,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:27","nodeType":"FunctionDefinition","parameters":{"id":6976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6975,"mutability":"mutable","name":"value","nameLocation":"27006:5:27","nodeType":"VariableDeclaration","scope":6998,"src":"26999:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6974,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:27"},"returnParameters":{"id":6979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6978,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:27","nodeType":"VariableDeclaration","scope":6998,"src":"27036:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6977,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:27"},"scope":7367,"src":"26981:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7023,"nodeType":"Block","src":"27602:150:27","statements":[{"expression":{"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7006,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"27612:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"27632:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7007,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:27","typeDescriptions":{}}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7012,"nodeType":"ExpressionStatement","src":"27612:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"27652:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"27666:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7022,"nodeType":"IfStatement","src":"27648:98:27","trueBody":{"id":7021,"nodeType":"Block","src":"27673:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"27729:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7016,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"27694:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7020,"nodeType":"RevertStatement","src":"27687:48:27"}]}}]},"documentation":{"id":6999,"nodeType":"StructuredDocumentation","src":"27211:312:27","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7024,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:27","nodeType":"FunctionDefinition","parameters":{"id":7002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7001,"mutability":"mutable","name":"value","nameLocation":"27553:5:27","nodeType":"VariableDeclaration","scope":7024,"src":"27546:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7000,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:27"},"returnParameters":{"id":7005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7004,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:27","nodeType":"VariableDeclaration","scope":7024,"src":"27583:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7003,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:27"},"scope":7367,"src":"27528:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7049,"nodeType":"Block","src":"28142:148:27","statements":[{"expression":{"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7032,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"28152:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"28171:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7033,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:27","typeDescriptions":{}}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7038,"nodeType":"ExpressionStatement","src":"28152:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7039,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"28191:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"28205:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7048,"nodeType":"IfStatement","src":"28187:97:27","trueBody":{"id":7047,"nodeType":"Block","src":"28212:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"28267:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7042,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"28233:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7046,"nodeType":"RevertStatement","src":"28226:47:27"}]}}]},"documentation":{"id":7025,"nodeType":"StructuredDocumentation","src":"27758:307:27","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7050,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:27","nodeType":"FunctionDefinition","parameters":{"id":7028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7027,"mutability":"mutable","name":"value","nameLocation":"28094:5:27","nodeType":"VariableDeclaration","scope":7050,"src":"28087:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7026,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:27"},"returnParameters":{"id":7031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7030,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:27","nodeType":"VariableDeclaration","scope":7050,"src":"28124:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7029,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:27"},"scope":7367,"src":"28070:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7075,"nodeType":"Block","src":"28680:148:27","statements":[{"expression":{"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7058,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"28690:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"28709:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7059,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:27","typeDescriptions":{}}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7064,"nodeType":"ExpressionStatement","src":"28690:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7065,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"28729:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"28743:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7074,"nodeType":"IfStatement","src":"28725:97:27","trueBody":{"id":7073,"nodeType":"Block","src":"28750:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"28805:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7068,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"28771:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7072,"nodeType":"RevertStatement","src":"28764:47:27"}]}}]},"documentation":{"id":7051,"nodeType":"StructuredDocumentation","src":"28296:307:27","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7076,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:27","nodeType":"FunctionDefinition","parameters":{"id":7054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7053,"mutability":"mutable","name":"value","nameLocation":"28632:5:27","nodeType":"VariableDeclaration","scope":7076,"src":"28625:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7052,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:27"},"returnParameters":{"id":7057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7056,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:27","nodeType":"VariableDeclaration","scope":7076,"src":"28662:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7055,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:27"},"scope":7367,"src":"28608:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7101,"nodeType":"Block","src":"29218:148:27","statements":[{"expression":{"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7084,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"29228:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"29247:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7085,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:27","typeDescriptions":{}}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7090,"nodeType":"ExpressionStatement","src":"29228:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7091,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"29267:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"29281:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7100,"nodeType":"IfStatement","src":"29263:97:27","trueBody":{"id":7099,"nodeType":"Block","src":"29288:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"29343:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7094,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"29309:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7098,"nodeType":"RevertStatement","src":"29302:47:27"}]}}]},"documentation":{"id":7077,"nodeType":"StructuredDocumentation","src":"28834:307:27","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7102,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:27","nodeType":"FunctionDefinition","parameters":{"id":7080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7079,"mutability":"mutable","name":"value","nameLocation":"29170:5:27","nodeType":"VariableDeclaration","scope":7102,"src":"29163:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7078,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:27"},"returnParameters":{"id":7083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7082,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:27","nodeType":"VariableDeclaration","scope":7102,"src":"29200:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7081,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:27"},"scope":7367,"src":"29146:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7127,"nodeType":"Block","src":"29756:148:27","statements":[{"expression":{"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7110,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"29766:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"29785:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7111,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:27","typeDescriptions":{}}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7116,"nodeType":"ExpressionStatement","src":"29766:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7117,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"29805:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"29819:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7126,"nodeType":"IfStatement","src":"29801:97:27","trueBody":{"id":7125,"nodeType":"Block","src":"29826:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"29881:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7120,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"29847:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7124,"nodeType":"RevertStatement","src":"29840:47:27"}]}}]},"documentation":{"id":7103,"nodeType":"StructuredDocumentation","src":"29372:307:27","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7128,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:27","nodeType":"FunctionDefinition","parameters":{"id":7106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7105,"mutability":"mutable","name":"value","nameLocation":"29708:5:27","nodeType":"VariableDeclaration","scope":7128,"src":"29701:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7104,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:27"},"returnParameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:27","nodeType":"VariableDeclaration","scope":7128,"src":"29738:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7107,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:27"},"scope":7367,"src":"29684:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7153,"nodeType":"Block","src":"30294:148:27","statements":[{"expression":{"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7136,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"30304:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"30323:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7137,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:27","typeDescriptions":{}}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7142,"nodeType":"ExpressionStatement","src":"30304:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"30343:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"30357:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7152,"nodeType":"IfStatement","src":"30339:97:27","trueBody":{"id":7151,"nodeType":"Block","src":"30364:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"30419:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7146,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"30385:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7150,"nodeType":"RevertStatement","src":"30378:47:27"}]}}]},"documentation":{"id":7129,"nodeType":"StructuredDocumentation","src":"29910:307:27","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7154,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:27","nodeType":"FunctionDefinition","parameters":{"id":7132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7131,"mutability":"mutable","name":"value","nameLocation":"30246:5:27","nodeType":"VariableDeclaration","scope":7154,"src":"30239:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7130,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:27"},"returnParameters":{"id":7135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7134,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:27","nodeType":"VariableDeclaration","scope":7154,"src":"30276:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7133,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:27"},"scope":7367,"src":"30222:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7179,"nodeType":"Block","src":"30832:148:27","statements":[{"expression":{"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7162,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"30842:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"30861:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7163,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:27","typeDescriptions":{}}},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7168,"nodeType":"ExpressionStatement","src":"30842:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7169,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"30881:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"30895:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7178,"nodeType":"IfStatement","src":"30877:97:27","trueBody":{"id":7177,"nodeType":"Block","src":"30902:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"30957:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7172,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"30923:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7176,"nodeType":"RevertStatement","src":"30916:47:27"}]}}]},"documentation":{"id":7155,"nodeType":"StructuredDocumentation","src":"30448:307:27","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7180,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:27","nodeType":"FunctionDefinition","parameters":{"id":7158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7157,"mutability":"mutable","name":"value","nameLocation":"30784:5:27","nodeType":"VariableDeclaration","scope":7180,"src":"30777:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7156,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:27"},"returnParameters":{"id":7161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7160,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:27","nodeType":"VariableDeclaration","scope":7180,"src":"30814:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7159,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:27"},"scope":7367,"src":"30760:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7205,"nodeType":"Block","src":"31370:148:27","statements":[{"expression":{"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7188,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7186,"src":"31380:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"31399:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7189,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:27","typeDescriptions":{}}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7194,"nodeType":"ExpressionStatement","src":"31380:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7195,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7186,"src":"31419:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"31433:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7204,"nodeType":"IfStatement","src":"31415:97:27","trueBody":{"id":7203,"nodeType":"Block","src":"31440:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"31495:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7198,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"31461:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7202,"nodeType":"RevertStatement","src":"31454:47:27"}]}}]},"documentation":{"id":7181,"nodeType":"StructuredDocumentation","src":"30986:307:27","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7206,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:27","nodeType":"FunctionDefinition","parameters":{"id":7184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7183,"mutability":"mutable","name":"value","nameLocation":"31322:5:27","nodeType":"VariableDeclaration","scope":7206,"src":"31315:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7182,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:27"},"returnParameters":{"id":7187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7186,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:27","nodeType":"VariableDeclaration","scope":7206,"src":"31352:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7185,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:27"},"scope":7367,"src":"31298:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7231,"nodeType":"Block","src":"31908:148:27","statements":[{"expression":{"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7214,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"31918:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"31937:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7215,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:27","typeDescriptions":{}}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7220,"nodeType":"ExpressionStatement","src":"31918:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7221,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"31957:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"31971:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7230,"nodeType":"IfStatement","src":"31953:97:27","trueBody":{"id":7229,"nodeType":"Block","src":"31978:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"32033:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7224,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"31999:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7228,"nodeType":"RevertStatement","src":"31992:47:27"}]}}]},"documentation":{"id":7207,"nodeType":"StructuredDocumentation","src":"31524:307:27","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7232,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:27","nodeType":"FunctionDefinition","parameters":{"id":7210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7209,"mutability":"mutable","name":"value","nameLocation":"31860:5:27","nodeType":"VariableDeclaration","scope":7232,"src":"31853:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7208,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:27"},"returnParameters":{"id":7213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7212,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:27","nodeType":"VariableDeclaration","scope":7232,"src":"31890:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7211,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:27"},"scope":7367,"src":"31836:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7257,"nodeType":"Block","src":"32446:148:27","statements":[{"expression":{"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7240,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7238,"src":"32456:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"32475:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7241,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:27","typeDescriptions":{}}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7246,"nodeType":"ExpressionStatement","src":"32456:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7247,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7238,"src":"32495:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"32509:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7256,"nodeType":"IfStatement","src":"32491:97:27","trueBody":{"id":7255,"nodeType":"Block","src":"32516:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"32571:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7250,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"32537:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7254,"nodeType":"RevertStatement","src":"32530:47:27"}]}}]},"documentation":{"id":7233,"nodeType":"StructuredDocumentation","src":"32062:307:27","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7258,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:27","nodeType":"FunctionDefinition","parameters":{"id":7236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7235,"mutability":"mutable","name":"value","nameLocation":"32398:5:27","nodeType":"VariableDeclaration","scope":7258,"src":"32391:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7234,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:27"},"returnParameters":{"id":7239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7238,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:27","nodeType":"VariableDeclaration","scope":7258,"src":"32428:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7237,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:27"},"scope":7367,"src":"32374:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7283,"nodeType":"Block","src":"32984:148:27","statements":[{"expression":{"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7266,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"32994:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"33013:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7267,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:27","typeDescriptions":{}}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7272,"nodeType":"ExpressionStatement","src":"32994:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7273,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"33033:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"33047:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7282,"nodeType":"IfStatement","src":"33029:97:27","trueBody":{"id":7281,"nodeType":"Block","src":"33054:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"33109:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7276,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"33075:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7280,"nodeType":"RevertStatement","src":"33068:47:27"}]}}]},"documentation":{"id":7259,"nodeType":"StructuredDocumentation","src":"32600:307:27","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7284,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:27","nodeType":"FunctionDefinition","parameters":{"id":7262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7261,"mutability":"mutable","name":"value","nameLocation":"32936:5:27","nodeType":"VariableDeclaration","scope":7284,"src":"32929:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7260,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:27"},"returnParameters":{"id":7265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7264,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:27","nodeType":"VariableDeclaration","scope":7284,"src":"32966:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7263,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:27"},"scope":7367,"src":"32912:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7309,"nodeType":"Block","src":"33522:148:27","statements":[{"expression":{"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7292,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"33532:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"33551:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7293,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:27","typeDescriptions":{}}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7298,"nodeType":"ExpressionStatement","src":"33532:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7299,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"33571:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"33585:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7308,"nodeType":"IfStatement","src":"33567:97:27","trueBody":{"id":7307,"nodeType":"Block","src":"33592:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"33647:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7302,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"33613:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7306,"nodeType":"RevertStatement","src":"33606:47:27"}]}}]},"documentation":{"id":7285,"nodeType":"StructuredDocumentation","src":"33138:307:27","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7310,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:27","nodeType":"FunctionDefinition","parameters":{"id":7288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7287,"mutability":"mutable","name":"value","nameLocation":"33474:5:27","nodeType":"VariableDeclaration","scope":7310,"src":"33467:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7286,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:27"},"returnParameters":{"id":7291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7290,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:27","nodeType":"VariableDeclaration","scope":7310,"src":"33504:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7289,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:27"},"scope":7367,"src":"33450:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7335,"nodeType":"Block","src":"34053:146:27","statements":[{"expression":{"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7318,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"34063:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"34081:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7319,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:27","typeDescriptions":{}}},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7324,"nodeType":"ExpressionStatement","src":"34063:24:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7325,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"34101:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"34115:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7334,"nodeType":"IfStatement","src":"34097:96:27","trueBody":{"id":7333,"nodeType":"Block","src":"34122:71:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"34176:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7328,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"34143:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7332,"nodeType":"RevertStatement","src":"34136:46:27"}]}}]},"documentation":{"id":7311,"nodeType":"StructuredDocumentation","src":"33676:302:27","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7336,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:27","nodeType":"FunctionDefinition","parameters":{"id":7314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7313,"mutability":"mutable","name":"value","nameLocation":"34006:5:27","nodeType":"VariableDeclaration","scope":7336,"src":"33999:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7312,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:27"},"returnParameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:27","nodeType":"VariableDeclaration","scope":7336,"src":"34036:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7315,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:27"},"scope":7367,"src":"33983:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7365,"nodeType":"Block","src":"34439:250:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7339,"src":"34552:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7348,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7347,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:27","memberName":"max","nodeType":"MemberAccess","src":"34568:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7345,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:27","typeDescriptions":{}}},"id":7352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7359,"nodeType":"IfStatement","src":"34548:105:27","trueBody":{"id":7358,"nodeType":"Block","src":"34587:66:27","statements":[{"errorCall":{"arguments":[{"id":7355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7339,"src":"34636:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7354,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"34608:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7357,"nodeType":"RevertStatement","src":"34601:41:27"}]}},{"expression":{"arguments":[{"id":7362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7339,"src":"34676:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7360,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:27","typeDescriptions":{}}},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7343,"id":7364,"nodeType":"Return","src":"34662:20:27"}]},"documentation":{"id":7337,"nodeType":"StructuredDocumentation","src":"34205:165:27","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7366,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:27","nodeType":"FunctionDefinition","parameters":{"id":7340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7339,"mutability":"mutable","name":"value","nameLocation":"34401:5:27","nodeType":"VariableDeclaration","scope":7366,"src":"34393:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7338,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:27"},"returnParameters":{"id":7343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7366,"src":"34431:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7341,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:27"},"scope":7367,"src":"34375:314:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7368,"src":"764:33927:27","usedErrors":[5622,5627,5634,5639],"usedEvents":[]}],"src":"192:34500:27"},"id":27},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[7472]},"id":7473,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7369,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7370,"nodeType":"StructuredDocumentation","src":"135:80:28","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7472,"linearizedBaseContracts":[7472],"name":"SignedMath","nameLocation":"224:10:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":7387,"nodeType":"Block","src":"376:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"393:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7381,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"397:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"405:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:28","trueExpression":{"id":7383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"401:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7379,"id":7386,"nodeType":"Return","src":"386:20:28"}]},"documentation":{"id":7371,"nodeType":"StructuredDocumentation","src":"241:66:28","text":" @dev Returns the largest of two signed numbers."},"id":7388,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:28","nodeType":"FunctionDefinition","parameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"a","nameLocation":"332:1:28","nodeType":"VariableDeclaration","scope":7388,"src":"325:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7372,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7375,"mutability":"mutable","name":"b","nameLocation":"342:1:28","nodeType":"VariableDeclaration","scope":7388,"src":"335:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7374,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:28"},"returnParameters":{"id":7379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7388,"src":"368:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7377,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:28"},"scope":7472,"src":"312:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7405,"nodeType":"Block","src":"555:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"572:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"576:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"584:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:28","trueExpression":{"id":7401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"580:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7397,"id":7404,"nodeType":"Return","src":"565:20:28"}]},"documentation":{"id":7389,"nodeType":"StructuredDocumentation","src":"419:67:28","text":" @dev Returns the smallest of two signed numbers."},"id":7406,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:28","nodeType":"FunctionDefinition","parameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7391,"mutability":"mutable","name":"a","nameLocation":"511:1:28","nodeType":"VariableDeclaration","scope":7406,"src":"504:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7390,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7393,"mutability":"mutable","name":"b","nameLocation":"521:1:28","nodeType":"VariableDeclaration","scope":7406,"src":"514:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7392,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:28"},"returnParameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7406,"src":"547:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7395,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:28"},"scope":7472,"src":"491:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7449,"nodeType":"Block","src":"797:162:28","statements":[{"assignments":[7417],"declarations":[{"constant":false,"id":7417,"mutability":"mutable","name":"x","nameLocation":"866:1:28","nodeType":"VariableDeclaration","scope":7449,"src":"859:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7416,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7430,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"871:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"875:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"882:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"886:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:28"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7431,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"911:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7436,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"931:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7434,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:28","typeDescriptions":{}}},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7432,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:28","typeDescriptions":{}}},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"945:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"949:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7415,"id":7448,"nodeType":"Return","src":"904:48:28"}]},"documentation":{"id":7407,"nodeType":"StructuredDocumentation","src":"598:126:28","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7450,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:28","nodeType":"FunctionDefinition","parameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7409,"mutability":"mutable","name":"a","nameLocation":"753:1:28","nodeType":"VariableDeclaration","scope":7450,"src":"746:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7408,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7411,"mutability":"mutable","name":"b","nameLocation":"763:1:28","nodeType":"VariableDeclaration","scope":7450,"src":"756:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7410,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:28"},"returnParameters":{"id":7415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7450,"src":"789:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7413,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:28"},"scope":7472,"src":"729:230:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7470,"nodeType":"Block","src":"1103:158:28","statements":[{"id":7469,"nodeType":"UncheckedBlock","src":"1113:142:28","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7460,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"1228:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:28","subExpression":{"id":7464,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"1242:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:28","trueExpression":{"id":7463,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"1237:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:28","typeDescriptions":{}}},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7457,"id":7468,"nodeType":"Return","src":"1213:31:28"}]}]},"documentation":{"id":7451,"nodeType":"StructuredDocumentation","src":"965:78:28","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7471,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:28","nodeType":"FunctionDefinition","parameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"n","nameLocation":"1068:1:28","nodeType":"VariableDeclaration","scope":7471,"src":"1061:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7452,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:28"},"returnParameters":{"id":7457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7471,"src":"1094:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:28"},"scope":7472,"src":"1048:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7473,"src":"216:1047:28","usedErrors":[],"usedEvents":[]}],"src":"109:1155:28"},"id":28},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[5612],"SafeCast":[7367],"Time":[7747]},"id":7748,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7474,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":7476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7748,"sourceUnit":5613,"src":"130:38:29","symbolAliases":[{"foreign":{"id":7475,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"138:4:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":7478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7748,"sourceUnit":7368,"src":"169:46:29","symbolAliases":[{"foreign":{"id":7477,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"177:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":7479,"nodeType":"StructuredDocumentation","src":"217:422:29","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":7747,"linearizedBaseContracts":[7747],"name":"Time","nameLocation":"648:4:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7481,"libraryName":{"id":7480,"name":"Time","nameLocations":["665:4:29"],"nodeType":"IdentifierPath","referencedDeclaration":7747,"src":"665:4:29"},"nodeType":"UsingForDirective","src":"659:17:29"},{"body":{"id":7493,"nodeType":"Block","src":"802:58:29","statements":[{"expression":{"arguments":[{"expression":{"id":7489,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7487,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"819:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7367_$","typeString":"type(library SafeCast)"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:29","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6367,"src":"819:17:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7486,"id":7492,"nodeType":"Return","src":"812:41:29"}]},"documentation":{"id":7482,"nodeType":"StructuredDocumentation","src":"682:63:29","text":" @dev Get the block timestamp as a Timepoint."},"id":7494,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:29","nodeType":"FunctionDefinition","parameters":{"id":7483,"nodeType":"ParameterList","parameters":[],"src":"768:2:29"},"returnParameters":{"id":7486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7494,"src":"794:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7484,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:29"},"scope":7747,"src":"750:110:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7506,"nodeType":"Block","src":"985:55:29","statements":[{"expression":{"arguments":[{"expression":{"id":7502,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:29","memberName":"number","nodeType":"MemberAccess","src":"1020:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7500,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"1002:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7367_$","typeString":"type(library SafeCast)"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:29","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6367,"src":"1002:17:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7499,"id":7505,"nodeType":"Return","src":"995:38:29"}]},"documentation":{"id":7495,"nodeType":"StructuredDocumentation","src":"866:60:29","text":" @dev Get the block number as a Timepoint."},"id":7507,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:29","nodeType":"FunctionDefinition","parameters":{"id":7496,"nodeType":"ParameterList","parameters":[],"src":"951:2:29"},"returnParameters":{"id":7499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7507,"src":"977:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7497,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:29"},"scope":7747,"src":"931:109:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":7509,"name":"Delay","nameLocation":"2377:5:29","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:29","underlyingType":{"id":7508,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":7523,"nodeType":"Block","src":"2572:44:29","statements":[{"expression":{"arguments":[{"id":7520,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"2600:8:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":7518,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"2589:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$7509_$","typeString":"type(Time.Delay)"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:29","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:29","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$7509_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"functionReturnParameters":7517,"id":7522,"nodeType":"Return","src":"2582:27:29"}]},"documentation":{"id":7510,"nodeType":"StructuredDocumentation","src":"2400:103:29","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":7524,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:29","nodeType":"FunctionDefinition","parameters":{"id":7513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7512,"mutability":"mutable","name":"duration","nameLocation":"2532:8:29","nodeType":"VariableDeclaration","scope":7524,"src":"2525:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7511,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:29"},"returnParameters":{"id":7517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7524,"src":"2565:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"},"typeName":{"id":7515,"nodeType":"UserDefinedTypeName","pathNode":{"id":7514,"name":"Delay","nameLocations":["2565:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":7509,"src":"2565:5:29"},"referencedDeclaration":7509,"src":"2565:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:29"},"scope":7747,"src":"2508:108:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7562,"nodeType":"Block","src":"2964:180:29","statements":[{"assignments":[7540,7542,7544],"declarations":[{"constant":false,"id":7540,"mutability":"mutable","name":"valueBefore","nameLocation":"2982:11:29","nodeType":"VariableDeclaration","scope":7562,"src":"2975:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7539,"name":"uint32","nodeType":"ElementaryTypeName","src":"2975:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7542,"mutability":"mutable","name":"valueAfter","nameLocation":"3002:10:29","nodeType":"VariableDeclaration","scope":7562,"src":"2995:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7541,"name":"uint32","nodeType":"ElementaryTypeName","src":"2995:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7544,"mutability":"mutable","name":"effect","nameLocation":"3021:6:29","nodeType":"VariableDeclaration","scope":7562,"src":"3014:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7543,"name":"uint48","nodeType":"ElementaryTypeName","src":"3014:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":7548,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7545,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"3031:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3036:6:29","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":7708,"src":"3031:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$7509_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$7509_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"2974:70:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7549,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"3061:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7550,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"3071:9:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3061:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":7556,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"3105:11:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7557,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"3118:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7558,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"3130:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":7559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3104:33:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3061:76:29","trueExpression":{"components":[{"id":7552,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"3084:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3083:18:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":7538,"id":7561,"nodeType":"Return","src":"3054:83:29"}]},"documentation":{"id":7525,"nodeType":"StructuredDocumentation","src":"2622:241:29","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":7563,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:29","nodeType":"FunctionDefinition","parameters":{"id":7531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"mutability":"mutable","name":"self","nameLocation":"2894:4:29","nodeType":"VariableDeclaration","scope":7563,"src":"2888:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"},"typeName":{"id":7527,"nodeType":"UserDefinedTypeName","pathNode":{"id":7526,"name":"Delay","nameLocations":["2888:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":7509,"src":"2888:5:29"},"referencedDeclaration":7509,"src":"2888:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":7530,"mutability":"mutable","name":"timepoint","nameLocation":"2907:9:29","nodeType":"VariableDeclaration","scope":7563,"src":"2900:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7529,"name":"uint48","nodeType":"ElementaryTypeName","src":"2900:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:30:29"},"returnParameters":{"id":7538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7563,"src":"2940:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7532,"name":"uint32","nodeType":"ElementaryTypeName","src":"2940:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7563,"src":"2948:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7534,"name":"uint32","nodeType":"ElementaryTypeName","src":"2948:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7563,"src":"2956:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7536,"name":"uint48","nodeType":"ElementaryTypeName","src":"2956:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2939:24:29"},"scope":7747,"src":"2868:276:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7582,"nodeType":"Block","src":"3438:53:29","statements":[{"expression":{"arguments":[{"id":7577,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"3466:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":7578,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"3472:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":7576,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"3455:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$7509_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":7575,"id":7581,"nodeType":"Return","src":"3448:36:29"}]},"documentation":{"id":7564,"nodeType":"StructuredDocumentation","src":"3150:207:29","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":7583,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3371:7:29","nodeType":"FunctionDefinition","parameters":{"id":7568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7567,"mutability":"mutable","name":"self","nameLocation":"3385:4:29","nodeType":"VariableDeclaration","scope":7583,"src":"3379:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"},"typeName":{"id":7566,"nodeType":"UserDefinedTypeName","pathNode":{"id":7565,"name":"Delay","nameLocations":["3379:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":7509,"src":"3379:5:29"},"referencedDeclaration":7509,"src":"3379:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3378:12:29"},"returnParameters":{"id":7575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7583,"src":"3414:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7569,"name":"uint32","nodeType":"ElementaryTypeName","src":"3414:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7583,"src":"3422:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7571,"name":"uint32","nodeType":"ElementaryTypeName","src":"3422:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7583,"src":"3430:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7573,"name":"uint48","nodeType":"ElementaryTypeName","src":"3430:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3413:24:29"},"scope":7747,"src":"3362:129:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7600,"nodeType":"Block","src":"3604:74:29","statements":[{"assignments":[7593,null,null],"declarations":[{"constant":false,"id":7593,"mutability":"mutable","name":"delay","nameLocation":"3622:5:29","nodeType":"VariableDeclaration","scope":7600,"src":"3615:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7592,"name":"uint32","nodeType":"ElementaryTypeName","src":"3615:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":7597,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7594,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"3635:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3640:7:29","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":7583,"src":"3635:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$7509_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$7509_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3635:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3614:35:29"},{"expression":{"id":7598,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"3666:5:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7591,"id":7599,"nodeType":"Return","src":"3659:12:29"}]},"documentation":{"id":7584,"nodeType":"StructuredDocumentation","src":"3497:46:29","text":" @dev Get the current value."},"id":7601,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3557:3:29","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"self","nameLocation":"3567:4:29","nodeType":"VariableDeclaration","scope":7601,"src":"3561:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"},"typeName":{"id":7586,"nodeType":"UserDefinedTypeName","pathNode":{"id":7585,"name":"Delay","nameLocations":["3561:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":7509,"src":"3561:5:29"},"referencedDeclaration":7509,"src":"3561:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3560:12:29"},"returnParameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7601,"src":"3596:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7589,"name":"uint32","nodeType":"ElementaryTypeName","src":"3596:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3595:8:29"},"scope":7747,"src":"3548:130:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7656,"nodeType":"Block","src":"4128:234:29","statements":[{"assignments":[7618],"declarations":[{"constant":false,"id":7618,"mutability":"mutable","name":"value","nameLocation":"4145:5:29","nodeType":"VariableDeclaration","scope":7656,"src":"4138:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7617,"name":"uint32","nodeType":"ElementaryTypeName","src":"4138:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":7622,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7619,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"4153:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4158:3:29","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":7601,"src":"4153:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$7509_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$7509_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4138:25:29"},{"assignments":[7624],"declarations":[{"constant":false,"id":7624,"mutability":"mutable","name":"setback","nameLocation":"4180:7:29","nodeType":"VariableDeclaration","scope":7656,"src":"4173:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7623,"name":"uint32","nodeType":"ElementaryTypeName","src":"4173:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":7640,"initialValue":{"arguments":[{"arguments":[{"id":7629,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"4206:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"4218:5:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7631,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"4226:8:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4218:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4218:39:29","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"4237:5:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7634,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"4245:8:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4237:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":7627,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"4197:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5612_$","typeString":"type(library Math)"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4202:3:29","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":4745,"src":"4197:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:61:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4190:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7625,"name":"uint32","nodeType":"ElementaryTypeName","src":"4190:6:29","typeDescriptions":{}}},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:69:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4173:86:29"},{"expression":{"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7641,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"4269:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7642,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"4278:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7644,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"4292:7:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4278:21:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4269:30:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":7647,"nodeType":"ExpressionStatement","src":"4269:30:29"},{"expression":{"components":[{"arguments":[{"id":7649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"4322:5:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7650,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"4329:8:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7651,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"4339:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":7648,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"4317:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$7509_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},{"id":7653,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"4348:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":7654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4316:39:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$7509_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":7616,"id":7655,"nodeType":"Return","src":"4309:46:29"}]},"documentation":{"id":7602,"nodeType":"StructuredDocumentation","src":"3684:283:29","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":7657,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"3981:10:29","nodeType":"FunctionDefinition","parameters":{"id":7610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7605,"mutability":"mutable","name":"self","nameLocation":"4007:4:29","nodeType":"VariableDeclaration","scope":7657,"src":"4001:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"},"typeName":{"id":7604,"nodeType":"UserDefinedTypeName","pathNode":{"id":7603,"name":"Delay","nameLocations":["4001:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":7509,"src":"4001:5:29"},"referencedDeclaration":7509,"src":"4001:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":7607,"mutability":"mutable","name":"newValue","nameLocation":"4028:8:29","nodeType":"VariableDeclaration","scope":7657,"src":"4021:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7606,"name":"uint32","nodeType":"ElementaryTypeName","src":"4021:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7609,"mutability":"mutable","name":"minSetback","nameLocation":"4053:10:29","nodeType":"VariableDeclaration","scope":7657,"src":"4046:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7608,"name":"uint32","nodeType":"ElementaryTypeName","src":"4046:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3991:78:29"},"returnParameters":{"id":7616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7613,"mutability":"mutable","name":"updatedDelay","nameLocation":"4099:12:29","nodeType":"VariableDeclaration","scope":7657,"src":"4093:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"},"typeName":{"id":7612,"nodeType":"UserDefinedTypeName","pathNode":{"id":7611,"name":"Delay","nameLocations":["4093:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":7509,"src":"4093:5:29"},"referencedDeclaration":7509,"src":"4093:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":7615,"mutability":"mutable","name":"effect","nameLocation":"4120:6:29","nodeType":"VariableDeclaration","scope":7657,"src":"4113:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7614,"name":"uint48","nodeType":"ElementaryTypeName","src":"4113:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4092:35:29"},"scope":7747,"src":"3972:390:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7707,"nodeType":"Block","src":"4595:212:29","statements":[{"assignments":[7671],"declarations":[{"constant":false,"id":7671,"mutability":"mutable","name":"raw","nameLocation":"4613:3:29","nodeType":"VariableDeclaration","scope":7707,"src":"4605:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7670,"name":"uint112","nodeType":"ElementaryTypeName","src":"4605:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":7676,"initialValue":{"arguments":[{"id":7674,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"4632:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}],"expression":{"id":7672,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"4619:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$7509_$","typeString":"type(Time.Delay)"}},"id":7673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4625:6:29","memberName":"unwrap","nodeType":"MemberAccess","src":"4619:12:29","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$7509_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4605:32:29"},{"expression":{"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7677,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"4648:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7680,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"4668:3:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":7679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4661:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7678,"name":"uint32","nodeType":"ElementaryTypeName","src":"4661:6:29","typeDescriptions":{}}},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4648:24:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":7683,"nodeType":"ExpressionStatement","src":"4648:24:29"},{"expression":{"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7684,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"4682:11:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7687,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"4703:3:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":7688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4703:9:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":7686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4696:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7685,"name":"uint32","nodeType":"ElementaryTypeName","src":"4696:6:29","typeDescriptions":{}}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4682:31:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":7692,"nodeType":"ExpressionStatement","src":"4682:31:29"},{"expression":{"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7693,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"4723:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7696,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"4739:3:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":7697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4739:9:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":7695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4732:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7694,"name":"uint48","nodeType":"ElementaryTypeName","src":"4732:6:29","typeDescriptions":{}}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4723:26:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":7701,"nodeType":"ExpressionStatement","src":"4723:26:29"},{"expression":{"components":[{"id":7702,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"4768:11:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7703,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"4781:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7704,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"4793:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":7705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4767:33:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":7669,"id":7706,"nodeType":"Return","src":"4760:40:29"}]},"documentation":{"id":7658,"nodeType":"StructuredDocumentation","src":"4368:117:29","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":7708,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4499:6:29","nodeType":"FunctionDefinition","parameters":{"id":7662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7661,"mutability":"mutable","name":"self","nameLocation":"4512:4:29","nodeType":"VariableDeclaration","scope":7708,"src":"4506:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"},"typeName":{"id":7660,"nodeType":"UserDefinedTypeName","pathNode":{"id":7659,"name":"Delay","nameLocations":["4506:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":7509,"src":"4506:5:29"},"referencedDeclaration":7509,"src":"4506:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4505:12:29"},"returnParameters":{"id":7669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7664,"mutability":"mutable","name":"valueBefore","nameLocation":"4548:11:29","nodeType":"VariableDeclaration","scope":7708,"src":"4541:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7663,"name":"uint32","nodeType":"ElementaryTypeName","src":"4541:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7666,"mutability":"mutable","name":"valueAfter","nameLocation":"4568:10:29","nodeType":"VariableDeclaration","scope":7708,"src":"4561:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7665,"name":"uint32","nodeType":"ElementaryTypeName","src":"4561:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7668,"mutability":"mutable","name":"effect","nameLocation":"4587:6:29","nodeType":"VariableDeclaration","scope":7708,"src":"4580:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7667,"name":"uint48","nodeType":"ElementaryTypeName","src":"4580:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4540:54:29"},"scope":7747,"src":"4490:317:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7745,"nodeType":"Block","src":"4980:112:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7725,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7715,"src":"5017:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":7724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5009:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7723,"name":"uint112","nodeType":"ElementaryTypeName","src":"5009:7:29","typeDescriptions":{}}},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":7727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5009:21:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":7729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5008:23:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7732,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"5043:11:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":7731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7730,"name":"uint112","nodeType":"ElementaryTypeName","src":"5035:7:29","typeDescriptions":{}}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":7734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5035:26:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":7736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5034:28:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:54:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":7740,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"5073:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":7739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5065:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7738,"name":"uint112","nodeType":"ElementaryTypeName","src":"5065:7:29","typeDescriptions":{}}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:76:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":7721,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"4997:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$7509_$","typeString":"type(Time.Delay)"}},"id":7722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5003:4:29","memberName":"wrap","nodeType":"MemberAccess","src":"4997:10:29","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$7509_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:88:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"functionReturnParameters":7720,"id":7744,"nodeType":"Return","src":"4990:95:29"}]},"documentation":{"id":7709,"nodeType":"StructuredDocumentation","src":"4813:64:29","text":" @dev pack the components into a Delay object."},"id":7746,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4891:4:29","nodeType":"FunctionDefinition","parameters":{"id":7716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7711,"mutability":"mutable","name":"valueBefore","nameLocation":"4903:11:29","nodeType":"VariableDeclaration","scope":7746,"src":"4896:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7710,"name":"uint32","nodeType":"ElementaryTypeName","src":"4896:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7713,"mutability":"mutable","name":"valueAfter","nameLocation":"4923:10:29","nodeType":"VariableDeclaration","scope":7746,"src":"4916:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7712,"name":"uint32","nodeType":"ElementaryTypeName","src":"4916:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7715,"mutability":"mutable","name":"effect","nameLocation":"4942:6:29","nodeType":"VariableDeclaration","scope":7746,"src":"4935:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7714,"name":"uint48","nodeType":"ElementaryTypeName","src":"4935:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4895:54:29"},"returnParameters":{"id":7720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7746,"src":"4973:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"},"typeName":{"id":7718,"nodeType":"UserDefinedTypeName","pathNode":{"id":7717,"name":"Delay","nameLocations":["4973:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":7509,"src":"4973:5:29"},"referencedDeclaration":7509,"src":"4973:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$7509","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4972:7:29"},"scope":7747,"src":"4882:210:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7748,"src":"640:4454:29","usedErrors":[],"usedEvents":[]}],"src":"104:4991:29"},"id":29},"contracts/NFToken.sol":{"ast":{"absolutePath":"contracts/NFToken.sol","exportedSymbols":{"AccessManagedUpgradeable":[247],"AuthorityUtils":[2707],"ContextUpgradeable":[2585],"ERC1967Utils":[3651],"ERC20BurnableUpgradeable":[1362],"ERC20Upgradeable":[1300],"IAccessManaged":[2747],"IAccessManager":[3185],"IAuthority":[3201],"IERC1822Proxiable":[3211],"IERC20":[3739],"IERC20Errors":[3253],"IERC20Metadata":[3765],"Initializable":[501],"NFToken":[7820],"UUPSUpgradeable":[683]},"id":7821,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7749,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:30"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":7750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7821,"sourceUnit":1301,"src":"107:78:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","id":7751,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7821,"sourceUnit":1363,"src":"186:97:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol","id":7752,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7821,"sourceUnit":248,"src":"284:89:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":7753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7821,"sourceUnit":502,"src":"374:75:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":7754,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7821,"sourceUnit":684,"src":"450:77:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7755,"name":"Initializable","nameLocations":["549:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"549:13:30"},"id":7756,"nodeType":"InheritanceSpecifier","src":"549:13:30"},{"baseName":{"id":7757,"name":"ERC20Upgradeable","nameLocations":["564:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":1300,"src":"564:16:30"},"id":7758,"nodeType":"InheritanceSpecifier","src":"564:16:30"},{"baseName":{"id":7759,"name":"ERC20BurnableUpgradeable","nameLocations":["582:24:30"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"582:24:30"},"id":7760,"nodeType":"InheritanceSpecifier","src":"582:24:30"},{"baseName":{"id":7761,"name":"AccessManagedUpgradeable","nameLocations":["608:24:30"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"608:24:30"},"id":7762,"nodeType":"InheritanceSpecifier","src":"608:24:30"},{"baseName":{"id":7763,"name":"UUPSUpgradeable","nameLocations":["634:15:30"],"nodeType":"IdentifierPath","referencedDeclaration":683,"src":"634:15:30"},"id":7764,"nodeType":"InheritanceSpecifier","src":"634:15:30"}],"canonicalName":"NFToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7820,"linearizedBaseContracts":[7820,683,3211,247,2747,1362,1300,3253,3765,3739,2585,501],"name":"NFToken","nameLocation":"538:7:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":7771,"nodeType":"Block","src":"723:39:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7768,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"733:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"733:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7770,"nodeType":"ExpressionStatement","src":"733:22:30"}]},"documentation":{"id":7765,"nodeType":"StructuredDocumentation","src":"656:48:30","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":7772,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7766,"nodeType":"ParameterList","parameters":[],"src":"720:2:30"},"returnParameters":{"id":7767,"nodeType":"ParameterList","parameters":[],"src":"723:0:30"},"scope":7820,"src":"709:53:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7794,"nodeType":"Block","src":"833:161:30","statements":[{"expression":{"arguments":[{"hexValue":"4e46546f6b656e","id":7780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"856:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2a9e4a67d61d770effb7def01ad242e1eac790a9d8485d7c81f8d84acb0bb89","typeString":"literal_string \"NFToken\""},"value":"NFToken"},{"hexValue":"4e544b","id":7781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"867:5:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4f12c7a5f42f9332ab923569e6642ecc9655cbcad782f52b96c2f13bccf1d56","typeString":"literal_string \"NTK\""},"value":"NTK"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b2a9e4a67d61d770effb7def01ad242e1eac790a9d8485d7c81f8d84acb0bb89","typeString":"literal_string \"NFToken\""},{"typeIdentifier":"t_stringliteral_e4f12c7a5f42f9332ab923569e6642ecc9655cbcad782f52b96c2f13bccf1d56","typeString":"literal_string \"NTK\""}],"id":7779,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"843:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"843:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7783,"nodeType":"ExpressionStatement","src":"843:30:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7784,"name":"__ERC20Burnable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"883:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"883:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7786,"nodeType":"ExpressionStatement","src":"883:22:30"},{"expression":{"arguments":[{"id":7788,"name":"initialAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7774,"src":"936:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7787,"name":"__AccessManaged_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"915:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7790,"nodeType":"ExpressionStatement","src":"915:38:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7791,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"963:22:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"963:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7793,"nodeType":"ExpressionStatement","src":"963:24:30"}]},"functionSelector":"c4d66de8","id":7795,"implemented":true,"kind":"function","modifiers":[{"id":7777,"kind":"modifierInvocation","modifierName":{"id":7776,"name":"initializer","nameLocations":["814:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":355,"src":"814:11:30"},"nodeType":"ModifierInvocation","src":"814:11:30"}],"name":"initialize","nameLocation":"777:10:30","nodeType":"FunctionDefinition","parameters":{"id":7775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7774,"mutability":"mutable","name":"initialAuthority","nameLocation":"796:16:30","nodeType":"VariableDeclaration","scope":7795,"src":"788:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7773,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"787:26:30"},"returnParameters":{"id":7778,"nodeType":"ParameterList","parameters":[],"src":"833:0:30"},"scope":7820,"src":"768:226:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7809,"nodeType":"Block","src":"1060:34:30","statements":[{"expression":{"arguments":[{"id":7805,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7797,"src":"1076:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7806,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"1080:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7804,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"1070:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1070:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7808,"nodeType":"ExpressionStatement","src":"1070:17:30"}]},"functionSelector":"40c10f19","id":7810,"implemented":true,"kind":"function","modifiers":[{"id":7802,"kind":"modifierInvocation","modifierName":{"id":7801,"name":"restricted","nameLocations":["1049:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":74,"src":"1049:10:30"},"nodeType":"ModifierInvocation","src":"1049:10:30"}],"name":"mint","nameLocation":"1009:4:30","nodeType":"FunctionDefinition","parameters":{"id":7800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7797,"mutability":"mutable","name":"to","nameLocation":"1022:2:30","nodeType":"VariableDeclaration","scope":7810,"src":"1014:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7796,"name":"address","nodeType":"ElementaryTypeName","src":"1014:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7799,"mutability":"mutable","name":"amount","nameLocation":"1034:6:30","nodeType":"VariableDeclaration","scope":7810,"src":"1026:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7798,"name":"uint256","nodeType":"ElementaryTypeName","src":"1026:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1013:28:30"},"returnParameters":{"id":7803,"nodeType":"ParameterList","parameters":[],"src":"1060:0:30"},"scope":7820,"src":"1000:94:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[637],"body":{"id":7818,"nodeType":"Block","src":"1211:2:30","statements":[]},"id":7819,"implemented":true,"kind":"function","modifiers":[{"id":7815,"kind":"modifierInvocation","modifierName":{"id":7814,"name":"restricted","nameLocations":["1179:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":74,"src":"1179:10:30"},"nodeType":"ModifierInvocation","src":"1179:10:30"}],"name":"_authorizeUpgrade","nameLocation":"1109:17:30","nodeType":"FunctionDefinition","overrides":{"id":7816,"nodeType":"OverrideSpecifier","overrides":[],"src":"1198:8:30"},"parameters":{"id":7813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7812,"mutability":"mutable","name":"newImplementation","nameLocation":"1135:17:30","nodeType":"VariableDeclaration","scope":7819,"src":"1127:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7811,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1126:27:30"},"returnParameters":{"id":7817,"nodeType":"ParameterList","parameters":[],"src":"1211:0:30"},"scope":7820,"src":"1100:113:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7821,"src":"529:686:30","usedErrors":[264,267,528,533,2718,2724,2728,3223,3228,3233,3242,3247,3252,3383,3396,3941,3944],"usedEvents":[272,2714,3362,3673,3682]}],"src":"81:1134:30"},"id":30},"contracts/NFTune.sol":{"ast":{"absolutePath":"contracts/NFTune.sol","exportedSymbols":{"AccessManagedUpgradeable":[247],"AuthorityUtils":[2707],"ContextUpgradeable":[2585],"ERC165Upgradeable":[2625],"ERC1967Utils":[3651],"ERC721BurnableUpgradeable":[2539],"ERC721Upgradeable":[2494],"IAccessManaged":[2747],"IAccessManager":[3185],"IAuthority":[3201],"IERC165":[4558],"IERC1822Proxiable":[3211],"IERC721":[3882],"IERC721Errors":[3301],"IERC721Metadata":[3928],"IERC721Receiver":[3900],"Initializable":[501],"NFTune":[7890],"Strings":[4546],"UUPSUpgradeable":[683]},"id":7891,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7822,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:31"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","id":7823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7891,"sourceUnit":2495,"src":"107:80:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol","id":7824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7891,"sourceUnit":2540,"src":"188:99:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol","id":7825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7891,"sourceUnit":248,"src":"288:89:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":7826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7891,"sourceUnit":502,"src":"378:75:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":7827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7891,"sourceUnit":684,"src":"454:77:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7828,"name":"Initializable","nameLocations":["552:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"552:13:31"},"id":7829,"nodeType":"InheritanceSpecifier","src":"552:13:31"},{"baseName":{"id":7830,"name":"ERC721Upgradeable","nameLocations":["567:17:31"],"nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"567:17:31"},"id":7831,"nodeType":"InheritanceSpecifier","src":"567:17:31"},{"baseName":{"id":7832,"name":"ERC721BurnableUpgradeable","nameLocations":["586:25:31"],"nodeType":"IdentifierPath","referencedDeclaration":2539,"src":"586:25:31"},"id":7833,"nodeType":"InheritanceSpecifier","src":"586:25:31"},{"baseName":{"id":7834,"name":"AccessManagedUpgradeable","nameLocations":["613:24:31"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"613:24:31"},"id":7835,"nodeType":"InheritanceSpecifier","src":"613:24:31"},{"baseName":{"id":7836,"name":"UUPSUpgradeable","nameLocations":["639:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":683,"src":"639:15:31"},"id":7837,"nodeType":"InheritanceSpecifier","src":"639:15:31"}],"canonicalName":"NFTune","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7890,"linearizedBaseContracts":[7890,683,3211,247,2747,2539,2494,3301,3928,3882,2625,4558,2585,501],"name":"NFTune","nameLocation":"542:6:31","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7839,"mutability":"mutable","name":"_nextTokenId","nameLocation":"677:12:31","nodeType":"VariableDeclaration","scope":7890,"src":"661:28:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7838,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":7861,"nodeType":"Block","src":"885:162:31","statements":[{"expression":{"arguments":[{"hexValue":"4e4654756e65","id":7847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"909:8:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b91cd5cdf35088042302ebd135413710d6914f222a75232d1e3eafe9d98cf1c","typeString":"literal_string \"NFTune\""},"value":"NFTune"},{"hexValue":"4e4655","id":7848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"919:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a6f1541cd174aed0cbc584ada7803b3cc3e3355a4d34e03ecbac818f2009f39","typeString":"literal_string \"NFU\""},"value":"NFU"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5b91cd5cdf35088042302ebd135413710d6914f222a75232d1e3eafe9d98cf1c","typeString":"literal_string \"NFTune\""},{"typeIdentifier":"t_stringliteral_7a6f1541cd174aed0cbc584ada7803b3cc3e3355a4d34e03ecbac818f2009f39","typeString":"literal_string \"NFU\""}],"id":7846,"name":"__ERC721_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"895:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"895:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7850,"nodeType":"ExpressionStatement","src":"895:30:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7851,"name":"__ERC721Burnable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"935:21:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"935:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7853,"nodeType":"ExpressionStatement","src":"935:23:31"},{"expression":{"arguments":[{"id":7855,"name":"initialAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"989:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7854,"name":"__AccessManaged_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"968:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"968:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7857,"nodeType":"ExpressionStatement","src":"968:38:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7858,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"1016:22:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1016:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7860,"nodeType":"ExpressionStatement","src":"1016:24:31"}]},"functionSelector":"c4d66de8","id":7862,"implemented":true,"kind":"function","modifiers":[{"id":7844,"kind":"modifierInvocation","modifierName":{"id":7843,"name":"initializer","nameLocations":["866:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":355,"src":"866:11:31"},"nodeType":"ModifierInvocation","src":"866:11:31"}],"name":"initialize","nameLocation":"829:10:31","nodeType":"FunctionDefinition","parameters":{"id":7842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"mutability":"mutable","name":"initialAuthority","nameLocation":"848:16:31","nodeType":"VariableDeclaration","scope":7862,"src":"840:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7840,"name":"address","nodeType":"ElementaryTypeName","src":"840:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"839:26:31"},"returnParameters":{"id":7845,"nodeType":"ParameterList","parameters":[],"src":"885:0:31"},"scope":7890,"src":"820:227:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7879,"nodeType":"Block","src":"1101:81:31","statements":[{"assignments":[7870],"declarations":[{"constant":false,"id":7870,"mutability":"mutable","name":"tokenId","nameLocation":"1119:7:31","nodeType":"VariableDeclaration","scope":7879,"src":"1111:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1111:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7873,"initialValue":{"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1129:14:31","subExpression":{"id":7871,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"1129:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1111:32:31"},{"expression":{"arguments":[{"id":7875,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"1163:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7876,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"1167:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7874,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2100,2126],"referencedDeclaration":2100,"src":"1153:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7878,"nodeType":"ExpressionStatement","src":"1153:22:31"}]},"functionSelector":"40d097c3","id":7880,"implemented":true,"kind":"function","modifiers":[{"id":7867,"kind":"modifierInvocation","modifierName":{"id":7866,"name":"restricted","nameLocations":["1090:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":74,"src":"1090:10:31"},"nodeType":"ModifierInvocation","src":"1090:10:31"}],"name":"safeMint","nameLocation":"1062:8:31","nodeType":"FunctionDefinition","parameters":{"id":7865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7864,"mutability":"mutable","name":"to","nameLocation":"1079:2:31","nodeType":"VariableDeclaration","scope":7880,"src":"1071:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7863,"name":"address","nodeType":"ElementaryTypeName","src":"1071:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1070:12:31"},"returnParameters":{"id":7868,"nodeType":"ParameterList","parameters":[],"src":"1101:0:31"},"scope":7890,"src":"1053:129:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[637],"body":{"id":7888,"nodeType":"Block","src":"1299:2:31","statements":[]},"id":7889,"implemented":true,"kind":"function","modifiers":[{"id":7885,"kind":"modifierInvocation","modifierName":{"id":7884,"name":"restricted","nameLocations":["1267:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":74,"src":"1267:10:31"},"nodeType":"ModifierInvocation","src":"1267:10:31"}],"name":"_authorizeUpgrade","nameLocation":"1197:17:31","nodeType":"FunctionDefinition","overrides":{"id":7886,"nodeType":"OverrideSpecifier","overrides":[],"src":"1286:8:31"},"parameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"newImplementation","nameLocation":"1223:17:31","nodeType":"VariableDeclaration","scope":7889,"src":"1215:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7881,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1214:27:31"},"returnParameters":{"id":7887,"nodeType":"ParameterList","parameters":[],"src":"1299:0:31"},"scope":7890,"src":"1188:113:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7891,"src":"533:770:31","usedErrors":[264,267,528,533,2718,2724,2728,3259,3264,3273,3278,3283,3290,3295,3300,3383,3396,3941,3944],"usedEvents":[272,2714,3362,3781,3790,3799]}],"src":"81:1222:31"},"id":31}},"contracts":{"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol":{"AccessManagedUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"AccessManagedInvalidAuthority","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"uint32","name":"delay","type":"uint32"}],"name":"AccessManagedRequiredDelay","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"AccessManagedUnauthorized","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"authority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"authority","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isConsumingScheduledOp","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authority()":"bf7e214f","isConsumingScheduledOp()":"8fb36037","setAuthority(address)":"7a9e5e4b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract module makes available a {restricted} modifier. Functions decorated with this modifier will be permissioned according to an \\\"authority\\\": a contract like {AccessManager} that follows the {IAuthority} interface, implementing a policy that allows certain callers to access certain functions. IMPORTANT: The `restricted` modifier should never be used on `internal` functions, judiciously used in `public` functions, and ideally only used in `external` functions. See {restricted}.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"authority()\":{\"details\":\"Returns the current authority.\"},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\":\"AccessManagedUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\":{\"keccak256\":\"0xd7e800ed57cb2dc4ce3d38fc310cf6c4918c0a67f9071ef8fb3e0cff24be6446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f85f4baeccce8f93fdc5d4ce54178c900d29f67e3109fe1b31b9d98e3f0a454\",\"dweb:/ipfs/QmWfRZZzkBi3Eo4ub9VRLkBx8w527Qs5ceTNLQ9unx9n7g\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0xdabf85e3bab52e7cfade4f77e661bcf7a2f9f95097bfd2ca5ddb193a0c21ee8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402259332090488a587a858ec0113bc7fe55e9dbc6e329927b87ed0f1cce7d08\",\"dweb:/ipfs/QmPJufTJJJifny3JscKTASsPzCrpXRbhtsJnwkCdbaKDTf\"]},\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ERC20BurnableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ERC721Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x48efca78ce4e1a9f74d3ca8539bb53d04b116e507c10cd9e0df6105b8a6ae420\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9f5e03898857a187d99bd0766daf725abe87f454db82ac6286544d8cb4532f\",\"dweb:/ipfs/QmXFNXaNuxvGCLNL9xAFbvEgRmXDuxw4Ukf9tddiAHDq59\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol":{"ERC721BurnableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\":\"ERC721BurnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x48efca78ce4e1a9f74d3ca8539bb53d04b116e507c10cd9e0df6105b8a6ae420\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9f5e03898857a187d99bd0766daf725abe87f454db82ac6286544d8cb4532f\",\"dweb:/ipfs/QmXFNXaNuxvGCLNL9xAFbvEgRmXDuxw4Ukf9tddiAHDq59\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x5d1215064b3e114d329b1544cf65d33404f63e7841184e55267f4d8b114608e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1699c6ecb0511cb626f40814463aaf4e5c8c36399689e0f3de7561f227a5b50a\",\"dweb:/ipfs/QmQDxPddEsajUEPDRsfPekEhBRjmBTepYALuTwdM7h6mRz\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/manager/AuthorityUtils.sol":{"AuthorityUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a0ad6acf602ba04835d1010e4a69f2cd4bf2c4eb20eebc536e0da4e9efbfda964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS EXP 0xD6 0xAC 0xF6 MUL 0xBA DIV DUP4 TSTORE LT LT 0xE4 0xA6 SWAP16 0x2C 0xD4 0xBF 0x2C 0x4E 0xB2 0xE 0xEB 0xC5 CALLDATASIZE 0xE0 0xDA 0x4E SWAP15 0xFB REVERT 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"189:1040:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a0ad6acf602ba04835d1010e4a69f2cd4bf2c4eb20eebc536e0da4e9efbfda964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS EXP 0xD6 0xAC 0xF6 MUL 0xBA DIV DUP4 TSTORE LT LT 0xE4 0xA6 SWAP16 0x2C 0xD4 0xBF 0x2C 0x4E 0xB2 0xE 0xEB 0xC5 CALLDATASIZE 0xE0 0xDA 0x4E SWAP15 0xFB REVERT 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"189:1040:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":\"AuthorityUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/manager/IAccessManaged.sol":{"IAccessManaged":{"abi":[{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"AccessManagedInvalidAuthority","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"uint32","name":"delay","type":"uint32"}],"name":"AccessManagedRequiredDelay","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"AccessManagedUnauthorized","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"authority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"inputs":[],"name":"authority","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isConsumingScheduledOp","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authority()":"bf7e214f","isConsumingScheduledOp()":"8fb36037","setAuthority(address)":"7a9e5e4b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"}},\"kind\":\"dev\",\"methods\":{\"authority()\":{\"details\":\"Returns the current authority.\"},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":\"IAccessManaged\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/manager/IAccessManager.sol":{"IAccessManager":{"abi":[{"inputs":[{"internalType":"bytes32","name":"operationId","type":"bytes32"}],"name":"AccessManagerAlreadyScheduled","type":"error"},{"inputs":[],"name":"AccessManagerBadConfirmation","type":"error"},{"inputs":[{"internalType":"bytes32","name":"operationId","type":"bytes32"}],"name":"AccessManagerExpired","type":"error"},{"inputs":[{"internalType":"address","name":"initialAdmin","type":"address"}],"name":"AccessManagerInvalidInitialAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AccessManagerLockedAccount","type":"error"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"AccessManagerLockedRole","type":"error"},{"inputs":[{"internalType":"bytes32","name":"operationId","type":"bytes32"}],"name":"AccessManagerNotReady","type":"error"},{"inputs":[{"internalType":"bytes32","name":"operationId","type":"bytes32"}],"name":"AccessManagerNotScheduled","type":"error"},{"inputs":[{"internalType":"address","name":"msgsender","type":"address"},{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"AccessManagerUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"AccessManagerUnauthorizedCall","type":"error"},{"inputs":[{"internalType":"address","name":"msgsender","type":"address"},{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"AccessManagerUnauthorizedCancel","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AccessManagerUnauthorizedConsume","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"operationId","type":"bytes32"},{"indexed":true,"internalType":"uint32","name":"nonce","type":"uint32"}],"name":"OperationCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"operationId","type":"bytes32"},{"indexed":true,"internalType":"uint32","name":"nonce","type":"uint32"}],"name":"OperationExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"operationId","type":"bytes32"},{"indexed":true,"internalType":"uint32","name":"nonce","type":"uint32"},{"indexed":false,"internalType":"uint48","name":"schedule","type":"uint48"},{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"OperationScheduled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":true,"internalType":"uint64","name":"admin","type":"uint64"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"delay","type":"uint32"},{"indexed":false,"internalType":"uint48","name":"since","type":"uint48"}],"name":"RoleGrantDelayChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint32","name":"delay","type":"uint32"},{"indexed":false,"internalType":"uint48","name":"since","type":"uint48"},{"indexed":false,"internalType":"bool","name":"newMember","type":"bool"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":true,"internalType":"uint64","name":"guardian","type":"uint64"}],"name":"RoleGuardianChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":false,"internalType":"string","name":"label","type":"string"}],"name":"RoleLabel","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint32","name":"delay","type":"uint32"},{"indexed":false,"internalType":"uint48","name":"since","type":"uint48"}],"name":"TargetAdminDelayUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bool","name":"closed","type":"bool"}],"name":"TargetClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"},{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"TargetFunctionRoleUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"allowed","type":"bool"},{"internalType":"uint32","name":"delay","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"cancel","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"consumeScheduledOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"expiration","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"account","type":"address"}],"name":"getAccess","outputs":[{"internalType":"uint48","name":"","type":"uint48"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getNonce","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"getRoleAdmin","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"getRoleGrantDelay","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"getRoleGuardian","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getSchedule","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"getTargetAdminDelay","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getTargetFunctionRole","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"executionDelay","type":"uint32"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"hashOperation","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"isTargetClosed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"string","name":"label","type":"string"}],"name":"labelRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minSetback","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint48","name":"when","type":"uint48"}],"name":"schedule","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"uint32","name":"newDelay","type":"uint32"}],"name":"setGrantDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"uint64","name":"admin","type":"uint64"}],"name":"setRoleAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"uint64","name":"guardian","type":"uint64"}],"name":"setRoleGuardian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint32","name":"newDelay","type":"uint32"}],"name":"setTargetAdminDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"closed","type":"bool"}],"name":"setTargetClosed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4[]","name":"selectors","type":"bytes4[]"},{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"setTargetFunctionRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"address","name":"newAuthority","type":"address"}],"name":"updateAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canCall(address,address,bytes4)":"b7009613","cancel(address,address,bytes)":"d6bb62c6","consumeScheduledOp(address,bytes)":"94c7d7ee","execute(address,bytes)":"1cff79cd","expiration()":"4665096d","getAccess(uint64,address)":"3078f114","getNonce(bytes32)":"4136a33c","getRoleAdmin(uint64)":"530dd456","getRoleGrantDelay(uint64)":"12be8727","getRoleGuardian(uint64)":"0b0a93ba","getSchedule(bytes32)":"3adc277a","getTargetAdminDelay(address)":"4c1da1e2","getTargetFunctionRole(address,bytes4)":"6d5115bd","grantRole(uint64,address,uint32)":"25c471a0","hasRole(uint64,address)":"d1f856ee","hashOperation(address,address,bytes)":"abd9bd2a","isTargetClosed(address)":"a166aa89","labelRole(uint64,string)":"853551b8","minSetback()":"cc1b6c81","renounceRole(uint64,address)":"fe0776f5","revokeRole(uint64,address)":"b7d2b162","schedule(address,bytes,uint48)":"f801a698","setGrantDelay(uint64,uint32)":"a64d95ce","setRoleAdmin(uint64,uint64)":"30cae187","setRoleGuardian(uint64,uint64)":"52962952","setTargetAdminDelay(address,uint32)":"d22b5989","setTargetClosed(address,bool)":"167bd395","setTargetFunctionRole(address,bytes4[],uint64)":"08d6122d","updateAuthority(address,address)":"18ff183c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerAlreadyScheduled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccessManagerBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"}],\"name\":\"AccessManagerInvalidInitialAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccessManagerLockedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"AccessManagerLockedRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerNotReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerNotScheduled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgsender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"AccessManagerUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"AccessManagerUnauthorizedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgsender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"AccessManagerUnauthorizedCancel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AccessManagerUnauthorizedConsume\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"OperationCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"OperationExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"OperationScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"admin\",\"type\":\"uint64\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"since\",\"type\":\"uint48\"}],\"name\":\"RoleGrantDelayChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"since\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newMember\",\"type\":\"bool\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"guardian\",\"type\":\"uint64\"}],\"name\":\"RoleGuardianChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"RoleLabel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"since\",\"type\":\"uint48\"}],\"name\":\"TargetAdminDelayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"closed\",\"type\":\"bool\"}],\"name\":\"TargetClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"TargetFunctionRoleUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"consumeScheduledOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccess\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"getRoleGrantDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"getRoleGuardian\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getSchedule\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"getTargetAdminDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getTargetFunctionRole\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"executionDelay\",\"type\":\"uint32\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"hashOperation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isTargetClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"labelRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSetback\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint48\",\"name\":\"when\",\"type\":\"uint48\"}],\"name\":\"schedule\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"newDelay\",\"type\":\"uint32\"}],\"name\":\"setGrantDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"admin\",\"type\":\"uint64\"}],\"name\":\"setRoleAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"guardian\",\"type\":\"uint64\"}],\"name\":\"setRoleGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"newDelay\",\"type\":\"uint32\"}],\"name\":\"setTargetAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"closed\",\"type\":\"bool\"}],\"name\":\"setTargetClosed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"setTargetFunctionRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"updateAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OperationCanceled(bytes32,uint32)\":{\"details\":\"A scheduled operation was canceled.\"},\"OperationExecuted(bytes32,uint32)\":{\"details\":\"A scheduled operation was executed.\"},\"OperationScheduled(bytes32,uint32,uint48,address,address,bytes)\":{\"details\":\"A delayed operation was scheduled.\"},\"RoleAdminChanged(uint64,uint64)\":{\"details\":\"Role acting as admin over a given `roleId` is updated.\"},\"RoleGrantDelayChanged(uint64,uint32,uint48)\":{\"details\":\"Grant delay for a given `roleId` will be updated to `delay` when `since` is reached.\"},\"RoleGranted(uint64,address,uint32,uint48,bool)\":{\"details\":\"Emitted when `account` is granted `roleId`. NOTE: The meaning of the `since` argument depends on the `newMember` argument. If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role, otherwise it indicates the execution delay for this account and roleId is updated.\"},\"RoleGuardianChanged(uint64,uint64)\":{\"details\":\"Role acting as guardian over a given `roleId` is updated.\"},\"RoleLabel(uint64,string)\":{\"details\":\"Informational labelling for a roleId.\"},\"RoleRevoked(uint64,address)\":{\"details\":\"Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous.\"},\"TargetAdminDelayUpdated(address,uint32,uint48)\":{\"details\":\"Admin delay for a given `target` will be updated to `delay` when `since` is reached.\"},\"TargetClosed(address,bool)\":{\"details\":\"Target mode is updated (true = closed, false = open).\"},\"TargetFunctionRoleUpdated(address,bytes4,uint64)\":{\"details\":\"Role required to invoke `selector` on `target` is updated to `roleId`.\"}},\"kind\":\"dev\",\"methods\":{\"canCall(address,address,bytes4)\":{\"details\":\"Check if an address (`caller`) is authorised to call a given function on a given contract directly (with no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule} & {execute} workflow. This function is usually called by the targeted contract to control immediate execution of restricted functions. Therefore we only return true if the call can be performed without any delay. If the call is subject to a previously set delay (not zero), then the function should return false and the caller should schedule the operation for future execution. If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise the operation can be executed if and only if delay is greater than 0. NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail to identify the indirect workflow, and will consider calls that require a delay to be forbidden. NOTE: This function does not report the permissions of this manager itself. These are defined by the {_canCallSelf} function instead.\"},\"cancel(address,address,bytes)\":{\"details\":\"Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled operation that is cancelled. Requirements: - the caller must be the proposer, a guardian of the targeted function, or a global admin Emits a {OperationCanceled} event.\"},\"consumeScheduledOp(address,bytes)\":{\"details\":\"Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error. This is useful for contract that want to enforce that calls targeting them were scheduled on the manager, with all the verifications that it implies. Emit a {OperationExecuted} event.\"},\"execute(address,bytes)\":{\"details\":\"Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the execution delay is 0. Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the operation wasn't previously scheduled (if the caller doesn't have an execution delay). Emits an {OperationExecuted} event only if the call was scheduled and delayed.\"},\"expiration()\":{\"details\":\"Expiration delay for scheduled proposals. Defaults to 1 week. IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately, disabling any scheduling usage.\"},\"getAccess(uint64,address)\":{\"details\":\"Get the access details for a given account for a given role. These details include the timepoint at which membership becomes active, and the delay applied to all operation by this user that requires this permission level. Returns: [0] Timestamp at which the account membership becomes valid. 0 means role is not granted. [1] Current execution delay for the account. [2] Pending execution delay for the account. [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled.\"},\"getNonce(bytes32)\":{\"details\":\"Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never been scheduled.\"},\"getRoleAdmin(uint64)\":{\"details\":\"Get the id of the role that acts as an admin for the given role. The admin permission is required to grant the role, revoke the role and update the execution delay to execute an operation that is restricted to this role.\"},\"getRoleGrantDelay(uint64)\":{\"details\":\"Get the role current grant delay. Its value may change at any point without an event emitted following a call to {setGrantDelay}. Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event.\"},\"getRoleGuardian(uint64)\":{\"details\":\"Get the role that acts as a guardian for a given role. The guardian permission allows canceling operations that have been scheduled under the role.\"},\"getSchedule(bytes32)\":{\"details\":\"Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the operation is not yet scheduled, has expired, was executed, or was canceled.\"},\"getTargetAdminDelay(address)\":{\"details\":\"Get the admin delay for a target contract. Changes to contract configuration are subject to this delay.\"},\"getTargetFunctionRole(address,bytes4)\":{\"details\":\"Get the role required to call a function.\"},\"grantRole(uint64,address,uint32)\":{\"details\":\"Add `account` to `roleId`, or change its execution delay. This gives the account the authorization to call any function that is restricted to this role. An optional execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation that is restricted to members of this role. The user will only be able to execute the operation after the delay has passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}). If the account has already been granted this role, the execution delay will be updated. This update is not immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any operation executed in the 3 hours that follows this update was indeed scheduled before this update. Requirements: - the caller must be an admin for the role (see {getRoleAdmin}) - granted role must not be the `PUBLIC_ROLE` Emits a {RoleGranted} event.\"},\"hasRole(uint64,address)\":{\"details\":\"Check if a given account currently has the permission level corresponding to a given role. Note that this permission might be associated with an execution delay. {getAccess} can provide more details.\"},\"hashOperation(address,address,bytes)\":{\"details\":\"Hashing function for delayed operations.\"},\"isTargetClosed(address)\":{\"details\":\"Get whether the contract is closed disabling any access. Otherwise role permissions are applied.\"},\"labelRole(uint64,string)\":{\"details\":\"Give a label to a role, for improved role discoverability by UIs. Requirements: - the caller must be a global admin Emits a {RoleLabel} event.\"},\"minSetback()\":{\"details\":\"Minimum setback for all delay updates, with the exception of execution delays. It can be increased without setback (and reset via {revokeRole} in the case event of an accidental increase). Defaults to 5 days.\"},\"renounceRole(uint64,address)\":{\"details\":\"Renounce role permissions for the calling account with immediate effect. If the sender is not in the role this call has no effect. Requirements: - the caller must be `callerConfirmation`. Emits a {RoleRevoked} event if the account had the role.\"},\"revokeRole(uint64,address)\":{\"details\":\"Remove an account from a role, with immediate effect. If the account does not have the role, this call has no effect. Requirements: - the caller must be an admin for the role (see {getRoleAdmin}) - revoked role must not be the `PUBLIC_ROLE` Emits a {RoleRevoked} event if the account had the role.\"},\"schedule(address,bytes,uint48)\":{\"details\":\"Schedule a delayed operation for future execution, and return the operation identifier. It is possible to choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays required for the caller. The special value zero will automatically set the earliest possible time. Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}. Emits a {OperationScheduled} event. NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target contract if it is using standard Solidity ABI encoding.\"},\"setGrantDelay(uint64,uint32)\":{\"details\":\"Update the delay for granting a `roleId`. Requirements: - the caller must be a global admin Emits a {RoleGrantDelayChanged} event.\"},\"setRoleAdmin(uint64,uint64)\":{\"details\":\"Change admin role for a given role. Requirements: - the caller must be a global admin Emits a {RoleAdminChanged} event\"},\"setRoleGuardian(uint64,uint64)\":{\"details\":\"Change guardian role for a given role. Requirements: - the caller must be a global admin Emits a {RoleGuardianChanged} event\"},\"setTargetAdminDelay(address,uint32)\":{\"details\":\"Set the delay for changing the configuration of a given target contract. Requirements: - the caller must be a global admin Emits a {TargetAdminDelayUpdated} event.\"},\"setTargetClosed(address,bool)\":{\"details\":\"Set the closed flag for a contract. Requirements: - the caller must be a global admin Emits a {TargetClosed} event.\"},\"setTargetFunctionRole(address,bytes4[],uint64)\":{\"details\":\"Set the role required to call functions identified by the `selectors` in the `target` contract. Requirements: - the caller must be a global admin Emits a {TargetFunctionRoleUpdated} event per selector.\"},\"updateAuthority(address,address)\":{\"details\":\"Changes the authority of a target managed by this manager instance. Requirements: - the caller must be a global admin\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":\"IAccessManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0xdabf85e3bab52e7cfade4f77e661bcf7a2f9f95097bfd2ca5ddb193a0c21ee8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402259332090488a587a858ec0113bc7fe55e9dbc6e329927b87ed0f1cce7d08\",\"dweb:/ipfs/QmPJufTJJJifny3JscKTASsPzCrpXRbhtsJnwkCdbaKDTf\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/manager/IAuthority.sol":{"IAuthority":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"allowed","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canCall(address,address,bytes4)":"b7009613"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Standard interface for permissioning originally defined in Dappsys.\",\"kind\":\"dev\",\"methods\":{\"canCall(address,address,bytes4)\":{\"details\":\"Returns true if the caller can invoke on a target the function identified by a function selector.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/manager/IAuthority.sol\":\"IAuthority\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b8bb2594312ba6747e81ed4a062f9b9161e7dba8a7bf25e3c3dc39d818cfe39e64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xBB 0x25 SWAP5 BALANCE 0x2B 0xA6 PUSH21 0x7E81ED4A062F9B9161E7DBA8A7BF25E3C3DC39D818 0xCF 0xE3 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"449:6273:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b8bb2594312ba6747e81ed4a062f9b9161e7dba8a7bf25e3c3dc39d818cfe39e64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xBB 0x25 SWAP5 BALANCE 0x2B 0xA6 PUSH21 0x7E81ED4A062F9B9161E7DBA8A7BF25E3C3DC39D818 0xCF 0xE3 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"449:6273:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220744d9bb72144385edfc7dde59f38ad15d8191ee27bd4410502d0398962e6ebf264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x4D9BB72144385EDFC7DDE59F38AD15D8191EE27BD4 COINBASE SDIV MUL 0xD0 CODECOPY DUP10 PUSH3 0xE6EBF2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"640:4454:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220744d9bb72144385edfc7dde59f38ad15d8191ee27bd4410502d0398962e6ebf264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x4D9BB72144385EDFC7DDE59F38AD15D8191EE27BD4 COINBASE SDIV MUL 0xD0 CODECOPY DUP10 PUSH3 0xE6EBF2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"640:4454:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/NFToken.sol":{"NFToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"AccessManagedInvalidAuthority","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"uint32","name":"delay","type":"uint32"}],"name":"AccessManagedRequiredDelay","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"AccessManagedUnauthorized","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"authority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"authority","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"initialAuthority","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isConsumingScheduledOp","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7772":{"entryPoint":null,"id":7772,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_469":{"entryPoint":91,"id":469,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_500":{"entryPoint":357,"id":500,"parameterSlots":0,"returnSlots":1},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":417,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":434,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":397,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:456:32","nodeType":"YulBlock","src":"0:456:32","statements":[{"body":{"nativeSrc":"51:57:32","nodeType":"YulBlock","src":"51:57:32","statements":[{"nativeSrc":"61:41:32","nodeType":"YulAssignment","src":"61:41:32","value":{"arguments":[{"name":"value","nativeSrc":"76:5:32","nodeType":"YulIdentifier","src":"76:5:32"},{"kind":"number","nativeSrc":"83:18:32","nodeType":"YulLiteral","src":"83:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"72:3:32","nodeType":"YulIdentifier","src":"72:3:32"},"nativeSrc":"72:30:32","nodeType":"YulFunctionCall","src":"72:30:32"},"variableNames":[{"name":"cleaned","nativeSrc":"61:7:32","nodeType":"YulIdentifier","src":"61:7:32"}]}]},"name":"cleanup_t_uint64","nativeSrc":"7:101:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33:5:32","nodeType":"YulTypedName","src":"33:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"43:7:32","nodeType":"YulTypedName","src":"43:7:32","type":""}],"src":"7:101:32"},{"body":{"nativeSrc":"177:52:32","nodeType":"YulBlock","src":"177:52:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"194:3:32","nodeType":"YulIdentifier","src":"194:3:32"},{"arguments":[{"name":"value","nativeSrc":"216:5:32","nodeType":"YulIdentifier","src":"216:5:32"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"199:16:32","nodeType":"YulIdentifier","src":"199:16:32"},"nativeSrc":"199:23:32","nodeType":"YulFunctionCall","src":"199:23:32"}],"functionName":{"name":"mstore","nativeSrc":"187:6:32","nodeType":"YulIdentifier","src":"187:6:32"},"nativeSrc":"187:36:32","nodeType":"YulFunctionCall","src":"187:36:32"},"nativeSrc":"187:36:32","nodeType":"YulExpressionStatement","src":"187:36:32"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"114:115:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"165:5:32","nodeType":"YulTypedName","src":"165:5:32","type":""},{"name":"pos","nativeSrc":"172:3:32","nodeType":"YulTypedName","src":"172:3:32","type":""}],"src":"114:115:32"},{"body":{"nativeSrc":"331:122:32","nodeType":"YulBlock","src":"331:122:32","statements":[{"nativeSrc":"341:26:32","nodeType":"YulAssignment","src":"341:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"353:9:32","nodeType":"YulIdentifier","src":"353:9:32"},{"kind":"number","nativeSrc":"364:2:32","nodeType":"YulLiteral","src":"364:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"349:3:32","nodeType":"YulIdentifier","src":"349:3:32"},"nativeSrc":"349:18:32","nodeType":"YulFunctionCall","src":"349:18:32"},"variableNames":[{"name":"tail","nativeSrc":"341:4:32","nodeType":"YulIdentifier","src":"341:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"419:6:32","nodeType":"YulIdentifier","src":"419:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"432:9:32","nodeType":"YulIdentifier","src":"432:9:32"},{"kind":"number","nativeSrc":"443:1:32","nodeType":"YulLiteral","src":"443:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"428:3:32","nodeType":"YulIdentifier","src":"428:3:32"},"nativeSrc":"428:17:32","nodeType":"YulFunctionCall","src":"428:17:32"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"377:41:32","nodeType":"YulIdentifier","src":"377:41:32"},"nativeSrc":"377:69:32","nodeType":"YulFunctionCall","src":"377:69:32"},"nativeSrc":"377:69:32","nodeType":"YulExpressionStatement","src":"377:69:32"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"235:218:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"303:9:32","nodeType":"YulTypedName","src":"303:9:32","type":""},{"name":"value0","nativeSrc":"315:6:32","nodeType":"YulTypedName","src":"315:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"326:4:32","nodeType":"YulTypedName","src":"326:4:32","type":""}],"src":"235:218:32"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50620000556200005b60201b60201c565b620001cf565b60006200006d6200016560201b60201c565b90508060000160089054906101000a900460ff1615620000b9576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001625767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001599190620001b2565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b620001ac816200018d565b82525050565b6000602082019050620001c96000830184620001a1565b92915050565b608051612923620001f960003960008181610fd70152818161102c01526111f701526129236000f3fe6080604052600436106101145760003560e01c806370a08231116100a0578063a9059cbb11610064578063a9059cbb14610392578063ad3cb1cc146103cf578063bf7e214f146103fa578063c4d66de814610425578063dd62ed3e1461044e57610114565b806370a08231146102ad57806379cc6790146102ea5780637a9e5e4b146103135780638fb360371461033c57806395d89b411461036757610114565b8063313ce567116100e7578063313ce567146101e957806340c10f191461021457806342966c681461023d5780634f1ef2861461026657806352d1902d1461028257610114565b806306fdde0314610119578063095ea7b31461014457806318160ddd1461018157806323b872dd146101ac575b600080fd5b34801561012557600080fd5b5061012e61048b565b60405161013b9190611d56565b60405180910390f35b34801561015057600080fd5b5061016b60048036038101906101669190611e20565b61052c565b6040516101789190611e7b565b60405180910390f35b34801561018d57600080fd5b5061019661054f565b6040516101a39190611ea5565b60405180910390f35b3480156101b857600080fd5b506101d360048036038101906101ce9190611ec0565b610567565b6040516101e09190611e7b565b60405180910390f35b3480156101f557600080fd5b506101fe610596565b60405161020b9190611f2f565b60405180910390f35b34801561022057600080fd5b5061023b60048036038101906102369190611e20565b61059f565b005b34801561024957600080fd5b50610264600480360381019061025f9190611f4a565b6105c5565b005b610280600480360381019061027b91906120ac565b6105d9565b005b34801561028e57600080fd5b506102976105f8565b6040516102a49190612121565b60405180910390f35b3480156102b957600080fd5b506102d460048036038101906102cf919061213c565b61062b565b6040516102e19190611ea5565b60405180910390f35b3480156102f657600080fd5b50610311600480360381019061030c9190611e20565b610682565b005b34801561031f57600080fd5b5061033a6004803603810190610335919061213c565b6106a2565b005b34801561034857600080fd5b5061035161078e565b60405161035e91906121a4565b60405180910390f35b34801561037357600080fd5b5061037c6107ca565b6040516103899190611d56565b60405180910390f35b34801561039e57600080fd5b506103b960048036038101906103b49190611e20565b61086b565b6040516103c69190611e7b565b60405180910390f35b3480156103db57600080fd5b506103e461088e565b6040516103f19190611d56565b60405180910390f35b34801561040657600080fd5b5061040f6108c7565b60405161041c91906121ce565b60405180910390f35b34801561043157600080fd5b5061044c6004803603810190610447919061213c565b6108ff565b005b34801561045a57600080fd5b50610475600480360381019061047091906121e9565b610b12565b6040516104829190611ea5565b60405180910390f35b60606000610497610ba7565b90508060030180546104a890612258565b80601f01602080910402602001604051908101604052809291908181526020018280546104d490612258565b80156105215780601f106104f657610100808354040283529160200191610521565b820191906000526020600020905b81548152906001019060200180831161050457829003601f168201915b505050505091505090565b600080610537610bcf565b9050610544818585610bd7565b600191505092915050565b60008061055a610ba7565b9050806002015491505090565b600080610572610bcf565b905061057f858285610be9565b61058a858585610c7d565b60019150509392505050565b60006012905090565b6105b76105aa610bcf565b6105b2610d71565b610d7e565b6105c18282610ed1565b5050565b6105d66105d0610bcf565b82610f53565b50565b6105e1610fd5565b6105ea826110bb565b6105f482826110d6565b5050565b60006106026111f5565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600080610636610ba7565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b6106948261068e610bcf565b83610be9565b61069e8282610f53565b5050565b60006106ac610bcf565b90506106b66108c7565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461072557806040517f068ca9d800000000000000000000000000000000000000000000000000000000815260040161071c91906121ce565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff163b0361078157816040517fc2f31e5e00000000000000000000000000000000000000000000000000000000815260040161077891906121ce565b60405180910390fd5b61078a8261127c565b5050565b600080610799611306565b90508060000160149054906101000a900460ff166107bb57600060e01b6107c4565b638fb3603760e01b5b91505090565b606060006107d6610ba7565b90508060040180546107e790612258565b80601f016020809104026020016040519081016040528092919081815260200182805461081390612258565b80156108605780601f1061083557610100808354040283529160200191610860565b820191906000526020600020905b81548152906001019060200180831161084357829003601f168201915b505050505091505090565b600080610876610bcf565b9050610883818585610c7d565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6000806108d2611306565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b600061090961132e565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156109575750825b9050600060018367ffffffffffffffff1614801561098c575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561099a575080155b156109d1576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610a215760018560000160086101000a81548160ff0219169083151502179055505b610a956040518060400160405280600781526020017f4e46546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e544b0000000000000000000000000000000000000000000000000000000000815250611356565b610a9d61136c565b610aa686611376565b610aae61138a565b8315610b0a5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610b0191906122e2565b60405180910390a15b505050505050565b600080610b1d610ba7565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b610be48383836001611394565b505050565b6000610bf58484610b12565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c775781811015610c67578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c5e939291906122fd565b60405180910390fd5b610c7684848484036000611394565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cef5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ce691906121ce565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d615760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d5891906121ce565b60405180910390fd5b610d6c83838361157a565b505050565b3660008036915091509091565b6000610d88611306565b9050600080610dbe610d986108c7565b87308888600090600492610dae9392919061233e565b90610db99190612391565b6117b9565b9150915081610ec95760008163ffffffff161115610e8b5760018360000160146101000a81548160ff021916908315150217905550610dfb6108c7565b73ffffffffffffffffffffffffffffffffffffffff166394c7d7ee8787876040518463ffffffff1660e01b8152600401610e379392919061242e565b600060405180830381600087803b158015610e5157600080fd5b505af1158015610e65573d6000803e3d6000fd5b5050505060008360000160146101000a81548160ff021916908315150217905550610ec8565b856040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401610ebf91906121ce565b60405180910390fd5b5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f435760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f3a91906121ce565b60405180910390fd5b610f4f6000838361157a565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc55760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fbc91906121ce565b60405180910390fd5b610fd18260008361157a565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061108257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110696118df565b73ffffffffffffffffffffffffffffffffffffffff1614155b156110b9576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6110d36110c6610bcf565b6110ce610d71565b610d7e565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561113e57506040513d601f19601f8201168201806040525081019061113b919061248c565b60015b61117f57816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161117691906121ce565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146111e657806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016111dd9190612121565b60405180910390fd5b6111f08383611936565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461127a576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611286611306565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad826040516112fa91906121ce565b60405180910390a15050565b60007ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a00905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61135e6119a9565b61136882826119e9565b5050565b6113746119a9565b565b61137e6119a9565b61138781611a26565b50565b6113926119a9565b565b600061139e610ba7565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036114125760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161140991906121ce565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114845760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161147b91906121ce565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508115611573578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161156a9190611ea5565b60405180910390a35b5050505050565b6000611584610ba7565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115da57818160020160008282546115ce91906124e8565b925050819055506116b3565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611669578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611660939291906122fd565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116fe5781816002016000828254039250508190555061174e565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117ab9190611ea5565b60405180910390a350505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff168787876040516024016117eb9392919061251c565b60405160208183030381529060405263b700961360e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161183d919061259a565b600060405180830381855afa9150503d8060008114611878576040519150601f19603f3d011682016040523d82523d6000602084013e61187d565b606091505b509150915081156118d45760408151106118b257808060200190518101906118a59190612619565b80945081955050506118d3565b60208151106118d257808060200190518101906118cf9190612659565b93505b5b5b505094509492505050565b600061190d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611a3a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61193f82611a44565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561199c576119968282611b11565b506119a5565b6119a4611b95565b5b5050565b6119b1611bd2565b6119e7576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6119f16119a9565b60006119fb610ba7565b905082816003019081611a0e919061281b565b5081816004019081611a20919061281b565b50505050565b611a2e6119a9565b611a378161127c565b50565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03611aa057806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611a9791906121ce565b60405180910390fd5b80611acd7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611a3a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611b3b919061259a565b600060405180830381855af49150503d8060008114611b76576040519150601f19603f3d011682016040523d82523d6000602084013e611b7b565b606091505b5091509150611b8b858383611bf2565b9250505092915050565b6000341115611bd0576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611bdc61132e565b60000160089054906101000a900460ff16905090565b606082611c0757611c0282611c81565b611c79565b60008251148015611c2f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15611c7157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611c6891906121ce565b60405180910390fd5b819050611c7a565b5b9392505050565b600081511115611c945780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015611d00578082015181840152602081019050611ce5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611d2882611cc6565b611d328185611cd1565b9350611d42818560208601611ce2565b611d4b81611d0c565b840191505092915050565b60006020820190508181036000830152611d708184611d1d565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611db782611d8c565b9050919050565b611dc781611dac565b8114611dd257600080fd5b50565b600081359050611de481611dbe565b92915050565b6000819050919050565b611dfd81611dea565b8114611e0857600080fd5b50565b600081359050611e1a81611df4565b92915050565b60008060408385031215611e3757611e36611d82565b5b6000611e4585828601611dd5565b9250506020611e5685828601611e0b565b9150509250929050565b60008115159050919050565b611e7581611e60565b82525050565b6000602082019050611e906000830184611e6c565b92915050565b611e9f81611dea565b82525050565b6000602082019050611eba6000830184611e96565b92915050565b600080600060608486031215611ed957611ed8611d82565b5b6000611ee786828701611dd5565b9350506020611ef886828701611dd5565b9250506040611f0986828701611e0b565b9150509250925092565b600060ff82169050919050565b611f2981611f13565b82525050565b6000602082019050611f446000830184611f20565b92915050565b600060208284031215611f6057611f5f611d82565b5b6000611f6e84828501611e0b565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611fb982611d0c565b810181811067ffffffffffffffff82111715611fd857611fd7611f81565b5b80604052505050565b6000611feb611d78565b9050611ff78282611fb0565b919050565b600067ffffffffffffffff82111561201757612016611f81565b5b61202082611d0c565b9050602081019050919050565b82818337600083830152505050565b600061204f61204a84611ffc565b611fe1565b90508281526020810184848401111561206b5761206a611f7c565b5b61207684828561202d565b509392505050565b600082601f83011261209357612092611f77565b5b81356120a384826020860161203c565b91505092915050565b600080604083850312156120c3576120c2611d82565b5b60006120d185828601611dd5565b925050602083013567ffffffffffffffff8111156120f2576120f1611d87565b5b6120fe8582860161207e565b9150509250929050565b6000819050919050565b61211b81612108565b82525050565b60006020820190506121366000830184612112565b92915050565b60006020828403121561215257612151611d82565b5b600061216084828501611dd5565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61219e81612169565b82525050565b60006020820190506121b96000830184612195565b92915050565b6121c881611dac565b82525050565b60006020820190506121e360008301846121bf565b92915050565b60008060408385031215612200576121ff611d82565b5b600061220e85828601611dd5565b925050602061221f85828601611dd5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061227057607f821691505b60208210810361228357612282612229565b5b50919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006122cc6122c76122c284612289565b6122a7565b612293565b9050919050565b6122dc816122b1565b82525050565b60006020820190506122f760008301846122d3565b92915050565b600060608201905061231260008301866121bf565b61231f6020830185611e96565b61232c6040830184611e96565b949350505050565b600080fd5b600080fd5b6000808585111561235257612351612334565b5b8386111561236357612362612339565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b600061239d8383612379565b826123a88135612169565b925060048210156123e8576123e37fffffffff0000000000000000000000000000000000000000000000000000000083600403600802612384565b831692505b505092915050565b600082825260208201905092915050565b600061240d83856123f0565b935061241a83858461202d565b61242383611d0c565b840190509392505050565b600060408201905061244360008301866121bf565b8181036020830152612456818486612401565b9050949350505050565b61246981612108565b811461247457600080fd5b50565b60008151905061248681612460565b92915050565b6000602082840312156124a2576124a1611d82565b5b60006124b084828501612477565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006124f382611dea565b91506124fe83611dea565b9250828201905080821115612516576125156124b9565b5b92915050565b600060608201905061253160008301866121bf565b61253e60208301856121bf565b61254b6040830184612195565b949350505050565b600081519050919050565b600081905092915050565b600061257482612553565b61257e818561255e565b935061258e818560208601611ce2565b80840191505092915050565b60006125a68284612569565b915081905092915050565b6125ba81611e60565b81146125c557600080fd5b50565b6000815190506125d7816125b1565b92915050565b600063ffffffff82169050919050565b6125f6816125dd565b811461260157600080fd5b50565b600081519050612613816125ed565b92915050565b600080604083850312156126305761262f611d82565b5b600061263e858286016125c8565b925050602061264f85828601612604565b9150509250929050565b60006020828403121561266f5761266e611d82565b5b600061267d848285016125c8565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b6000600883026126db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612384565b6126e58683612384565b95508019841693508086168417925050509392505050565b600061271861271361270e84611dea565b6122a7565b611dea565b9050919050565b6000819050919050565b612732836126fd565b61274661273e8261271f565b8484546126ab565b825550505050565b600090565b61275b61274e565b612766818484612729565b505050565b5b8181101561278a5761277f600082612753565b60018101905061276c565b5050565b601f8211156127cf576127a081612686565b6127a98461269b565b810160208510156127b8578190505b6127cc6127c48561269b565b83018261276b565b50505b505050565b600082821c905092915050565b60006127f2600019846008026127d4565b1980831691505092915050565b600061280b83836127e1565b9150826002028217905092915050565b61282482611cc6565b67ffffffffffffffff81111561283d5761283c611f81565b5b6128478254612258565b61285282828561278e565b600060209050601f8311600181146128855760008415612873578287015190505b61287d85826127ff565b8655506128e5565b601f19841661289386612686565b60005b828110156128bb57848901518255600182019150602085019450602081019050612896565b868310156128d857848901516128d4601f8916826127e1565b8355505b6001600288020188555050505b50505050505056fea264697066735822122055efdc27d8b919a1a52b8c96d0b2dc17ebb193dc4950ced2d968c62067bb0bfe64736f6c63430008180033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x55 PUSH3 0x5B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1CF JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6D PUSH3 0x165 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x162 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x159 SWAP2 SWAP1 PUSH3 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AC DUP2 PUSH3 0x18D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2923 PUSH3 0x1F9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xFD7 ADD MSTORE DUP2 DUP2 PUSH2 0x102C ADD MSTORE PUSH2 0x11F7 ADD MSTORE PUSH2 0x2923 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x8FB36037 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x367 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x282 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E4 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40F PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x497 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x4A8 SWAP1 PUSH2 0x2258 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D4 SWAP1 PUSH2 0x2258 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x521 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x521 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x504 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x537 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH2 0x544 DUP2 DUP6 DUP6 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x55A PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x572 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH2 0x57F DUP6 DUP3 DUP6 PUSH2 0xBE9 JUMP JUMPDEST PUSH2 0x58A DUP6 DUP6 DUP6 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x5AA PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5C1 DUP3 DUP3 PUSH2 0xED1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5D6 PUSH2 0x5D0 PUSH2 0xBCF JUMP JUMPDEST DUP3 PUSH2 0xF53 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0xFD5 JUMP JUMPDEST PUSH2 0x5EA DUP3 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0x5F4 DUP3 DUP3 PUSH2 0x10D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x602 PUSH2 0x11F5 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x636 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x694 DUP3 PUSH2 0x68E PUSH2 0xBCF JUMP JUMPDEST DUP4 PUSH2 0xBE9 JUMP JUMPDEST PUSH2 0x69E DUP3 DUP3 PUSH2 0xF53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AC PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH2 0x6B6 PUSH2 0x8C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x725 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x781 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xC2F31E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A DUP3 PUSH2 0x127C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x799 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7BB JUMPI PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0x7C4 JUMP JUMPDEST PUSH4 0x8FB36037 PUSH1 0xE0 SHL JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x7D6 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x7E7 SWAP1 PUSH2 0x2258 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x813 SWAP1 PUSH2 0x2258 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x860 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x835 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x860 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x843 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x876 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH2 0x883 DUP2 DUP6 DUP6 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D2 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x909 PUSH2 0x132E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x957 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x98C JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x99A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xA95 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E46546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1356 JUMP JUMPDEST PUSH2 0xA9D PUSH2 0x136C JUMP JUMPDEST PUSH2 0xAA6 DUP7 PUSH2 0x1376 JUMP JUMPDEST PUSH2 0xAAE PUSH2 0x138A JUMP JUMPDEST DUP4 ISZERO PUSH2 0xB0A JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0x22E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB1D PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBE4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1394 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF5 DUP5 DUP5 PUSH2 0xB12 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC77 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC67 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC76 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1394 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCEF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE6 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD61 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD6C DUP4 DUP4 DUP4 PUSH2 0x157A JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD88 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xDBE PUSH2 0xD98 PUSH2 0x8C7 JUMP JUMPDEST DUP8 ADDRESS DUP9 DUP9 PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP3 PUSH2 0xDAE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST SWAP1 PUSH2 0xDB9 SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xE8B JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDFB PUSH2 0x8C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94C7D7EE DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE37 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x242E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEC8 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF43 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4F PUSH1 0x0 DUP4 DUP4 PUSH2 0x157A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD1 DUP3 PUSH1 0x0 DUP4 PUSH2 0x157A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1082 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1069 PUSH2 0x18DF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10D3 PUSH2 0x10C6 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x10CE PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x113E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x117F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x11E6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F0 DUP4 DUP4 PUSH2 0x1936 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1286 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x12FA SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF3177357AB46D8AF007AB3FDB9AF81DA189E1068FEFDC0073DCA88A2CAB40A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x135E PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1368 DUP3 DUP3 PUSH2 0x19E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1374 PUSH2 0x19A9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x137E PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH2 0x1A26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1392 PUSH2 0x19A9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139E PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1412 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1409 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1484 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1573 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x156A SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1584 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DA JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15CE SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1669 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1660 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16FE JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x174E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17EB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x251C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xB7009613 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1878 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x187D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x18D4 JUMPI PUSH1 0x40 DUP2 MLOAD LT PUSH2 0x18B2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18A5 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x18D2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18CF SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x193F DUP3 PUSH2 0x1A44 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x199C JUMPI PUSH2 0x1996 DUP3 DUP3 PUSH2 0x1B11 JUMP JUMPDEST POP PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0x19A4 PUSH2 0x1B95 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x19B1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0x19E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19F1 PUSH2 0x19A9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FB PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1A0E SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1A20 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1A2E PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1A37 DUP2 PUSH2 0x127C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1AA0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A97 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1ACD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B3B SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B8B DUP6 DUP4 DUP4 PUSH2 0x1BF2 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1BD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDC PUSH2 0x132E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1C07 JUMPI PUSH2 0x1C02 DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1C2F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1C71 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1C7A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1C94 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D00 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D28 DUP3 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x1D32 DUP2 DUP6 PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D42 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH2 0x1D0C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D70 DUP2 DUP5 PUSH2 0x1D1D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 PUSH2 0x1D8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC7 DUP2 PUSH2 0x1DAC JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DE4 DUP2 PUSH2 0x1DBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFD DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP2 EQ PUSH2 0x1E08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E1A DUP2 PUSH2 0x1DF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E37 JUMPI PUSH2 0x1E36 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E45 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E56 DUP6 DUP3 DUP7 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E75 DUP2 PUSH2 0x1E60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E9F DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EBA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ED9 JUMPI PUSH2 0x1ED8 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EF8 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F09 DUP7 DUP3 DUP8 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F29 DUP2 PUSH2 0x1F13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F60 JUMPI PUSH2 0x1F5F PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6E DUP5 DUP3 DUP6 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FB9 DUP3 PUSH2 0x1D0C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEB PUSH2 0x1D78 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FF7 DUP3 DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2017 JUMPI PUSH2 0x2016 PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST PUSH2 0x2020 DUP3 PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204F PUSH2 0x204A DUP5 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0x1FE1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x206B JUMPI PUSH2 0x206A PUSH2 0x1F7C JUMP JUMPDEST JUMPDEST PUSH2 0x2076 DUP5 DUP3 DUP6 PUSH2 0x202D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20A3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x203C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F2 JUMPI PUSH2 0x20F1 PUSH2 0x1D87 JUMP JUMPDEST JUMPDEST PUSH2 0x20FE DUP6 DUP3 DUP7 ADD PUSH2 0x207E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x211B DUP2 PUSH2 0x2108 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2136 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2160 DUP5 DUP3 DUP6 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219E DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2195 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21C8 DUP2 PUSH2 0x1DAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2200 JUMPI PUSH2 0x21FF PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220E DUP6 DUP3 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x221F DUP6 DUP3 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2270 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2283 JUMPI PUSH2 0x2282 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CC PUSH2 0x22C7 PUSH2 0x22C2 DUP5 PUSH2 0x2289 JUMP JUMPDEST PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x2293 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22DC DUP2 PUSH2 0x22B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2312 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x231F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x232C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E96 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x2352 JUMPI PUSH2 0x2351 PUSH2 0x2334 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2362 PUSH2 0x2339 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239D DUP4 DUP4 PUSH2 0x2379 JUMP JUMPDEST DUP3 PUSH2 0x23A8 DUP2 CALLDATALOAD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x23E8 JUMPI PUSH2 0x23E3 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x2384 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240D DUP4 DUP6 PUSH2 0x23F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x241A DUP4 DUP6 DUP5 PUSH2 0x202D JUMP JUMPDEST PUSH2 0x2423 DUP4 PUSH2 0x1D0C JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2443 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21BF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2456 DUP2 DUP5 DUP7 PUSH2 0x2401 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2469 DUP2 PUSH2 0x2108 JUMP JUMPDEST DUP2 EQ PUSH2 0x2474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2486 DUP2 PUSH2 0x2460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH2 0x24A1 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24B0 DUP5 DUP3 DUP6 ADD PUSH2 0x2477 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x24FE DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x24B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2531 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x253E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x254B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2195 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2574 DUP3 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x257E DUP2 DUP6 PUSH2 0x255E JUMP JUMPDEST SWAP4 POP PUSH2 0x258E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A6 DUP3 DUP5 PUSH2 0x2569 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25BA DUP2 PUSH2 0x1E60 JUMP JUMPDEST DUP2 EQ PUSH2 0x25C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25D7 DUP2 PUSH2 0x25B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F6 DUP2 PUSH2 0x25DD JUMP JUMPDEST DUP2 EQ PUSH2 0x2601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2613 DUP2 PUSH2 0x25ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2630 JUMPI PUSH2 0x262F PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x263E DUP6 DUP3 DUP7 ADD PUSH2 0x25C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x264F DUP6 DUP3 DUP7 ADD PUSH2 0x2604 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266F JUMPI PUSH2 0x266E PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x267D DUP5 DUP3 DUP6 ADD PUSH2 0x25C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x26DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2384 JUMP JUMPDEST PUSH2 0x26E5 DUP7 DUP4 PUSH2 0x2384 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2718 PUSH2 0x2713 PUSH2 0x270E DUP5 PUSH2 0x1DEA JUMP JUMPDEST PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x1DEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2732 DUP4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x2746 PUSH2 0x273E DUP3 PUSH2 0x271F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x275B PUSH2 0x274E JUMP JUMPDEST PUSH2 0x2766 DUP2 DUP5 DUP5 PUSH2 0x2729 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x278A JUMPI PUSH2 0x277F PUSH1 0x0 DUP3 PUSH2 0x2753 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x276C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x27CF JUMPI PUSH2 0x27A0 DUP2 PUSH2 0x2686 JUMP JUMPDEST PUSH2 0x27A9 DUP5 PUSH2 0x269B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27B8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x27CC PUSH2 0x27C4 DUP6 PUSH2 0x269B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x276B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x27D4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280B DUP4 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2824 DUP3 PUSH2 0x1CC6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x283D JUMPI PUSH2 0x283C PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST PUSH2 0x2847 DUP3 SLOAD PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x2852 DUP3 DUP3 DUP6 PUSH2 0x278E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2885 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2873 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x287D DUP6 DUP3 PUSH2 0x27FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2893 DUP7 PUSH2 0x2686 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2896 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x28D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x28D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27E1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xEF 0xDC 0x27 0xD8 0xB9 NOT LOG1 0xA5 0x2B DUP13 SWAP7 0xD0 0xB2 0xDC OR 0xEB 0xB1 SWAP4 0xDC BLOBHASH POP 0xCE 0xD2 0xD9 PUSH9 0xC62067BB0BFE64736F PUSH13 0x63430008180033000000000000 ","sourceMap":"529:686:30:-:0;;;1171:4:2;1128:48;;;;;;;;;709:53:30;;;;;;;;;;733:22;:20;;;:22;;:::i;:::-;529:686;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:32:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;529:686:30:-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_525":{"entryPoint":2190,"id":525,"parameterSlots":0,"returnSlots":0},"@__AccessManaged_init_50":{"entryPoint":4982,"id":50,"parameterSlots":1,"returnSlots":0},"@__AccessManaged_init_unchained_62":{"entryPoint":6694,"id":62,"parameterSlots":1,"returnSlots":0},"@__ERC20Burnable_init_1321":{"entryPoint":4972,"id":1321,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_751":{"entryPoint":4950,"id":751,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_779":{"entryPoint":6633,"id":779,"parameterSlots":2,"returnSlots":0},"@__UUPSUpgradeable_init_555":{"entryPoint":5002,"id":555,"parameterSlots":0,"returnSlots":0},"@_approve_1183":{"entryPoint":3031,"id":1183,"parameterSlots":3,"returnSlots":0},"@_approve_1251":{"entryPoint":5012,"id":1251,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_7819":{"entryPoint":4283,"id":7819,"parameterSlots":1,"returnSlots":0},"@_burn_1165":{"entryPoint":3923,"id":1165,"parameterSlots":2,"returnSlots":0},"@_checkCanCall_246":{"entryPoint":3454,"id":246,"parameterSlots":3,"returnSlots":0},"@_checkInitializing_423":{"entryPoint":6569,"id":423,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_3650":{"entryPoint":7061,"id":3650,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_631":{"entryPoint":4597,"id":631,"parameterSlots":0,"returnSlots":0},"@_checkProxy_615":{"entryPoint":4053,"id":615,"parameterSlots":0,"returnSlots":0},"@_getAccessManagedStorage_37":{"entryPoint":4870,"id":37,"parameterSlots":0,"returnSlots":1},"@_getERC20Storage_735":{"entryPoint":2983,"id":735,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_500":{"entryPoint":4910,"id":500,"parameterSlots":0,"returnSlots":1},"@_isInitializing_491":{"entryPoint":7122,"id":491,"parameterSlots":0,"returnSlots":1},"@_mint_1132":{"entryPoint":3793,"id":1132,"parameterSlots":2,"returnSlots":0},"@_msgData_2576":{"entryPoint":3441,"id":2576,"parameterSlots":0,"returnSlots":2},"@_msgSender_2567":{"entryPoint":3023,"id":2567,"parameterSlots":0,"returnSlots":1},"@_revert_4180":{"entryPoint":7297,"id":4180,"parameterSlots":1,"returnSlots":0},"@_setAuthority_174":{"entryPoint":4732,"id":174,"parameterSlots":1,"returnSlots":0},"@_setImplementation_3436":{"entryPoint":6724,"id":3436,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1299":{"entryPoint":3049,"id":1299,"parameterSlots":3,"returnSlots":0},"@_transfer_1007":{"entryPoint":3197,"id":1007,"parameterSlots":3,"returnSlots":0},"@_update_1099":{"entryPoint":5498,"id":1099,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCallUUPS_682":{"entryPoint":4310,"id":682,"parameterSlots":2,"returnSlots":0},"@allowance_904":{"entryPoint":2834,"id":904,"parameterSlots":2,"returnSlots":1},"@approve_928":{"entryPoint":1324,"id":928,"parameterSlots":2,"returnSlots":1},"@authority_90":{"entryPoint":2247,"id":90,"parameterSlots":0,"returnSlots":1},"@balanceOf_856":{"entryPoint":1579,"id":856,"parameterSlots":1,"returnSlots":1},"@burnFrom_1361":{"entryPoint":1666,"id":1361,"parameterSlots":2,"returnSlots":0},"@burn_1340":{"entryPoint":1477,"id":1340,"parameterSlots":1,"returnSlots":0},"@canCallWithDelay_2706":{"entryPoint":6073,"id":2706,"parameterSlots":4,"returnSlots":2},"@decimals_820":{"entryPoint":1430,"id":820,"parameterSlots":0,"returnSlots":1},"@functionDelegateCall_4100":{"entryPoint":6929,"id":4100,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_4213":{"entryPoint":6714,"id":4213,"parameterSlots":1,"returnSlots":1},"@getImplementation_3409":{"entryPoint":6367,"id":3409,"parameterSlots":0,"returnSlots":1},"@initialize_7795":{"entryPoint":2303,"id":7795,"parameterSlots":1,"returnSlots":0},"@isConsumingScheduledOp_151":{"entryPoint":1934,"id":151,"parameterSlots":0,"returnSlots":1},"@mint_7810":{"entryPoint":1439,"id":7810,"parameterSlots":2,"returnSlots":0},"@name_795":{"entryPoint":1163,"id":795,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_573":{"entryPoint":1528,"id":573,"parameterSlots":0,"returnSlots":1},"@setAuthority_127":{"entryPoint":1698,"id":127,"parameterSlots":1,"returnSlots":0},"@symbol_811":{"entryPoint":1994,"id":811,"parameterSlots":0,"returnSlots":1},"@totalSupply_836":{"entryPoint":1359,"id":836,"parameterSlots":0,"returnSlots":1},"@transferFrom_960":{"entryPoint":1383,"id":960,"parameterSlots":3,"returnSlots":1},"@transfer_880":{"entryPoint":2155,"id":880,"parameterSlots":2,"returnSlots":1},"@upgradeToAndCall_3470":{"entryPoint":6454,"id":3470,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_593":{"entryPoint":1497,"id":593,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_4140":{"entryPoint":7154,"id":4140,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8252,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":9672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":9335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":9732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8508,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8681,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7872,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":8364,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7712,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":9817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_boolt_uint32_fromMemory":{"entryPoint":9753,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":9356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8010,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8639,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7788,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8466,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":8597,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":9217,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":8915,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7830,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":7968,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed":{"entryPoint":9500,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9262,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8957,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7803,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":8481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":8612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":8930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":7983,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8161,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7544,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8188,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":9862,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":9081,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9555,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7366,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":9200,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9566,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7377,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":9022,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":9448,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":10126,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":7596,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7776,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8456,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":8553,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":8841,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7564,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7658,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":9693,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":8851,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":7955,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":10091,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4":{"entryPoint":9105,"id":null,"parameterSlots":2,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":8881,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":9981,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10267,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8237,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7394,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":9883,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8792,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":10239,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":8112,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":8871,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":10209,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":9401,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8745,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8065,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10015,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8055,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":9017,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":9012,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8060,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7559,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7554,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7436,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":9092,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":10196,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":10067,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":9899,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":10025,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7614,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9649,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":9312,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7668,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":9709,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":10062,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:22414:32","nodeType":"YulBlock","src":"0:22414:32","statements":[{"body":{"nativeSrc":"66:40:32","nodeType":"YulBlock","src":"66:40:32","statements":[{"nativeSrc":"77:22:32","nodeType":"YulAssignment","src":"77:22:32","value":{"arguments":[{"name":"value","nativeSrc":"93:5:32","nodeType":"YulIdentifier","src":"93:5:32"}],"functionName":{"name":"mload","nativeSrc":"87:5:32","nodeType":"YulIdentifier","src":"87:5:32"},"nativeSrc":"87:12:32","nodeType":"YulFunctionCall","src":"87:12:32"},"variableNames":[{"name":"length","nativeSrc":"77:6:32","nodeType":"YulIdentifier","src":"77:6:32"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:32","nodeType":"YulTypedName","src":"49:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:32","nodeType":"YulTypedName","src":"59:6:32","type":""}],"src":"7:99:32"},{"body":{"nativeSrc":"208:73:32","nodeType":"YulBlock","src":"208:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:32","nodeType":"YulIdentifier","src":"225:3:32"},{"name":"length","nativeSrc":"230:6:32","nodeType":"YulIdentifier","src":"230:6:32"}],"functionName":{"name":"mstore","nativeSrc":"218:6:32","nodeType":"YulIdentifier","src":"218:6:32"},"nativeSrc":"218:19:32","nodeType":"YulFunctionCall","src":"218:19:32"},"nativeSrc":"218:19:32","nodeType":"YulExpressionStatement","src":"218:19:32"},{"nativeSrc":"246:29:32","nodeType":"YulAssignment","src":"246:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:32","nodeType":"YulIdentifier","src":"265:3:32"},{"kind":"number","nativeSrc":"270:4:32","nodeType":"YulLiteral","src":"270:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:32","nodeType":"YulIdentifier","src":"261:3:32"},"nativeSrc":"261:14:32","nodeType":"YulFunctionCall","src":"261:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:32","nodeType":"YulIdentifier","src":"246:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:32","nodeType":"YulTypedName","src":"180:3:32","type":""},{"name":"length","nativeSrc":"185:6:32","nodeType":"YulTypedName","src":"185:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:32","nodeType":"YulTypedName","src":"196:11:32","type":""}],"src":"112:169:32"},{"body":{"nativeSrc":"349:184:32","nodeType":"YulBlock","src":"349:184:32","statements":[{"nativeSrc":"359:10:32","nodeType":"YulVariableDeclaration","src":"359:10:32","value":{"kind":"number","nativeSrc":"368:1:32","nodeType":"YulLiteral","src":"368:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:32","nodeType":"YulTypedName","src":"363:1:32","type":""}]},{"body":{"nativeSrc":"428:63:32","nodeType":"YulBlock","src":"428:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:32","nodeType":"YulIdentifier","src":"453:3:32"},{"name":"i","nativeSrc":"458:1:32","nodeType":"YulIdentifier","src":"458:1:32"}],"functionName":{"name":"add","nativeSrc":"449:3:32","nodeType":"YulIdentifier","src":"449:3:32"},"nativeSrc":"449:11:32","nodeType":"YulFunctionCall","src":"449:11:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:32","nodeType":"YulIdentifier","src":"472:3:32"},{"name":"i","nativeSrc":"477:1:32","nodeType":"YulIdentifier","src":"477:1:32"}],"functionName":{"name":"add","nativeSrc":"468:3:32","nodeType":"YulIdentifier","src":"468:3:32"},"nativeSrc":"468:11:32","nodeType":"YulFunctionCall","src":"468:11:32"}],"functionName":{"name":"mload","nativeSrc":"462:5:32","nodeType":"YulIdentifier","src":"462:5:32"},"nativeSrc":"462:18:32","nodeType":"YulFunctionCall","src":"462:18:32"}],"functionName":{"name":"mstore","nativeSrc":"442:6:32","nodeType":"YulIdentifier","src":"442:6:32"},"nativeSrc":"442:39:32","nodeType":"YulFunctionCall","src":"442:39:32"},"nativeSrc":"442:39:32","nodeType":"YulExpressionStatement","src":"442:39:32"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:32","nodeType":"YulIdentifier","src":"389:1:32"},{"name":"length","nativeSrc":"392:6:32","nodeType":"YulIdentifier","src":"392:6:32"}],"functionName":{"name":"lt","nativeSrc":"386:2:32","nodeType":"YulIdentifier","src":"386:2:32"},"nativeSrc":"386:13:32","nodeType":"YulFunctionCall","src":"386:13:32"},"nativeSrc":"378:113:32","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:32","nodeType":"YulBlock","src":"400:19:32","statements":[{"nativeSrc":"402:15:32","nodeType":"YulAssignment","src":"402:15:32","value":{"arguments":[{"name":"i","nativeSrc":"411:1:32","nodeType":"YulIdentifier","src":"411:1:32"},{"kind":"number","nativeSrc":"414:2:32","nodeType":"YulLiteral","src":"414:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:32","nodeType":"YulIdentifier","src":"407:3:32"},"nativeSrc":"407:10:32","nodeType":"YulFunctionCall","src":"407:10:32"},"variableNames":[{"name":"i","nativeSrc":"402:1:32","nodeType":"YulIdentifier","src":"402:1:32"}]}]},"pre":{"nativeSrc":"382:3:32","nodeType":"YulBlock","src":"382:3:32","statements":[]},"src":"378:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:32","nodeType":"YulIdentifier","src":"511:3:32"},{"name":"length","nativeSrc":"516:6:32","nodeType":"YulIdentifier","src":"516:6:32"}],"functionName":{"name":"add","nativeSrc":"507:3:32","nodeType":"YulIdentifier","src":"507:3:32"},"nativeSrc":"507:16:32","nodeType":"YulFunctionCall","src":"507:16:32"},{"kind":"number","nativeSrc":"525:1:32","nodeType":"YulLiteral","src":"525:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:32","nodeType":"YulIdentifier","src":"500:6:32"},"nativeSrc":"500:27:32","nodeType":"YulFunctionCall","src":"500:27:32"},"nativeSrc":"500:27:32","nodeType":"YulExpressionStatement","src":"500:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:32","nodeType":"YulTypedName","src":"331:3:32","type":""},{"name":"dst","nativeSrc":"336:3:32","nodeType":"YulTypedName","src":"336:3:32","type":""},{"name":"length","nativeSrc":"341:6:32","nodeType":"YulTypedName","src":"341:6:32","type":""}],"src":"287:246:32"},{"body":{"nativeSrc":"587:54:32","nodeType":"YulBlock","src":"587:54:32","statements":[{"nativeSrc":"597:38:32","nodeType":"YulAssignment","src":"597:38:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:32","nodeType":"YulIdentifier","src":"615:5:32"},{"kind":"number","nativeSrc":"622:2:32","nodeType":"YulLiteral","src":"622:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:32","nodeType":"YulIdentifier","src":"611:3:32"},"nativeSrc":"611:14:32","nodeType":"YulFunctionCall","src":"611:14:32"},{"arguments":[{"kind":"number","nativeSrc":"631:2:32","nodeType":"YulLiteral","src":"631:2:32","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:32","nodeType":"YulIdentifier","src":"627:3:32"},"nativeSrc":"627:7:32","nodeType":"YulFunctionCall","src":"627:7:32"}],"functionName":{"name":"and","nativeSrc":"607:3:32","nodeType":"YulIdentifier","src":"607:3:32"},"nativeSrc":"607:28:32","nodeType":"YulFunctionCall","src":"607:28:32"},"variableNames":[{"name":"result","nativeSrc":"597:6:32","nodeType":"YulIdentifier","src":"597:6:32"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:32","nodeType":"YulTypedName","src":"570:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:32","nodeType":"YulTypedName","src":"580:6:32","type":""}],"src":"539:102:32"},{"body":{"nativeSrc":"739:285:32","nodeType":"YulBlock","src":"739:285:32","statements":[{"nativeSrc":"749:53:32","nodeType":"YulVariableDeclaration","src":"749:53:32","value":{"arguments":[{"name":"value","nativeSrc":"796:5:32","nodeType":"YulIdentifier","src":"796:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:32","nodeType":"YulIdentifier","src":"763:32:32"},"nativeSrc":"763:39:32","nodeType":"YulFunctionCall","src":"763:39:32"},"variables":[{"name":"length","nativeSrc":"753:6:32","nodeType":"YulTypedName","src":"753:6:32","type":""}]},{"nativeSrc":"811:78:32","nodeType":"YulAssignment","src":"811:78:32","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:32","nodeType":"YulIdentifier","src":"877:3:32"},{"name":"length","nativeSrc":"882:6:32","nodeType":"YulIdentifier","src":"882:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:32","nodeType":"YulIdentifier","src":"818:58:32"},"nativeSrc":"818:71:32","nodeType":"YulFunctionCall","src":"818:71:32"},"variableNames":[{"name":"pos","nativeSrc":"811:3:32","nodeType":"YulIdentifier","src":"811:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:32","nodeType":"YulIdentifier","src":"937:5:32"},{"kind":"number","nativeSrc":"944:4:32","nodeType":"YulLiteral","src":"944:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:32","nodeType":"YulIdentifier","src":"933:3:32"},"nativeSrc":"933:16:32","nodeType":"YulFunctionCall","src":"933:16:32"},{"name":"pos","nativeSrc":"951:3:32","nodeType":"YulIdentifier","src":"951:3:32"},{"name":"length","nativeSrc":"956:6:32","nodeType":"YulIdentifier","src":"956:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:32","nodeType":"YulIdentifier","src":"898:34:32"},"nativeSrc":"898:65:32","nodeType":"YulFunctionCall","src":"898:65:32"},"nativeSrc":"898:65:32","nodeType":"YulExpressionStatement","src":"898:65:32"},{"nativeSrc":"972:46:32","nodeType":"YulAssignment","src":"972:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:32","nodeType":"YulIdentifier","src":"983:3:32"},{"arguments":[{"name":"length","nativeSrc":"1010:6:32","nodeType":"YulIdentifier","src":"1010:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:32","nodeType":"YulIdentifier","src":"988:21:32"},"nativeSrc":"988:29:32","nodeType":"YulFunctionCall","src":"988:29:32"}],"functionName":{"name":"add","nativeSrc":"979:3:32","nodeType":"YulIdentifier","src":"979:3:32"},"nativeSrc":"979:39:32","nodeType":"YulFunctionCall","src":"979:39:32"},"variableNames":[{"name":"end","nativeSrc":"972:3:32","nodeType":"YulIdentifier","src":"972:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:32","nodeType":"YulTypedName","src":"720:5:32","type":""},{"name":"pos","nativeSrc":"727:3:32","nodeType":"YulTypedName","src":"727:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:32","nodeType":"YulTypedName","src":"735:3:32","type":""}],"src":"647:377:32"},{"body":{"nativeSrc":"1148:195:32","nodeType":"YulBlock","src":"1148:195:32","statements":[{"nativeSrc":"1158:26:32","nodeType":"YulAssignment","src":"1158:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:32","nodeType":"YulIdentifier","src":"1170:9:32"},{"kind":"number","nativeSrc":"1181:2:32","nodeType":"YulLiteral","src":"1181:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:32","nodeType":"YulIdentifier","src":"1166:3:32"},"nativeSrc":"1166:18:32","nodeType":"YulFunctionCall","src":"1166:18:32"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:32","nodeType":"YulIdentifier","src":"1158:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:32","nodeType":"YulIdentifier","src":"1205:9:32"},{"kind":"number","nativeSrc":"1216:1:32","nodeType":"YulLiteral","src":"1216:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:32","nodeType":"YulIdentifier","src":"1201:3:32"},"nativeSrc":"1201:17:32","nodeType":"YulFunctionCall","src":"1201:17:32"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:32","nodeType":"YulIdentifier","src":"1224:4:32"},{"name":"headStart","nativeSrc":"1230:9:32","nodeType":"YulIdentifier","src":"1230:9:32"}],"functionName":{"name":"sub","nativeSrc":"1220:3:32","nodeType":"YulIdentifier","src":"1220:3:32"},"nativeSrc":"1220:20:32","nodeType":"YulFunctionCall","src":"1220:20:32"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:32","nodeType":"YulIdentifier","src":"1194:6:32"},"nativeSrc":"1194:47:32","nodeType":"YulFunctionCall","src":"1194:47:32"},"nativeSrc":"1194:47:32","nodeType":"YulExpressionStatement","src":"1194:47:32"},{"nativeSrc":"1250:86:32","nodeType":"YulAssignment","src":"1250:86:32","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:32","nodeType":"YulIdentifier","src":"1322:6:32"},{"name":"tail","nativeSrc":"1331:4:32","nodeType":"YulIdentifier","src":"1331:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:32","nodeType":"YulIdentifier","src":"1258:63:32"},"nativeSrc":"1258:78:32","nodeType":"YulFunctionCall","src":"1258:78:32"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:32","nodeType":"YulIdentifier","src":"1250:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:32","nodeType":"YulTypedName","src":"1120:9:32","type":""},{"name":"value0","nativeSrc":"1132:6:32","nodeType":"YulTypedName","src":"1132:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:32","nodeType":"YulTypedName","src":"1143:4:32","type":""}],"src":"1030:313:32"},{"body":{"nativeSrc":"1389:35:32","nodeType":"YulBlock","src":"1389:35:32","statements":[{"nativeSrc":"1399:19:32","nodeType":"YulAssignment","src":"1399:19:32","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:32","nodeType":"YulLiteral","src":"1415:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:32","nodeType":"YulIdentifier","src":"1409:5:32"},"nativeSrc":"1409:9:32","nodeType":"YulFunctionCall","src":"1409:9:32"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:32","nodeType":"YulIdentifier","src":"1399:6:32"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:32","nodeType":"YulTypedName","src":"1382:6:32","type":""}],"src":"1349:75:32"},{"body":{"nativeSrc":"1519:28:32","nodeType":"YulBlock","src":"1519:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:32","nodeType":"YulLiteral","src":"1536:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:32","nodeType":"YulLiteral","src":"1539:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:32","nodeType":"YulIdentifier","src":"1529:6:32"},"nativeSrc":"1529:12:32","nodeType":"YulFunctionCall","src":"1529:12:32"},"nativeSrc":"1529:12:32","nodeType":"YulExpressionStatement","src":"1529:12:32"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:32","nodeType":"YulFunctionDefinition","src":"1430:117:32"},{"body":{"nativeSrc":"1642:28:32","nodeType":"YulBlock","src":"1642:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:32","nodeType":"YulLiteral","src":"1659:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:32","nodeType":"YulLiteral","src":"1662:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:32","nodeType":"YulIdentifier","src":"1652:6:32"},"nativeSrc":"1652:12:32","nodeType":"YulFunctionCall","src":"1652:12:32"},"nativeSrc":"1652:12:32","nodeType":"YulExpressionStatement","src":"1652:12:32"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:32","nodeType":"YulFunctionDefinition","src":"1553:117:32"},{"body":{"nativeSrc":"1721:81:32","nodeType":"YulBlock","src":"1721:81:32","statements":[{"nativeSrc":"1731:65:32","nodeType":"YulAssignment","src":"1731:65:32","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:32","nodeType":"YulIdentifier","src":"1746:5:32"},{"kind":"number","nativeSrc":"1753:42:32","nodeType":"YulLiteral","src":"1753:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:32","nodeType":"YulIdentifier","src":"1742:3:32"},"nativeSrc":"1742:54:32","nodeType":"YulFunctionCall","src":"1742:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:32","nodeType":"YulIdentifier","src":"1731:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:32","nodeType":"YulTypedName","src":"1703:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:32","nodeType":"YulTypedName","src":"1713:7:32","type":""}],"src":"1676:126:32"},{"body":{"nativeSrc":"1853:51:32","nodeType":"YulBlock","src":"1853:51:32","statements":[{"nativeSrc":"1863:35:32","nodeType":"YulAssignment","src":"1863:35:32","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:32","nodeType":"YulIdentifier","src":"1892:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:32","nodeType":"YulIdentifier","src":"1874:17:32"},"nativeSrc":"1874:24:32","nodeType":"YulFunctionCall","src":"1874:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:32","nodeType":"YulIdentifier","src":"1863:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:32","nodeType":"YulTypedName","src":"1835:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:32","nodeType":"YulTypedName","src":"1845:7:32","type":""}],"src":"1808:96:32"},{"body":{"nativeSrc":"1953:79:32","nodeType":"YulBlock","src":"1953:79:32","statements":[{"body":{"nativeSrc":"2010:16:32","nodeType":"YulBlock","src":"2010:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:32","nodeType":"YulLiteral","src":"2019:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:32","nodeType":"YulLiteral","src":"2022:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:32","nodeType":"YulIdentifier","src":"2012:6:32"},"nativeSrc":"2012:12:32","nodeType":"YulFunctionCall","src":"2012:12:32"},"nativeSrc":"2012:12:32","nodeType":"YulExpressionStatement","src":"2012:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:32","nodeType":"YulIdentifier","src":"1976:5:32"},{"arguments":[{"name":"value","nativeSrc":"2001:5:32","nodeType":"YulIdentifier","src":"2001:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:32","nodeType":"YulIdentifier","src":"1983:17:32"},"nativeSrc":"1983:24:32","nodeType":"YulFunctionCall","src":"1983:24:32"}],"functionName":{"name":"eq","nativeSrc":"1973:2:32","nodeType":"YulIdentifier","src":"1973:2:32"},"nativeSrc":"1973:35:32","nodeType":"YulFunctionCall","src":"1973:35:32"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:32","nodeType":"YulIdentifier","src":"1966:6:32"},"nativeSrc":"1966:43:32","nodeType":"YulFunctionCall","src":"1966:43:32"},"nativeSrc":"1963:63:32","nodeType":"YulIf","src":"1963:63:32"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:32","nodeType":"YulTypedName","src":"1946:5:32","type":""}],"src":"1910:122:32"},{"body":{"nativeSrc":"2090:87:32","nodeType":"YulBlock","src":"2090:87:32","statements":[{"nativeSrc":"2100:29:32","nodeType":"YulAssignment","src":"2100:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:32","nodeType":"YulIdentifier","src":"2122:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:32","nodeType":"YulIdentifier","src":"2109:12:32"},"nativeSrc":"2109:20:32","nodeType":"YulFunctionCall","src":"2109:20:32"},"variableNames":[{"name":"value","nativeSrc":"2100:5:32","nodeType":"YulIdentifier","src":"2100:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:32","nodeType":"YulIdentifier","src":"2165:5:32"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:32","nodeType":"YulIdentifier","src":"2138:26:32"},"nativeSrc":"2138:33:32","nodeType":"YulFunctionCall","src":"2138:33:32"},"nativeSrc":"2138:33:32","nodeType":"YulExpressionStatement","src":"2138:33:32"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:32","nodeType":"YulTypedName","src":"2068:6:32","type":""},{"name":"end","nativeSrc":"2076:3:32","nodeType":"YulTypedName","src":"2076:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:32","nodeType":"YulTypedName","src":"2084:5:32","type":""}],"src":"2038:139:32"},{"body":{"nativeSrc":"2228:32:32","nodeType":"YulBlock","src":"2228:32:32","statements":[{"nativeSrc":"2238:16:32","nodeType":"YulAssignment","src":"2238:16:32","value":{"name":"value","nativeSrc":"2249:5:32","nodeType":"YulIdentifier","src":"2249:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:32","nodeType":"YulIdentifier","src":"2238:7:32"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:32","nodeType":"YulTypedName","src":"2210:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:32","nodeType":"YulTypedName","src":"2220:7:32","type":""}],"src":"2183:77:32"},{"body":{"nativeSrc":"2309:79:32","nodeType":"YulBlock","src":"2309:79:32","statements":[{"body":{"nativeSrc":"2366:16:32","nodeType":"YulBlock","src":"2366:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:32","nodeType":"YulLiteral","src":"2375:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:32","nodeType":"YulLiteral","src":"2378:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:32","nodeType":"YulIdentifier","src":"2368:6:32"},"nativeSrc":"2368:12:32","nodeType":"YulFunctionCall","src":"2368:12:32"},"nativeSrc":"2368:12:32","nodeType":"YulExpressionStatement","src":"2368:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:32","nodeType":"YulIdentifier","src":"2332:5:32"},{"arguments":[{"name":"value","nativeSrc":"2357:5:32","nodeType":"YulIdentifier","src":"2357:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:32","nodeType":"YulIdentifier","src":"2339:17:32"},"nativeSrc":"2339:24:32","nodeType":"YulFunctionCall","src":"2339:24:32"}],"functionName":{"name":"eq","nativeSrc":"2329:2:32","nodeType":"YulIdentifier","src":"2329:2:32"},"nativeSrc":"2329:35:32","nodeType":"YulFunctionCall","src":"2329:35:32"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:32","nodeType":"YulIdentifier","src":"2322:6:32"},"nativeSrc":"2322:43:32","nodeType":"YulFunctionCall","src":"2322:43:32"},"nativeSrc":"2319:63:32","nodeType":"YulIf","src":"2319:63:32"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:32","nodeType":"YulTypedName","src":"2302:5:32","type":""}],"src":"2266:122:32"},{"body":{"nativeSrc":"2446:87:32","nodeType":"YulBlock","src":"2446:87:32","statements":[{"nativeSrc":"2456:29:32","nodeType":"YulAssignment","src":"2456:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:32","nodeType":"YulIdentifier","src":"2478:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:32","nodeType":"YulIdentifier","src":"2465:12:32"},"nativeSrc":"2465:20:32","nodeType":"YulFunctionCall","src":"2465:20:32"},"variableNames":[{"name":"value","nativeSrc":"2456:5:32","nodeType":"YulIdentifier","src":"2456:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:32","nodeType":"YulIdentifier","src":"2521:5:32"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:32","nodeType":"YulIdentifier","src":"2494:26:32"},"nativeSrc":"2494:33:32","nodeType":"YulFunctionCall","src":"2494:33:32"},"nativeSrc":"2494:33:32","nodeType":"YulExpressionStatement","src":"2494:33:32"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:32","nodeType":"YulTypedName","src":"2424:6:32","type":""},{"name":"end","nativeSrc":"2432:3:32","nodeType":"YulTypedName","src":"2432:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:32","nodeType":"YulTypedName","src":"2440:5:32","type":""}],"src":"2394:139:32"},{"body":{"nativeSrc":"2622:391:32","nodeType":"YulBlock","src":"2622:391:32","statements":[{"body":{"nativeSrc":"2668:83:32","nodeType":"YulBlock","src":"2668:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:32","nodeType":"YulIdentifier","src":"2670:77:32"},"nativeSrc":"2670:79:32","nodeType":"YulFunctionCall","src":"2670:79:32"},"nativeSrc":"2670:79:32","nodeType":"YulExpressionStatement","src":"2670:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:32","nodeType":"YulIdentifier","src":"2643:7:32"},{"name":"headStart","nativeSrc":"2652:9:32","nodeType":"YulIdentifier","src":"2652:9:32"}],"functionName":{"name":"sub","nativeSrc":"2639:3:32","nodeType":"YulIdentifier","src":"2639:3:32"},"nativeSrc":"2639:23:32","nodeType":"YulFunctionCall","src":"2639:23:32"},{"kind":"number","nativeSrc":"2664:2:32","nodeType":"YulLiteral","src":"2664:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:32","nodeType":"YulIdentifier","src":"2635:3:32"},"nativeSrc":"2635:32:32","nodeType":"YulFunctionCall","src":"2635:32:32"},"nativeSrc":"2632:119:32","nodeType":"YulIf","src":"2632:119:32"},{"nativeSrc":"2761:117:32","nodeType":"YulBlock","src":"2761:117:32","statements":[{"nativeSrc":"2776:15:32","nodeType":"YulVariableDeclaration","src":"2776:15:32","value":{"kind":"number","nativeSrc":"2790:1:32","nodeType":"YulLiteral","src":"2790:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:32","nodeType":"YulTypedName","src":"2780:6:32","type":""}]},{"nativeSrc":"2805:63:32","nodeType":"YulAssignment","src":"2805:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:32","nodeType":"YulIdentifier","src":"2840:9:32"},{"name":"offset","nativeSrc":"2851:6:32","nodeType":"YulIdentifier","src":"2851:6:32"}],"functionName":{"name":"add","nativeSrc":"2836:3:32","nodeType":"YulIdentifier","src":"2836:3:32"},"nativeSrc":"2836:22:32","nodeType":"YulFunctionCall","src":"2836:22:32"},{"name":"dataEnd","nativeSrc":"2860:7:32","nodeType":"YulIdentifier","src":"2860:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:32","nodeType":"YulIdentifier","src":"2815:20:32"},"nativeSrc":"2815:53:32","nodeType":"YulFunctionCall","src":"2815:53:32"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:32","nodeType":"YulIdentifier","src":"2805:6:32"}]}]},{"nativeSrc":"2888:118:32","nodeType":"YulBlock","src":"2888:118:32","statements":[{"nativeSrc":"2903:16:32","nodeType":"YulVariableDeclaration","src":"2903:16:32","value":{"kind":"number","nativeSrc":"2917:2:32","nodeType":"YulLiteral","src":"2917:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:32","nodeType":"YulTypedName","src":"2907:6:32","type":""}]},{"nativeSrc":"2933:63:32","nodeType":"YulAssignment","src":"2933:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:32","nodeType":"YulIdentifier","src":"2968:9:32"},{"name":"offset","nativeSrc":"2979:6:32","nodeType":"YulIdentifier","src":"2979:6:32"}],"functionName":{"name":"add","nativeSrc":"2964:3:32","nodeType":"YulIdentifier","src":"2964:3:32"},"nativeSrc":"2964:22:32","nodeType":"YulFunctionCall","src":"2964:22:32"},{"name":"dataEnd","nativeSrc":"2988:7:32","nodeType":"YulIdentifier","src":"2988:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:32","nodeType":"YulIdentifier","src":"2943:20:32"},"nativeSrc":"2943:53:32","nodeType":"YulFunctionCall","src":"2943:53:32"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:32","nodeType":"YulIdentifier","src":"2933:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:32","nodeType":"YulTypedName","src":"2584:9:32","type":""},{"name":"dataEnd","nativeSrc":"2595:7:32","nodeType":"YulTypedName","src":"2595:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:32","nodeType":"YulTypedName","src":"2607:6:32","type":""},{"name":"value1","nativeSrc":"2615:6:32","nodeType":"YulTypedName","src":"2615:6:32","type":""}],"src":"2539:474:32"},{"body":{"nativeSrc":"3061:48:32","nodeType":"YulBlock","src":"3061:48:32","statements":[{"nativeSrc":"3071:32:32","nodeType":"YulAssignment","src":"3071:32:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:32","nodeType":"YulIdentifier","src":"3096:5:32"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:32","nodeType":"YulIdentifier","src":"3089:6:32"},"nativeSrc":"3089:13:32","nodeType":"YulFunctionCall","src":"3089:13:32"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:32","nodeType":"YulIdentifier","src":"3082:6:32"},"nativeSrc":"3082:21:32","nodeType":"YulFunctionCall","src":"3082:21:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:32","nodeType":"YulIdentifier","src":"3071:7:32"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:32","nodeType":"YulTypedName","src":"3043:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:32","nodeType":"YulTypedName","src":"3053:7:32","type":""}],"src":"3019:90:32"},{"body":{"nativeSrc":"3174:50:32","nodeType":"YulBlock","src":"3174:50:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:32","nodeType":"YulIdentifier","src":"3191:3:32"},{"arguments":[{"name":"value","nativeSrc":"3211:5:32","nodeType":"YulIdentifier","src":"3211:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:32","nodeType":"YulIdentifier","src":"3196:14:32"},"nativeSrc":"3196:21:32","nodeType":"YulFunctionCall","src":"3196:21:32"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:32","nodeType":"YulIdentifier","src":"3184:6:32"},"nativeSrc":"3184:34:32","nodeType":"YulFunctionCall","src":"3184:34:32"},"nativeSrc":"3184:34:32","nodeType":"YulExpressionStatement","src":"3184:34:32"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:32","nodeType":"YulTypedName","src":"3162:5:32","type":""},{"name":"pos","nativeSrc":"3169:3:32","nodeType":"YulTypedName","src":"3169:3:32","type":""}],"src":"3115:109:32"},{"body":{"nativeSrc":"3322:118:32","nodeType":"YulBlock","src":"3322:118:32","statements":[{"nativeSrc":"3332:26:32","nodeType":"YulAssignment","src":"3332:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:32","nodeType":"YulIdentifier","src":"3344:9:32"},{"kind":"number","nativeSrc":"3355:2:32","nodeType":"YulLiteral","src":"3355:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:32","nodeType":"YulIdentifier","src":"3340:3:32"},"nativeSrc":"3340:18:32","nodeType":"YulFunctionCall","src":"3340:18:32"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:32","nodeType":"YulIdentifier","src":"3332:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:32","nodeType":"YulIdentifier","src":"3406:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:32","nodeType":"YulIdentifier","src":"3419:9:32"},{"kind":"number","nativeSrc":"3430:1:32","nodeType":"YulLiteral","src":"3430:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:32","nodeType":"YulIdentifier","src":"3415:3:32"},"nativeSrc":"3415:17:32","nodeType":"YulFunctionCall","src":"3415:17:32"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:32","nodeType":"YulIdentifier","src":"3368:37:32"},"nativeSrc":"3368:65:32","nodeType":"YulFunctionCall","src":"3368:65:32"},"nativeSrc":"3368:65:32","nodeType":"YulExpressionStatement","src":"3368:65:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:32","nodeType":"YulTypedName","src":"3294:9:32","type":""},{"name":"value0","nativeSrc":"3306:6:32","nodeType":"YulTypedName","src":"3306:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:32","nodeType":"YulTypedName","src":"3317:4:32","type":""}],"src":"3230:210:32"},{"body":{"nativeSrc":"3511:53:32","nodeType":"YulBlock","src":"3511:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:32","nodeType":"YulIdentifier","src":"3528:3:32"},{"arguments":[{"name":"value","nativeSrc":"3551:5:32","nodeType":"YulIdentifier","src":"3551:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:32","nodeType":"YulIdentifier","src":"3533:17:32"},"nativeSrc":"3533:24:32","nodeType":"YulFunctionCall","src":"3533:24:32"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:32","nodeType":"YulIdentifier","src":"3521:6:32"},"nativeSrc":"3521:37:32","nodeType":"YulFunctionCall","src":"3521:37:32"},"nativeSrc":"3521:37:32","nodeType":"YulExpressionStatement","src":"3521:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:32","nodeType":"YulTypedName","src":"3499:5:32","type":""},{"name":"pos","nativeSrc":"3506:3:32","nodeType":"YulTypedName","src":"3506:3:32","type":""}],"src":"3446:118:32"},{"body":{"nativeSrc":"3668:124:32","nodeType":"YulBlock","src":"3668:124:32","statements":[{"nativeSrc":"3678:26:32","nodeType":"YulAssignment","src":"3678:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:32","nodeType":"YulIdentifier","src":"3690:9:32"},{"kind":"number","nativeSrc":"3701:2:32","nodeType":"YulLiteral","src":"3701:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:32","nodeType":"YulIdentifier","src":"3686:3:32"},"nativeSrc":"3686:18:32","nodeType":"YulFunctionCall","src":"3686:18:32"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:32","nodeType":"YulIdentifier","src":"3678:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:32","nodeType":"YulIdentifier","src":"3758:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:32","nodeType":"YulIdentifier","src":"3771:9:32"},{"kind":"number","nativeSrc":"3782:1:32","nodeType":"YulLiteral","src":"3782:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:32","nodeType":"YulIdentifier","src":"3767:3:32"},"nativeSrc":"3767:17:32","nodeType":"YulFunctionCall","src":"3767:17:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:32","nodeType":"YulIdentifier","src":"3714:43:32"},"nativeSrc":"3714:71:32","nodeType":"YulFunctionCall","src":"3714:71:32"},"nativeSrc":"3714:71:32","nodeType":"YulExpressionStatement","src":"3714:71:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:32","nodeType":"YulTypedName","src":"3640:9:32","type":""},{"name":"value0","nativeSrc":"3652:6:32","nodeType":"YulTypedName","src":"3652:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:32","nodeType":"YulTypedName","src":"3663:4:32","type":""}],"src":"3570:222:32"},{"body":{"nativeSrc":"3898:519:32","nodeType":"YulBlock","src":"3898:519:32","statements":[{"body":{"nativeSrc":"3944:83:32","nodeType":"YulBlock","src":"3944:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:32","nodeType":"YulIdentifier","src":"3946:77:32"},"nativeSrc":"3946:79:32","nodeType":"YulFunctionCall","src":"3946:79:32"},"nativeSrc":"3946:79:32","nodeType":"YulExpressionStatement","src":"3946:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:32","nodeType":"YulIdentifier","src":"3919:7:32"},{"name":"headStart","nativeSrc":"3928:9:32","nodeType":"YulIdentifier","src":"3928:9:32"}],"functionName":{"name":"sub","nativeSrc":"3915:3:32","nodeType":"YulIdentifier","src":"3915:3:32"},"nativeSrc":"3915:23:32","nodeType":"YulFunctionCall","src":"3915:23:32"},{"kind":"number","nativeSrc":"3940:2:32","nodeType":"YulLiteral","src":"3940:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:32","nodeType":"YulIdentifier","src":"3911:3:32"},"nativeSrc":"3911:32:32","nodeType":"YulFunctionCall","src":"3911:32:32"},"nativeSrc":"3908:119:32","nodeType":"YulIf","src":"3908:119:32"},{"nativeSrc":"4037:117:32","nodeType":"YulBlock","src":"4037:117:32","statements":[{"nativeSrc":"4052:15:32","nodeType":"YulVariableDeclaration","src":"4052:15:32","value":{"kind":"number","nativeSrc":"4066:1:32","nodeType":"YulLiteral","src":"4066:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:32","nodeType":"YulTypedName","src":"4056:6:32","type":""}]},{"nativeSrc":"4081:63:32","nodeType":"YulAssignment","src":"4081:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:32","nodeType":"YulIdentifier","src":"4116:9:32"},{"name":"offset","nativeSrc":"4127:6:32","nodeType":"YulIdentifier","src":"4127:6:32"}],"functionName":{"name":"add","nativeSrc":"4112:3:32","nodeType":"YulIdentifier","src":"4112:3:32"},"nativeSrc":"4112:22:32","nodeType":"YulFunctionCall","src":"4112:22:32"},{"name":"dataEnd","nativeSrc":"4136:7:32","nodeType":"YulIdentifier","src":"4136:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:32","nodeType":"YulIdentifier","src":"4091:20:32"},"nativeSrc":"4091:53:32","nodeType":"YulFunctionCall","src":"4091:53:32"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:32","nodeType":"YulIdentifier","src":"4081:6:32"}]}]},{"nativeSrc":"4164:118:32","nodeType":"YulBlock","src":"4164:118:32","statements":[{"nativeSrc":"4179:16:32","nodeType":"YulVariableDeclaration","src":"4179:16:32","value":{"kind":"number","nativeSrc":"4193:2:32","nodeType":"YulLiteral","src":"4193:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:32","nodeType":"YulTypedName","src":"4183:6:32","type":""}]},{"nativeSrc":"4209:63:32","nodeType":"YulAssignment","src":"4209:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:32","nodeType":"YulIdentifier","src":"4244:9:32"},{"name":"offset","nativeSrc":"4255:6:32","nodeType":"YulIdentifier","src":"4255:6:32"}],"functionName":{"name":"add","nativeSrc":"4240:3:32","nodeType":"YulIdentifier","src":"4240:3:32"},"nativeSrc":"4240:22:32","nodeType":"YulFunctionCall","src":"4240:22:32"},{"name":"dataEnd","nativeSrc":"4264:7:32","nodeType":"YulIdentifier","src":"4264:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:32","nodeType":"YulIdentifier","src":"4219:20:32"},"nativeSrc":"4219:53:32","nodeType":"YulFunctionCall","src":"4219:53:32"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:32","nodeType":"YulIdentifier","src":"4209:6:32"}]}]},{"nativeSrc":"4292:118:32","nodeType":"YulBlock","src":"4292:118:32","statements":[{"nativeSrc":"4307:16:32","nodeType":"YulVariableDeclaration","src":"4307:16:32","value":{"kind":"number","nativeSrc":"4321:2:32","nodeType":"YulLiteral","src":"4321:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:32","nodeType":"YulTypedName","src":"4311:6:32","type":""}]},{"nativeSrc":"4337:63:32","nodeType":"YulAssignment","src":"4337:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:32","nodeType":"YulIdentifier","src":"4372:9:32"},{"name":"offset","nativeSrc":"4383:6:32","nodeType":"YulIdentifier","src":"4383:6:32"}],"functionName":{"name":"add","nativeSrc":"4368:3:32","nodeType":"YulIdentifier","src":"4368:3:32"},"nativeSrc":"4368:22:32","nodeType":"YulFunctionCall","src":"4368:22:32"},{"name":"dataEnd","nativeSrc":"4392:7:32","nodeType":"YulIdentifier","src":"4392:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:32","nodeType":"YulIdentifier","src":"4347:20:32"},"nativeSrc":"4347:53:32","nodeType":"YulFunctionCall","src":"4347:53:32"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:32","nodeType":"YulIdentifier","src":"4337:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:32","nodeType":"YulTypedName","src":"3852:9:32","type":""},{"name":"dataEnd","nativeSrc":"3863:7:32","nodeType":"YulTypedName","src":"3863:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:32","nodeType":"YulTypedName","src":"3875:6:32","type":""},{"name":"value1","nativeSrc":"3883:6:32","nodeType":"YulTypedName","src":"3883:6:32","type":""},{"name":"value2","nativeSrc":"3891:6:32","nodeType":"YulTypedName","src":"3891:6:32","type":""}],"src":"3798:619:32"},{"body":{"nativeSrc":"4466:43:32","nodeType":"YulBlock","src":"4466:43:32","statements":[{"nativeSrc":"4476:27:32","nodeType":"YulAssignment","src":"4476:27:32","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:32","nodeType":"YulIdentifier","src":"4491:5:32"},{"kind":"number","nativeSrc":"4498:4:32","nodeType":"YulLiteral","src":"4498:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:32","nodeType":"YulIdentifier","src":"4487:3:32"},"nativeSrc":"4487:16:32","nodeType":"YulFunctionCall","src":"4487:16:32"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:32","nodeType":"YulIdentifier","src":"4476:7:32"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:32","nodeType":"YulTypedName","src":"4448:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:32","nodeType":"YulTypedName","src":"4458:7:32","type":""}],"src":"4423:86:32"},{"body":{"nativeSrc":"4576:51:32","nodeType":"YulBlock","src":"4576:51:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:32","nodeType":"YulIdentifier","src":"4593:3:32"},{"arguments":[{"name":"value","nativeSrc":"4614:5:32","nodeType":"YulIdentifier","src":"4614:5:32"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:32","nodeType":"YulIdentifier","src":"4598:15:32"},"nativeSrc":"4598:22:32","nodeType":"YulFunctionCall","src":"4598:22:32"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:32","nodeType":"YulIdentifier","src":"4586:6:32"},"nativeSrc":"4586:35:32","nodeType":"YulFunctionCall","src":"4586:35:32"},"nativeSrc":"4586:35:32","nodeType":"YulExpressionStatement","src":"4586:35:32"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:32","nodeType":"YulTypedName","src":"4564:5:32","type":""},{"name":"pos","nativeSrc":"4571:3:32","nodeType":"YulTypedName","src":"4571:3:32","type":""}],"src":"4515:112:32"},{"body":{"nativeSrc":"4727:120:32","nodeType":"YulBlock","src":"4727:120:32","statements":[{"nativeSrc":"4737:26:32","nodeType":"YulAssignment","src":"4737:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:32","nodeType":"YulIdentifier","src":"4749:9:32"},{"kind":"number","nativeSrc":"4760:2:32","nodeType":"YulLiteral","src":"4760:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:32","nodeType":"YulIdentifier","src":"4745:3:32"},"nativeSrc":"4745:18:32","nodeType":"YulFunctionCall","src":"4745:18:32"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:32","nodeType":"YulIdentifier","src":"4737:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:32","nodeType":"YulIdentifier","src":"4813:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:32","nodeType":"YulIdentifier","src":"4826:9:32"},{"kind":"number","nativeSrc":"4837:1:32","nodeType":"YulLiteral","src":"4837:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:32","nodeType":"YulIdentifier","src":"4822:3:32"},"nativeSrc":"4822:17:32","nodeType":"YulFunctionCall","src":"4822:17:32"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:32","nodeType":"YulIdentifier","src":"4773:39:32"},"nativeSrc":"4773:67:32","nodeType":"YulFunctionCall","src":"4773:67:32"},"nativeSrc":"4773:67:32","nodeType":"YulExpressionStatement","src":"4773:67:32"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:32","nodeType":"YulTypedName","src":"4699:9:32","type":""},{"name":"value0","nativeSrc":"4711:6:32","nodeType":"YulTypedName","src":"4711:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:32","nodeType":"YulTypedName","src":"4722:4:32","type":""}],"src":"4633:214:32"},{"body":{"nativeSrc":"4919:263:32","nodeType":"YulBlock","src":"4919:263:32","statements":[{"body":{"nativeSrc":"4965:83:32","nodeType":"YulBlock","src":"4965:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4967:77:32","nodeType":"YulIdentifier","src":"4967:77:32"},"nativeSrc":"4967:79:32","nodeType":"YulFunctionCall","src":"4967:79:32"},"nativeSrc":"4967:79:32","nodeType":"YulExpressionStatement","src":"4967:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4940:7:32","nodeType":"YulIdentifier","src":"4940:7:32"},{"name":"headStart","nativeSrc":"4949:9:32","nodeType":"YulIdentifier","src":"4949:9:32"}],"functionName":{"name":"sub","nativeSrc":"4936:3:32","nodeType":"YulIdentifier","src":"4936:3:32"},"nativeSrc":"4936:23:32","nodeType":"YulFunctionCall","src":"4936:23:32"},{"kind":"number","nativeSrc":"4961:2:32","nodeType":"YulLiteral","src":"4961:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4932:3:32","nodeType":"YulIdentifier","src":"4932:3:32"},"nativeSrc":"4932:32:32","nodeType":"YulFunctionCall","src":"4932:32:32"},"nativeSrc":"4929:119:32","nodeType":"YulIf","src":"4929:119:32"},{"nativeSrc":"5058:117:32","nodeType":"YulBlock","src":"5058:117:32","statements":[{"nativeSrc":"5073:15:32","nodeType":"YulVariableDeclaration","src":"5073:15:32","value":{"kind":"number","nativeSrc":"5087:1:32","nodeType":"YulLiteral","src":"5087:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5077:6:32","nodeType":"YulTypedName","src":"5077:6:32","type":""}]},{"nativeSrc":"5102:63:32","nodeType":"YulAssignment","src":"5102:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5137:9:32","nodeType":"YulIdentifier","src":"5137:9:32"},{"name":"offset","nativeSrc":"5148:6:32","nodeType":"YulIdentifier","src":"5148:6:32"}],"functionName":{"name":"add","nativeSrc":"5133:3:32","nodeType":"YulIdentifier","src":"5133:3:32"},"nativeSrc":"5133:22:32","nodeType":"YulFunctionCall","src":"5133:22:32"},{"name":"dataEnd","nativeSrc":"5157:7:32","nodeType":"YulIdentifier","src":"5157:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5112:20:32","nodeType":"YulIdentifier","src":"5112:20:32"},"nativeSrc":"5112:53:32","nodeType":"YulFunctionCall","src":"5112:53:32"},"variableNames":[{"name":"value0","nativeSrc":"5102:6:32","nodeType":"YulIdentifier","src":"5102:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4853:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4889:9:32","nodeType":"YulTypedName","src":"4889:9:32","type":""},{"name":"dataEnd","nativeSrc":"4900:7:32","nodeType":"YulTypedName","src":"4900:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4912:6:32","nodeType":"YulTypedName","src":"4912:6:32","type":""}],"src":"4853:329:32"},{"body":{"nativeSrc":"5277:28:32","nodeType":"YulBlock","src":"5277:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5294:1:32","nodeType":"YulLiteral","src":"5294:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5297:1:32","nodeType":"YulLiteral","src":"5297:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5287:6:32","nodeType":"YulIdentifier","src":"5287:6:32"},"nativeSrc":"5287:12:32","nodeType":"YulFunctionCall","src":"5287:12:32"},"nativeSrc":"5287:12:32","nodeType":"YulExpressionStatement","src":"5287:12:32"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5188:117:32","nodeType":"YulFunctionDefinition","src":"5188:117:32"},{"body":{"nativeSrc":"5400:28:32","nodeType":"YulBlock","src":"5400:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5417:1:32","nodeType":"YulLiteral","src":"5417:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5420:1:32","nodeType":"YulLiteral","src":"5420:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5410:6:32","nodeType":"YulIdentifier","src":"5410:6:32"},"nativeSrc":"5410:12:32","nodeType":"YulFunctionCall","src":"5410:12:32"},"nativeSrc":"5410:12:32","nodeType":"YulExpressionStatement","src":"5410:12:32"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"5311:117:32","nodeType":"YulFunctionDefinition","src":"5311:117:32"},{"body":{"nativeSrc":"5462:152:32","nodeType":"YulBlock","src":"5462:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5479:1:32","nodeType":"YulLiteral","src":"5479:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5482:77:32","nodeType":"YulLiteral","src":"5482:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5472:6:32","nodeType":"YulIdentifier","src":"5472:6:32"},"nativeSrc":"5472:88:32","nodeType":"YulFunctionCall","src":"5472:88:32"},"nativeSrc":"5472:88:32","nodeType":"YulExpressionStatement","src":"5472:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5576:1:32","nodeType":"YulLiteral","src":"5576:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"5579:4:32","nodeType":"YulLiteral","src":"5579:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5569:6:32","nodeType":"YulIdentifier","src":"5569:6:32"},"nativeSrc":"5569:15:32","nodeType":"YulFunctionCall","src":"5569:15:32"},"nativeSrc":"5569:15:32","nodeType":"YulExpressionStatement","src":"5569:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5600:1:32","nodeType":"YulLiteral","src":"5600:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5603:4:32","nodeType":"YulLiteral","src":"5603:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5593:6:32","nodeType":"YulIdentifier","src":"5593:6:32"},"nativeSrc":"5593:15:32","nodeType":"YulFunctionCall","src":"5593:15:32"},"nativeSrc":"5593:15:32","nodeType":"YulExpressionStatement","src":"5593:15:32"}]},"name":"panic_error_0x41","nativeSrc":"5434:180:32","nodeType":"YulFunctionDefinition","src":"5434:180:32"},{"body":{"nativeSrc":"5663:238:32","nodeType":"YulBlock","src":"5663:238:32","statements":[{"nativeSrc":"5673:58:32","nodeType":"YulVariableDeclaration","src":"5673:58:32","value":{"arguments":[{"name":"memPtr","nativeSrc":"5695:6:32","nodeType":"YulIdentifier","src":"5695:6:32"},{"arguments":[{"name":"size","nativeSrc":"5725:4:32","nodeType":"YulIdentifier","src":"5725:4:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"5703:21:32","nodeType":"YulIdentifier","src":"5703:21:32"},"nativeSrc":"5703:27:32","nodeType":"YulFunctionCall","src":"5703:27:32"}],"functionName":{"name":"add","nativeSrc":"5691:3:32","nodeType":"YulIdentifier","src":"5691:3:32"},"nativeSrc":"5691:40:32","nodeType":"YulFunctionCall","src":"5691:40:32"},"variables":[{"name":"newFreePtr","nativeSrc":"5677:10:32","nodeType":"YulTypedName","src":"5677:10:32","type":""}]},{"body":{"nativeSrc":"5842:22:32","nodeType":"YulBlock","src":"5842:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5844:16:32","nodeType":"YulIdentifier","src":"5844:16:32"},"nativeSrc":"5844:18:32","nodeType":"YulFunctionCall","src":"5844:18:32"},"nativeSrc":"5844:18:32","nodeType":"YulExpressionStatement","src":"5844:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"5785:10:32","nodeType":"YulIdentifier","src":"5785:10:32"},{"kind":"number","nativeSrc":"5797:18:32","nodeType":"YulLiteral","src":"5797:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5782:2:32","nodeType":"YulIdentifier","src":"5782:2:32"},"nativeSrc":"5782:34:32","nodeType":"YulFunctionCall","src":"5782:34:32"},{"arguments":[{"name":"newFreePtr","nativeSrc":"5821:10:32","nodeType":"YulIdentifier","src":"5821:10:32"},{"name":"memPtr","nativeSrc":"5833:6:32","nodeType":"YulIdentifier","src":"5833:6:32"}],"functionName":{"name":"lt","nativeSrc":"5818:2:32","nodeType":"YulIdentifier","src":"5818:2:32"},"nativeSrc":"5818:22:32","nodeType":"YulFunctionCall","src":"5818:22:32"}],"functionName":{"name":"or","nativeSrc":"5779:2:32","nodeType":"YulIdentifier","src":"5779:2:32"},"nativeSrc":"5779:62:32","nodeType":"YulFunctionCall","src":"5779:62:32"},"nativeSrc":"5776:88:32","nodeType":"YulIf","src":"5776:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5880:2:32","nodeType":"YulLiteral","src":"5880:2:32","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"5884:10:32","nodeType":"YulIdentifier","src":"5884:10:32"}],"functionName":{"name":"mstore","nativeSrc":"5873:6:32","nodeType":"YulIdentifier","src":"5873:6:32"},"nativeSrc":"5873:22:32","nodeType":"YulFunctionCall","src":"5873:22:32"},"nativeSrc":"5873:22:32","nodeType":"YulExpressionStatement","src":"5873:22:32"}]},"name":"finalize_allocation","nativeSrc":"5620:281:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5649:6:32","nodeType":"YulTypedName","src":"5649:6:32","type":""},{"name":"size","nativeSrc":"5657:4:32","nodeType":"YulTypedName","src":"5657:4:32","type":""}],"src":"5620:281:32"},{"body":{"nativeSrc":"5948:88:32","nodeType":"YulBlock","src":"5948:88:32","statements":[{"nativeSrc":"5958:30:32","nodeType":"YulAssignment","src":"5958:30:32","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"5968:18:32","nodeType":"YulIdentifier","src":"5968:18:32"},"nativeSrc":"5968:20:32","nodeType":"YulFunctionCall","src":"5968:20:32"},"variableNames":[{"name":"memPtr","nativeSrc":"5958:6:32","nodeType":"YulIdentifier","src":"5958:6:32"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"6017:6:32","nodeType":"YulIdentifier","src":"6017:6:32"},{"name":"size","nativeSrc":"6025:4:32","nodeType":"YulIdentifier","src":"6025:4:32"}],"functionName":{"name":"finalize_allocation","nativeSrc":"5997:19:32","nodeType":"YulIdentifier","src":"5997:19:32"},"nativeSrc":"5997:33:32","nodeType":"YulFunctionCall","src":"5997:33:32"},"nativeSrc":"5997:33:32","nodeType":"YulExpressionStatement","src":"5997:33:32"}]},"name":"allocate_memory","nativeSrc":"5907:129:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"5932:4:32","nodeType":"YulTypedName","src":"5932:4:32","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"5941:6:32","nodeType":"YulTypedName","src":"5941:6:32","type":""}],"src":"5907:129:32"},{"body":{"nativeSrc":"6108:241:32","nodeType":"YulBlock","src":"6108:241:32","statements":[{"body":{"nativeSrc":"6213:22:32","nodeType":"YulBlock","src":"6213:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6215:16:32","nodeType":"YulIdentifier","src":"6215:16:32"},"nativeSrc":"6215:18:32","nodeType":"YulFunctionCall","src":"6215:18:32"},"nativeSrc":"6215:18:32","nodeType":"YulExpressionStatement","src":"6215:18:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6185:6:32","nodeType":"YulIdentifier","src":"6185:6:32"},{"kind":"number","nativeSrc":"6193:18:32","nodeType":"YulLiteral","src":"6193:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6182:2:32","nodeType":"YulIdentifier","src":"6182:2:32"},"nativeSrc":"6182:30:32","nodeType":"YulFunctionCall","src":"6182:30:32"},"nativeSrc":"6179:56:32","nodeType":"YulIf","src":"6179:56:32"},{"nativeSrc":"6245:37:32","nodeType":"YulAssignment","src":"6245:37:32","value":{"arguments":[{"name":"length","nativeSrc":"6275:6:32","nodeType":"YulIdentifier","src":"6275:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6253:21:32","nodeType":"YulIdentifier","src":"6253:21:32"},"nativeSrc":"6253:29:32","nodeType":"YulFunctionCall","src":"6253:29:32"},"variableNames":[{"name":"size","nativeSrc":"6245:4:32","nodeType":"YulIdentifier","src":"6245:4:32"}]},{"nativeSrc":"6319:23:32","nodeType":"YulAssignment","src":"6319:23:32","value":{"arguments":[{"name":"size","nativeSrc":"6331:4:32","nodeType":"YulIdentifier","src":"6331:4:32"},{"kind":"number","nativeSrc":"6337:4:32","nodeType":"YulLiteral","src":"6337:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6327:3:32","nodeType":"YulIdentifier","src":"6327:3:32"},"nativeSrc":"6327:15:32","nodeType":"YulFunctionCall","src":"6327:15:32"},"variableNames":[{"name":"size","nativeSrc":"6319:4:32","nodeType":"YulIdentifier","src":"6319:4:32"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6042:307:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"6092:6:32","nodeType":"YulTypedName","src":"6092:6:32","type":""}],"returnVariables":[{"name":"size","nativeSrc":"6103:4:32","nodeType":"YulTypedName","src":"6103:4:32","type":""}],"src":"6042:307:32"},{"body":{"nativeSrc":"6419:82:32","nodeType":"YulBlock","src":"6419:82:32","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"6442:3:32","nodeType":"YulIdentifier","src":"6442:3:32"},{"name":"src","nativeSrc":"6447:3:32","nodeType":"YulIdentifier","src":"6447:3:32"},{"name":"length","nativeSrc":"6452:6:32","nodeType":"YulIdentifier","src":"6452:6:32"}],"functionName":{"name":"calldatacopy","nativeSrc":"6429:12:32","nodeType":"YulIdentifier","src":"6429:12:32"},"nativeSrc":"6429:30:32","nodeType":"YulFunctionCall","src":"6429:30:32"},"nativeSrc":"6429:30:32","nodeType":"YulExpressionStatement","src":"6429:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6479:3:32","nodeType":"YulIdentifier","src":"6479:3:32"},{"name":"length","nativeSrc":"6484:6:32","nodeType":"YulIdentifier","src":"6484:6:32"}],"functionName":{"name":"add","nativeSrc":"6475:3:32","nodeType":"YulIdentifier","src":"6475:3:32"},"nativeSrc":"6475:16:32","nodeType":"YulFunctionCall","src":"6475:16:32"},{"kind":"number","nativeSrc":"6493:1:32","nodeType":"YulLiteral","src":"6493:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6468:6:32","nodeType":"YulIdentifier","src":"6468:6:32"},"nativeSrc":"6468:27:32","nodeType":"YulFunctionCall","src":"6468:27:32"},"nativeSrc":"6468:27:32","nodeType":"YulExpressionStatement","src":"6468:27:32"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6355:146:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6401:3:32","nodeType":"YulTypedName","src":"6401:3:32","type":""},{"name":"dst","nativeSrc":"6406:3:32","nodeType":"YulTypedName","src":"6406:3:32","type":""},{"name":"length","nativeSrc":"6411:6:32","nodeType":"YulTypedName","src":"6411:6:32","type":""}],"src":"6355:146:32"},{"body":{"nativeSrc":"6590:340:32","nodeType":"YulBlock","src":"6590:340:32","statements":[{"nativeSrc":"6600:74:32","nodeType":"YulAssignment","src":"6600:74:32","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6666:6:32","nodeType":"YulIdentifier","src":"6666:6:32"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6625:40:32","nodeType":"YulIdentifier","src":"6625:40:32"},"nativeSrc":"6625:48:32","nodeType":"YulFunctionCall","src":"6625:48:32"}],"functionName":{"name":"allocate_memory","nativeSrc":"6609:15:32","nodeType":"YulIdentifier","src":"6609:15:32"},"nativeSrc":"6609:65:32","nodeType":"YulFunctionCall","src":"6609:65:32"},"variableNames":[{"name":"array","nativeSrc":"6600:5:32","nodeType":"YulIdentifier","src":"6600:5:32"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"6690:5:32","nodeType":"YulIdentifier","src":"6690:5:32"},{"name":"length","nativeSrc":"6697:6:32","nodeType":"YulIdentifier","src":"6697:6:32"}],"functionName":{"name":"mstore","nativeSrc":"6683:6:32","nodeType":"YulIdentifier","src":"6683:6:32"},"nativeSrc":"6683:21:32","nodeType":"YulFunctionCall","src":"6683:21:32"},"nativeSrc":"6683:21:32","nodeType":"YulExpressionStatement","src":"6683:21:32"},{"nativeSrc":"6713:27:32","nodeType":"YulVariableDeclaration","src":"6713:27:32","value":{"arguments":[{"name":"array","nativeSrc":"6728:5:32","nodeType":"YulIdentifier","src":"6728:5:32"},{"kind":"number","nativeSrc":"6735:4:32","nodeType":"YulLiteral","src":"6735:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6724:3:32","nodeType":"YulIdentifier","src":"6724:3:32"},"nativeSrc":"6724:16:32","nodeType":"YulFunctionCall","src":"6724:16:32"},"variables":[{"name":"dst","nativeSrc":"6717:3:32","nodeType":"YulTypedName","src":"6717:3:32","type":""}]},{"body":{"nativeSrc":"6778:83:32","nodeType":"YulBlock","src":"6778:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"6780:77:32","nodeType":"YulIdentifier","src":"6780:77:32"},"nativeSrc":"6780:79:32","nodeType":"YulFunctionCall","src":"6780:79:32"},"nativeSrc":"6780:79:32","nodeType":"YulExpressionStatement","src":"6780:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6759:3:32","nodeType":"YulIdentifier","src":"6759:3:32"},{"name":"length","nativeSrc":"6764:6:32","nodeType":"YulIdentifier","src":"6764:6:32"}],"functionName":{"name":"add","nativeSrc":"6755:3:32","nodeType":"YulIdentifier","src":"6755:3:32"},"nativeSrc":"6755:16:32","nodeType":"YulFunctionCall","src":"6755:16:32"},{"name":"end","nativeSrc":"6773:3:32","nodeType":"YulIdentifier","src":"6773:3:32"}],"functionName":{"name":"gt","nativeSrc":"6752:2:32","nodeType":"YulIdentifier","src":"6752:2:32"},"nativeSrc":"6752:25:32","nodeType":"YulFunctionCall","src":"6752:25:32"},"nativeSrc":"6749:112:32","nodeType":"YulIf","src":"6749:112:32"},{"expression":{"arguments":[{"name":"src","nativeSrc":"6907:3:32","nodeType":"YulIdentifier","src":"6907:3:32"},{"name":"dst","nativeSrc":"6912:3:32","nodeType":"YulIdentifier","src":"6912:3:32"},{"name":"length","nativeSrc":"6917:6:32","nodeType":"YulIdentifier","src":"6917:6:32"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6870:36:32","nodeType":"YulIdentifier","src":"6870:36:32"},"nativeSrc":"6870:54:32","nodeType":"YulFunctionCall","src":"6870:54:32"},"nativeSrc":"6870:54:32","nodeType":"YulExpressionStatement","src":"6870:54:32"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6507:423:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6563:3:32","nodeType":"YulTypedName","src":"6563:3:32","type":""},{"name":"length","nativeSrc":"6568:6:32","nodeType":"YulTypedName","src":"6568:6:32","type":""},{"name":"end","nativeSrc":"6576:3:32","nodeType":"YulTypedName","src":"6576:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6584:5:32","nodeType":"YulTypedName","src":"6584:5:32","type":""}],"src":"6507:423:32"},{"body":{"nativeSrc":"7010:277:32","nodeType":"YulBlock","src":"7010:277:32","statements":[{"body":{"nativeSrc":"7059:83:32","nodeType":"YulBlock","src":"7059:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7061:77:32","nodeType":"YulIdentifier","src":"7061:77:32"},"nativeSrc":"7061:79:32","nodeType":"YulFunctionCall","src":"7061:79:32"},"nativeSrc":"7061:79:32","nodeType":"YulExpressionStatement","src":"7061:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7038:6:32","nodeType":"YulIdentifier","src":"7038:6:32"},{"kind":"number","nativeSrc":"7046:4:32","nodeType":"YulLiteral","src":"7046:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7034:3:32","nodeType":"YulIdentifier","src":"7034:3:32"},"nativeSrc":"7034:17:32","nodeType":"YulFunctionCall","src":"7034:17:32"},{"name":"end","nativeSrc":"7053:3:32","nodeType":"YulIdentifier","src":"7053:3:32"}],"functionName":{"name":"slt","nativeSrc":"7030:3:32","nodeType":"YulIdentifier","src":"7030:3:32"},"nativeSrc":"7030:27:32","nodeType":"YulFunctionCall","src":"7030:27:32"}],"functionName":{"name":"iszero","nativeSrc":"7023:6:32","nodeType":"YulIdentifier","src":"7023:6:32"},"nativeSrc":"7023:35:32","nodeType":"YulFunctionCall","src":"7023:35:32"},"nativeSrc":"7020:122:32","nodeType":"YulIf","src":"7020:122:32"},{"nativeSrc":"7151:34:32","nodeType":"YulVariableDeclaration","src":"7151:34:32","value":{"arguments":[{"name":"offset","nativeSrc":"7178:6:32","nodeType":"YulIdentifier","src":"7178:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"7165:12:32","nodeType":"YulIdentifier","src":"7165:12:32"},"nativeSrc":"7165:20:32","nodeType":"YulFunctionCall","src":"7165:20:32"},"variables":[{"name":"length","nativeSrc":"7155:6:32","nodeType":"YulTypedName","src":"7155:6:32","type":""}]},{"nativeSrc":"7194:87:32","nodeType":"YulAssignment","src":"7194:87:32","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7254:6:32","nodeType":"YulIdentifier","src":"7254:6:32"},{"kind":"number","nativeSrc":"7262:4:32","nodeType":"YulLiteral","src":"7262:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7250:3:32","nodeType":"YulIdentifier","src":"7250:3:32"},"nativeSrc":"7250:17:32","nodeType":"YulFunctionCall","src":"7250:17:32"},{"name":"length","nativeSrc":"7269:6:32","nodeType":"YulIdentifier","src":"7269:6:32"},{"name":"end","nativeSrc":"7277:3:32","nodeType":"YulIdentifier","src":"7277:3:32"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7203:46:32","nodeType":"YulIdentifier","src":"7203:46:32"},"nativeSrc":"7203:78:32","nodeType":"YulFunctionCall","src":"7203:78:32"},"variableNames":[{"name":"array","nativeSrc":"7194:5:32","nodeType":"YulIdentifier","src":"7194:5:32"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"6949:338:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6988:6:32","nodeType":"YulTypedName","src":"6988:6:32","type":""},{"name":"end","nativeSrc":"6996:3:32","nodeType":"YulTypedName","src":"6996:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7004:5:32","nodeType":"YulTypedName","src":"7004:5:32","type":""}],"src":"6949:338:32"},{"body":{"nativeSrc":"7385:560:32","nodeType":"YulBlock","src":"7385:560:32","statements":[{"body":{"nativeSrc":"7431:83:32","nodeType":"YulBlock","src":"7431:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7433:77:32","nodeType":"YulIdentifier","src":"7433:77:32"},"nativeSrc":"7433:79:32","nodeType":"YulFunctionCall","src":"7433:79:32"},"nativeSrc":"7433:79:32","nodeType":"YulExpressionStatement","src":"7433:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7406:7:32","nodeType":"YulIdentifier","src":"7406:7:32"},{"name":"headStart","nativeSrc":"7415:9:32","nodeType":"YulIdentifier","src":"7415:9:32"}],"functionName":{"name":"sub","nativeSrc":"7402:3:32","nodeType":"YulIdentifier","src":"7402:3:32"},"nativeSrc":"7402:23:32","nodeType":"YulFunctionCall","src":"7402:23:32"},{"kind":"number","nativeSrc":"7427:2:32","nodeType":"YulLiteral","src":"7427:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7398:3:32","nodeType":"YulIdentifier","src":"7398:3:32"},"nativeSrc":"7398:32:32","nodeType":"YulFunctionCall","src":"7398:32:32"},"nativeSrc":"7395:119:32","nodeType":"YulIf","src":"7395:119:32"},{"nativeSrc":"7524:117:32","nodeType":"YulBlock","src":"7524:117:32","statements":[{"nativeSrc":"7539:15:32","nodeType":"YulVariableDeclaration","src":"7539:15:32","value":{"kind":"number","nativeSrc":"7553:1:32","nodeType":"YulLiteral","src":"7553:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7543:6:32","nodeType":"YulTypedName","src":"7543:6:32","type":""}]},{"nativeSrc":"7568:63:32","nodeType":"YulAssignment","src":"7568:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7603:9:32","nodeType":"YulIdentifier","src":"7603:9:32"},{"name":"offset","nativeSrc":"7614:6:32","nodeType":"YulIdentifier","src":"7614:6:32"}],"functionName":{"name":"add","nativeSrc":"7599:3:32","nodeType":"YulIdentifier","src":"7599:3:32"},"nativeSrc":"7599:22:32","nodeType":"YulFunctionCall","src":"7599:22:32"},{"name":"dataEnd","nativeSrc":"7623:7:32","nodeType":"YulIdentifier","src":"7623:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7578:20:32","nodeType":"YulIdentifier","src":"7578:20:32"},"nativeSrc":"7578:53:32","nodeType":"YulFunctionCall","src":"7578:53:32"},"variableNames":[{"name":"value0","nativeSrc":"7568:6:32","nodeType":"YulIdentifier","src":"7568:6:32"}]}]},{"nativeSrc":"7651:287:32","nodeType":"YulBlock","src":"7651:287:32","statements":[{"nativeSrc":"7666:46:32","nodeType":"YulVariableDeclaration","src":"7666:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7697:9:32","nodeType":"YulIdentifier","src":"7697:9:32"},{"kind":"number","nativeSrc":"7708:2:32","nodeType":"YulLiteral","src":"7708:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7693:3:32","nodeType":"YulIdentifier","src":"7693:3:32"},"nativeSrc":"7693:18:32","nodeType":"YulFunctionCall","src":"7693:18:32"}],"functionName":{"name":"calldataload","nativeSrc":"7680:12:32","nodeType":"YulIdentifier","src":"7680:12:32"},"nativeSrc":"7680:32:32","nodeType":"YulFunctionCall","src":"7680:32:32"},"variables":[{"name":"offset","nativeSrc":"7670:6:32","nodeType":"YulTypedName","src":"7670:6:32","type":""}]},{"body":{"nativeSrc":"7759:83:32","nodeType":"YulBlock","src":"7759:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7761:77:32","nodeType":"YulIdentifier","src":"7761:77:32"},"nativeSrc":"7761:79:32","nodeType":"YulFunctionCall","src":"7761:79:32"},"nativeSrc":"7761:79:32","nodeType":"YulExpressionStatement","src":"7761:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7731:6:32","nodeType":"YulIdentifier","src":"7731:6:32"},{"kind":"number","nativeSrc":"7739:18:32","nodeType":"YulLiteral","src":"7739:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7728:2:32","nodeType":"YulIdentifier","src":"7728:2:32"},"nativeSrc":"7728:30:32","nodeType":"YulFunctionCall","src":"7728:30:32"},"nativeSrc":"7725:117:32","nodeType":"YulIf","src":"7725:117:32"},{"nativeSrc":"7856:72:32","nodeType":"YulAssignment","src":"7856:72:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7900:9:32","nodeType":"YulIdentifier","src":"7900:9:32"},{"name":"offset","nativeSrc":"7911:6:32","nodeType":"YulIdentifier","src":"7911:6:32"}],"functionName":{"name":"add","nativeSrc":"7896:3:32","nodeType":"YulIdentifier","src":"7896:3:32"},"nativeSrc":"7896:22:32","nodeType":"YulFunctionCall","src":"7896:22:32"},{"name":"dataEnd","nativeSrc":"7920:7:32","nodeType":"YulIdentifier","src":"7920:7:32"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"7866:29:32","nodeType":"YulIdentifier","src":"7866:29:32"},"nativeSrc":"7866:62:32","nodeType":"YulFunctionCall","src":"7866:62:32"},"variableNames":[{"name":"value1","nativeSrc":"7856:6:32","nodeType":"YulIdentifier","src":"7856:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"7293:652:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7347:9:32","nodeType":"YulTypedName","src":"7347:9:32","type":""},{"name":"dataEnd","nativeSrc":"7358:7:32","nodeType":"YulTypedName","src":"7358:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7370:6:32","nodeType":"YulTypedName","src":"7370:6:32","type":""},{"name":"value1","nativeSrc":"7378:6:32","nodeType":"YulTypedName","src":"7378:6:32","type":""}],"src":"7293:652:32"},{"body":{"nativeSrc":"7996:32:32","nodeType":"YulBlock","src":"7996:32:32","statements":[{"nativeSrc":"8006:16:32","nodeType":"YulAssignment","src":"8006:16:32","value":{"name":"value","nativeSrc":"8017:5:32","nodeType":"YulIdentifier","src":"8017:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"8006:7:32","nodeType":"YulIdentifier","src":"8006:7:32"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"7951:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7978:5:32","nodeType":"YulTypedName","src":"7978:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7988:7:32","nodeType":"YulTypedName","src":"7988:7:32","type":""}],"src":"7951:77:32"},{"body":{"nativeSrc":"8099:53:32","nodeType":"YulBlock","src":"8099:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8116:3:32","nodeType":"YulIdentifier","src":"8116:3:32"},{"arguments":[{"name":"value","nativeSrc":"8139:5:32","nodeType":"YulIdentifier","src":"8139:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8121:17:32","nodeType":"YulIdentifier","src":"8121:17:32"},"nativeSrc":"8121:24:32","nodeType":"YulFunctionCall","src":"8121:24:32"}],"functionName":{"name":"mstore","nativeSrc":"8109:6:32","nodeType":"YulIdentifier","src":"8109:6:32"},"nativeSrc":"8109:37:32","nodeType":"YulFunctionCall","src":"8109:37:32"},"nativeSrc":"8109:37:32","nodeType":"YulExpressionStatement","src":"8109:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8034:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8087:5:32","nodeType":"YulTypedName","src":"8087:5:32","type":""},{"name":"pos","nativeSrc":"8094:3:32","nodeType":"YulTypedName","src":"8094:3:32","type":""}],"src":"8034:118:32"},{"body":{"nativeSrc":"8256:124:32","nodeType":"YulBlock","src":"8256:124:32","statements":[{"nativeSrc":"8266:26:32","nodeType":"YulAssignment","src":"8266:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"8278:9:32","nodeType":"YulIdentifier","src":"8278:9:32"},{"kind":"number","nativeSrc":"8289:2:32","nodeType":"YulLiteral","src":"8289:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8274:3:32","nodeType":"YulIdentifier","src":"8274:3:32"},"nativeSrc":"8274:18:32","nodeType":"YulFunctionCall","src":"8274:18:32"},"variableNames":[{"name":"tail","nativeSrc":"8266:4:32","nodeType":"YulIdentifier","src":"8266:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8346:6:32","nodeType":"YulIdentifier","src":"8346:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"8359:9:32","nodeType":"YulIdentifier","src":"8359:9:32"},{"kind":"number","nativeSrc":"8370:1:32","nodeType":"YulLiteral","src":"8370:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8355:3:32","nodeType":"YulIdentifier","src":"8355:3:32"},"nativeSrc":"8355:17:32","nodeType":"YulFunctionCall","src":"8355:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8302:43:32","nodeType":"YulIdentifier","src":"8302:43:32"},"nativeSrc":"8302:71:32","nodeType":"YulFunctionCall","src":"8302:71:32"},"nativeSrc":"8302:71:32","nodeType":"YulExpressionStatement","src":"8302:71:32"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"8158:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8228:9:32","nodeType":"YulTypedName","src":"8228:9:32","type":""},{"name":"value0","nativeSrc":"8240:6:32","nodeType":"YulTypedName","src":"8240:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8251:4:32","nodeType":"YulTypedName","src":"8251:4:32","type":""}],"src":"8158:222:32"},{"body":{"nativeSrc":"8452:263:32","nodeType":"YulBlock","src":"8452:263:32","statements":[{"body":{"nativeSrc":"8498:83:32","nodeType":"YulBlock","src":"8498:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8500:77:32","nodeType":"YulIdentifier","src":"8500:77:32"},"nativeSrc":"8500:79:32","nodeType":"YulFunctionCall","src":"8500:79:32"},"nativeSrc":"8500:79:32","nodeType":"YulExpressionStatement","src":"8500:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8473:7:32","nodeType":"YulIdentifier","src":"8473:7:32"},{"name":"headStart","nativeSrc":"8482:9:32","nodeType":"YulIdentifier","src":"8482:9:32"}],"functionName":{"name":"sub","nativeSrc":"8469:3:32","nodeType":"YulIdentifier","src":"8469:3:32"},"nativeSrc":"8469:23:32","nodeType":"YulFunctionCall","src":"8469:23:32"},{"kind":"number","nativeSrc":"8494:2:32","nodeType":"YulLiteral","src":"8494:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8465:3:32","nodeType":"YulIdentifier","src":"8465:3:32"},"nativeSrc":"8465:32:32","nodeType":"YulFunctionCall","src":"8465:32:32"},"nativeSrc":"8462:119:32","nodeType":"YulIf","src":"8462:119:32"},{"nativeSrc":"8591:117:32","nodeType":"YulBlock","src":"8591:117:32","statements":[{"nativeSrc":"8606:15:32","nodeType":"YulVariableDeclaration","src":"8606:15:32","value":{"kind":"number","nativeSrc":"8620:1:32","nodeType":"YulLiteral","src":"8620:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8610:6:32","nodeType":"YulTypedName","src":"8610:6:32","type":""}]},{"nativeSrc":"8635:63:32","nodeType":"YulAssignment","src":"8635:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8670:9:32","nodeType":"YulIdentifier","src":"8670:9:32"},{"name":"offset","nativeSrc":"8681:6:32","nodeType":"YulIdentifier","src":"8681:6:32"}],"functionName":{"name":"add","nativeSrc":"8666:3:32","nodeType":"YulIdentifier","src":"8666:3:32"},"nativeSrc":"8666:22:32","nodeType":"YulFunctionCall","src":"8666:22:32"},{"name":"dataEnd","nativeSrc":"8690:7:32","nodeType":"YulIdentifier","src":"8690:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8645:20:32","nodeType":"YulIdentifier","src":"8645:20:32"},"nativeSrc":"8645:53:32","nodeType":"YulFunctionCall","src":"8645:53:32"},"variableNames":[{"name":"value0","nativeSrc":"8635:6:32","nodeType":"YulIdentifier","src":"8635:6:32"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"8386:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8422:9:32","nodeType":"YulTypedName","src":"8422:9:32","type":""},{"name":"dataEnd","nativeSrc":"8433:7:32","nodeType":"YulTypedName","src":"8433:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8445:6:32","nodeType":"YulTypedName","src":"8445:6:32","type":""}],"src":"8386:329:32"},{"body":{"nativeSrc":"8765:105:32","nodeType":"YulBlock","src":"8765:105:32","statements":[{"nativeSrc":"8775:89:32","nodeType":"YulAssignment","src":"8775:89:32","value":{"arguments":[{"name":"value","nativeSrc":"8790:5:32","nodeType":"YulIdentifier","src":"8790:5:32"},{"kind":"number","nativeSrc":"8797:66:32","nodeType":"YulLiteral","src":"8797:66:32","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"8786:3:32","nodeType":"YulIdentifier","src":"8786:3:32"},"nativeSrc":"8786:78:32","nodeType":"YulFunctionCall","src":"8786:78:32"},"variableNames":[{"name":"cleaned","nativeSrc":"8775:7:32","nodeType":"YulIdentifier","src":"8775:7:32"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"8721:149:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8747:5:32","nodeType":"YulTypedName","src":"8747:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8757:7:32","nodeType":"YulTypedName","src":"8757:7:32","type":""}],"src":"8721:149:32"},{"body":{"nativeSrc":"8939:52:32","nodeType":"YulBlock","src":"8939:52:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8956:3:32","nodeType":"YulIdentifier","src":"8956:3:32"},{"arguments":[{"name":"value","nativeSrc":"8978:5:32","nodeType":"YulIdentifier","src":"8978:5:32"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"8961:16:32","nodeType":"YulIdentifier","src":"8961:16:32"},"nativeSrc":"8961:23:32","nodeType":"YulFunctionCall","src":"8961:23:32"}],"functionName":{"name":"mstore","nativeSrc":"8949:6:32","nodeType":"YulIdentifier","src":"8949:6:32"},"nativeSrc":"8949:36:32","nodeType":"YulFunctionCall","src":"8949:36:32"},"nativeSrc":"8949:36:32","nodeType":"YulExpressionStatement","src":"8949:36:32"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"8876:115:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8927:5:32","nodeType":"YulTypedName","src":"8927:5:32","type":""},{"name":"pos","nativeSrc":"8934:3:32","nodeType":"YulTypedName","src":"8934:3:32","type":""}],"src":"8876:115:32"},{"body":{"nativeSrc":"9093:122:32","nodeType":"YulBlock","src":"9093:122:32","statements":[{"nativeSrc":"9103:26:32","nodeType":"YulAssignment","src":"9103:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"9115:9:32","nodeType":"YulIdentifier","src":"9115:9:32"},{"kind":"number","nativeSrc":"9126:2:32","nodeType":"YulLiteral","src":"9126:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9111:3:32","nodeType":"YulIdentifier","src":"9111:3:32"},"nativeSrc":"9111:18:32","nodeType":"YulFunctionCall","src":"9111:18:32"},"variableNames":[{"name":"tail","nativeSrc":"9103:4:32","nodeType":"YulIdentifier","src":"9103:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9181:6:32","nodeType":"YulIdentifier","src":"9181:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9194:9:32","nodeType":"YulIdentifier","src":"9194:9:32"},{"kind":"number","nativeSrc":"9205:1:32","nodeType":"YulLiteral","src":"9205:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9190:3:32","nodeType":"YulIdentifier","src":"9190:3:32"},"nativeSrc":"9190:17:32","nodeType":"YulFunctionCall","src":"9190:17:32"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"9139:41:32","nodeType":"YulIdentifier","src":"9139:41:32"},"nativeSrc":"9139:69:32","nodeType":"YulFunctionCall","src":"9139:69:32"},"nativeSrc":"9139:69:32","nodeType":"YulExpressionStatement","src":"9139:69:32"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"8997:218:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9065:9:32","nodeType":"YulTypedName","src":"9065:9:32","type":""},{"name":"value0","nativeSrc":"9077:6:32","nodeType":"YulTypedName","src":"9077:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9088:4:32","nodeType":"YulTypedName","src":"9088:4:32","type":""}],"src":"8997:218:32"},{"body":{"nativeSrc":"9286:53:32","nodeType":"YulBlock","src":"9286:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9303:3:32","nodeType":"YulIdentifier","src":"9303:3:32"},{"arguments":[{"name":"value","nativeSrc":"9326:5:32","nodeType":"YulIdentifier","src":"9326:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9308:17:32","nodeType":"YulIdentifier","src":"9308:17:32"},"nativeSrc":"9308:24:32","nodeType":"YulFunctionCall","src":"9308:24:32"}],"functionName":{"name":"mstore","nativeSrc":"9296:6:32","nodeType":"YulIdentifier","src":"9296:6:32"},"nativeSrc":"9296:37:32","nodeType":"YulFunctionCall","src":"9296:37:32"},"nativeSrc":"9296:37:32","nodeType":"YulExpressionStatement","src":"9296:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9221:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9274:5:32","nodeType":"YulTypedName","src":"9274:5:32","type":""},{"name":"pos","nativeSrc":"9281:3:32","nodeType":"YulTypedName","src":"9281:3:32","type":""}],"src":"9221:118:32"},{"body":{"nativeSrc":"9443:124:32","nodeType":"YulBlock","src":"9443:124:32","statements":[{"nativeSrc":"9453:26:32","nodeType":"YulAssignment","src":"9453:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"9465:9:32","nodeType":"YulIdentifier","src":"9465:9:32"},{"kind":"number","nativeSrc":"9476:2:32","nodeType":"YulLiteral","src":"9476:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9461:3:32","nodeType":"YulIdentifier","src":"9461:3:32"},"nativeSrc":"9461:18:32","nodeType":"YulFunctionCall","src":"9461:18:32"},"variableNames":[{"name":"tail","nativeSrc":"9453:4:32","nodeType":"YulIdentifier","src":"9453:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9533:6:32","nodeType":"YulIdentifier","src":"9533:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9546:9:32","nodeType":"YulIdentifier","src":"9546:9:32"},{"kind":"number","nativeSrc":"9557:1:32","nodeType":"YulLiteral","src":"9557:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9542:3:32","nodeType":"YulIdentifier","src":"9542:3:32"},"nativeSrc":"9542:17:32","nodeType":"YulFunctionCall","src":"9542:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9489:43:32","nodeType":"YulIdentifier","src":"9489:43:32"},"nativeSrc":"9489:71:32","nodeType":"YulFunctionCall","src":"9489:71:32"},"nativeSrc":"9489:71:32","nodeType":"YulExpressionStatement","src":"9489:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9345:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9415:9:32","nodeType":"YulTypedName","src":"9415:9:32","type":""},{"name":"value0","nativeSrc":"9427:6:32","nodeType":"YulTypedName","src":"9427:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9438:4:32","nodeType":"YulTypedName","src":"9438:4:32","type":""}],"src":"9345:222:32"},{"body":{"nativeSrc":"9656:391:32","nodeType":"YulBlock","src":"9656:391:32","statements":[{"body":{"nativeSrc":"9702:83:32","nodeType":"YulBlock","src":"9702:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9704:77:32","nodeType":"YulIdentifier","src":"9704:77:32"},"nativeSrc":"9704:79:32","nodeType":"YulFunctionCall","src":"9704:79:32"},"nativeSrc":"9704:79:32","nodeType":"YulExpressionStatement","src":"9704:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9677:7:32","nodeType":"YulIdentifier","src":"9677:7:32"},{"name":"headStart","nativeSrc":"9686:9:32","nodeType":"YulIdentifier","src":"9686:9:32"}],"functionName":{"name":"sub","nativeSrc":"9673:3:32","nodeType":"YulIdentifier","src":"9673:3:32"},"nativeSrc":"9673:23:32","nodeType":"YulFunctionCall","src":"9673:23:32"},{"kind":"number","nativeSrc":"9698:2:32","nodeType":"YulLiteral","src":"9698:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9669:3:32","nodeType":"YulIdentifier","src":"9669:3:32"},"nativeSrc":"9669:32:32","nodeType":"YulFunctionCall","src":"9669:32:32"},"nativeSrc":"9666:119:32","nodeType":"YulIf","src":"9666:119:32"},{"nativeSrc":"9795:117:32","nodeType":"YulBlock","src":"9795:117:32","statements":[{"nativeSrc":"9810:15:32","nodeType":"YulVariableDeclaration","src":"9810:15:32","value":{"kind":"number","nativeSrc":"9824:1:32","nodeType":"YulLiteral","src":"9824:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9814:6:32","nodeType":"YulTypedName","src":"9814:6:32","type":""}]},{"nativeSrc":"9839:63:32","nodeType":"YulAssignment","src":"9839:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9874:9:32","nodeType":"YulIdentifier","src":"9874:9:32"},{"name":"offset","nativeSrc":"9885:6:32","nodeType":"YulIdentifier","src":"9885:6:32"}],"functionName":{"name":"add","nativeSrc":"9870:3:32","nodeType":"YulIdentifier","src":"9870:3:32"},"nativeSrc":"9870:22:32","nodeType":"YulFunctionCall","src":"9870:22:32"},{"name":"dataEnd","nativeSrc":"9894:7:32","nodeType":"YulIdentifier","src":"9894:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9849:20:32","nodeType":"YulIdentifier","src":"9849:20:32"},"nativeSrc":"9849:53:32","nodeType":"YulFunctionCall","src":"9849:53:32"},"variableNames":[{"name":"value0","nativeSrc":"9839:6:32","nodeType":"YulIdentifier","src":"9839:6:32"}]}]},{"nativeSrc":"9922:118:32","nodeType":"YulBlock","src":"9922:118:32","statements":[{"nativeSrc":"9937:16:32","nodeType":"YulVariableDeclaration","src":"9937:16:32","value":{"kind":"number","nativeSrc":"9951:2:32","nodeType":"YulLiteral","src":"9951:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9941:6:32","nodeType":"YulTypedName","src":"9941:6:32","type":""}]},{"nativeSrc":"9967:63:32","nodeType":"YulAssignment","src":"9967:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10002:9:32","nodeType":"YulIdentifier","src":"10002:9:32"},{"name":"offset","nativeSrc":"10013:6:32","nodeType":"YulIdentifier","src":"10013:6:32"}],"functionName":{"name":"add","nativeSrc":"9998:3:32","nodeType":"YulIdentifier","src":"9998:3:32"},"nativeSrc":"9998:22:32","nodeType":"YulFunctionCall","src":"9998:22:32"},{"name":"dataEnd","nativeSrc":"10022:7:32","nodeType":"YulIdentifier","src":"10022:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9977:20:32","nodeType":"YulIdentifier","src":"9977:20:32"},"nativeSrc":"9977:53:32","nodeType":"YulFunctionCall","src":"9977:53:32"},"variableNames":[{"name":"value1","nativeSrc":"9967:6:32","nodeType":"YulIdentifier","src":"9967:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"9573:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9618:9:32","nodeType":"YulTypedName","src":"9618:9:32","type":""},{"name":"dataEnd","nativeSrc":"9629:7:32","nodeType":"YulTypedName","src":"9629:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9641:6:32","nodeType":"YulTypedName","src":"9641:6:32","type":""},{"name":"value1","nativeSrc":"9649:6:32","nodeType":"YulTypedName","src":"9649:6:32","type":""}],"src":"9573:474:32"},{"body":{"nativeSrc":"10081:152:32","nodeType":"YulBlock","src":"10081:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10098:1:32","nodeType":"YulLiteral","src":"10098:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"10101:77:32","nodeType":"YulLiteral","src":"10101:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10091:6:32","nodeType":"YulIdentifier","src":"10091:6:32"},"nativeSrc":"10091:88:32","nodeType":"YulFunctionCall","src":"10091:88:32"},"nativeSrc":"10091:88:32","nodeType":"YulExpressionStatement","src":"10091:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10195:1:32","nodeType":"YulLiteral","src":"10195:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"10198:4:32","nodeType":"YulLiteral","src":"10198:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"10188:6:32","nodeType":"YulIdentifier","src":"10188:6:32"},"nativeSrc":"10188:15:32","nodeType":"YulFunctionCall","src":"10188:15:32"},"nativeSrc":"10188:15:32","nodeType":"YulExpressionStatement","src":"10188:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10219:1:32","nodeType":"YulLiteral","src":"10219:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"10222:4:32","nodeType":"YulLiteral","src":"10222:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10212:6:32","nodeType":"YulIdentifier","src":"10212:6:32"},"nativeSrc":"10212:15:32","nodeType":"YulFunctionCall","src":"10212:15:32"},"nativeSrc":"10212:15:32","nodeType":"YulExpressionStatement","src":"10212:15:32"}]},"name":"panic_error_0x22","nativeSrc":"10053:180:32","nodeType":"YulFunctionDefinition","src":"10053:180:32"},{"body":{"nativeSrc":"10290:269:32","nodeType":"YulBlock","src":"10290:269:32","statements":[{"nativeSrc":"10300:22:32","nodeType":"YulAssignment","src":"10300:22:32","value":{"arguments":[{"name":"data","nativeSrc":"10314:4:32","nodeType":"YulIdentifier","src":"10314:4:32"},{"kind":"number","nativeSrc":"10320:1:32","nodeType":"YulLiteral","src":"10320:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"10310:3:32","nodeType":"YulIdentifier","src":"10310:3:32"},"nativeSrc":"10310:12:32","nodeType":"YulFunctionCall","src":"10310:12:32"},"variableNames":[{"name":"length","nativeSrc":"10300:6:32","nodeType":"YulIdentifier","src":"10300:6:32"}]},{"nativeSrc":"10331:38:32","nodeType":"YulVariableDeclaration","src":"10331:38:32","value":{"arguments":[{"name":"data","nativeSrc":"10361:4:32","nodeType":"YulIdentifier","src":"10361:4:32"},{"kind":"number","nativeSrc":"10367:1:32","nodeType":"YulLiteral","src":"10367:1:32","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"10357:3:32","nodeType":"YulIdentifier","src":"10357:3:32"},"nativeSrc":"10357:12:32","nodeType":"YulFunctionCall","src":"10357:12:32"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"10335:18:32","nodeType":"YulTypedName","src":"10335:18:32","type":""}]},{"body":{"nativeSrc":"10408:51:32","nodeType":"YulBlock","src":"10408:51:32","statements":[{"nativeSrc":"10422:27:32","nodeType":"YulAssignment","src":"10422:27:32","value":{"arguments":[{"name":"length","nativeSrc":"10436:6:32","nodeType":"YulIdentifier","src":"10436:6:32"},{"kind":"number","nativeSrc":"10444:4:32","nodeType":"YulLiteral","src":"10444:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"10432:3:32","nodeType":"YulIdentifier","src":"10432:3:32"},"nativeSrc":"10432:17:32","nodeType":"YulFunctionCall","src":"10432:17:32"},"variableNames":[{"name":"length","nativeSrc":"10422:6:32","nodeType":"YulIdentifier","src":"10422:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"10388:18:32","nodeType":"YulIdentifier","src":"10388:18:32"}],"functionName":{"name":"iszero","nativeSrc":"10381:6:32","nodeType":"YulIdentifier","src":"10381:6:32"},"nativeSrc":"10381:26:32","nodeType":"YulFunctionCall","src":"10381:26:32"},"nativeSrc":"10378:81:32","nodeType":"YulIf","src":"10378:81:32"},{"body":{"nativeSrc":"10511:42:32","nodeType":"YulBlock","src":"10511:42:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"10525:16:32","nodeType":"YulIdentifier","src":"10525:16:32"},"nativeSrc":"10525:18:32","nodeType":"YulFunctionCall","src":"10525:18:32"},"nativeSrc":"10525:18:32","nodeType":"YulExpressionStatement","src":"10525:18:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"10475:18:32","nodeType":"YulIdentifier","src":"10475:18:32"},{"arguments":[{"name":"length","nativeSrc":"10498:6:32","nodeType":"YulIdentifier","src":"10498:6:32"},{"kind":"number","nativeSrc":"10506:2:32","nodeType":"YulLiteral","src":"10506:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"10495:2:32","nodeType":"YulIdentifier","src":"10495:2:32"},"nativeSrc":"10495:14:32","nodeType":"YulFunctionCall","src":"10495:14:32"}],"functionName":{"name":"eq","nativeSrc":"10472:2:32","nodeType":"YulIdentifier","src":"10472:2:32"},"nativeSrc":"10472:38:32","nodeType":"YulFunctionCall","src":"10472:38:32"},"nativeSrc":"10469:84:32","nodeType":"YulIf","src":"10469:84:32"}]},"name":"extract_byte_array_length","nativeSrc":"10239:320:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10274:4:32","nodeType":"YulTypedName","src":"10274:4:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10283:6:32","nodeType":"YulTypedName","src":"10283:6:32","type":""}],"src":"10239:320:32"},{"body":{"nativeSrc":"10618:32:32","nodeType":"YulBlock","src":"10618:32:32","statements":[{"nativeSrc":"10628:16:32","nodeType":"YulAssignment","src":"10628:16:32","value":{"name":"value","nativeSrc":"10639:5:32","nodeType":"YulIdentifier","src":"10639:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"10628:7:32","nodeType":"YulIdentifier","src":"10628:7:32"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"10565:85:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10600:5:32","nodeType":"YulTypedName","src":"10600:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"10610:7:32","nodeType":"YulTypedName","src":"10610:7:32","type":""}],"src":"10565:85:32"},{"body":{"nativeSrc":"10700:57:32","nodeType":"YulBlock","src":"10700:57:32","statements":[{"nativeSrc":"10710:41:32","nodeType":"YulAssignment","src":"10710:41:32","value":{"arguments":[{"name":"value","nativeSrc":"10725:5:32","nodeType":"YulIdentifier","src":"10725:5:32"},{"kind":"number","nativeSrc":"10732:18:32","nodeType":"YulLiteral","src":"10732:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"10721:3:32","nodeType":"YulIdentifier","src":"10721:3:32"},"nativeSrc":"10721:30:32","nodeType":"YulFunctionCall","src":"10721:30:32"},"variableNames":[{"name":"cleaned","nativeSrc":"10710:7:32","nodeType":"YulIdentifier","src":"10710:7:32"}]}]},"name":"cleanup_t_uint64","nativeSrc":"10656:101:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10682:5:32","nodeType":"YulTypedName","src":"10682:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"10692:7:32","nodeType":"YulTypedName","src":"10692:7:32","type":""}],"src":"10656:101:32"},{"body":{"nativeSrc":"10795:28:32","nodeType":"YulBlock","src":"10795:28:32","statements":[{"nativeSrc":"10805:12:32","nodeType":"YulAssignment","src":"10805:12:32","value":{"name":"value","nativeSrc":"10812:5:32","nodeType":"YulIdentifier","src":"10812:5:32"},"variableNames":[{"name":"ret","nativeSrc":"10805:3:32","nodeType":"YulIdentifier","src":"10805:3:32"}]}]},"name":"identity","nativeSrc":"10763:60:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10781:5:32","nodeType":"YulTypedName","src":"10781:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"10791:3:32","nodeType":"YulTypedName","src":"10791:3:32","type":""}],"src":"10763:60:32"},{"body":{"nativeSrc":"10896:89:32","nodeType":"YulBlock","src":"10896:89:32","statements":[{"nativeSrc":"10906:73:32","nodeType":"YulAssignment","src":"10906:73:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10971:5:32","nodeType":"YulIdentifier","src":"10971:5:32"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"10945:25:32","nodeType":"YulIdentifier","src":"10945:25:32"},"nativeSrc":"10945:32:32","nodeType":"YulFunctionCall","src":"10945:32:32"}],"functionName":{"name":"identity","nativeSrc":"10936:8:32","nodeType":"YulIdentifier","src":"10936:8:32"},"nativeSrc":"10936:42:32","nodeType":"YulFunctionCall","src":"10936:42:32"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"10919:16:32","nodeType":"YulIdentifier","src":"10919:16:32"},"nativeSrc":"10919:60:32","nodeType":"YulFunctionCall","src":"10919:60:32"},"variableNames":[{"name":"converted","nativeSrc":"10906:9:32","nodeType":"YulIdentifier","src":"10906:9:32"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"10829:156:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10876:5:32","nodeType":"YulTypedName","src":"10876:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"10886:9:32","nodeType":"YulTypedName","src":"10886:9:32","type":""}],"src":"10829:156:32"},{"body":{"nativeSrc":"11063:73:32","nodeType":"YulBlock","src":"11063:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11080:3:32","nodeType":"YulIdentifier","src":"11080:3:32"},{"arguments":[{"name":"value","nativeSrc":"11123:5:32","nodeType":"YulIdentifier","src":"11123:5:32"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"11085:37:32","nodeType":"YulIdentifier","src":"11085:37:32"},"nativeSrc":"11085:44:32","nodeType":"YulFunctionCall","src":"11085:44:32"}],"functionName":{"name":"mstore","nativeSrc":"11073:6:32","nodeType":"YulIdentifier","src":"11073:6:32"},"nativeSrc":"11073:57:32","nodeType":"YulFunctionCall","src":"11073:57:32"},"nativeSrc":"11073:57:32","nodeType":"YulExpressionStatement","src":"11073:57:32"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"10991:145:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11051:5:32","nodeType":"YulTypedName","src":"11051:5:32","type":""},{"name":"pos","nativeSrc":"11058:3:32","nodeType":"YulTypedName","src":"11058:3:32","type":""}],"src":"10991:145:32"},{"body":{"nativeSrc":"11247:131:32","nodeType":"YulBlock","src":"11247:131:32","statements":[{"nativeSrc":"11257:26:32","nodeType":"YulAssignment","src":"11257:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"11269:9:32","nodeType":"YulIdentifier","src":"11269:9:32"},{"kind":"number","nativeSrc":"11280:2:32","nodeType":"YulLiteral","src":"11280:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11265:3:32","nodeType":"YulIdentifier","src":"11265:3:32"},"nativeSrc":"11265:18:32","nodeType":"YulFunctionCall","src":"11265:18:32"},"variableNames":[{"name":"tail","nativeSrc":"11257:4:32","nodeType":"YulIdentifier","src":"11257:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11344:6:32","nodeType":"YulIdentifier","src":"11344:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11357:9:32","nodeType":"YulIdentifier","src":"11357:9:32"},{"kind":"number","nativeSrc":"11368:1:32","nodeType":"YulLiteral","src":"11368:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11353:3:32","nodeType":"YulIdentifier","src":"11353:3:32"},"nativeSrc":"11353:17:32","nodeType":"YulFunctionCall","src":"11353:17:32"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"11293:50:32","nodeType":"YulIdentifier","src":"11293:50:32"},"nativeSrc":"11293:78:32","nodeType":"YulFunctionCall","src":"11293:78:32"},"nativeSrc":"11293:78:32","nodeType":"YulExpressionStatement","src":"11293:78:32"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"11142:236:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11219:9:32","nodeType":"YulTypedName","src":"11219:9:32","type":""},{"name":"value0","nativeSrc":"11231:6:32","nodeType":"YulTypedName","src":"11231:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11242:4:32","nodeType":"YulTypedName","src":"11242:4:32","type":""}],"src":"11142:236:32"},{"body":{"nativeSrc":"11538:288:32","nodeType":"YulBlock","src":"11538:288:32","statements":[{"nativeSrc":"11548:26:32","nodeType":"YulAssignment","src":"11548:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"11560:9:32","nodeType":"YulIdentifier","src":"11560:9:32"},{"kind":"number","nativeSrc":"11571:2:32","nodeType":"YulLiteral","src":"11571:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11556:3:32","nodeType":"YulIdentifier","src":"11556:3:32"},"nativeSrc":"11556:18:32","nodeType":"YulFunctionCall","src":"11556:18:32"},"variableNames":[{"name":"tail","nativeSrc":"11548:4:32","nodeType":"YulIdentifier","src":"11548:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11628:6:32","nodeType":"YulIdentifier","src":"11628:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11641:9:32","nodeType":"YulIdentifier","src":"11641:9:32"},{"kind":"number","nativeSrc":"11652:1:32","nodeType":"YulLiteral","src":"11652:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11637:3:32","nodeType":"YulIdentifier","src":"11637:3:32"},"nativeSrc":"11637:17:32","nodeType":"YulFunctionCall","src":"11637:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11584:43:32","nodeType":"YulIdentifier","src":"11584:43:32"},"nativeSrc":"11584:71:32","nodeType":"YulFunctionCall","src":"11584:71:32"},"nativeSrc":"11584:71:32","nodeType":"YulExpressionStatement","src":"11584:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11709:6:32","nodeType":"YulIdentifier","src":"11709:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11722:9:32","nodeType":"YulIdentifier","src":"11722:9:32"},{"kind":"number","nativeSrc":"11733:2:32","nodeType":"YulLiteral","src":"11733:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11718:3:32","nodeType":"YulIdentifier","src":"11718:3:32"},"nativeSrc":"11718:18:32","nodeType":"YulFunctionCall","src":"11718:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11665:43:32","nodeType":"YulIdentifier","src":"11665:43:32"},"nativeSrc":"11665:72:32","nodeType":"YulFunctionCall","src":"11665:72:32"},"nativeSrc":"11665:72:32","nodeType":"YulExpressionStatement","src":"11665:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11791:6:32","nodeType":"YulIdentifier","src":"11791:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11804:9:32","nodeType":"YulIdentifier","src":"11804:9:32"},{"kind":"number","nativeSrc":"11815:2:32","nodeType":"YulLiteral","src":"11815:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11800:3:32","nodeType":"YulIdentifier","src":"11800:3:32"},"nativeSrc":"11800:18:32","nodeType":"YulFunctionCall","src":"11800:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11747:43:32","nodeType":"YulIdentifier","src":"11747:43:32"},"nativeSrc":"11747:72:32","nodeType":"YulFunctionCall","src":"11747:72:32"},"nativeSrc":"11747:72:32","nodeType":"YulExpressionStatement","src":"11747:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11384:442:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11494:9:32","nodeType":"YulTypedName","src":"11494:9:32","type":""},{"name":"value2","nativeSrc":"11506:6:32","nodeType":"YulTypedName","src":"11506:6:32","type":""},{"name":"value1","nativeSrc":"11514:6:32","nodeType":"YulTypedName","src":"11514:6:32","type":""},{"name":"value0","nativeSrc":"11522:6:32","nodeType":"YulTypedName","src":"11522:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11533:4:32","nodeType":"YulTypedName","src":"11533:4:32","type":""}],"src":"11384:442:32"},{"body":{"nativeSrc":"11921:28:32","nodeType":"YulBlock","src":"11921:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11938:1:32","nodeType":"YulLiteral","src":"11938:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"11941:1:32","nodeType":"YulLiteral","src":"11941:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11931:6:32","nodeType":"YulIdentifier","src":"11931:6:32"},"nativeSrc":"11931:12:32","nodeType":"YulFunctionCall","src":"11931:12:32"},"nativeSrc":"11931:12:32","nodeType":"YulExpressionStatement","src":"11931:12:32"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nativeSrc":"11832:117:32","nodeType":"YulFunctionDefinition","src":"11832:117:32"},{"body":{"nativeSrc":"12044:28:32","nodeType":"YulBlock","src":"12044:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12061:1:32","nodeType":"YulLiteral","src":"12061:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"12064:1:32","nodeType":"YulLiteral","src":"12064:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12054:6:32","nodeType":"YulIdentifier","src":"12054:6:32"},"nativeSrc":"12054:12:32","nodeType":"YulFunctionCall","src":"12054:12:32"},"nativeSrc":"12054:12:32","nodeType":"YulExpressionStatement","src":"12054:12:32"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nativeSrc":"11955:117:32","nodeType":"YulFunctionDefinition","src":"11955:117:32"},{"body":{"nativeSrc":"12204:343:32","nodeType":"YulBlock","src":"12204:343:32","statements":[{"body":{"nativeSrc":"12242:83:32","nodeType":"YulBlock","src":"12242:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nativeSrc":"12244:77:32","nodeType":"YulIdentifier","src":"12244:77:32"},"nativeSrc":"12244:79:32","nodeType":"YulFunctionCall","src":"12244:79:32"},"nativeSrc":"12244:79:32","nodeType":"YulExpressionStatement","src":"12244:79:32"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"12220:10:32","nodeType":"YulIdentifier","src":"12220:10:32"},{"name":"endIndex","nativeSrc":"12232:8:32","nodeType":"YulIdentifier","src":"12232:8:32"}],"functionName":{"name":"gt","nativeSrc":"12217:2:32","nodeType":"YulIdentifier","src":"12217:2:32"},"nativeSrc":"12217:24:32","nodeType":"YulFunctionCall","src":"12217:24:32"},"nativeSrc":"12214:111:32","nodeType":"YulIf","src":"12214:111:32"},{"body":{"nativeSrc":"12358:83:32","nodeType":"YulBlock","src":"12358:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nativeSrc":"12360:77:32","nodeType":"YulIdentifier","src":"12360:77:32"},"nativeSrc":"12360:79:32","nodeType":"YulFunctionCall","src":"12360:79:32"},"nativeSrc":"12360:79:32","nodeType":"YulExpressionStatement","src":"12360:79:32"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"12340:8:32","nodeType":"YulIdentifier","src":"12340:8:32"},{"name":"length","nativeSrc":"12350:6:32","nodeType":"YulIdentifier","src":"12350:6:32"}],"functionName":{"name":"gt","nativeSrc":"12337:2:32","nodeType":"YulIdentifier","src":"12337:2:32"},"nativeSrc":"12337:20:32","nodeType":"YulFunctionCall","src":"12337:20:32"},"nativeSrc":"12334:107:32","nodeType":"YulIf","src":"12334:107:32"},{"nativeSrc":"12450:44:32","nodeType":"YulAssignment","src":"12450:44:32","value":{"arguments":[{"name":"offset","nativeSrc":"12467:6:32","nodeType":"YulIdentifier","src":"12467:6:32"},{"arguments":[{"name":"startIndex","nativeSrc":"12479:10:32","nodeType":"YulIdentifier","src":"12479:10:32"},{"kind":"number","nativeSrc":"12491:1:32","nodeType":"YulLiteral","src":"12491:1:32","type":"","value":"1"}],"functionName":{"name":"mul","nativeSrc":"12475:3:32","nodeType":"YulIdentifier","src":"12475:3:32"},"nativeSrc":"12475:18:32","nodeType":"YulFunctionCall","src":"12475:18:32"}],"functionName":{"name":"add","nativeSrc":"12463:3:32","nodeType":"YulIdentifier","src":"12463:3:32"},"nativeSrc":"12463:31:32","nodeType":"YulFunctionCall","src":"12463:31:32"},"variableNames":[{"name":"offsetOut","nativeSrc":"12450:9:32","nodeType":"YulIdentifier","src":"12450:9:32"}]},{"nativeSrc":"12503:38:32","nodeType":"YulAssignment","src":"12503:38:32","value":{"arguments":[{"name":"endIndex","nativeSrc":"12520:8:32","nodeType":"YulIdentifier","src":"12520:8:32"},{"name":"startIndex","nativeSrc":"12530:10:32","nodeType":"YulIdentifier","src":"12530:10:32"}],"functionName":{"name":"sub","nativeSrc":"12516:3:32","nodeType":"YulIdentifier","src":"12516:3:32"},"nativeSrc":"12516:25:32","nodeType":"YulFunctionCall","src":"12516:25:32"},"variableNames":[{"name":"lengthOut","nativeSrc":"12503:9:32","nodeType":"YulIdentifier","src":"12503:9:32"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"12078:469:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12142:6:32","nodeType":"YulTypedName","src":"12142:6:32","type":""},{"name":"length","nativeSrc":"12150:6:32","nodeType":"YulTypedName","src":"12150:6:32","type":""},{"name":"startIndex","nativeSrc":"12158:10:32","nodeType":"YulTypedName","src":"12158:10:32","type":""},{"name":"endIndex","nativeSrc":"12170:8:32","nodeType":"YulTypedName","src":"12170:8:32","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"12183:9:32","nodeType":"YulTypedName","src":"12183:9:32","type":""},{"name":"lengthOut","nativeSrc":"12194:9:32","nodeType":"YulTypedName","src":"12194:9:32","type":""}],"src":"12078:469:32"},{"body":{"nativeSrc":"12618:31:32","nodeType":"YulBlock","src":"12618:31:32","statements":[{"nativeSrc":"12629:13:32","nodeType":"YulAssignment","src":"12629:13:32","value":{"name":"len","nativeSrc":"12639:3:32","nodeType":"YulIdentifier","src":"12639:3:32"},"variableNames":[{"name":"length","nativeSrc":"12629:6:32","nodeType":"YulIdentifier","src":"12629:6:32"}]}]},"name":"array_length_t_bytes_calldata_ptr","nativeSrc":"12553:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12596:5:32","nodeType":"YulTypedName","src":"12596:5:32","type":""},{"name":"len","nativeSrc":"12603:3:32","nodeType":"YulTypedName","src":"12603:3:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12611:6:32","nodeType":"YulTypedName","src":"12611:6:32","type":""}],"src":"12553:96:32"},{"body":{"nativeSrc":"12713:28:32","nodeType":"YulBlock","src":"12713:28:32","statements":[{"nativeSrc":"12723:11:32","nodeType":"YulAssignment","src":"12723:11:32","value":{"name":"ptr","nativeSrc":"12731:3:32","nodeType":"YulIdentifier","src":"12731:3:32"},"variableNames":[{"name":"data","nativeSrc":"12723:4:32","nodeType":"YulIdentifier","src":"12723:4:32"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nativeSrc":"12655:86:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12700:3:32","nodeType":"YulTypedName","src":"12700:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"12708:4:32","nodeType":"YulTypedName","src":"12708:4:32","type":""}],"src":"12655:86:32"},{"body":{"nativeSrc":"12800:54:32","nodeType":"YulBlock","src":"12800:54:32","statements":[{"nativeSrc":"12810:37:32","nodeType":"YulAssignment","src":"12810:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"12835:4:32","nodeType":"YulIdentifier","src":"12835:4:32"},{"name":"value","nativeSrc":"12841:5:32","nodeType":"YulIdentifier","src":"12841:5:32"}],"functionName":{"name":"shl","nativeSrc":"12831:3:32","nodeType":"YulIdentifier","src":"12831:3:32"},"nativeSrc":"12831:16:32","nodeType":"YulFunctionCall","src":"12831:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"12810:8:32","nodeType":"YulIdentifier","src":"12810:8:32"}]}]},"name":"shift_left_dynamic","nativeSrc":"12747:107:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"12775:4:32","nodeType":"YulTypedName","src":"12775:4:32","type":""},{"name":"value","nativeSrc":"12781:5:32","nodeType":"YulTypedName","src":"12781:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"12791:8:32","nodeType":"YulTypedName","src":"12791:8:32","type":""}],"src":"12747:107:32"},{"body":{"nativeSrc":"12956:452:32","nodeType":"YulBlock","src":"12956:452:32","statements":[{"nativeSrc":"12967:59:32","nodeType":"YulVariableDeclaration","src":"12967:59:32","value":{"arguments":[{"name":"array","nativeSrc":"13015:5:32","nodeType":"YulIdentifier","src":"13015:5:32"},{"name":"len","nativeSrc":"13022:3:32","nodeType":"YulIdentifier","src":"13022:3:32"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nativeSrc":"12981:33:32","nodeType":"YulIdentifier","src":"12981:33:32"},"nativeSrc":"12981:45:32","nodeType":"YulFunctionCall","src":"12981:45:32"},"variables":[{"name":"length","nativeSrc":"12971:6:32","nodeType":"YulTypedName","src":"12971:6:32","type":""}]},{"nativeSrc":"13035:21:32","nodeType":"YulVariableDeclaration","src":"13035:21:32","value":{"name":"array","nativeSrc":"13051:5:32","nodeType":"YulIdentifier","src":"13051:5:32"},"variables":[{"name":"dataArea","nativeSrc":"13039:8:32","nodeType":"YulTypedName","src":"13039:8:32","type":""}]},{"nativeSrc":"13066:49:32","nodeType":"YulAssignment","src":"13066:49:32","value":{"arguments":[{"arguments":[{"name":"dataArea","nativeSrc":"13105:8:32","nodeType":"YulIdentifier","src":"13105:8:32"}],"functionName":{"name":"calldataload","nativeSrc":"13092:12:32","nodeType":"YulIdentifier","src":"13092:12:32"},"nativeSrc":"13092:22:32","nodeType":"YulFunctionCall","src":"13092:22:32"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"13075:16:32","nodeType":"YulIdentifier","src":"13075:16:32"},"nativeSrc":"13075:40:32","nodeType":"YulFunctionCall","src":"13075:40:32"},"variableNames":[{"name":"value","nativeSrc":"13066:5:32","nodeType":"YulIdentifier","src":"13066:5:32"}]},{"body":{"nativeSrc":"13142:259:32","nodeType":"YulBlock","src":"13142:259:32","statements":[{"nativeSrc":"13156:235:32","nodeType":"YulAssignment","src":"13156:235:32","value":{"arguments":[{"name":"value","nativeSrc":"13186:5:32","nodeType":"YulIdentifier","src":"13186:5:32"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13253:1:32","nodeType":"YulLiteral","src":"13253:1:32","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"13260:1:32","nodeType":"YulLiteral","src":"13260:1:32","type":"","value":"4"},{"name":"length","nativeSrc":"13263:6:32","nodeType":"YulIdentifier","src":"13263:6:32"}],"functionName":{"name":"sub","nativeSrc":"13256:3:32","nodeType":"YulIdentifier","src":"13256:3:32"},"nativeSrc":"13256:14:32","nodeType":"YulFunctionCall","src":"13256:14:32"}],"functionName":{"name":"mul","nativeSrc":"13249:3:32","nodeType":"YulIdentifier","src":"13249:3:32"},"nativeSrc":"13249:22:32","nodeType":"YulFunctionCall","src":"13249:22:32"},{"kind":"number","nativeSrc":"13293:66:32","nodeType":"YulLiteral","src":"13293:66:32","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"13209:18:32","nodeType":"YulIdentifier","src":"13209:18:32"},"nativeSrc":"13209:168:32","nodeType":"YulFunctionCall","src":"13209:168:32"}],"functionName":{"name":"and","nativeSrc":"13165:3:32","nodeType":"YulIdentifier","src":"13165:3:32"},"nativeSrc":"13165:226:32","nodeType":"YulFunctionCall","src":"13165:226:32"},"variableNames":[{"name":"value","nativeSrc":"13156:5:32","nodeType":"YulIdentifier","src":"13156:5:32"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13131:6:32","nodeType":"YulIdentifier","src":"13131:6:32"},{"kind":"number","nativeSrc":"13139:1:32","nodeType":"YulLiteral","src":"13139:1:32","type":"","value":"4"}],"functionName":{"name":"lt","nativeSrc":"13128:2:32","nodeType":"YulIdentifier","src":"13128:2:32"},"nativeSrc":"13128:13:32","nodeType":"YulFunctionCall","src":"13128:13:32"},"nativeSrc":"13125:276:32","nodeType":"YulIf","src":"13125:276:32"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4","nativeSrc":"12860:548:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"12935:5:32","nodeType":"YulTypedName","src":"12935:5:32","type":""},{"name":"len","nativeSrc":"12942:3:32","nodeType":"YulTypedName","src":"12942:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12950:5:32","nodeType":"YulTypedName","src":"12950:5:32","type":""}],"src":"12860:548:32"},{"body":{"nativeSrc":"13509:73:32","nodeType":"YulBlock","src":"13509:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13526:3:32","nodeType":"YulIdentifier","src":"13526:3:32"},{"name":"length","nativeSrc":"13531:6:32","nodeType":"YulIdentifier","src":"13531:6:32"}],"functionName":{"name":"mstore","nativeSrc":"13519:6:32","nodeType":"YulIdentifier","src":"13519:6:32"},"nativeSrc":"13519:19:32","nodeType":"YulFunctionCall","src":"13519:19:32"},"nativeSrc":"13519:19:32","nodeType":"YulExpressionStatement","src":"13519:19:32"},{"nativeSrc":"13547:29:32","nodeType":"YulAssignment","src":"13547:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"13566:3:32","nodeType":"YulIdentifier","src":"13566:3:32"},{"kind":"number","nativeSrc":"13571:4:32","nodeType":"YulLiteral","src":"13571:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13562:3:32","nodeType":"YulIdentifier","src":"13562:3:32"},"nativeSrc":"13562:14:32","nodeType":"YulFunctionCall","src":"13562:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"13547:11:32","nodeType":"YulIdentifier","src":"13547:11:32"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"13414:168:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13481:3:32","nodeType":"YulTypedName","src":"13481:3:32","type":""},{"name":"length","nativeSrc":"13486:6:32","nodeType":"YulTypedName","src":"13486:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"13497:11:32","nodeType":"YulTypedName","src":"13497:11:32","type":""}],"src":"13414:168:32"},{"body":{"nativeSrc":"13710:214:32","nodeType":"YulBlock","src":"13710:214:32","statements":[{"nativeSrc":"13720:77:32","nodeType":"YulAssignment","src":"13720:77:32","value":{"arguments":[{"name":"pos","nativeSrc":"13785:3:32","nodeType":"YulIdentifier","src":"13785:3:32"},{"name":"length","nativeSrc":"13790:6:32","nodeType":"YulIdentifier","src":"13790:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"13727:57:32","nodeType":"YulIdentifier","src":"13727:57:32"},"nativeSrc":"13727:70:32","nodeType":"YulFunctionCall","src":"13727:70:32"},"variableNames":[{"name":"pos","nativeSrc":"13720:3:32","nodeType":"YulIdentifier","src":"13720:3:32"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"13844:5:32","nodeType":"YulIdentifier","src":"13844:5:32"},{"name":"pos","nativeSrc":"13851:3:32","nodeType":"YulIdentifier","src":"13851:3:32"},{"name":"length","nativeSrc":"13856:6:32","nodeType":"YulIdentifier","src":"13856:6:32"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"13807:36:32","nodeType":"YulIdentifier","src":"13807:36:32"},"nativeSrc":"13807:56:32","nodeType":"YulFunctionCall","src":"13807:56:32"},"nativeSrc":"13807:56:32","nodeType":"YulExpressionStatement","src":"13807:56:32"},{"nativeSrc":"13872:46:32","nodeType":"YulAssignment","src":"13872:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"13883:3:32","nodeType":"YulIdentifier","src":"13883:3:32"},{"arguments":[{"name":"length","nativeSrc":"13910:6:32","nodeType":"YulIdentifier","src":"13910:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"13888:21:32","nodeType":"YulIdentifier","src":"13888:21:32"},"nativeSrc":"13888:29:32","nodeType":"YulFunctionCall","src":"13888:29:32"}],"functionName":{"name":"add","nativeSrc":"13879:3:32","nodeType":"YulIdentifier","src":"13879:3:32"},"nativeSrc":"13879:39:32","nodeType":"YulFunctionCall","src":"13879:39:32"},"variableNames":[{"name":"end","nativeSrc":"13872:3:32","nodeType":"YulIdentifier","src":"13872:3:32"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"13610:314:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"13683:5:32","nodeType":"YulTypedName","src":"13683:5:32","type":""},{"name":"length","nativeSrc":"13690:6:32","nodeType":"YulTypedName","src":"13690:6:32","type":""},{"name":"pos","nativeSrc":"13698:3:32","nodeType":"YulTypedName","src":"13698:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13706:3:32","nodeType":"YulTypedName","src":"13706:3:32","type":""}],"src":"13610:314:32"},{"body":{"nativeSrc":"14084:285:32","nodeType":"YulBlock","src":"14084:285:32","statements":[{"nativeSrc":"14094:26:32","nodeType":"YulAssignment","src":"14094:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"14106:9:32","nodeType":"YulIdentifier","src":"14106:9:32"},{"kind":"number","nativeSrc":"14117:2:32","nodeType":"YulLiteral","src":"14117:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14102:3:32","nodeType":"YulIdentifier","src":"14102:3:32"},"nativeSrc":"14102:18:32","nodeType":"YulFunctionCall","src":"14102:18:32"},"variableNames":[{"name":"tail","nativeSrc":"14094:4:32","nodeType":"YulIdentifier","src":"14094:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14174:6:32","nodeType":"YulIdentifier","src":"14174:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"14187:9:32","nodeType":"YulIdentifier","src":"14187:9:32"},{"kind":"number","nativeSrc":"14198:1:32","nodeType":"YulLiteral","src":"14198:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14183:3:32","nodeType":"YulIdentifier","src":"14183:3:32"},"nativeSrc":"14183:17:32","nodeType":"YulFunctionCall","src":"14183:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14130:43:32","nodeType":"YulIdentifier","src":"14130:43:32"},"nativeSrc":"14130:71:32","nodeType":"YulFunctionCall","src":"14130:71:32"},"nativeSrc":"14130:71:32","nodeType":"YulExpressionStatement","src":"14130:71:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14222:9:32","nodeType":"YulIdentifier","src":"14222:9:32"},{"kind":"number","nativeSrc":"14233:2:32","nodeType":"YulLiteral","src":"14233:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14218:3:32","nodeType":"YulIdentifier","src":"14218:3:32"},"nativeSrc":"14218:18:32","nodeType":"YulFunctionCall","src":"14218:18:32"},{"arguments":[{"name":"tail","nativeSrc":"14242:4:32","nodeType":"YulIdentifier","src":"14242:4:32"},{"name":"headStart","nativeSrc":"14248:9:32","nodeType":"YulIdentifier","src":"14248:9:32"}],"functionName":{"name":"sub","nativeSrc":"14238:3:32","nodeType":"YulIdentifier","src":"14238:3:32"},"nativeSrc":"14238:20:32","nodeType":"YulFunctionCall","src":"14238:20:32"}],"functionName":{"name":"mstore","nativeSrc":"14211:6:32","nodeType":"YulIdentifier","src":"14211:6:32"},"nativeSrc":"14211:48:32","nodeType":"YulFunctionCall","src":"14211:48:32"},"nativeSrc":"14211:48:32","nodeType":"YulExpressionStatement","src":"14211:48:32"},{"nativeSrc":"14268:94:32","nodeType":"YulAssignment","src":"14268:94:32","value":{"arguments":[{"name":"value1","nativeSrc":"14340:6:32","nodeType":"YulIdentifier","src":"14340:6:32"},{"name":"value2","nativeSrc":"14348:6:32","nodeType":"YulIdentifier","src":"14348:6:32"},{"name":"tail","nativeSrc":"14357:4:32","nodeType":"YulIdentifier","src":"14357:4:32"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"14276:63:32","nodeType":"YulIdentifier","src":"14276:63:32"},"nativeSrc":"14276:86:32","nodeType":"YulFunctionCall","src":"14276:86:32"},"variableNames":[{"name":"tail","nativeSrc":"14268:4:32","nodeType":"YulIdentifier","src":"14268:4:32"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"13930:439:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14040:9:32","nodeType":"YulTypedName","src":"14040:9:32","type":""},{"name":"value2","nativeSrc":"14052:6:32","nodeType":"YulTypedName","src":"14052:6:32","type":""},{"name":"value1","nativeSrc":"14060:6:32","nodeType":"YulTypedName","src":"14060:6:32","type":""},{"name":"value0","nativeSrc":"14068:6:32","nodeType":"YulTypedName","src":"14068:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14079:4:32","nodeType":"YulTypedName","src":"14079:4:32","type":""}],"src":"13930:439:32"},{"body":{"nativeSrc":"14418:79:32","nodeType":"YulBlock","src":"14418:79:32","statements":[{"body":{"nativeSrc":"14475:16:32","nodeType":"YulBlock","src":"14475:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14484:1:32","nodeType":"YulLiteral","src":"14484:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"14487:1:32","nodeType":"YulLiteral","src":"14487:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14477:6:32","nodeType":"YulIdentifier","src":"14477:6:32"},"nativeSrc":"14477:12:32","nodeType":"YulFunctionCall","src":"14477:12:32"},"nativeSrc":"14477:12:32","nodeType":"YulExpressionStatement","src":"14477:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14441:5:32","nodeType":"YulIdentifier","src":"14441:5:32"},{"arguments":[{"name":"value","nativeSrc":"14466:5:32","nodeType":"YulIdentifier","src":"14466:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"14448:17:32","nodeType":"YulIdentifier","src":"14448:17:32"},"nativeSrc":"14448:24:32","nodeType":"YulFunctionCall","src":"14448:24:32"}],"functionName":{"name":"eq","nativeSrc":"14438:2:32","nodeType":"YulIdentifier","src":"14438:2:32"},"nativeSrc":"14438:35:32","nodeType":"YulFunctionCall","src":"14438:35:32"}],"functionName":{"name":"iszero","nativeSrc":"14431:6:32","nodeType":"YulIdentifier","src":"14431:6:32"},"nativeSrc":"14431:43:32","nodeType":"YulFunctionCall","src":"14431:43:32"},"nativeSrc":"14428:63:32","nodeType":"YulIf","src":"14428:63:32"}]},"name":"validator_revert_t_bytes32","nativeSrc":"14375:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14411:5:32","nodeType":"YulTypedName","src":"14411:5:32","type":""}],"src":"14375:122:32"},{"body":{"nativeSrc":"14566:80:32","nodeType":"YulBlock","src":"14566:80:32","statements":[{"nativeSrc":"14576:22:32","nodeType":"YulAssignment","src":"14576:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"14591:6:32","nodeType":"YulIdentifier","src":"14591:6:32"}],"functionName":{"name":"mload","nativeSrc":"14585:5:32","nodeType":"YulIdentifier","src":"14585:5:32"},"nativeSrc":"14585:13:32","nodeType":"YulFunctionCall","src":"14585:13:32"},"variableNames":[{"name":"value","nativeSrc":"14576:5:32","nodeType":"YulIdentifier","src":"14576:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"14634:5:32","nodeType":"YulIdentifier","src":"14634:5:32"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"14607:26:32","nodeType":"YulIdentifier","src":"14607:26:32"},"nativeSrc":"14607:33:32","nodeType":"YulFunctionCall","src":"14607:33:32"},"nativeSrc":"14607:33:32","nodeType":"YulExpressionStatement","src":"14607:33:32"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"14503:143:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14544:6:32","nodeType":"YulTypedName","src":"14544:6:32","type":""},{"name":"end","nativeSrc":"14552:3:32","nodeType":"YulTypedName","src":"14552:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14560:5:32","nodeType":"YulTypedName","src":"14560:5:32","type":""}],"src":"14503:143:32"},{"body":{"nativeSrc":"14729:274:32","nodeType":"YulBlock","src":"14729:274:32","statements":[{"body":{"nativeSrc":"14775:83:32","nodeType":"YulBlock","src":"14775:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14777:77:32","nodeType":"YulIdentifier","src":"14777:77:32"},"nativeSrc":"14777:79:32","nodeType":"YulFunctionCall","src":"14777:79:32"},"nativeSrc":"14777:79:32","nodeType":"YulExpressionStatement","src":"14777:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14750:7:32","nodeType":"YulIdentifier","src":"14750:7:32"},{"name":"headStart","nativeSrc":"14759:9:32","nodeType":"YulIdentifier","src":"14759:9:32"}],"functionName":{"name":"sub","nativeSrc":"14746:3:32","nodeType":"YulIdentifier","src":"14746:3:32"},"nativeSrc":"14746:23:32","nodeType":"YulFunctionCall","src":"14746:23:32"},{"kind":"number","nativeSrc":"14771:2:32","nodeType":"YulLiteral","src":"14771:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"14742:3:32","nodeType":"YulIdentifier","src":"14742:3:32"},"nativeSrc":"14742:32:32","nodeType":"YulFunctionCall","src":"14742:32:32"},"nativeSrc":"14739:119:32","nodeType":"YulIf","src":"14739:119:32"},{"nativeSrc":"14868:128:32","nodeType":"YulBlock","src":"14868:128:32","statements":[{"nativeSrc":"14883:15:32","nodeType":"YulVariableDeclaration","src":"14883:15:32","value":{"kind":"number","nativeSrc":"14897:1:32","nodeType":"YulLiteral","src":"14897:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14887:6:32","nodeType":"YulTypedName","src":"14887:6:32","type":""}]},{"nativeSrc":"14912:74:32","nodeType":"YulAssignment","src":"14912:74:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14958:9:32","nodeType":"YulIdentifier","src":"14958:9:32"},{"name":"offset","nativeSrc":"14969:6:32","nodeType":"YulIdentifier","src":"14969:6:32"}],"functionName":{"name":"add","nativeSrc":"14954:3:32","nodeType":"YulIdentifier","src":"14954:3:32"},"nativeSrc":"14954:22:32","nodeType":"YulFunctionCall","src":"14954:22:32"},{"name":"dataEnd","nativeSrc":"14978:7:32","nodeType":"YulIdentifier","src":"14978:7:32"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"14922:31:32","nodeType":"YulIdentifier","src":"14922:31:32"},"nativeSrc":"14922:64:32","nodeType":"YulFunctionCall","src":"14922:64:32"},"variableNames":[{"name":"value0","nativeSrc":"14912:6:32","nodeType":"YulIdentifier","src":"14912:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"14652:351:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14699:9:32","nodeType":"YulTypedName","src":"14699:9:32","type":""},{"name":"dataEnd","nativeSrc":"14710:7:32","nodeType":"YulTypedName","src":"14710:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14722:6:32","nodeType":"YulTypedName","src":"14722:6:32","type":""}],"src":"14652:351:32"},{"body":{"nativeSrc":"15037:152:32","nodeType":"YulBlock","src":"15037:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15054:1:32","nodeType":"YulLiteral","src":"15054:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"15057:77:32","nodeType":"YulLiteral","src":"15057:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15047:6:32","nodeType":"YulIdentifier","src":"15047:6:32"},"nativeSrc":"15047:88:32","nodeType":"YulFunctionCall","src":"15047:88:32"},"nativeSrc":"15047:88:32","nodeType":"YulExpressionStatement","src":"15047:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15151:1:32","nodeType":"YulLiteral","src":"15151:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"15154:4:32","nodeType":"YulLiteral","src":"15154:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"15144:6:32","nodeType":"YulIdentifier","src":"15144:6:32"},"nativeSrc":"15144:15:32","nodeType":"YulFunctionCall","src":"15144:15:32"},"nativeSrc":"15144:15:32","nodeType":"YulExpressionStatement","src":"15144:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15175:1:32","nodeType":"YulLiteral","src":"15175:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"15178:4:32","nodeType":"YulLiteral","src":"15178:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15168:6:32","nodeType":"YulIdentifier","src":"15168:6:32"},"nativeSrc":"15168:15:32","nodeType":"YulFunctionCall","src":"15168:15:32"},"nativeSrc":"15168:15:32","nodeType":"YulExpressionStatement","src":"15168:15:32"}]},"name":"panic_error_0x11","nativeSrc":"15009:180:32","nodeType":"YulFunctionDefinition","src":"15009:180:32"},{"body":{"nativeSrc":"15239:147:32","nodeType":"YulBlock","src":"15239:147:32","statements":[{"nativeSrc":"15249:25:32","nodeType":"YulAssignment","src":"15249:25:32","value":{"arguments":[{"name":"x","nativeSrc":"15272:1:32","nodeType":"YulIdentifier","src":"15272:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15254:17:32","nodeType":"YulIdentifier","src":"15254:17:32"},"nativeSrc":"15254:20:32","nodeType":"YulFunctionCall","src":"15254:20:32"},"variableNames":[{"name":"x","nativeSrc":"15249:1:32","nodeType":"YulIdentifier","src":"15249:1:32"}]},{"nativeSrc":"15283:25:32","nodeType":"YulAssignment","src":"15283:25:32","value":{"arguments":[{"name":"y","nativeSrc":"15306:1:32","nodeType":"YulIdentifier","src":"15306:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15288:17:32","nodeType":"YulIdentifier","src":"15288:17:32"},"nativeSrc":"15288:20:32","nodeType":"YulFunctionCall","src":"15288:20:32"},"variableNames":[{"name":"y","nativeSrc":"15283:1:32","nodeType":"YulIdentifier","src":"15283:1:32"}]},{"nativeSrc":"15317:16:32","nodeType":"YulAssignment","src":"15317:16:32","value":{"arguments":[{"name":"x","nativeSrc":"15328:1:32","nodeType":"YulIdentifier","src":"15328:1:32"},{"name":"y","nativeSrc":"15331:1:32","nodeType":"YulIdentifier","src":"15331:1:32"}],"functionName":{"name":"add","nativeSrc":"15324:3:32","nodeType":"YulIdentifier","src":"15324:3:32"},"nativeSrc":"15324:9:32","nodeType":"YulFunctionCall","src":"15324:9:32"},"variableNames":[{"name":"sum","nativeSrc":"15317:3:32","nodeType":"YulIdentifier","src":"15317:3:32"}]},{"body":{"nativeSrc":"15357:22:32","nodeType":"YulBlock","src":"15357:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15359:16:32","nodeType":"YulIdentifier","src":"15359:16:32"},"nativeSrc":"15359:18:32","nodeType":"YulFunctionCall","src":"15359:18:32"},"nativeSrc":"15359:18:32","nodeType":"YulExpressionStatement","src":"15359:18:32"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"15349:1:32","nodeType":"YulIdentifier","src":"15349:1:32"},{"name":"sum","nativeSrc":"15352:3:32","nodeType":"YulIdentifier","src":"15352:3:32"}],"functionName":{"name":"gt","nativeSrc":"15346:2:32","nodeType":"YulIdentifier","src":"15346:2:32"},"nativeSrc":"15346:10:32","nodeType":"YulFunctionCall","src":"15346:10:32"},"nativeSrc":"15343:36:32","nodeType":"YulIf","src":"15343:36:32"}]},"name":"checked_add_t_uint256","nativeSrc":"15195:191:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15226:1:32","nodeType":"YulTypedName","src":"15226:1:32","type":""},{"name":"y","nativeSrc":"15229:1:32","nodeType":"YulTypedName","src":"15229:1:32","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"15235:3:32","nodeType":"YulTypedName","src":"15235:3:32","type":""}],"src":"15195:191:32"},{"body":{"nativeSrc":"15544:286:32","nodeType":"YulBlock","src":"15544:286:32","statements":[{"nativeSrc":"15554:26:32","nodeType":"YulAssignment","src":"15554:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"15566:9:32","nodeType":"YulIdentifier","src":"15566:9:32"},{"kind":"number","nativeSrc":"15577:2:32","nodeType":"YulLiteral","src":"15577:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15562:3:32","nodeType":"YulIdentifier","src":"15562:3:32"},"nativeSrc":"15562:18:32","nodeType":"YulFunctionCall","src":"15562:18:32"},"variableNames":[{"name":"tail","nativeSrc":"15554:4:32","nodeType":"YulIdentifier","src":"15554:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15634:6:32","nodeType":"YulIdentifier","src":"15634:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15647:9:32","nodeType":"YulIdentifier","src":"15647:9:32"},{"kind":"number","nativeSrc":"15658:1:32","nodeType":"YulLiteral","src":"15658:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15643:3:32","nodeType":"YulIdentifier","src":"15643:3:32"},"nativeSrc":"15643:17:32","nodeType":"YulFunctionCall","src":"15643:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15590:43:32","nodeType":"YulIdentifier","src":"15590:43:32"},"nativeSrc":"15590:71:32","nodeType":"YulFunctionCall","src":"15590:71:32"},"nativeSrc":"15590:71:32","nodeType":"YulExpressionStatement","src":"15590:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15715:6:32","nodeType":"YulIdentifier","src":"15715:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15728:9:32","nodeType":"YulIdentifier","src":"15728:9:32"},{"kind":"number","nativeSrc":"15739:2:32","nodeType":"YulLiteral","src":"15739:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15724:3:32","nodeType":"YulIdentifier","src":"15724:3:32"},"nativeSrc":"15724:18:32","nodeType":"YulFunctionCall","src":"15724:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15671:43:32","nodeType":"YulIdentifier","src":"15671:43:32"},"nativeSrc":"15671:72:32","nodeType":"YulFunctionCall","src":"15671:72:32"},"nativeSrc":"15671:72:32","nodeType":"YulExpressionStatement","src":"15671:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15795:6:32","nodeType":"YulIdentifier","src":"15795:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15808:9:32","nodeType":"YulIdentifier","src":"15808:9:32"},{"kind":"number","nativeSrc":"15819:2:32","nodeType":"YulLiteral","src":"15819:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15804:3:32","nodeType":"YulIdentifier","src":"15804:3:32"},"nativeSrc":"15804:18:32","nodeType":"YulFunctionCall","src":"15804:18:32"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"15753:41:32","nodeType":"YulIdentifier","src":"15753:41:32"},"nativeSrc":"15753:70:32","nodeType":"YulFunctionCall","src":"15753:70:32"},"nativeSrc":"15753:70:32","nodeType":"YulExpressionStatement","src":"15753:70:32"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed","nativeSrc":"15392:438:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15500:9:32","nodeType":"YulTypedName","src":"15500:9:32","type":""},{"name":"value2","nativeSrc":"15512:6:32","nodeType":"YulTypedName","src":"15512:6:32","type":""},{"name":"value1","nativeSrc":"15520:6:32","nodeType":"YulTypedName","src":"15520:6:32","type":""},{"name":"value0","nativeSrc":"15528:6:32","nodeType":"YulTypedName","src":"15528:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15539:4:32","nodeType":"YulTypedName","src":"15539:4:32","type":""}],"src":"15392:438:32"},{"body":{"nativeSrc":"15894:40:32","nodeType":"YulBlock","src":"15894:40:32","statements":[{"nativeSrc":"15905:22:32","nodeType":"YulAssignment","src":"15905:22:32","value":{"arguments":[{"name":"value","nativeSrc":"15921:5:32","nodeType":"YulIdentifier","src":"15921:5:32"}],"functionName":{"name":"mload","nativeSrc":"15915:5:32","nodeType":"YulIdentifier","src":"15915:5:32"},"nativeSrc":"15915:12:32","nodeType":"YulFunctionCall","src":"15915:12:32"},"variableNames":[{"name":"length","nativeSrc":"15905:6:32","nodeType":"YulIdentifier","src":"15905:6:32"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"15836:98:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15877:5:32","nodeType":"YulTypedName","src":"15877:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15887:6:32","nodeType":"YulTypedName","src":"15887:6:32","type":""}],"src":"15836:98:32"},{"body":{"nativeSrc":"16053:34:32","nodeType":"YulBlock","src":"16053:34:32","statements":[{"nativeSrc":"16063:18:32","nodeType":"YulAssignment","src":"16063:18:32","value":{"name":"pos","nativeSrc":"16078:3:32","nodeType":"YulIdentifier","src":"16078:3:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"16063:11:32","nodeType":"YulIdentifier","src":"16063:11:32"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15940:147:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16025:3:32","nodeType":"YulTypedName","src":"16025:3:32","type":""},{"name":"length","nativeSrc":"16030:6:32","nodeType":"YulTypedName","src":"16030:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"16041:11:32","nodeType":"YulTypedName","src":"16041:11:32","type":""}],"src":"15940:147:32"},{"body":{"nativeSrc":"16201:278:32","nodeType":"YulBlock","src":"16201:278:32","statements":[{"nativeSrc":"16211:52:32","nodeType":"YulVariableDeclaration","src":"16211:52:32","value":{"arguments":[{"name":"value","nativeSrc":"16257:5:32","nodeType":"YulIdentifier","src":"16257:5:32"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"16225:31:32","nodeType":"YulIdentifier","src":"16225:31:32"},"nativeSrc":"16225:38:32","nodeType":"YulFunctionCall","src":"16225:38:32"},"variables":[{"name":"length","nativeSrc":"16215:6:32","nodeType":"YulTypedName","src":"16215:6:32","type":""}]},{"nativeSrc":"16272:95:32","nodeType":"YulAssignment","src":"16272:95:32","value":{"arguments":[{"name":"pos","nativeSrc":"16355:3:32","nodeType":"YulIdentifier","src":"16355:3:32"},{"name":"length","nativeSrc":"16360:6:32","nodeType":"YulIdentifier","src":"16360:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16279:75:32","nodeType":"YulIdentifier","src":"16279:75:32"},"nativeSrc":"16279:88:32","nodeType":"YulFunctionCall","src":"16279:88:32"},"variableNames":[{"name":"pos","nativeSrc":"16272:3:32","nodeType":"YulIdentifier","src":"16272:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16415:5:32","nodeType":"YulIdentifier","src":"16415:5:32"},{"kind":"number","nativeSrc":"16422:4:32","nodeType":"YulLiteral","src":"16422:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16411:3:32","nodeType":"YulIdentifier","src":"16411:3:32"},"nativeSrc":"16411:16:32","nodeType":"YulFunctionCall","src":"16411:16:32"},{"name":"pos","nativeSrc":"16429:3:32","nodeType":"YulIdentifier","src":"16429:3:32"},{"name":"length","nativeSrc":"16434:6:32","nodeType":"YulIdentifier","src":"16434:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"16376:34:32","nodeType":"YulIdentifier","src":"16376:34:32"},"nativeSrc":"16376:65:32","nodeType":"YulFunctionCall","src":"16376:65:32"},"nativeSrc":"16376:65:32","nodeType":"YulExpressionStatement","src":"16376:65:32"},{"nativeSrc":"16450:23:32","nodeType":"YulAssignment","src":"16450:23:32","value":{"arguments":[{"name":"pos","nativeSrc":"16461:3:32","nodeType":"YulIdentifier","src":"16461:3:32"},{"name":"length","nativeSrc":"16466:6:32","nodeType":"YulIdentifier","src":"16466:6:32"}],"functionName":{"name":"add","nativeSrc":"16457:3:32","nodeType":"YulIdentifier","src":"16457:3:32"},"nativeSrc":"16457:16:32","nodeType":"YulFunctionCall","src":"16457:16:32"},"variableNames":[{"name":"end","nativeSrc":"16450:3:32","nodeType":"YulIdentifier","src":"16450:3:32"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16093:386:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16182:5:32","nodeType":"YulTypedName","src":"16182:5:32","type":""},{"name":"pos","nativeSrc":"16189:3:32","nodeType":"YulTypedName","src":"16189:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16197:3:32","nodeType":"YulTypedName","src":"16197:3:32","type":""}],"src":"16093:386:32"},{"body":{"nativeSrc":"16619:137:32","nodeType":"YulBlock","src":"16619:137:32","statements":[{"nativeSrc":"16630:100:32","nodeType":"YulAssignment","src":"16630:100:32","value":{"arguments":[{"name":"value0","nativeSrc":"16717:6:32","nodeType":"YulIdentifier","src":"16717:6:32"},{"name":"pos","nativeSrc":"16726:3:32","nodeType":"YulIdentifier","src":"16726:3:32"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16637:79:32","nodeType":"YulIdentifier","src":"16637:79:32"},"nativeSrc":"16637:93:32","nodeType":"YulFunctionCall","src":"16637:93:32"},"variableNames":[{"name":"pos","nativeSrc":"16630:3:32","nodeType":"YulIdentifier","src":"16630:3:32"}]},{"nativeSrc":"16740:10:32","nodeType":"YulAssignment","src":"16740:10:32","value":{"name":"pos","nativeSrc":"16747:3:32","nodeType":"YulIdentifier","src":"16747:3:32"},"variableNames":[{"name":"end","nativeSrc":"16740:3:32","nodeType":"YulIdentifier","src":"16740:3:32"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"16485:271:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16598:3:32","nodeType":"YulTypedName","src":"16598:3:32","type":""},{"name":"value0","nativeSrc":"16604:6:32","nodeType":"YulTypedName","src":"16604:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16615:3:32","nodeType":"YulTypedName","src":"16615:3:32","type":""}],"src":"16485:271:32"},{"body":{"nativeSrc":"16802:76:32","nodeType":"YulBlock","src":"16802:76:32","statements":[{"body":{"nativeSrc":"16856:16:32","nodeType":"YulBlock","src":"16856:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16865:1:32","nodeType":"YulLiteral","src":"16865:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"16868:1:32","nodeType":"YulLiteral","src":"16868:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16858:6:32","nodeType":"YulIdentifier","src":"16858:6:32"},"nativeSrc":"16858:12:32","nodeType":"YulFunctionCall","src":"16858:12:32"},"nativeSrc":"16858:12:32","nodeType":"YulExpressionStatement","src":"16858:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16825:5:32","nodeType":"YulIdentifier","src":"16825:5:32"},{"arguments":[{"name":"value","nativeSrc":"16847:5:32","nodeType":"YulIdentifier","src":"16847:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"16832:14:32","nodeType":"YulIdentifier","src":"16832:14:32"},"nativeSrc":"16832:21:32","nodeType":"YulFunctionCall","src":"16832:21:32"}],"functionName":{"name":"eq","nativeSrc":"16822:2:32","nodeType":"YulIdentifier","src":"16822:2:32"},"nativeSrc":"16822:32:32","nodeType":"YulFunctionCall","src":"16822:32:32"}],"functionName":{"name":"iszero","nativeSrc":"16815:6:32","nodeType":"YulIdentifier","src":"16815:6:32"},"nativeSrc":"16815:40:32","nodeType":"YulFunctionCall","src":"16815:40:32"},"nativeSrc":"16812:60:32","nodeType":"YulIf","src":"16812:60:32"}]},"name":"validator_revert_t_bool","nativeSrc":"16762:116:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16795:5:32","nodeType":"YulTypedName","src":"16795:5:32","type":""}],"src":"16762:116:32"},{"body":{"nativeSrc":"16944:77:32","nodeType":"YulBlock","src":"16944:77:32","statements":[{"nativeSrc":"16954:22:32","nodeType":"YulAssignment","src":"16954:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"16969:6:32","nodeType":"YulIdentifier","src":"16969:6:32"}],"functionName":{"name":"mload","nativeSrc":"16963:5:32","nodeType":"YulIdentifier","src":"16963:5:32"},"nativeSrc":"16963:13:32","nodeType":"YulFunctionCall","src":"16963:13:32"},"variableNames":[{"name":"value","nativeSrc":"16954:5:32","nodeType":"YulIdentifier","src":"16954:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17009:5:32","nodeType":"YulIdentifier","src":"17009:5:32"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"16985:23:32","nodeType":"YulIdentifier","src":"16985:23:32"},"nativeSrc":"16985:30:32","nodeType":"YulFunctionCall","src":"16985:30:32"},"nativeSrc":"16985:30:32","nodeType":"YulExpressionStatement","src":"16985:30:32"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"16884:137:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16922:6:32","nodeType":"YulTypedName","src":"16922:6:32","type":""},{"name":"end","nativeSrc":"16930:3:32","nodeType":"YulTypedName","src":"16930:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16938:5:32","nodeType":"YulTypedName","src":"16938:5:32","type":""}],"src":"16884:137:32"},{"body":{"nativeSrc":"17071:49:32","nodeType":"YulBlock","src":"17071:49:32","statements":[{"nativeSrc":"17081:33:32","nodeType":"YulAssignment","src":"17081:33:32","value":{"arguments":[{"name":"value","nativeSrc":"17096:5:32","nodeType":"YulIdentifier","src":"17096:5:32"},{"kind":"number","nativeSrc":"17103:10:32","nodeType":"YulLiteral","src":"17103:10:32","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"17092:3:32","nodeType":"YulIdentifier","src":"17092:3:32"},"nativeSrc":"17092:22:32","nodeType":"YulFunctionCall","src":"17092:22:32"},"variableNames":[{"name":"cleaned","nativeSrc":"17081:7:32","nodeType":"YulIdentifier","src":"17081:7:32"}]}]},"name":"cleanup_t_uint32","nativeSrc":"17027:93:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17053:5:32","nodeType":"YulTypedName","src":"17053:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"17063:7:32","nodeType":"YulTypedName","src":"17063:7:32","type":""}],"src":"17027:93:32"},{"body":{"nativeSrc":"17168:78:32","nodeType":"YulBlock","src":"17168:78:32","statements":[{"body":{"nativeSrc":"17224:16:32","nodeType":"YulBlock","src":"17224:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17233:1:32","nodeType":"YulLiteral","src":"17233:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"17236:1:32","nodeType":"YulLiteral","src":"17236:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"17226:6:32","nodeType":"YulIdentifier","src":"17226:6:32"},"nativeSrc":"17226:12:32","nodeType":"YulFunctionCall","src":"17226:12:32"},"nativeSrc":"17226:12:32","nodeType":"YulExpressionStatement","src":"17226:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17191:5:32","nodeType":"YulIdentifier","src":"17191:5:32"},{"arguments":[{"name":"value","nativeSrc":"17215:5:32","nodeType":"YulIdentifier","src":"17215:5:32"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"17198:16:32","nodeType":"YulIdentifier","src":"17198:16:32"},"nativeSrc":"17198:23:32","nodeType":"YulFunctionCall","src":"17198:23:32"}],"functionName":{"name":"eq","nativeSrc":"17188:2:32","nodeType":"YulIdentifier","src":"17188:2:32"},"nativeSrc":"17188:34:32","nodeType":"YulFunctionCall","src":"17188:34:32"}],"functionName":{"name":"iszero","nativeSrc":"17181:6:32","nodeType":"YulIdentifier","src":"17181:6:32"},"nativeSrc":"17181:42:32","nodeType":"YulFunctionCall","src":"17181:42:32"},"nativeSrc":"17178:62:32","nodeType":"YulIf","src":"17178:62:32"}]},"name":"validator_revert_t_uint32","nativeSrc":"17126:120:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17161:5:32","nodeType":"YulTypedName","src":"17161:5:32","type":""}],"src":"17126:120:32"},{"body":{"nativeSrc":"17314:79:32","nodeType":"YulBlock","src":"17314:79:32","statements":[{"nativeSrc":"17324:22:32","nodeType":"YulAssignment","src":"17324:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"17339:6:32","nodeType":"YulIdentifier","src":"17339:6:32"}],"functionName":{"name":"mload","nativeSrc":"17333:5:32","nodeType":"YulIdentifier","src":"17333:5:32"},"nativeSrc":"17333:13:32","nodeType":"YulFunctionCall","src":"17333:13:32"},"variableNames":[{"name":"value","nativeSrc":"17324:5:32","nodeType":"YulIdentifier","src":"17324:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17381:5:32","nodeType":"YulIdentifier","src":"17381:5:32"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"17355:25:32","nodeType":"YulIdentifier","src":"17355:25:32"},"nativeSrc":"17355:32:32","nodeType":"YulFunctionCall","src":"17355:32:32"},"nativeSrc":"17355:32:32","nodeType":"YulExpressionStatement","src":"17355:32:32"}]},"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"17252:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17292:6:32","nodeType":"YulTypedName","src":"17292:6:32","type":""},{"name":"end","nativeSrc":"17300:3:32","nodeType":"YulTypedName","src":"17300:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17308:5:32","nodeType":"YulTypedName","src":"17308:5:32","type":""}],"src":"17252:141:32"},{"body":{"nativeSrc":"17489:409:32","nodeType":"YulBlock","src":"17489:409:32","statements":[{"body":{"nativeSrc":"17535:83:32","nodeType":"YulBlock","src":"17535:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17537:77:32","nodeType":"YulIdentifier","src":"17537:77:32"},"nativeSrc":"17537:79:32","nodeType":"YulFunctionCall","src":"17537:79:32"},"nativeSrc":"17537:79:32","nodeType":"YulExpressionStatement","src":"17537:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17510:7:32","nodeType":"YulIdentifier","src":"17510:7:32"},{"name":"headStart","nativeSrc":"17519:9:32","nodeType":"YulIdentifier","src":"17519:9:32"}],"functionName":{"name":"sub","nativeSrc":"17506:3:32","nodeType":"YulIdentifier","src":"17506:3:32"},"nativeSrc":"17506:23:32","nodeType":"YulFunctionCall","src":"17506:23:32"},{"kind":"number","nativeSrc":"17531:2:32","nodeType":"YulLiteral","src":"17531:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"17502:3:32","nodeType":"YulIdentifier","src":"17502:3:32"},"nativeSrc":"17502:32:32","nodeType":"YulFunctionCall","src":"17502:32:32"},"nativeSrc":"17499:119:32","nodeType":"YulIf","src":"17499:119:32"},{"nativeSrc":"17628:125:32","nodeType":"YulBlock","src":"17628:125:32","statements":[{"nativeSrc":"17643:15:32","nodeType":"YulVariableDeclaration","src":"17643:15:32","value":{"kind":"number","nativeSrc":"17657:1:32","nodeType":"YulLiteral","src":"17657:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17647:6:32","nodeType":"YulTypedName","src":"17647:6:32","type":""}]},{"nativeSrc":"17672:71:32","nodeType":"YulAssignment","src":"17672:71:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17715:9:32","nodeType":"YulIdentifier","src":"17715:9:32"},{"name":"offset","nativeSrc":"17726:6:32","nodeType":"YulIdentifier","src":"17726:6:32"}],"functionName":{"name":"add","nativeSrc":"17711:3:32","nodeType":"YulIdentifier","src":"17711:3:32"},"nativeSrc":"17711:22:32","nodeType":"YulFunctionCall","src":"17711:22:32"},{"name":"dataEnd","nativeSrc":"17735:7:32","nodeType":"YulIdentifier","src":"17735:7:32"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"17682:28:32","nodeType":"YulIdentifier","src":"17682:28:32"},"nativeSrc":"17682:61:32","nodeType":"YulFunctionCall","src":"17682:61:32"},"variableNames":[{"name":"value0","nativeSrc":"17672:6:32","nodeType":"YulIdentifier","src":"17672:6:32"}]}]},{"nativeSrc":"17763:128:32","nodeType":"YulBlock","src":"17763:128:32","statements":[{"nativeSrc":"17778:16:32","nodeType":"YulVariableDeclaration","src":"17778:16:32","value":{"kind":"number","nativeSrc":"17792:2:32","nodeType":"YulLiteral","src":"17792:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"17782:6:32","nodeType":"YulTypedName","src":"17782:6:32","type":""}]},{"nativeSrc":"17808:73:32","nodeType":"YulAssignment","src":"17808:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17853:9:32","nodeType":"YulIdentifier","src":"17853:9:32"},{"name":"offset","nativeSrc":"17864:6:32","nodeType":"YulIdentifier","src":"17864:6:32"}],"functionName":{"name":"add","nativeSrc":"17849:3:32","nodeType":"YulIdentifier","src":"17849:3:32"},"nativeSrc":"17849:22:32","nodeType":"YulFunctionCall","src":"17849:22:32"},{"name":"dataEnd","nativeSrc":"17873:7:32","nodeType":"YulIdentifier","src":"17873:7:32"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"17818:30:32","nodeType":"YulIdentifier","src":"17818:30:32"},"nativeSrc":"17818:63:32","nodeType":"YulFunctionCall","src":"17818:63:32"},"variableNames":[{"name":"value1","nativeSrc":"17808:6:32","nodeType":"YulIdentifier","src":"17808:6:32"}]}]}]},"name":"abi_decode_tuple_t_boolt_uint32_fromMemory","nativeSrc":"17399:499:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17451:9:32","nodeType":"YulTypedName","src":"17451:9:32","type":""},{"name":"dataEnd","nativeSrc":"17462:7:32","nodeType":"YulTypedName","src":"17462:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17474:6:32","nodeType":"YulTypedName","src":"17474:6:32","type":""},{"name":"value1","nativeSrc":"17482:6:32","nodeType":"YulTypedName","src":"17482:6:32","type":""}],"src":"17399:499:32"},{"body":{"nativeSrc":"17978:271:32","nodeType":"YulBlock","src":"17978:271:32","statements":[{"body":{"nativeSrc":"18024:83:32","nodeType":"YulBlock","src":"18024:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18026:77:32","nodeType":"YulIdentifier","src":"18026:77:32"},"nativeSrc":"18026:79:32","nodeType":"YulFunctionCall","src":"18026:79:32"},"nativeSrc":"18026:79:32","nodeType":"YulExpressionStatement","src":"18026:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17999:7:32","nodeType":"YulIdentifier","src":"17999:7:32"},{"name":"headStart","nativeSrc":"18008:9:32","nodeType":"YulIdentifier","src":"18008:9:32"}],"functionName":{"name":"sub","nativeSrc":"17995:3:32","nodeType":"YulIdentifier","src":"17995:3:32"},"nativeSrc":"17995:23:32","nodeType":"YulFunctionCall","src":"17995:23:32"},{"kind":"number","nativeSrc":"18020:2:32","nodeType":"YulLiteral","src":"18020:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17991:3:32","nodeType":"YulIdentifier","src":"17991:3:32"},"nativeSrc":"17991:32:32","nodeType":"YulFunctionCall","src":"17991:32:32"},"nativeSrc":"17988:119:32","nodeType":"YulIf","src":"17988:119:32"},{"nativeSrc":"18117:125:32","nodeType":"YulBlock","src":"18117:125:32","statements":[{"nativeSrc":"18132:15:32","nodeType":"YulVariableDeclaration","src":"18132:15:32","value":{"kind":"number","nativeSrc":"18146:1:32","nodeType":"YulLiteral","src":"18146:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18136:6:32","nodeType":"YulTypedName","src":"18136:6:32","type":""}]},{"nativeSrc":"18161:71:32","nodeType":"YulAssignment","src":"18161:71:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18204:9:32","nodeType":"YulIdentifier","src":"18204:9:32"},{"name":"offset","nativeSrc":"18215:6:32","nodeType":"YulIdentifier","src":"18215:6:32"}],"functionName":{"name":"add","nativeSrc":"18200:3:32","nodeType":"YulIdentifier","src":"18200:3:32"},"nativeSrc":"18200:22:32","nodeType":"YulFunctionCall","src":"18200:22:32"},{"name":"dataEnd","nativeSrc":"18224:7:32","nodeType":"YulIdentifier","src":"18224:7:32"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"18171:28:32","nodeType":"YulIdentifier","src":"18171:28:32"},"nativeSrc":"18171:61:32","nodeType":"YulFunctionCall","src":"18171:61:32"},"variableNames":[{"name":"value0","nativeSrc":"18161:6:32","nodeType":"YulIdentifier","src":"18161:6:32"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"17904:345:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17948:9:32","nodeType":"YulTypedName","src":"17948:9:32","type":""},{"name":"dataEnd","nativeSrc":"17959:7:32","nodeType":"YulTypedName","src":"17959:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17971:6:32","nodeType":"YulTypedName","src":"17971:6:32","type":""}],"src":"17904:345:32"},{"body":{"nativeSrc":"18309:87:32","nodeType":"YulBlock","src":"18309:87:32","statements":[{"nativeSrc":"18319:11:32","nodeType":"YulAssignment","src":"18319:11:32","value":{"name":"ptr","nativeSrc":"18327:3:32","nodeType":"YulIdentifier","src":"18327:3:32"},"variableNames":[{"name":"data","nativeSrc":"18319:4:32","nodeType":"YulIdentifier","src":"18319:4:32"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18347:1:32","nodeType":"YulLiteral","src":"18347:1:32","type":"","value":"0"},{"name":"ptr","nativeSrc":"18350:3:32","nodeType":"YulIdentifier","src":"18350:3:32"}],"functionName":{"name":"mstore","nativeSrc":"18340:6:32","nodeType":"YulIdentifier","src":"18340:6:32"},"nativeSrc":"18340:14:32","nodeType":"YulFunctionCall","src":"18340:14:32"},"nativeSrc":"18340:14:32","nodeType":"YulExpressionStatement","src":"18340:14:32"},{"nativeSrc":"18363:26:32","nodeType":"YulAssignment","src":"18363:26:32","value":{"arguments":[{"kind":"number","nativeSrc":"18381:1:32","nodeType":"YulLiteral","src":"18381:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"18384:4:32","nodeType":"YulLiteral","src":"18384:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"18371:9:32","nodeType":"YulIdentifier","src":"18371:9:32"},"nativeSrc":"18371:18:32","nodeType":"YulFunctionCall","src":"18371:18:32"},"variableNames":[{"name":"data","nativeSrc":"18363:4:32","nodeType":"YulIdentifier","src":"18363:4:32"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"18255:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"18296:3:32","nodeType":"YulTypedName","src":"18296:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"18304:4:32","nodeType":"YulTypedName","src":"18304:4:32","type":""}],"src":"18255:141:32"},{"body":{"nativeSrc":"18446:49:32","nodeType":"YulBlock","src":"18446:49:32","statements":[{"nativeSrc":"18456:33:32","nodeType":"YulAssignment","src":"18456:33:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18474:5:32","nodeType":"YulIdentifier","src":"18474:5:32"},{"kind":"number","nativeSrc":"18481:2:32","nodeType":"YulLiteral","src":"18481:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"18470:3:32","nodeType":"YulIdentifier","src":"18470:3:32"},"nativeSrc":"18470:14:32","nodeType":"YulFunctionCall","src":"18470:14:32"},{"kind":"number","nativeSrc":"18486:2:32","nodeType":"YulLiteral","src":"18486:2:32","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"18466:3:32","nodeType":"YulIdentifier","src":"18466:3:32"},"nativeSrc":"18466:23:32","nodeType":"YulFunctionCall","src":"18466:23:32"},"variableNames":[{"name":"result","nativeSrc":"18456:6:32","nodeType":"YulIdentifier","src":"18456:6:32"}]}]},"name":"divide_by_32_ceil","nativeSrc":"18402:93:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18429:5:32","nodeType":"YulTypedName","src":"18429:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"18439:6:32","nodeType":"YulTypedName","src":"18439:6:32","type":""}],"src":"18402:93:32"},{"body":{"nativeSrc":"18577:317:32","nodeType":"YulBlock","src":"18577:317:32","statements":[{"nativeSrc":"18587:35:32","nodeType":"YulVariableDeclaration","src":"18587:35:32","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"18608:10:32","nodeType":"YulIdentifier","src":"18608:10:32"},{"kind":"number","nativeSrc":"18620:1:32","nodeType":"YulLiteral","src":"18620:1:32","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"18604:3:32","nodeType":"YulIdentifier","src":"18604:3:32"},"nativeSrc":"18604:18:32","nodeType":"YulFunctionCall","src":"18604:18:32"},"variables":[{"name":"shiftBits","nativeSrc":"18591:9:32","nodeType":"YulTypedName","src":"18591:9:32","type":""}]},{"nativeSrc":"18631:109:32","nodeType":"YulVariableDeclaration","src":"18631:109:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"18662:9:32","nodeType":"YulIdentifier","src":"18662:9:32"},{"kind":"number","nativeSrc":"18673:66:32","nodeType":"YulLiteral","src":"18673:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"18643:18:32","nodeType":"YulIdentifier","src":"18643:18:32"},"nativeSrc":"18643:97:32","nodeType":"YulFunctionCall","src":"18643:97:32"},"variables":[{"name":"mask","nativeSrc":"18635:4:32","nodeType":"YulTypedName","src":"18635:4:32","type":""}]},{"nativeSrc":"18749:51:32","nodeType":"YulAssignment","src":"18749:51:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"18780:9:32","nodeType":"YulIdentifier","src":"18780:9:32"},{"name":"toInsert","nativeSrc":"18791:8:32","nodeType":"YulIdentifier","src":"18791:8:32"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"18761:18:32","nodeType":"YulIdentifier","src":"18761:18:32"},"nativeSrc":"18761:39:32","nodeType":"YulFunctionCall","src":"18761:39:32"},"variableNames":[{"name":"toInsert","nativeSrc":"18749:8:32","nodeType":"YulIdentifier","src":"18749:8:32"}]},{"nativeSrc":"18809:30:32","nodeType":"YulAssignment","src":"18809:30:32","value":{"arguments":[{"name":"value","nativeSrc":"18822:5:32","nodeType":"YulIdentifier","src":"18822:5:32"},{"arguments":[{"name":"mask","nativeSrc":"18833:4:32","nodeType":"YulIdentifier","src":"18833:4:32"}],"functionName":{"name":"not","nativeSrc":"18829:3:32","nodeType":"YulIdentifier","src":"18829:3:32"},"nativeSrc":"18829:9:32","nodeType":"YulFunctionCall","src":"18829:9:32"}],"functionName":{"name":"and","nativeSrc":"18818:3:32","nodeType":"YulIdentifier","src":"18818:3:32"},"nativeSrc":"18818:21:32","nodeType":"YulFunctionCall","src":"18818:21:32"},"variableNames":[{"name":"value","nativeSrc":"18809:5:32","nodeType":"YulIdentifier","src":"18809:5:32"}]},{"nativeSrc":"18848:40:32","nodeType":"YulAssignment","src":"18848:40:32","value":{"arguments":[{"name":"value","nativeSrc":"18861:5:32","nodeType":"YulIdentifier","src":"18861:5:32"},{"arguments":[{"name":"toInsert","nativeSrc":"18872:8:32","nodeType":"YulIdentifier","src":"18872:8:32"},{"name":"mask","nativeSrc":"18882:4:32","nodeType":"YulIdentifier","src":"18882:4:32"}],"functionName":{"name":"and","nativeSrc":"18868:3:32","nodeType":"YulIdentifier","src":"18868:3:32"},"nativeSrc":"18868:19:32","nodeType":"YulFunctionCall","src":"18868:19:32"}],"functionName":{"name":"or","nativeSrc":"18858:2:32","nodeType":"YulIdentifier","src":"18858:2:32"},"nativeSrc":"18858:30:32","nodeType":"YulFunctionCall","src":"18858:30:32"},"variableNames":[{"name":"result","nativeSrc":"18848:6:32","nodeType":"YulIdentifier","src":"18848:6:32"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"18501:393:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18538:5:32","nodeType":"YulTypedName","src":"18538:5:32","type":""},{"name":"shiftBytes","nativeSrc":"18545:10:32","nodeType":"YulTypedName","src":"18545:10:32","type":""},{"name":"toInsert","nativeSrc":"18557:8:32","nodeType":"YulTypedName","src":"18557:8:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"18570:6:32","nodeType":"YulTypedName","src":"18570:6:32","type":""}],"src":"18501:393:32"},{"body":{"nativeSrc":"18960:82:32","nodeType":"YulBlock","src":"18960:82:32","statements":[{"nativeSrc":"18970:66:32","nodeType":"YulAssignment","src":"18970:66:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19028:5:32","nodeType":"YulIdentifier","src":"19028:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19010:17:32","nodeType":"YulIdentifier","src":"19010:17:32"},"nativeSrc":"19010:24:32","nodeType":"YulFunctionCall","src":"19010:24:32"}],"functionName":{"name":"identity","nativeSrc":"19001:8:32","nodeType":"YulIdentifier","src":"19001:8:32"},"nativeSrc":"19001:34:32","nodeType":"YulFunctionCall","src":"19001:34:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18983:17:32","nodeType":"YulIdentifier","src":"18983:17:32"},"nativeSrc":"18983:53:32","nodeType":"YulFunctionCall","src":"18983:53:32"},"variableNames":[{"name":"converted","nativeSrc":"18970:9:32","nodeType":"YulIdentifier","src":"18970:9:32"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"18900:142:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18940:5:32","nodeType":"YulTypedName","src":"18940:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"18950:9:32","nodeType":"YulTypedName","src":"18950:9:32","type":""}],"src":"18900:142:32"},{"body":{"nativeSrc":"19095:28:32","nodeType":"YulBlock","src":"19095:28:32","statements":[{"nativeSrc":"19105:12:32","nodeType":"YulAssignment","src":"19105:12:32","value":{"name":"value","nativeSrc":"19112:5:32","nodeType":"YulIdentifier","src":"19112:5:32"},"variableNames":[{"name":"ret","nativeSrc":"19105:3:32","nodeType":"YulIdentifier","src":"19105:3:32"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"19048:75:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19081:5:32","nodeType":"YulTypedName","src":"19081:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19091:3:32","nodeType":"YulTypedName","src":"19091:3:32","type":""}],"src":"19048:75:32"},{"body":{"nativeSrc":"19205:193:32","nodeType":"YulBlock","src":"19205:193:32","statements":[{"nativeSrc":"19215:63:32","nodeType":"YulVariableDeclaration","src":"19215:63:32","value":{"arguments":[{"name":"value_0","nativeSrc":"19270:7:32","nodeType":"YulIdentifier","src":"19270:7:32"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"19239:30:32","nodeType":"YulIdentifier","src":"19239:30:32"},"nativeSrc":"19239:39:32","nodeType":"YulFunctionCall","src":"19239:39:32"},"variables":[{"name":"convertedValue_0","nativeSrc":"19219:16:32","nodeType":"YulTypedName","src":"19219:16:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19294:4:32","nodeType":"YulIdentifier","src":"19294:4:32"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"19334:4:32","nodeType":"YulIdentifier","src":"19334:4:32"}],"functionName":{"name":"sload","nativeSrc":"19328:5:32","nodeType":"YulIdentifier","src":"19328:5:32"},"nativeSrc":"19328:11:32","nodeType":"YulFunctionCall","src":"19328:11:32"},{"name":"offset","nativeSrc":"19341:6:32","nodeType":"YulIdentifier","src":"19341:6:32"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"19373:16:32","nodeType":"YulIdentifier","src":"19373:16:32"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"19349:23:32","nodeType":"YulIdentifier","src":"19349:23:32"},"nativeSrc":"19349:41:32","nodeType":"YulFunctionCall","src":"19349:41:32"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"19300:27:32","nodeType":"YulIdentifier","src":"19300:27:32"},"nativeSrc":"19300:91:32","nodeType":"YulFunctionCall","src":"19300:91:32"}],"functionName":{"name":"sstore","nativeSrc":"19287:6:32","nodeType":"YulIdentifier","src":"19287:6:32"},"nativeSrc":"19287:105:32","nodeType":"YulFunctionCall","src":"19287:105:32"},"nativeSrc":"19287:105:32","nodeType":"YulExpressionStatement","src":"19287:105:32"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"19129:269:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19182:4:32","nodeType":"YulTypedName","src":"19182:4:32","type":""},{"name":"offset","nativeSrc":"19188:6:32","nodeType":"YulTypedName","src":"19188:6:32","type":""},{"name":"value_0","nativeSrc":"19196:7:32","nodeType":"YulTypedName","src":"19196:7:32","type":""}],"src":"19129:269:32"},{"body":{"nativeSrc":"19453:24:32","nodeType":"YulBlock","src":"19453:24:32","statements":[{"nativeSrc":"19463:8:32","nodeType":"YulAssignment","src":"19463:8:32","value":{"kind":"number","nativeSrc":"19470:1:32","nodeType":"YulLiteral","src":"19470:1:32","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"19463:3:32","nodeType":"YulIdentifier","src":"19463:3:32"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"19404:73:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"19449:3:32","nodeType":"YulTypedName","src":"19449:3:32","type":""}],"src":"19404:73:32"},{"body":{"nativeSrc":"19536:136:32","nodeType":"YulBlock","src":"19536:136:32","statements":[{"nativeSrc":"19546:46:32","nodeType":"YulVariableDeclaration","src":"19546:46:32","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"19560:30:32","nodeType":"YulIdentifier","src":"19560:30:32"},"nativeSrc":"19560:32:32","nodeType":"YulFunctionCall","src":"19560:32:32"},"variables":[{"name":"zero_0","nativeSrc":"19550:6:32","nodeType":"YulTypedName","src":"19550:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19645:4:32","nodeType":"YulIdentifier","src":"19645:4:32"},{"name":"offset","nativeSrc":"19651:6:32","nodeType":"YulIdentifier","src":"19651:6:32"},{"name":"zero_0","nativeSrc":"19659:6:32","nodeType":"YulIdentifier","src":"19659:6:32"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"19601:43:32","nodeType":"YulIdentifier","src":"19601:43:32"},"nativeSrc":"19601:65:32","nodeType":"YulFunctionCall","src":"19601:65:32"},"nativeSrc":"19601:65:32","nodeType":"YulExpressionStatement","src":"19601:65:32"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"19483:189:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19522:4:32","nodeType":"YulTypedName","src":"19522:4:32","type":""},{"name":"offset","nativeSrc":"19528:6:32","nodeType":"YulTypedName","src":"19528:6:32","type":""}],"src":"19483:189:32"},{"body":{"nativeSrc":"19728:136:32","nodeType":"YulBlock","src":"19728:136:32","statements":[{"body":{"nativeSrc":"19795:63:32","nodeType":"YulBlock","src":"19795:63:32","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"19839:5:32","nodeType":"YulIdentifier","src":"19839:5:32"},{"kind":"number","nativeSrc":"19846:1:32","nodeType":"YulLiteral","src":"19846:1:32","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"19809:29:32","nodeType":"YulIdentifier","src":"19809:29:32"},"nativeSrc":"19809:39:32","nodeType":"YulFunctionCall","src":"19809:39:32"},"nativeSrc":"19809:39:32","nodeType":"YulExpressionStatement","src":"19809:39:32"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"19748:5:32","nodeType":"YulIdentifier","src":"19748:5:32"},{"name":"end","nativeSrc":"19755:3:32","nodeType":"YulIdentifier","src":"19755:3:32"}],"functionName":{"name":"lt","nativeSrc":"19745:2:32","nodeType":"YulIdentifier","src":"19745:2:32"},"nativeSrc":"19745:14:32","nodeType":"YulFunctionCall","src":"19745:14:32"},"nativeSrc":"19738:120:32","nodeType":"YulForLoop","post":{"nativeSrc":"19760:26:32","nodeType":"YulBlock","src":"19760:26:32","statements":[{"nativeSrc":"19762:22:32","nodeType":"YulAssignment","src":"19762:22:32","value":{"arguments":[{"name":"start","nativeSrc":"19775:5:32","nodeType":"YulIdentifier","src":"19775:5:32"},{"kind":"number","nativeSrc":"19782:1:32","nodeType":"YulLiteral","src":"19782:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19771:3:32","nodeType":"YulIdentifier","src":"19771:3:32"},"nativeSrc":"19771:13:32","nodeType":"YulFunctionCall","src":"19771:13:32"},"variableNames":[{"name":"start","nativeSrc":"19762:5:32","nodeType":"YulIdentifier","src":"19762:5:32"}]}]},"pre":{"nativeSrc":"19742:2:32","nodeType":"YulBlock","src":"19742:2:32","statements":[]},"src":"19738:120:32"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"19678:186:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"19716:5:32","nodeType":"YulTypedName","src":"19716:5:32","type":""},{"name":"end","nativeSrc":"19723:3:32","nodeType":"YulTypedName","src":"19723:3:32","type":""}],"src":"19678:186:32"},{"body":{"nativeSrc":"19949:464:32","nodeType":"YulBlock","src":"19949:464:32","statements":[{"body":{"nativeSrc":"19975:431:32","nodeType":"YulBlock","src":"19975:431:32","statements":[{"nativeSrc":"19989:54:32","nodeType":"YulVariableDeclaration","src":"19989:54:32","value":{"arguments":[{"name":"array","nativeSrc":"20037:5:32","nodeType":"YulIdentifier","src":"20037:5:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"20005:31:32","nodeType":"YulIdentifier","src":"20005:31:32"},"nativeSrc":"20005:38:32","nodeType":"YulFunctionCall","src":"20005:38:32"},"variables":[{"name":"dataArea","nativeSrc":"19993:8:32","nodeType":"YulTypedName","src":"19993:8:32","type":""}]},{"nativeSrc":"20056:63:32","nodeType":"YulVariableDeclaration","src":"20056:63:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"20079:8:32","nodeType":"YulIdentifier","src":"20079:8:32"},{"arguments":[{"name":"startIndex","nativeSrc":"20107:10:32","nodeType":"YulIdentifier","src":"20107:10:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"20089:17:32","nodeType":"YulIdentifier","src":"20089:17:32"},"nativeSrc":"20089:29:32","nodeType":"YulFunctionCall","src":"20089:29:32"}],"functionName":{"name":"add","nativeSrc":"20075:3:32","nodeType":"YulIdentifier","src":"20075:3:32"},"nativeSrc":"20075:44:32","nodeType":"YulFunctionCall","src":"20075:44:32"},"variables":[{"name":"deleteStart","nativeSrc":"20060:11:32","nodeType":"YulTypedName","src":"20060:11:32","type":""}]},{"body":{"nativeSrc":"20276:27:32","nodeType":"YulBlock","src":"20276:27:32","statements":[{"nativeSrc":"20278:23:32","nodeType":"YulAssignment","src":"20278:23:32","value":{"name":"dataArea","nativeSrc":"20293:8:32","nodeType":"YulIdentifier","src":"20293:8:32"},"variableNames":[{"name":"deleteStart","nativeSrc":"20278:11:32","nodeType":"YulIdentifier","src":"20278:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"20260:10:32","nodeType":"YulIdentifier","src":"20260:10:32"},{"kind":"number","nativeSrc":"20272:2:32","nodeType":"YulLiteral","src":"20272:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"20257:2:32","nodeType":"YulIdentifier","src":"20257:2:32"},"nativeSrc":"20257:18:32","nodeType":"YulFunctionCall","src":"20257:18:32"},"nativeSrc":"20254:49:32","nodeType":"YulIf","src":"20254:49:32"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"20345:11:32","nodeType":"YulIdentifier","src":"20345:11:32"},{"arguments":[{"name":"dataArea","nativeSrc":"20362:8:32","nodeType":"YulIdentifier","src":"20362:8:32"},{"arguments":[{"name":"len","nativeSrc":"20390:3:32","nodeType":"YulIdentifier","src":"20390:3:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"20372:17:32","nodeType":"YulIdentifier","src":"20372:17:32"},"nativeSrc":"20372:22:32","nodeType":"YulFunctionCall","src":"20372:22:32"}],"functionName":{"name":"add","nativeSrc":"20358:3:32","nodeType":"YulIdentifier","src":"20358:3:32"},"nativeSrc":"20358:37:32","nodeType":"YulFunctionCall","src":"20358:37:32"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"20316:28:32","nodeType":"YulIdentifier","src":"20316:28:32"},"nativeSrc":"20316:80:32","nodeType":"YulFunctionCall","src":"20316:80:32"},"nativeSrc":"20316:80:32","nodeType":"YulExpressionStatement","src":"20316:80:32"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"19966:3:32","nodeType":"YulIdentifier","src":"19966:3:32"},{"kind":"number","nativeSrc":"19971:2:32","nodeType":"YulLiteral","src":"19971:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"19963:2:32","nodeType":"YulIdentifier","src":"19963:2:32"},"nativeSrc":"19963:11:32","nodeType":"YulFunctionCall","src":"19963:11:32"},"nativeSrc":"19960:446:32","nodeType":"YulIf","src":"19960:446:32"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"19870:543:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"19925:5:32","nodeType":"YulTypedName","src":"19925:5:32","type":""},{"name":"len","nativeSrc":"19932:3:32","nodeType":"YulTypedName","src":"19932:3:32","type":""},{"name":"startIndex","nativeSrc":"19937:10:32","nodeType":"YulTypedName","src":"19937:10:32","type":""}],"src":"19870:543:32"},{"body":{"nativeSrc":"20482:54:32","nodeType":"YulBlock","src":"20482:54:32","statements":[{"nativeSrc":"20492:37:32","nodeType":"YulAssignment","src":"20492:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"20517:4:32","nodeType":"YulIdentifier","src":"20517:4:32"},{"name":"value","nativeSrc":"20523:5:32","nodeType":"YulIdentifier","src":"20523:5:32"}],"functionName":{"name":"shr","nativeSrc":"20513:3:32","nodeType":"YulIdentifier","src":"20513:3:32"},"nativeSrc":"20513:16:32","nodeType":"YulFunctionCall","src":"20513:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"20492:8:32","nodeType":"YulIdentifier","src":"20492:8:32"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"20419:117:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"20457:4:32","nodeType":"YulTypedName","src":"20457:4:32","type":""},{"name":"value","nativeSrc":"20463:5:32","nodeType":"YulTypedName","src":"20463:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"20473:8:32","nodeType":"YulTypedName","src":"20473:8:32","type":""}],"src":"20419:117:32"},{"body":{"nativeSrc":"20593:118:32","nodeType":"YulBlock","src":"20593:118:32","statements":[{"nativeSrc":"20603:68:32","nodeType":"YulVariableDeclaration","src":"20603:68:32","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20652:1:32","nodeType":"YulLiteral","src":"20652:1:32","type":"","value":"8"},{"name":"bytes","nativeSrc":"20655:5:32","nodeType":"YulIdentifier","src":"20655:5:32"}],"functionName":{"name":"mul","nativeSrc":"20648:3:32","nodeType":"YulIdentifier","src":"20648:3:32"},"nativeSrc":"20648:13:32","nodeType":"YulFunctionCall","src":"20648:13:32"},{"arguments":[{"kind":"number","nativeSrc":"20667:1:32","nodeType":"YulLiteral","src":"20667:1:32","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"20663:3:32","nodeType":"YulIdentifier","src":"20663:3:32"},"nativeSrc":"20663:6:32","nodeType":"YulFunctionCall","src":"20663:6:32"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"20619:28:32","nodeType":"YulIdentifier","src":"20619:28:32"},"nativeSrc":"20619:51:32","nodeType":"YulFunctionCall","src":"20619:51:32"}],"functionName":{"name":"not","nativeSrc":"20615:3:32","nodeType":"YulIdentifier","src":"20615:3:32"},"nativeSrc":"20615:56:32","nodeType":"YulFunctionCall","src":"20615:56:32"},"variables":[{"name":"mask","nativeSrc":"20607:4:32","nodeType":"YulTypedName","src":"20607:4:32","type":""}]},{"nativeSrc":"20680:25:32","nodeType":"YulAssignment","src":"20680:25:32","value":{"arguments":[{"name":"data","nativeSrc":"20694:4:32","nodeType":"YulIdentifier","src":"20694:4:32"},{"name":"mask","nativeSrc":"20700:4:32","nodeType":"YulIdentifier","src":"20700:4:32"}],"functionName":{"name":"and","nativeSrc":"20690:3:32","nodeType":"YulIdentifier","src":"20690:3:32"},"nativeSrc":"20690:15:32","nodeType":"YulFunctionCall","src":"20690:15:32"},"variableNames":[{"name":"result","nativeSrc":"20680:6:32","nodeType":"YulIdentifier","src":"20680:6:32"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"20542:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20570:4:32","nodeType":"YulTypedName","src":"20570:4:32","type":""},{"name":"bytes","nativeSrc":"20576:5:32","nodeType":"YulTypedName","src":"20576:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"20586:6:32","nodeType":"YulTypedName","src":"20586:6:32","type":""}],"src":"20542:169:32"},{"body":{"nativeSrc":"20797:214:32","nodeType":"YulBlock","src":"20797:214:32","statements":[{"nativeSrc":"20930:37:32","nodeType":"YulAssignment","src":"20930:37:32","value":{"arguments":[{"name":"data","nativeSrc":"20957:4:32","nodeType":"YulIdentifier","src":"20957:4:32"},{"name":"len","nativeSrc":"20963:3:32","nodeType":"YulIdentifier","src":"20963:3:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"20938:18:32","nodeType":"YulIdentifier","src":"20938:18:32"},"nativeSrc":"20938:29:32","nodeType":"YulFunctionCall","src":"20938:29:32"},"variableNames":[{"name":"data","nativeSrc":"20930:4:32","nodeType":"YulIdentifier","src":"20930:4:32"}]},{"nativeSrc":"20976:29:32","nodeType":"YulAssignment","src":"20976:29:32","value":{"arguments":[{"name":"data","nativeSrc":"20987:4:32","nodeType":"YulIdentifier","src":"20987:4:32"},{"arguments":[{"kind":"number","nativeSrc":"20997:1:32","nodeType":"YulLiteral","src":"20997:1:32","type":"","value":"2"},{"name":"len","nativeSrc":"21000:3:32","nodeType":"YulIdentifier","src":"21000:3:32"}],"functionName":{"name":"mul","nativeSrc":"20993:3:32","nodeType":"YulIdentifier","src":"20993:3:32"},"nativeSrc":"20993:11:32","nodeType":"YulFunctionCall","src":"20993:11:32"}],"functionName":{"name":"or","nativeSrc":"20984:2:32","nodeType":"YulIdentifier","src":"20984:2:32"},"nativeSrc":"20984:21:32","nodeType":"YulFunctionCall","src":"20984:21:32"},"variableNames":[{"name":"used","nativeSrc":"20976:4:32","nodeType":"YulIdentifier","src":"20976:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"20716:295:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20778:4:32","nodeType":"YulTypedName","src":"20778:4:32","type":""},{"name":"len","nativeSrc":"20784:3:32","nodeType":"YulTypedName","src":"20784:3:32","type":""}],"returnVariables":[{"name":"used","nativeSrc":"20792:4:32","nodeType":"YulTypedName","src":"20792:4:32","type":""}],"src":"20716:295:32"},{"body":{"nativeSrc":"21108:1303:32","nodeType":"YulBlock","src":"21108:1303:32","statements":[{"nativeSrc":"21119:51:32","nodeType":"YulVariableDeclaration","src":"21119:51:32","value":{"arguments":[{"name":"src","nativeSrc":"21166:3:32","nodeType":"YulIdentifier","src":"21166:3:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"21133:32:32","nodeType":"YulIdentifier","src":"21133:32:32"},"nativeSrc":"21133:37:32","nodeType":"YulFunctionCall","src":"21133:37:32"},"variables":[{"name":"newLen","nativeSrc":"21123:6:32","nodeType":"YulTypedName","src":"21123:6:32","type":""}]},{"body":{"nativeSrc":"21255:22:32","nodeType":"YulBlock","src":"21255:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"21257:16:32","nodeType":"YulIdentifier","src":"21257:16:32"},"nativeSrc":"21257:18:32","nodeType":"YulFunctionCall","src":"21257:18:32"},"nativeSrc":"21257:18:32","nodeType":"YulExpressionStatement","src":"21257:18:32"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"21227:6:32","nodeType":"YulIdentifier","src":"21227:6:32"},{"kind":"number","nativeSrc":"21235:18:32","nodeType":"YulLiteral","src":"21235:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"21224:2:32","nodeType":"YulIdentifier","src":"21224:2:32"},"nativeSrc":"21224:30:32","nodeType":"YulFunctionCall","src":"21224:30:32"},"nativeSrc":"21221:56:32","nodeType":"YulIf","src":"21221:56:32"},{"nativeSrc":"21287:52:32","nodeType":"YulVariableDeclaration","src":"21287:52:32","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"21333:4:32","nodeType":"YulIdentifier","src":"21333:4:32"}],"functionName":{"name":"sload","nativeSrc":"21327:5:32","nodeType":"YulIdentifier","src":"21327:5:32"},"nativeSrc":"21327:11:32","nodeType":"YulFunctionCall","src":"21327:11:32"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"21301:25:32","nodeType":"YulIdentifier","src":"21301:25:32"},"nativeSrc":"21301:38:32","nodeType":"YulFunctionCall","src":"21301:38:32"},"variables":[{"name":"oldLen","nativeSrc":"21291:6:32","nodeType":"YulTypedName","src":"21291:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"21432:4:32","nodeType":"YulIdentifier","src":"21432:4:32"},{"name":"oldLen","nativeSrc":"21438:6:32","nodeType":"YulIdentifier","src":"21438:6:32"},{"name":"newLen","nativeSrc":"21446:6:32","nodeType":"YulIdentifier","src":"21446:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"21386:45:32","nodeType":"YulIdentifier","src":"21386:45:32"},"nativeSrc":"21386:67:32","nodeType":"YulFunctionCall","src":"21386:67:32"},"nativeSrc":"21386:67:32","nodeType":"YulExpressionStatement","src":"21386:67:32"},{"nativeSrc":"21463:18:32","nodeType":"YulVariableDeclaration","src":"21463:18:32","value":{"kind":"number","nativeSrc":"21480:1:32","nodeType":"YulLiteral","src":"21480:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"21467:9:32","nodeType":"YulTypedName","src":"21467:9:32","type":""}]},{"nativeSrc":"21491:17:32","nodeType":"YulAssignment","src":"21491:17:32","value":{"kind":"number","nativeSrc":"21504:4:32","nodeType":"YulLiteral","src":"21504:4:32","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"21491:9:32","nodeType":"YulIdentifier","src":"21491:9:32"}]},{"cases":[{"body":{"nativeSrc":"21555:611:32","nodeType":"YulBlock","src":"21555:611:32","statements":[{"nativeSrc":"21569:37:32","nodeType":"YulVariableDeclaration","src":"21569:37:32","value":{"arguments":[{"name":"newLen","nativeSrc":"21588:6:32","nodeType":"YulIdentifier","src":"21588:6:32"},{"arguments":[{"kind":"number","nativeSrc":"21600:4:32","nodeType":"YulLiteral","src":"21600:4:32","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"21596:3:32","nodeType":"YulIdentifier","src":"21596:3:32"},"nativeSrc":"21596:9:32","nodeType":"YulFunctionCall","src":"21596:9:32"}],"functionName":{"name":"and","nativeSrc":"21584:3:32","nodeType":"YulIdentifier","src":"21584:3:32"},"nativeSrc":"21584:22:32","nodeType":"YulFunctionCall","src":"21584:22:32"},"variables":[{"name":"loopEnd","nativeSrc":"21573:7:32","nodeType":"YulTypedName","src":"21573:7:32","type":""}]},{"nativeSrc":"21620:51:32","nodeType":"YulVariableDeclaration","src":"21620:51:32","value":{"arguments":[{"name":"slot","nativeSrc":"21666:4:32","nodeType":"YulIdentifier","src":"21666:4:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"21634:31:32","nodeType":"YulIdentifier","src":"21634:31:32"},"nativeSrc":"21634:37:32","nodeType":"YulFunctionCall","src":"21634:37:32"},"variables":[{"name":"dstPtr","nativeSrc":"21624:6:32","nodeType":"YulTypedName","src":"21624:6:32","type":""}]},{"nativeSrc":"21684:10:32","nodeType":"YulVariableDeclaration","src":"21684:10:32","value":{"kind":"number","nativeSrc":"21693:1:32","nodeType":"YulLiteral","src":"21693:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"21688:1:32","nodeType":"YulTypedName","src":"21688:1:32","type":""}]},{"body":{"nativeSrc":"21752:163:32","nodeType":"YulBlock","src":"21752:163:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"21777:6:32","nodeType":"YulIdentifier","src":"21777:6:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21795:3:32","nodeType":"YulIdentifier","src":"21795:3:32"},{"name":"srcOffset","nativeSrc":"21800:9:32","nodeType":"YulIdentifier","src":"21800:9:32"}],"functionName":{"name":"add","nativeSrc":"21791:3:32","nodeType":"YulIdentifier","src":"21791:3:32"},"nativeSrc":"21791:19:32","nodeType":"YulFunctionCall","src":"21791:19:32"}],"functionName":{"name":"mload","nativeSrc":"21785:5:32","nodeType":"YulIdentifier","src":"21785:5:32"},"nativeSrc":"21785:26:32","nodeType":"YulFunctionCall","src":"21785:26:32"}],"functionName":{"name":"sstore","nativeSrc":"21770:6:32","nodeType":"YulIdentifier","src":"21770:6:32"},"nativeSrc":"21770:42:32","nodeType":"YulFunctionCall","src":"21770:42:32"},"nativeSrc":"21770:42:32","nodeType":"YulExpressionStatement","src":"21770:42:32"},{"nativeSrc":"21829:24:32","nodeType":"YulAssignment","src":"21829:24:32","value":{"arguments":[{"name":"dstPtr","nativeSrc":"21843:6:32","nodeType":"YulIdentifier","src":"21843:6:32"},{"kind":"number","nativeSrc":"21851:1:32","nodeType":"YulLiteral","src":"21851:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"21839:3:32","nodeType":"YulIdentifier","src":"21839:3:32"},"nativeSrc":"21839:14:32","nodeType":"YulFunctionCall","src":"21839:14:32"},"variableNames":[{"name":"dstPtr","nativeSrc":"21829:6:32","nodeType":"YulIdentifier","src":"21829:6:32"}]},{"nativeSrc":"21870:31:32","nodeType":"YulAssignment","src":"21870:31:32","value":{"arguments":[{"name":"srcOffset","nativeSrc":"21887:9:32","nodeType":"YulIdentifier","src":"21887:9:32"},{"kind":"number","nativeSrc":"21898:2:32","nodeType":"YulLiteral","src":"21898:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21883:3:32","nodeType":"YulIdentifier","src":"21883:3:32"},"nativeSrc":"21883:18:32","nodeType":"YulFunctionCall","src":"21883:18:32"},"variableNames":[{"name":"srcOffset","nativeSrc":"21870:9:32","nodeType":"YulIdentifier","src":"21870:9:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"21718:1:32","nodeType":"YulIdentifier","src":"21718:1:32"},{"name":"loopEnd","nativeSrc":"21721:7:32","nodeType":"YulIdentifier","src":"21721:7:32"}],"functionName":{"name":"lt","nativeSrc":"21715:2:32","nodeType":"YulIdentifier","src":"21715:2:32"},"nativeSrc":"21715:14:32","nodeType":"YulFunctionCall","src":"21715:14:32"},"nativeSrc":"21707:208:32","nodeType":"YulForLoop","post":{"nativeSrc":"21730:21:32","nodeType":"YulBlock","src":"21730:21:32","statements":[{"nativeSrc":"21732:17:32","nodeType":"YulAssignment","src":"21732:17:32","value":{"arguments":[{"name":"i","nativeSrc":"21741:1:32","nodeType":"YulIdentifier","src":"21741:1:32"},{"kind":"number","nativeSrc":"21744:4:32","nodeType":"YulLiteral","src":"21744:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21737:3:32","nodeType":"YulIdentifier","src":"21737:3:32"},"nativeSrc":"21737:12:32","nodeType":"YulFunctionCall","src":"21737:12:32"},"variableNames":[{"name":"i","nativeSrc":"21732:1:32","nodeType":"YulIdentifier","src":"21732:1:32"}]}]},"pre":{"nativeSrc":"21711:3:32","nodeType":"YulBlock","src":"21711:3:32","statements":[]},"src":"21707:208:32"},{"body":{"nativeSrc":"21951:156:32","nodeType":"YulBlock","src":"21951:156:32","statements":[{"nativeSrc":"21969:43:32","nodeType":"YulVariableDeclaration","src":"21969:43:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21996:3:32","nodeType":"YulIdentifier","src":"21996:3:32"},{"name":"srcOffset","nativeSrc":"22001:9:32","nodeType":"YulIdentifier","src":"22001:9:32"}],"functionName":{"name":"add","nativeSrc":"21992:3:32","nodeType":"YulIdentifier","src":"21992:3:32"},"nativeSrc":"21992:19:32","nodeType":"YulFunctionCall","src":"21992:19:32"}],"functionName":{"name":"mload","nativeSrc":"21986:5:32","nodeType":"YulIdentifier","src":"21986:5:32"},"nativeSrc":"21986:26:32","nodeType":"YulFunctionCall","src":"21986:26:32"},"variables":[{"name":"lastValue","nativeSrc":"21973:9:32","nodeType":"YulTypedName","src":"21973:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"22036:6:32","nodeType":"YulIdentifier","src":"22036:6:32"},{"arguments":[{"name":"lastValue","nativeSrc":"22063:9:32","nodeType":"YulIdentifier","src":"22063:9:32"},{"arguments":[{"name":"newLen","nativeSrc":"22078:6:32","nodeType":"YulIdentifier","src":"22078:6:32"},{"kind":"number","nativeSrc":"22086:4:32","nodeType":"YulLiteral","src":"22086:4:32","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"22074:3:32","nodeType":"YulIdentifier","src":"22074:3:32"},"nativeSrc":"22074:17:32","nodeType":"YulFunctionCall","src":"22074:17:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"22044:18:32","nodeType":"YulIdentifier","src":"22044:18:32"},"nativeSrc":"22044:48:32","nodeType":"YulFunctionCall","src":"22044:48:32"}],"functionName":{"name":"sstore","nativeSrc":"22029:6:32","nodeType":"YulIdentifier","src":"22029:6:32"},"nativeSrc":"22029:64:32","nodeType":"YulFunctionCall","src":"22029:64:32"},"nativeSrc":"22029:64:32","nodeType":"YulExpressionStatement","src":"22029:64:32"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"21934:7:32","nodeType":"YulIdentifier","src":"21934:7:32"},{"name":"newLen","nativeSrc":"21943:6:32","nodeType":"YulIdentifier","src":"21943:6:32"}],"functionName":{"name":"lt","nativeSrc":"21931:2:32","nodeType":"YulIdentifier","src":"21931:2:32"},"nativeSrc":"21931:19:32","nodeType":"YulFunctionCall","src":"21931:19:32"},"nativeSrc":"21928:179:32","nodeType":"YulIf","src":"21928:179:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"22127:4:32","nodeType":"YulIdentifier","src":"22127:4:32"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"22141:6:32","nodeType":"YulIdentifier","src":"22141:6:32"},{"kind":"number","nativeSrc":"22149:1:32","nodeType":"YulLiteral","src":"22149:1:32","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"22137:3:32","nodeType":"YulIdentifier","src":"22137:3:32"},"nativeSrc":"22137:14:32","nodeType":"YulFunctionCall","src":"22137:14:32"},{"kind":"number","nativeSrc":"22153:1:32","nodeType":"YulLiteral","src":"22153:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"22133:3:32","nodeType":"YulIdentifier","src":"22133:3:32"},"nativeSrc":"22133:22:32","nodeType":"YulFunctionCall","src":"22133:22:32"}],"functionName":{"name":"sstore","nativeSrc":"22120:6:32","nodeType":"YulIdentifier","src":"22120:6:32"},"nativeSrc":"22120:36:32","nodeType":"YulFunctionCall","src":"22120:36:32"},"nativeSrc":"22120:36:32","nodeType":"YulExpressionStatement","src":"22120:36:32"}]},"nativeSrc":"21548:618:32","nodeType":"YulCase","src":"21548:618:32","value":{"kind":"number","nativeSrc":"21553:1:32","nodeType":"YulLiteral","src":"21553:1:32","type":"","value":"1"}},{"body":{"nativeSrc":"22183:222:32","nodeType":"YulBlock","src":"22183:222:32","statements":[{"nativeSrc":"22197:14:32","nodeType":"YulVariableDeclaration","src":"22197:14:32","value":{"kind":"number","nativeSrc":"22210:1:32","nodeType":"YulLiteral","src":"22210:1:32","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"22201:5:32","nodeType":"YulTypedName","src":"22201:5:32","type":""}]},{"body":{"nativeSrc":"22234:67:32","nodeType":"YulBlock","src":"22234:67:32","statements":[{"nativeSrc":"22252:35:32","nodeType":"YulAssignment","src":"22252:35:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"22271:3:32","nodeType":"YulIdentifier","src":"22271:3:32"},{"name":"srcOffset","nativeSrc":"22276:9:32","nodeType":"YulIdentifier","src":"22276:9:32"}],"functionName":{"name":"add","nativeSrc":"22267:3:32","nodeType":"YulIdentifier","src":"22267:3:32"},"nativeSrc":"22267:19:32","nodeType":"YulFunctionCall","src":"22267:19:32"}],"functionName":{"name":"mload","nativeSrc":"22261:5:32","nodeType":"YulIdentifier","src":"22261:5:32"},"nativeSrc":"22261:26:32","nodeType":"YulFunctionCall","src":"22261:26:32"},"variableNames":[{"name":"value","nativeSrc":"22252:5:32","nodeType":"YulIdentifier","src":"22252:5:32"}]}]},"condition":{"name":"newLen","nativeSrc":"22227:6:32","nodeType":"YulIdentifier","src":"22227:6:32"},"nativeSrc":"22224:77:32","nodeType":"YulIf","src":"22224:77:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"22321:4:32","nodeType":"YulIdentifier","src":"22321:4:32"},{"arguments":[{"name":"value","nativeSrc":"22380:5:32","nodeType":"YulIdentifier","src":"22380:5:32"},{"name":"newLen","nativeSrc":"22387:6:32","nodeType":"YulIdentifier","src":"22387:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"22327:52:32","nodeType":"YulIdentifier","src":"22327:52:32"},"nativeSrc":"22327:67:32","nodeType":"YulFunctionCall","src":"22327:67:32"}],"functionName":{"name":"sstore","nativeSrc":"22314:6:32","nodeType":"YulIdentifier","src":"22314:6:32"},"nativeSrc":"22314:81:32","nodeType":"YulFunctionCall","src":"22314:81:32"},"nativeSrc":"22314:81:32","nodeType":"YulExpressionStatement","src":"22314:81:32"}]},"nativeSrc":"22175:230:32","nodeType":"YulCase","src":"22175:230:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"21528:6:32","nodeType":"YulIdentifier","src":"21528:6:32"},{"kind":"number","nativeSrc":"21536:2:32","nodeType":"YulLiteral","src":"21536:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"21525:2:32","nodeType":"YulIdentifier","src":"21525:2:32"},"nativeSrc":"21525:14:32","nodeType":"YulFunctionCall","src":"21525:14:32"},"nativeSrc":"21518:887:32","nodeType":"YulSwitch","src":"21518:887:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"21016:1395:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"21097:4:32","nodeType":"YulTypedName","src":"21097:4:32","type":""},{"name":"src","nativeSrc":"21103:3:32","nodeType":"YulTypedName","src":"21103:3:32","type":""}],"src":"21016:1395:32"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes4(calldataload(dataArea))\n\n        if lt(length, 4) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(4, length)),\n                    0xffffffff00000000000000000000000000000000000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint32_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"521":[{"length":32,"start":4055},{"length":32,"start":4140},{"length":32,"start":4599}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x8FB36037 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x367 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x282 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E4 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40F PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x497 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x4A8 SWAP1 PUSH2 0x2258 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D4 SWAP1 PUSH2 0x2258 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x521 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x521 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x504 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x537 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH2 0x544 DUP2 DUP6 DUP6 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x55A PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x572 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH2 0x57F DUP6 DUP3 DUP6 PUSH2 0xBE9 JUMP JUMPDEST PUSH2 0x58A DUP6 DUP6 DUP6 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x5AA PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x5C1 DUP3 DUP3 PUSH2 0xED1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5D6 PUSH2 0x5D0 PUSH2 0xBCF JUMP JUMPDEST DUP3 PUSH2 0xF53 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0xFD5 JUMP JUMPDEST PUSH2 0x5EA DUP3 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0x5F4 DUP3 DUP3 PUSH2 0x10D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x602 PUSH2 0x11F5 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x636 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x694 DUP3 PUSH2 0x68E PUSH2 0xBCF JUMP JUMPDEST DUP4 PUSH2 0xBE9 JUMP JUMPDEST PUSH2 0x69E DUP3 DUP3 PUSH2 0xF53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AC PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH2 0x6B6 PUSH2 0x8C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x725 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x781 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xC2F31E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A DUP3 PUSH2 0x127C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x799 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7BB JUMPI PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0x7C4 JUMP JUMPDEST PUSH4 0x8FB36037 PUSH1 0xE0 SHL JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x7D6 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x7E7 SWAP1 PUSH2 0x2258 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x813 SWAP1 PUSH2 0x2258 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x860 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x835 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x860 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x843 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x876 PUSH2 0xBCF JUMP JUMPDEST SWAP1 POP PUSH2 0x883 DUP2 DUP6 DUP6 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D2 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x909 PUSH2 0x132E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x957 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x98C JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x99A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xA95 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E46546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1356 JUMP JUMPDEST PUSH2 0xA9D PUSH2 0x136C JUMP JUMPDEST PUSH2 0xAA6 DUP7 PUSH2 0x1376 JUMP JUMPDEST PUSH2 0xAAE PUSH2 0x138A JUMP JUMPDEST DUP4 ISZERO PUSH2 0xB0A JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0x22E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB1D PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBE4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1394 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF5 DUP5 DUP5 PUSH2 0xB12 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC77 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC67 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC76 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1394 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCEF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE6 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD61 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD6C DUP4 DUP4 DUP4 PUSH2 0x157A JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD88 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xDBE PUSH2 0xD98 PUSH2 0x8C7 JUMP JUMPDEST DUP8 ADDRESS DUP9 DUP9 PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP3 PUSH2 0xDAE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x233E JUMP JUMPDEST SWAP1 PUSH2 0xDB9 SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xE8B JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDFB PUSH2 0x8C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94C7D7EE DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE37 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x242E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEC8 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF43 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4F PUSH1 0x0 DUP4 DUP4 PUSH2 0x157A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD1 DUP3 PUSH1 0x0 DUP4 PUSH2 0x157A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1082 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1069 PUSH2 0x18DF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10D3 PUSH2 0x10C6 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x10CE PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x113E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x117F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x11E6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F0 DUP4 DUP4 PUSH2 0x1936 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1286 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x12FA SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF3177357AB46D8AF007AB3FDB9AF81DA189E1068FEFDC0073DCA88A2CAB40A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x135E PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1368 DUP3 DUP3 PUSH2 0x19E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1374 PUSH2 0x19A9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x137E PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH2 0x1A26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1392 PUSH2 0x19A9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139E PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1412 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1409 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1484 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1573 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x156A SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1584 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DA JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15CE SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1669 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1660 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16FE JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x174E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17EB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x251C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xB7009613 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1878 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x187D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x18D4 JUMPI PUSH1 0x40 DUP2 MLOAD LT PUSH2 0x18B2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18A5 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x18D2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18CF SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x193F DUP3 PUSH2 0x1A44 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x199C JUMPI PUSH2 0x1996 DUP3 DUP3 PUSH2 0x1B11 JUMP JUMPDEST POP PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0x19A4 PUSH2 0x1B95 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x19B1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0x19E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19F1 PUSH2 0x19A9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FB PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1A0E SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1A20 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1A2E PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x1A37 DUP2 PUSH2 0x127C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1AA0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A97 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1ACD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B3B SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B8B DUP6 DUP4 DUP4 PUSH2 0x1BF2 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1BD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDC PUSH2 0x132E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1C07 JUMPI PUSH2 0x1C02 DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1C2F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1C71 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1C7A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1C94 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D00 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D28 DUP3 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x1D32 DUP2 DUP6 PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D42 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH2 0x1D0C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D70 DUP2 DUP5 PUSH2 0x1D1D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 PUSH2 0x1D8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC7 DUP2 PUSH2 0x1DAC JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DE4 DUP2 PUSH2 0x1DBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFD DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP2 EQ PUSH2 0x1E08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E1A DUP2 PUSH2 0x1DF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E37 JUMPI PUSH2 0x1E36 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E45 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E56 DUP6 DUP3 DUP7 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E75 DUP2 PUSH2 0x1E60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E9F DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EBA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ED9 JUMPI PUSH2 0x1ED8 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EF8 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F09 DUP7 DUP3 DUP8 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F29 DUP2 PUSH2 0x1F13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F60 JUMPI PUSH2 0x1F5F PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6E DUP5 DUP3 DUP6 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FB9 DUP3 PUSH2 0x1D0C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEB PUSH2 0x1D78 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FF7 DUP3 DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2017 JUMPI PUSH2 0x2016 PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST PUSH2 0x2020 DUP3 PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204F PUSH2 0x204A DUP5 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0x1FE1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x206B JUMPI PUSH2 0x206A PUSH2 0x1F7C JUMP JUMPDEST JUMPDEST PUSH2 0x2076 DUP5 DUP3 DUP6 PUSH2 0x202D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20A3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x203C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F2 JUMPI PUSH2 0x20F1 PUSH2 0x1D87 JUMP JUMPDEST JUMPDEST PUSH2 0x20FE DUP6 DUP3 DUP7 ADD PUSH2 0x207E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x211B DUP2 PUSH2 0x2108 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2136 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2160 DUP5 DUP3 DUP6 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219E DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2195 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21C8 DUP2 PUSH2 0x1DAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2200 JUMPI PUSH2 0x21FF PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220E DUP6 DUP3 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x221F DUP6 DUP3 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2270 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2283 JUMPI PUSH2 0x2282 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CC PUSH2 0x22C7 PUSH2 0x22C2 DUP5 PUSH2 0x2289 JUMP JUMPDEST PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x2293 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22DC DUP2 PUSH2 0x22B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2312 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x231F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x232C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E96 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x2352 JUMPI PUSH2 0x2351 PUSH2 0x2334 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2362 PUSH2 0x2339 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239D DUP4 DUP4 PUSH2 0x2379 JUMP JUMPDEST DUP3 PUSH2 0x23A8 DUP2 CALLDATALOAD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x23E8 JUMPI PUSH2 0x23E3 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x2384 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240D DUP4 DUP6 PUSH2 0x23F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x241A DUP4 DUP6 DUP5 PUSH2 0x202D JUMP JUMPDEST PUSH2 0x2423 DUP4 PUSH2 0x1D0C JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2443 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21BF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2456 DUP2 DUP5 DUP7 PUSH2 0x2401 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2469 DUP2 PUSH2 0x2108 JUMP JUMPDEST DUP2 EQ PUSH2 0x2474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2486 DUP2 PUSH2 0x2460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH2 0x24A1 PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24B0 DUP5 DUP3 DUP6 ADD PUSH2 0x2477 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x24FE DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x24B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2531 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x253E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x254B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2195 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2574 DUP3 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x257E DUP2 DUP6 PUSH2 0x255E JUMP JUMPDEST SWAP4 POP PUSH2 0x258E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A6 DUP3 DUP5 PUSH2 0x2569 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25BA DUP2 PUSH2 0x1E60 JUMP JUMPDEST DUP2 EQ PUSH2 0x25C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25D7 DUP2 PUSH2 0x25B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F6 DUP2 PUSH2 0x25DD JUMP JUMPDEST DUP2 EQ PUSH2 0x2601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2613 DUP2 PUSH2 0x25ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2630 JUMPI PUSH2 0x262F PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x263E DUP6 DUP3 DUP7 ADD PUSH2 0x25C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x264F DUP6 DUP3 DUP7 ADD PUSH2 0x2604 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266F JUMPI PUSH2 0x266E PUSH2 0x1D82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x267D DUP5 DUP3 DUP6 ADD PUSH2 0x25C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x26DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2384 JUMP JUMPDEST PUSH2 0x26E5 DUP7 DUP4 PUSH2 0x2384 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2718 PUSH2 0x2713 PUSH2 0x270E DUP5 PUSH2 0x1DEA JUMP JUMPDEST PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x1DEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2732 DUP4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x2746 PUSH2 0x273E DUP3 PUSH2 0x271F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x275B PUSH2 0x274E JUMP JUMPDEST PUSH2 0x2766 DUP2 DUP5 DUP5 PUSH2 0x2729 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x278A JUMPI PUSH2 0x277F PUSH1 0x0 DUP3 PUSH2 0x2753 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x276C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x27CF JUMPI PUSH2 0x27A0 DUP2 PUSH2 0x2686 JUMP JUMPDEST PUSH2 0x27A9 DUP5 PUSH2 0x269B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27B8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x27CC PUSH2 0x27C4 DUP6 PUSH2 0x269B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x276B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x27D4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280B DUP4 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2824 DUP3 PUSH2 0x1CC6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x283D JUMPI PUSH2 0x283C PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST PUSH2 0x2847 DUP3 SLOAD PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x2852 DUP3 DUP3 DUP6 PUSH2 0x278E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2885 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2873 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x287D DUP6 DUP3 PUSH2 0x27FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2893 DUP7 PUSH2 0x2686 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2896 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x28D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x28D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27E1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xEF 0xDC 0x27 0xD8 0xB9 NOT LOG1 0xA5 0x2B DUP13 SWAP7 0xD0 0xB2 0xDC OR 0xEB 0xB1 SWAP4 0xDC BLOBHASH POP 0xCE 0xD2 0xD9 PUSH9 0xC62067BB0BFE64736F PUSH13 0x63430008180033000000000000 ","sourceMap":"529:686:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4191:152;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6251:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1000:94:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;931:87:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4158:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4401:171:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1334:158:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4145:362:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4548:227;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3268:148:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4767:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3940:164:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;768:226:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5003:195:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3011:144;3056:13;3081:22;3106:18;:16;:18::i;:::-;3081:43;;3141:1;:7;;3134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;5594:13;5610:12;:10;:12::i;:::-;5594:28;;5632:31;5641:5;5648:7;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;:::o;4191:152::-;4243:7;4262:22;4287:18;:16;:18::i;:::-;4262:43;;4322:1;:14;;;4315:21;;;4191:152;:::o;6251:244::-;6338:4;6354:15;6372:12;:10;:12::i;:::-;6354:30;;6394:37;6410:4;6416:7;6425:5;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;:::o;4049:82::-;4098:5;4122:2;4115:9;;4049:82;:::o;1000:94:30:-;3842:39:0;3856:12;:10;:12::i;:::-;3870:10;:8;:10::i;:::-;3842:13;:39::i;:::-;1070:17:30::1;1076:2;1080:6;1070:5;:17::i;:::-;1000:94:::0;;:::o;931:87:4:-;985:26;991:12;:10;:12::i;:::-;1005:5;985;:26::i;:::-;931:87;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;1327:66:15::1;3800:32:2;;3793:39;;3705:134:::0;:::o;4401:171:3:-;4466:7;4485:22;4510:18;:16;:18::i;:::-;4485:43;;4545:1;:11;;:20;4557:7;4545:20;;;;;;;;;;;;;;;;4538:27;;;4401:171;;;:::o;1334:158:4:-;1409:45;1425:7;1434:12;:10;:12::i;:::-;1448:5;1409:15;:45::i;:::-;1464:21;1470:7;1479:5;1464;:21::i;:::-;1334:158;;:::o;4145:362:0:-;4214:14;4231:12;:10;:12::i;:::-;4214:29;;4267:11;:9;:11::i;:::-;4257:21;;:6;:21;;;4253:92;;4327:6;4301:33;;;;;;;;;;;:::i;:::-;;;;;;;;4253:92;4386:1;4358:12;:24;;;:29;4354:110;;4440:12;4410:43;;;;;;;;;;;:::i;:::-;;;;;;;;4354:110;4473:27;4487:12;4473:13;:27::i;:::-;4204:303;4145:362;:::o;4548:227::-;4603:6;4621:30;4654:26;:24;:26::i;:::-;4621:59;;4697:1;:20;;;;;;;;;;;;:71;;4766:1;4759:9;;4697:71;;;4720:36;;;4697:71;4690:78;;;4548:227;:::o;3268:148:3:-;3315:13;3340:22;3365:18;:16;:18::i;:::-;3340:43;;3400:1;:9;;3393:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:148;:::o;4767:178::-;4836:4;4852:13;4868:12;:10;:12::i;:::-;4852:28;;4890:27;4900:5;4907:2;4911:5;4890:9;:27::i;:::-;4934:4;4927:11;;;4767:178;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;3940:164:0:-;3990:7;4009:30;4042:26;:24;:26::i;:::-;4009:59;;4085:1;:12;;;;;;;;;;;;4078:19;;;3940:164;:::o;768:226:30:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;843:30:30::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:30::i;:::-;883:22;:20;:22::i;:::-;915:38;936:16;915:20;:38::i;:::-;963:24;:22;:24::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;768:226:30;:::o;5003:195:3:-;5083:7;5102:22;5127:18;:16;:18::i;:::-;5102:43;;5162:1;:13;;:20;5176:5;5162:20;;;;;;;;;;;;;;;:29;5183:7;5162:29;;;;;;;;;;;;;;;;5155:36;;;5003:195;;;;:::o;2242:153::-;2292:22;2359:20;2349:30;;2242:153;:::o;887:96:7:-;940:7;966:10;959:17;;887:96;:::o;10264:128:3:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;11993:477::-;12092:24;12119:25;12129:5;12136:7;12119:9;:25::i;:::-;12092:52;;12178:17;12158:16;:37;12154:310;;12234:5;12215:16;:24;12211:130;;;12293:7;12302:16;12320:5;12266:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;12211:130;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12154:310;12082:388;11993:477;;;:::o;6868:300::-;6967:1;6951:18;;:4;:18;;;6947:86;;7019:1;6992:30;;;;;;;;;;;:::i;:::-;;;;;;;;6947:86;7060:1;7046:16;;:2;:16;;;7042:86;;7114:1;7085:32;;;;;;;;;;;:::i;:::-;;;;;;;;7042:86;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;:::-;6868:300;;;:::o;989:99:7:-;1040:14;;1073:8;;1066:15;;;;989:99;;:::o;5358:667:0:-;5445:30;5478:26;:24;:26::i;:::-;5445:59;;5515:14;5531:12;5547:144;5592:11;:9;:11::i;:::-;5617:6;5645:4;5671;;5676:1;5671:9;5678:1;5671:9;;;;;;;:::i;:::-;5664:17;;;;;:::i;:::-;5547:31;:144::i;:::-;5514:177;;;;5706:9;5701:318;;5743:1;5735:5;:9;;;5731:278;;;5787:4;5764:1;:20;;;:27;;;;;;;;;;;;;;;;;;5824:11;:9;:11::i;:::-;5809:46;;;5856:6;5864:4;;5809:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5910:5;5887:1;:20;;;:28;;;;;;;;;;;;;;;;;;5731:278;;;5987:6;5961:33;;;;;;;;;;;:::i;:::-;;;;;;;;5731:278;5701:318;5435:590;;;5358:667;;;:::o;8996:208:3:-;9085:1;9066:21;;:7;:21;;;9062:91;;9139:1;9110:32;;;;;;;;;;;:::i;:::-;;;;;;;;9062:91;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;:::-;8996:208;;:::o;9522:206::-;9611:1;9592:21;;:7;:21;;;9588:89;;9663:1;9636:30;;;;;;;;;;;:::i;:::-;;;;;;;;9588:89;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;:::-;9522:206;;:::o;4599:312:2:-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;1100:113:30:-;3842:39:0;3856:12;:10;:12::i;:::-;3870:10;:8;:10::i;:::-;3842:13;:39::i;:::-;1100:113:30;:::o;6052:538:2:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:15;6253:32:2;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;4963:220:0:-;5035:30;5068:26;:24;:26::i;:::-;5035:59;;5119:12;5104:1;:12;;;:27;;;;;;;;;;;;;;;;;;5146:30;5163:12;5146:30;;;;;;:::i;:::-;;;;;;;;5025:158;4963:220;:::o;1682:177::-;1740:30;1815:28;1805:38;;1682:177;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2577:147:3:-;6931:20:1;:18;:20::i;:::-;2679:38:3::1;2702:5;2709:7;2679:22;:38::i;:::-;2577:147:::0;;:::o;666:65:4:-;6931:20:1;:18;:20::i;:::-;666:65:4:o;1953:147:0:-;6931:20:1;:18;:20::i;:::-;2045:48:0::1;2076:16;2045:30;:48::i;:::-;1953:147:::0;:::o;2968:67:2:-;6931:20:1;:18;:20::i;:::-;2968:67:2:o;11224:487:3:-;11332:22;11357:18;:16;:18::i;:::-;11332:43;;11406:1;11389:19;;:5;:19;;;11385:89;;11460:1;11431:32;;;;;;;;;;;:::i;:::-;;;;;;;;11385:89;11506:1;11487:21;;:7;:21;;;11483:90;;11559:1;11531:31;;;;;;;;;;;:::i;:::-;;;;;;;;11483:90;11614:5;11582:1;:13;;:20;11596:5;11582:20;;;;;;;;;;;;;;;:29;11603:7;11582:29;;;;;;;;;;;;;;;:37;;;;11633:9;11629:76;;;11679:7;11663:31;;11672:5;11663:31;;;11688:5;11663:31;;;;;;:::i;:::-;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;7483:1170::-;7568:22;7593:18;:16;:18::i;:::-;7568:43;;7641:1;7625:18;;:4;:18;;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7621:546;;;7815:19;7837:1;:11;;:17;7849:4;7837:17;;;;;;;;;;;;;;;;7815:39;;7886:5;7872:11;:19;7868:115;;;7943:4;7949:11;7962:5;7918:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7868:115;8137:5;8123:11;:19;8103:1;:11;;:17;8115:4;8103:17;;;;;;;;;;;;;;;:39;;;;7801:366;7621:546;8195:1;8181:16;;:2;:16;;;8177:429;;8362:5;8344:1;:14;;;:23;;;;;;;;;;;8177:429;;;8576:5;8557:1;:11;;:15;8569:2;8557:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;8177:429;8636:2;8621:25;;8630:4;8621:25;;;8640:5;8621:25;;;;;;:::i;:::-;;;;;;;;7558:1095;7483:1170;;;:::o;591:636:9:-;746:14;762:12;787;801:17;822:9;:20;;892:6;900;908:8;856:62;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:106;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:142;;;;942:7;938:248;;;984:4;969;:11;:19;965:211;;1040:4;1029:32;;;;;;;;;;;;:::i;:::-;1008:53;;;;;;;;965:211;;;1101:4;1086;:11;:19;1082:94;;1148:4;1137:24;;;;;;;;;;;;:::i;:::-;1125:36;;1082:94;965:211;938:248;1195:25;;591:636;;;;;;;:::o;1957:138:15:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2730:216:3:-;6931:20:1;:18;:20::i;:::-;2842:22:3::1;2867:18;:16;:18::i;:::-;2842:43;;2905:5;2895:1;:7;;:15;;;;;;:::i;:::-;;2932:7;2920:1;:9;;:19;;;;;;:::i;:::-;;2832:114;2730:216:::0;;:::o;2106:140:0:-;6931:20:1;:18;:20::i;:::-;2208:31:0::1;2222:16;2208:13;:31::i;:::-;2106:140:::0;:::o;1684:190:23:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:15:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:22:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:15:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4625:582:22:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:99:32;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:117::-;5297:1;5294;5287:12;5311:117;5420:1;5417;5410:12;5434:180;5482:77;5479:1;5472:88;5579:4;5576:1;5569:15;5603:4;5600:1;5593:15;5620:281;5703:27;5725:4;5703:27;:::i;:::-;5695:6;5691:40;5833:6;5821:10;5818:22;5797:18;5785:10;5782:34;5779:62;5776:88;;;5844:18;;:::i;:::-;5776:88;5884:10;5880:2;5873:22;5663:238;5620:281;;:::o;5907:129::-;5941:6;5968:20;;:::i;:::-;5958:30;;5997:33;6025:4;6017:6;5997:33;:::i;:::-;5907:129;;;:::o;6042:307::-;6103:4;6193:18;6185:6;6182:30;6179:56;;;6215:18;;:::i;:::-;6179:56;6253:29;6275:6;6253:29;:::i;:::-;6245:37;;6337:4;6331;6327:15;6319:23;;6042:307;;;:::o;6355:146::-;6452:6;6447:3;6442;6429:30;6493:1;6484:6;6479:3;6475:16;6468:27;6355:146;;;:::o;6507:423::-;6584:5;6609:65;6625:48;6666:6;6625:48;:::i;:::-;6609:65;:::i;:::-;6600:74;;6697:6;6690:5;6683:21;6735:4;6728:5;6724:16;6773:3;6764:6;6759:3;6755:16;6752:25;6749:112;;;6780:79;;:::i;:::-;6749:112;6870:54;6917:6;6912:3;6907;6870:54;:::i;:::-;6590:340;6507:423;;;;;:::o;6949:338::-;7004:5;7053:3;7046:4;7038:6;7034:17;7030:27;7020:122;;7061:79;;:::i;:::-;7020:122;7178:6;7165:20;7203:78;7277:3;7269:6;7262:4;7254:6;7250:17;7203:78;:::i;:::-;7194:87;;7010:277;6949:338;;;;:::o;7293:652::-;7370:6;7378;7427:2;7415:9;7406:7;7402:23;7398:32;7395:119;;;7433:79;;:::i;:::-;7395:119;7553:1;7578:53;7623:7;7614:6;7603:9;7599:22;7578:53;:::i;:::-;7568:63;;7524:117;7708:2;7697:9;7693:18;7680:32;7739:18;7731:6;7728:30;7725:117;;;7761:79;;:::i;:::-;7725:117;7866:62;7920:7;7911:6;7900:9;7896:22;7866:62;:::i;:::-;7856:72;;7651:287;7293:652;;;;;:::o;7951:77::-;7988:7;8017:5;8006:16;;7951:77;;;:::o;8034:118::-;8121:24;8139:5;8121:24;:::i;:::-;8116:3;8109:37;8034:118;;:::o;8158:222::-;8251:4;8289:2;8278:9;8274:18;8266:26;;8302:71;8370:1;8359:9;8355:17;8346:6;8302:71;:::i;:::-;8158:222;;;;:::o;8386:329::-;8445:6;8494:2;8482:9;8473:7;8469:23;8465:32;8462:119;;;8500:79;;:::i;:::-;8462:119;8620:1;8645:53;8690:7;8681:6;8670:9;8666:22;8645:53;:::i;:::-;8635:63;;8591:117;8386:329;;;;:::o;8721:149::-;8757:7;8797:66;8790:5;8786:78;8775:89;;8721:149;;;:::o;8876:115::-;8961:23;8978:5;8961:23;:::i;:::-;8956:3;8949:36;8876:115;;:::o;8997:218::-;9088:4;9126:2;9115:9;9111:18;9103:26;;9139:69;9205:1;9194:9;9190:17;9181:6;9139:69;:::i;:::-;8997:218;;;;:::o;9221:118::-;9308:24;9326:5;9308:24;:::i;:::-;9303:3;9296:37;9221:118;;:::o;9345:222::-;9438:4;9476:2;9465:9;9461:18;9453:26;;9489:71;9557:1;9546:9;9542:17;9533:6;9489:71;:::i;:::-;9345:222;;;;:::o;9573:474::-;9641:6;9649;9698:2;9686:9;9677:7;9673:23;9669:32;9666:119;;;9704:79;;:::i;:::-;9666:119;9824:1;9849:53;9894:7;9885:6;9874:9;9870:22;9849:53;:::i;:::-;9839:63;;9795:117;9951:2;9977:53;10022:7;10013:6;10002:9;9998:22;9977:53;:::i;:::-;9967:63;;9922:118;9573:474;;;;;:::o;10053:180::-;10101:77;10098:1;10091:88;10198:4;10195:1;10188:15;10222:4;10219:1;10212:15;10239:320;10283:6;10320:1;10314:4;10310:12;10300:22;;10367:1;10361:4;10357:12;10388:18;10378:81;;10444:4;10436:6;10432:17;10422:27;;10378:81;10506:2;10498:6;10495:14;10475:18;10472:38;10469:84;;10525:18;;:::i;:::-;10469:84;10290:269;10239:320;;;:::o;10565:85::-;10610:7;10639:5;10628:16;;10565:85;;;:::o;10656:101::-;10692:7;10732:18;10725:5;10721:30;10710:41;;10656:101;;;:::o;10763:60::-;10791:3;10812:5;10805:12;;10763:60;;;:::o;10829:156::-;10886:9;10919:60;10936:42;10945:32;10971:5;10945:32;:::i;:::-;10936:42;:::i;:::-;10919:60;:::i;:::-;10906:73;;10829:156;;;:::o;10991:145::-;11085:44;11123:5;11085:44;:::i;:::-;11080:3;11073:57;10991:145;;:::o;11142:236::-;11242:4;11280:2;11269:9;11265:18;11257:26;;11293:78;11368:1;11357:9;11353:17;11344:6;11293:78;:::i;:::-;11142:236;;;;:::o;11384:442::-;11533:4;11571:2;11560:9;11556:18;11548:26;;11584:71;11652:1;11641:9;11637:17;11628:6;11584:71;:::i;:::-;11665:72;11733:2;11722:9;11718:18;11709:6;11665:72;:::i;:::-;11747;11815:2;11804:9;11800:18;11791:6;11747:72;:::i;:::-;11384:442;;;;;;:::o;11832:117::-;11941:1;11938;11931:12;11955:117;12064:1;12061;12054:12;12078:469;12183:9;12194;12232:8;12220:10;12217:24;12214:111;;;12244:79;;:::i;:::-;12214:111;12350:6;12340:8;12337:20;12334:107;;;12360:79;;:::i;:::-;12334:107;12491:1;12479:10;12475:18;12467:6;12463:31;12450:44;;12530:10;12520:8;12516:25;12503:38;;12078:469;;;;;;;:::o;12553:96::-;12611:6;12639:3;12629:13;;12553:96;;;;:::o;12747:107::-;12791:8;12841:5;12835:4;12831:16;12810:37;;12747:107;;;;:::o;12860:548::-;12950:5;12981:45;13022:3;13015:5;12981:45;:::i;:::-;13051:5;13075:40;13105:8;13092:22;13075:40;:::i;:::-;13066:49;;13139:1;13131:6;13128:13;13125:276;;;13209:168;13293:66;13263:6;13260:1;13256:14;13253:1;13249:22;13209:168;:::i;:::-;13186:5;13165:226;13156:235;;13125:276;12956:452;;12860:548;;;;:::o;13414:168::-;13497:11;13531:6;13526:3;13519:19;13571:4;13566:3;13562:14;13547:29;;13414:168;;;;:::o;13610:314::-;13706:3;13727:70;13790:6;13785:3;13727:70;:::i;:::-;13720:77;;13807:56;13856:6;13851:3;13844:5;13807:56;:::i;:::-;13888:29;13910:6;13888:29;:::i;:::-;13883:3;13879:39;13872:46;;13610:314;;;;;:::o;13930:439::-;14079:4;14117:2;14106:9;14102:18;14094:26;;14130:71;14198:1;14187:9;14183:17;14174:6;14130:71;:::i;:::-;14248:9;14242:4;14238:20;14233:2;14222:9;14218:18;14211:48;14276:86;14357:4;14348:6;14340;14276:86;:::i;:::-;14268:94;;13930:439;;;;;;:::o;14375:122::-;14448:24;14466:5;14448:24;:::i;:::-;14441:5;14438:35;14428:63;;14487:1;14484;14477:12;14428:63;14375:122;:::o;14503:143::-;14560:5;14591:6;14585:13;14576:22;;14607:33;14634:5;14607:33;:::i;:::-;14503:143;;;;:::o;14652:351::-;14722:6;14771:2;14759:9;14750:7;14746:23;14742:32;14739:119;;;14777:79;;:::i;:::-;14739:119;14897:1;14922:64;14978:7;14969:6;14958:9;14954:22;14922:64;:::i;:::-;14912:74;;14868:128;14652:351;;;;:::o;15009:180::-;15057:77;15054:1;15047:88;15154:4;15151:1;15144:15;15178:4;15175:1;15168:15;15195:191;15235:3;15254:20;15272:1;15254:20;:::i;:::-;15249:25;;15288:20;15306:1;15288:20;:::i;:::-;15283:25;;15331:1;15328;15324:9;15317:16;;15352:3;15349:1;15346:10;15343:36;;;15359:18;;:::i;:::-;15343:36;15195:191;;;;:::o;15392:438::-;15539:4;15577:2;15566:9;15562:18;15554:26;;15590:71;15658:1;15647:9;15643:17;15634:6;15590:71;:::i;:::-;15671:72;15739:2;15728:9;15724:18;15715:6;15671:72;:::i;:::-;15753:70;15819:2;15808:9;15804:18;15795:6;15753:70;:::i;:::-;15392:438;;;;;;:::o;15836:98::-;15887:6;15921:5;15915:12;15905:22;;15836:98;;;:::o;15940:147::-;16041:11;16078:3;16063:18;;15940:147;;;;:::o;16093:386::-;16197:3;16225:38;16257:5;16225:38;:::i;:::-;16279:88;16360:6;16355:3;16279:88;:::i;:::-;16272:95;;16376:65;16434:6;16429:3;16422:4;16415:5;16411:16;16376:65;:::i;:::-;16466:6;16461:3;16457:16;16450:23;;16201:278;16093:386;;;;:::o;16485:271::-;16615:3;16637:93;16726:3;16717:6;16637:93;:::i;:::-;16630:100;;16747:3;16740:10;;16485:271;;;;:::o;16762:116::-;16832:21;16847:5;16832:21;:::i;:::-;16825:5;16822:32;16812:60;;16868:1;16865;16858:12;16812:60;16762:116;:::o;16884:137::-;16938:5;16969:6;16963:13;16954:22;;16985:30;17009:5;16985:30;:::i;:::-;16884:137;;;;:::o;17027:93::-;17063:7;17103:10;17096:5;17092:22;17081:33;;17027:93;;;:::o;17126:120::-;17198:23;17215:5;17198:23;:::i;:::-;17191:5;17188:34;17178:62;;17236:1;17233;17226:12;17178:62;17126:120;:::o;17252:141::-;17308:5;17339:6;17333:13;17324:22;;17355:32;17381:5;17355:32;:::i;:::-;17252:141;;;;:::o;17399:499::-;17474:6;17482;17531:2;17519:9;17510:7;17506:23;17502:32;17499:119;;;17537:79;;:::i;:::-;17499:119;17657:1;17682:61;17735:7;17726:6;17715:9;17711:22;17682:61;:::i;:::-;17672:71;;17628:125;17792:2;17818:63;17873:7;17864:6;17853:9;17849:22;17818:63;:::i;:::-;17808:73;;17763:128;17399:499;;;;;:::o;17904:345::-;17971:6;18020:2;18008:9;17999:7;17995:23;17991:32;17988:119;;;18026:79;;:::i;:::-;17988:119;18146:1;18171:61;18224:7;18215:6;18204:9;18200:22;18171:61;:::i;:::-;18161:71;;18117:125;17904:345;;;;:::o;18255:141::-;18304:4;18327:3;18319:11;;18350:3;18347:1;18340:14;18384:4;18381:1;18371:18;18363:26;;18255:141;;;:::o;18402:93::-;18439:6;18486:2;18481;18474:5;18470:14;18466:23;18456:33;;18402:93;;;:::o;18501:393::-;18570:6;18620:1;18608:10;18604:18;18643:97;18673:66;18662:9;18643:97;:::i;:::-;18761:39;18791:8;18780:9;18761:39;:::i;:::-;18749:51;;18833:4;18829:9;18822:5;18818:21;18809:30;;18882:4;18872:8;18868:19;18861:5;18858:30;18848:40;;18577:317;;18501:393;;;;;:::o;18900:142::-;18950:9;18983:53;19001:34;19010:24;19028:5;19010:24;:::i;:::-;19001:34;:::i;:::-;18983:53;:::i;:::-;18970:66;;18900:142;;;:::o;19048:75::-;19091:3;19112:5;19105:12;;19048:75;;;:::o;19129:269::-;19239:39;19270:7;19239:39;:::i;:::-;19300:91;19349:41;19373:16;19349:41;:::i;:::-;19341:6;19334:4;19328:11;19300:91;:::i;:::-;19294:4;19287:105;19205:193;19129:269;;;:::o;19404:73::-;19449:3;19404:73;:::o;19483:189::-;19560:32;;:::i;:::-;19601:65;19659:6;19651;19645:4;19601:65;:::i;:::-;19536:136;19483:189;;:::o;19678:186::-;19738:120;19755:3;19748:5;19745:14;19738:120;;;19809:39;19846:1;19839:5;19809:39;:::i;:::-;19782:1;19775:5;19771:13;19762:22;;19738:120;;;19678:186;;:::o;19870:543::-;19971:2;19966:3;19963:11;19960:446;;;20005:38;20037:5;20005:38;:::i;:::-;20089:29;20107:10;20089:29;:::i;:::-;20079:8;20075:44;20272:2;20260:10;20257:18;20254:49;;;20293:8;20278:23;;20254:49;20316:80;20372:22;20390:3;20372:22;:::i;:::-;20362:8;20358:37;20345:11;20316:80;:::i;:::-;19975:431;;19960:446;19870:543;;;:::o;20419:117::-;20473:8;20523:5;20517:4;20513:16;20492:37;;20419:117;;;;:::o;20542:169::-;20586:6;20619:51;20667:1;20663:6;20655:5;20652:1;20648:13;20619:51;:::i;:::-;20615:56;20700:4;20694;20690:15;20680:25;;20593:118;20542:169;;;;:::o;20716:295::-;20792:4;20938:29;20963:3;20957:4;20938:29;:::i;:::-;20930:37;;21000:3;20997:1;20993:11;20987:4;20984:21;20976:29;;20716:295;;;;:::o;21016:1395::-;21133:37;21166:3;21133:37;:::i;:::-;21235:18;21227:6;21224:30;21221:56;;;21257:18;;:::i;:::-;21221:56;21301:38;21333:4;21327:11;21301:38;:::i;:::-;21386:67;21446:6;21438;21432:4;21386:67;:::i;:::-;21480:1;21504:4;21491:17;;21536:2;21528:6;21525:14;21553:1;21548:618;;;;22210:1;22227:6;22224:77;;;22276:9;22271:3;22267:19;22261:26;22252:35;;22224:77;22327:67;22387:6;22380:5;22327:67;:::i;:::-;22321:4;22314:81;22183:222;21518:887;;21548:618;21600:4;21596:9;21588:6;21584:22;21634:37;21666:4;21634:37;:::i;:::-;21693:1;21707:208;21721:7;21718:1;21715:14;21707:208;;;21800:9;21795:3;21791:19;21785:26;21777:6;21770:42;21851:1;21843:6;21839:14;21829:24;;21898:2;21887:9;21883:18;21870:31;;21744:4;21741:1;21737:12;21732:17;;21707:208;;;21943:6;21934:7;21931:19;21928:179;;;22001:9;21996:3;21992:19;21986:26;22044:48;22086:4;22078:6;22074:17;22063:9;22044:48;:::i;:::-;22036:6;22029:64;21951:156;21928:179;22153:1;22149;22141:6;22137:14;22133:22;22127:4;22120:36;21555:611;;;21518:887;;21108:1303;;;21016:1395;;:::o"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","authority()":"bf7e214f","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","initialize(address)":"c4d66de8","isConsumingScheduledOp()":"8fb36037","mint(address,uint256)":"40c10f19","name()":"06fdde03","proxiableUUID()":"52d1902d","setAuthority(address)":"7a9e5e4b","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAuthority\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"authority()\":{\"details\":\"Returns the current authority.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFToken.sol\":\"NFToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\":{\"keccak256\":\"0xd7e800ed57cb2dc4ce3d38fc310cf6c4918c0a67f9071ef8fb3e0cff24be6446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f85f4baeccce8f93fdc5d4ce54178c900d29f67e3109fe1b31b9d98e3f0a454\",\"dweb:/ipfs/QmWfRZZzkBi3Eo4ub9VRLkBx8w527Qs5ceTNLQ9unx9n7g\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0xdabf85e3bab52e7cfade4f77e661bcf7a2f9f95097bfd2ca5ddb193a0c21ee8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402259332090488a587a858ec0113bc7fe55e9dbc6e329927b87ed0f1cce7d08\",\"dweb:/ipfs/QmPJufTJJJifny3JscKTASsPzCrpXRbhtsJnwkCdbaKDTf\"]},\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/NFToken.sol\":{\"keccak256\":\"0x139d5f827a307a4c7c85c8dfd2d393ecba72ba75e8cb0a30964f546f2851618a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840f1c20720b6cd6171345290e9eedc31ed1a6d1c83230e30dddfe77ffc86493\",\"dweb:/ipfs/QmQfzNZ424QW7moxZdj128z4VvuvokebskFEEw8n5Jbi2D\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/NFTune.sol":{"NFTune":{"abi":[{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"AccessManagedInvalidAuthority","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"uint32","name":"delay","type":"uint32"}],"name":"AccessManagedRequiredDelay","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"AccessManagedUnauthorized","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"authority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"authority","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"initialAuthority","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isConsumingScheduledOp","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5060805161362361006d600039600081816114490152818161149e015261166901526136236000f3fe6080604052600436106101355760003560e01c806370a08231116100ab578063ad3cb1cc1161006f578063ad3cb1cc14610415578063b88d4fde14610440578063bf7e214f14610469578063c4d66de814610494578063c87b56dd146104bd578063e985e9c5146104fa57610135565b806370a08231146103305780637a9e5e4b1461036d5780638fb360371461039657806395d89b41146103c1578063a22cb465146103ec57610135565b806340d097c3116100fd57806340d097c31461023157806342842e0e1461025a57806342966c68146102835780634f1ef286146102ac57806352d1902d146102c85780636352211e146102f357610135565b806301ffc9a71461013a57806306fdde0314610177578063081812fc146101a2578063095ea7b3146101df57806323b872dd14610208575b600080fd5b34801561014657600080fd5b50610161600480360381019061015c91906127a5565b610537565b60405161016e91906127ed565b60405180910390f35b34801561018357600080fd5b5061018c610619565b6040516101999190612898565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906128f0565b6106ba565b6040516101d6919061295e565b60405180910390f35b3480156101eb57600080fd5b50610206600480360381019061020191906129a5565b6106d6565b005b34801561021457600080fd5b5061022f600480360381019061022a91906129e5565b6106ec565b005b34801561023d57600080fd5b5061025860048036038101906102539190612a38565b6107ee565b005b34801561026657600080fd5b50610281600480360381019061027c91906129e5565b61082e565b005b34801561028f57600080fd5b506102aa60048036038101906102a591906128f0565b61084e565b005b6102c660048036038101906102c19190612b9a565b610865565b005b3480156102d457600080fd5b506102dd610884565b6040516102ea9190612c0f565b60405180910390f35b3480156102ff57600080fd5b5061031a600480360381019061031591906128f0565b6108b7565b604051610327919061295e565b60405180910390f35b34801561033c57600080fd5b5061035760048036038101906103529190612a38565b6108c9565b6040516103649190612c39565b60405180910390f35b34801561037957600080fd5b50610394600480360381019061038f9190612a38565b610992565b005b3480156103a257600080fd5b506103ab610a7e565b6040516103b89190612c63565b60405180910390f35b3480156103cd57600080fd5b506103d6610aba565b6040516103e39190612898565b60405180910390f35b3480156103f857600080fd5b50610413600480360381019061040e9190612caa565b610b5b565b005b34801561042157600080fd5b5061042a610b71565b6040516104379190612898565b60405180910390f35b34801561044c57600080fd5b5061046760048036038101906104629190612cea565b610baa565b005b34801561047557600080fd5b5061047e610bc7565b60405161048b919061295e565b60405180910390f35b3480156104a057600080fd5b506104bb60048036038101906104b69190612a38565b610bff565b005b3480156104c957600080fd5b506104e460048036038101906104df91906128f0565b610e12565b6040516104f19190612898565b60405180910390f35b34801561050657600080fd5b50610521600480360381019061051c9190612d6d565b610e7b565b60405161052e91906127ed565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061060257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610612575061061182610f1d565b5b9050919050565b60606000610625610f87565b905080600001805461063690612ddc565b80601f016020809104026020016040519081016040528092919081815260200182805461066290612ddc565b80156106af5780601f10610684576101008083540402835291602001916106af565b820191906000526020600020905b81548152906001019060200180831161069257829003601f168201915b505050505091505090565b60006106c582610faf565b506106cf82611037565b9050919050565b6106e882826106e3611082565b61108a565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075e5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610755919061295e565b60405180910390fd5b6000610772838361076d611082565b61109c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107e8578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107df93929190612e0d565b60405180910390fd5b50505050565b6108066107f9611082565b6108016112c9565b6112d6565b600080600081548092919061081a90612e73565b91905055905061082a8282611429565b5050565b61084983838360405180602001604052806000815250610baa565b505050565b61086160008261085c611082565b61109c565b5050565b61086d611447565b6108768261152d565b6108808282611548565b5050565b600061088e611667565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60006108c282610faf565b9050919050565b6000806108d4610f87565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109485760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161093f919061295e565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b600061099c611082565b90506109a6610bc7565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a1557806040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401610a0c919061295e565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff163b03610a7157816040517fc2f31e5e000000000000000000000000000000000000000000000000000000008152600401610a68919061295e565b60405180910390fd5b610a7a826116ee565b5050565b600080610a89611778565b90508060000160149054906101000a900460ff16610aab57600060e01b610ab4565b638fb3603760e01b5b91505090565b60606000610ac6610f87565b9050806001018054610ad790612ddc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0390612ddc565b8015610b505780601f10610b2557610100808354040283529160200191610b50565b820191906000526020600020905b815481529060010190602001808311610b3357829003601f168201915b505050505091505090565b610b6d610b66611082565b83836117a0565b5050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b610bb58484846106ec565b610bc18484848461191e565b50505050565b600080610bd2611778565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000610c09611ad5565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610c575750825b9050600060018367ffffffffffffffff16148015610c8c575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610c9a575080155b15610cd1576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610d215760018560000160086101000a81548160ff0219169083151502179055505b610d956040518060400160405280600681526020017f4e4654756e6500000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e46550000000000000000000000000000000000000000000000000000000000815250611afd565b610d9d611b13565b610da686611b1d565b610dae611b31565b8315610e0a5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610e019190612f14565b60405180910390a15b505050505050565b6060610e1d82610faf565b506000610e28611b3b565b90506000815111610e485760405180602001604052806000815250610e73565b80610e5284611b52565b604051602001610e63929190612f6b565b6040516020818303038152906040525b915050919050565b600080610e86610f87565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b600080610fbb83611c20565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361102e57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016110259190612c39565b60405180910390fd5b80915050919050565b600080611042610f87565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b6110978383836001611c6b565b505050565b6000806110a7610f87565b905060006110b485611c20565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146110f6576110f5818587611e3f565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461118957611138600086600080611c6b565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461120e5760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b3660008036915091509091565b60006112e0611778565b90506000806113166112f0610bc7565b8730888860009060049261130693929190612f99565b906113119190612fec565b611f03565b91509150816114215760008163ffffffff1611156113e35760018360000160146101000a81548160ff021916908315150217905550611353610bc7565b73ffffffffffffffffffffffffffffffffffffffff166394c7d7ee8787876040518463ffffffff1660e01b815260040161138f93929190613089565b600060405180830381600087803b1580156113a957600080fd5b505af11580156113bd573d6000803e3d6000fd5b5050505060008360000160146101000a81548160ff021916908315150217905550611420565b856040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401611417919061295e565b60405180910390fd5b5b505050505050565b611443828260405180602001604052806000815250612029565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806114f457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114db612045565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561152b576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611545611538611082565b6115406112c9565b6112d6565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156115b057506040513d601f19601f820116820180604052508101906115ad91906130e7565b60015b6115f157816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016115e8919061295e565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461165857806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161164f9190612c0f565b60405180910390fd5b611662838361209c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146116ec576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006116f8611778565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad8260405161176c919061295e565b60405180910390a15050565b60007ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a00905090565b60006117aa610f87565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361181d57826040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611814919061295e565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318460405161191091906127ed565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611acf578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611962611082565b8685856040518563ffffffff1660e01b81526004016119849493929190613158565b6020604051808303816000875af19250505080156119c057506040513d601f19601f820116820180604052508101906119bd91906131b9565b60015b611a44573d80600081146119f0576040519150601f19603f3d011682016040523d82523d6000602084013e6119f5565b606091505b506000815103611a3c57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a33919061295e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611acd57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ac4919061295e565b60405180910390fd5b505b50505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611b0561210f565b611b0f828261214f565b5050565b611b1b61210f565b565b611b2561210f565b611b2e8161218c565b50565b611b3961210f565b565b606060405180602001604052806000815250905090565b606060006001611b61846121a0565b01905060008167ffffffffffffffff811115611b8057611b7f612a6f565b5b6040519080825280601f01601f191660200182016040528015611bb25781602001600182028036833780820191505090505b509050600082602001820190505b600115611c15578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611c0957611c086131e6565b5b04945060008503611bc0575b819350505050919050565b600080611c2b610f87565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6000611c75610f87565b90508180611cb05750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611de4576000611cc085610faf565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015611d2b57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611d3e5750611d3c8185610e7b565b155b15611d8057836040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611d77919061295e565b60405180910390fd5b8215611de257848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b611e4a8383836122f3565b611efe57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ebf57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611eb69190612c39565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611ef5929190613215565b60405180910390fd5b505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff16878787604051602401611f359392919061323e565b60405160208183030381529060405263b700961360e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611f8791906132b1565b600060405180830381855afa9150503d8060008114611fc2576040519150601f19603f3d011682016040523d82523d6000602084013e611fc7565b606091505b5091509150811561201e576040815110611ffc5780806020019051810190611fef9190613319565b809450819550505061201d565b602081511061201c57808060200190518101906120199190613359565b93505b5b5b505094509492505050565b61203383836123b4565b612040600084848461191e565b505050565b60006120737f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6124ad565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6120a5826124b7565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612102576120fc8282612584565b5061210b565b61210a612608565b5b5050565b612117612645565b61214d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61215761210f565b6000612161610f87565b905082816000019081612174919061351b565b5081816001019081612186919061351b565b50505050565b61219461210f565b61219d816116ee565b50565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106121fe577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816121f4576121f36131e6565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061223b576d04ee2d6d415b85acef81000000008381612231576122306131e6565b5b0492506020810190505b662386f26fc10000831061226a57662386f26fc1000083816122605761225f6131e6565b5b0492506010810190505b6305f5e1008310612293576305f5e1008381612289576122886131e6565b5b0492506008810190505b61271083106122b85761271083816122ae576122ad6131e6565b5b0492506004810190505b606483106122db57606483816122d1576122d06131e6565b5b0492506002810190505b600a83106122ea576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156123ab57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061236c575061236b8484610e7b565b5b806123aa57508273ffffffffffffffffffffffffffffffffffffffff1661239283611037565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036124265760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161241d919061295e565b60405180910390fd5b60006124348383600061109c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146124a85760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161249f919061295e565b60405180910390fd5b505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361251357806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161250a919061295e565b60405180910390fd5b806125407f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6124ad565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516125ae91906132b1565b600060405180830381855af49150503d80600081146125e9576040519150601f19603f3d011682016040523d82523d6000602084013e6125ee565b606091505b50915091506125fe858383612665565b9250505092915050565b6000341115612643576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061264f611ad5565b60000160089054906101000a900460ff16905090565b60608261267a57612675826126f4565b6126ec565b600082511480156126a2575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156126e457836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016126db919061295e565b60405180910390fd5b8190506126ed565b5b9392505050565b6000815111156127075780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6127828161274d565b811461278d57600080fd5b50565b60008135905061279f81612779565b92915050565b6000602082840312156127bb576127ba612743565b5b60006127c984828501612790565b91505092915050565b60008115159050919050565b6127e7816127d2565b82525050565b600060208201905061280260008301846127de565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612842578082015181840152602081019050612827565b60008484015250505050565b6000601f19601f8301169050919050565b600061286a82612808565b6128748185612813565b9350612884818560208601612824565b61288d8161284e565b840191505092915050565b600060208201905081810360008301526128b2818461285f565b905092915050565b6000819050919050565b6128cd816128ba565b81146128d857600080fd5b50565b6000813590506128ea816128c4565b92915050565b60006020828403121561290657612905612743565b5b6000612914848285016128db565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129488261291d565b9050919050565b6129588161293d565b82525050565b6000602082019050612973600083018461294f565b92915050565b6129828161293d565b811461298d57600080fd5b50565b60008135905061299f81612979565b92915050565b600080604083850312156129bc576129bb612743565b5b60006129ca85828601612990565b92505060206129db858286016128db565b9150509250929050565b6000806000606084860312156129fe576129fd612743565b5b6000612a0c86828701612990565b9350506020612a1d86828701612990565b9250506040612a2e868287016128db565b9150509250925092565b600060208284031215612a4e57612a4d612743565b5b6000612a5c84828501612990565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612aa78261284e565b810181811067ffffffffffffffff82111715612ac657612ac5612a6f565b5b80604052505050565b6000612ad9612739565b9050612ae58282612a9e565b919050565b600067ffffffffffffffff821115612b0557612b04612a6f565b5b612b0e8261284e565b9050602081019050919050565b82818337600083830152505050565b6000612b3d612b3884612aea565b612acf565b905082815260208101848484011115612b5957612b58612a6a565b5b612b64848285612b1b565b509392505050565b600082601f830112612b8157612b80612a65565b5b8135612b91848260208601612b2a565b91505092915050565b60008060408385031215612bb157612bb0612743565b5b6000612bbf85828601612990565b925050602083013567ffffffffffffffff811115612be057612bdf612748565b5b612bec85828601612b6c565b9150509250929050565b6000819050919050565b612c0981612bf6565b82525050565b6000602082019050612c246000830184612c00565b92915050565b612c33816128ba565b82525050565b6000602082019050612c4e6000830184612c2a565b92915050565b612c5d8161274d565b82525050565b6000602082019050612c786000830184612c54565b92915050565b612c87816127d2565b8114612c9257600080fd5b50565b600081359050612ca481612c7e565b92915050565b60008060408385031215612cc157612cc0612743565b5b6000612ccf85828601612990565b9250506020612ce085828601612c95565b9150509250929050565b60008060008060808587031215612d0457612d03612743565b5b6000612d1287828801612990565b9450506020612d2387828801612990565b9350506040612d34878288016128db565b925050606085013567ffffffffffffffff811115612d5557612d54612748565b5b612d6187828801612b6c565b91505092959194509250565b60008060408385031215612d8457612d83612743565b5b6000612d9285828601612990565b9250506020612da385828601612990565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612df457607f821691505b602082108103612e0757612e06612dad565b5b50919050565b6000606082019050612e22600083018661294f565b612e2f6020830185612c2a565b612e3c604083018461294f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e7e826128ba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612eb057612eaf612e44565b5b600182019050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000612efe612ef9612ef484612ebb565b612ed9565b612ec5565b9050919050565b612f0e81612ee3565b82525050565b6000602082019050612f296000830184612f05565b92915050565b600081905092915050565b6000612f4582612808565b612f4f8185612f2f565b9350612f5f818560208601612824565b80840191505092915050565b6000612f778285612f3a565b9150612f838284612f3a565b91508190509392505050565b600080fd5b600080fd5b60008085851115612fad57612fac612f8f565b5b83861115612fbe57612fbd612f94565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b6000612ff88383612fd4565b82613003813561274d565b925060048210156130435761303e7fffffffff0000000000000000000000000000000000000000000000000000000083600403600802612fdf565b831692505b505092915050565b600082825260208201905092915050565b6000613068838561304b565b9350613075838584612b1b565b61307e8361284e565b840190509392505050565b600060408201905061309e600083018661294f565b81810360208301526130b181848661305c565b9050949350505050565b6130c481612bf6565b81146130cf57600080fd5b50565b6000815190506130e1816130bb565b92915050565b6000602082840312156130fd576130fc612743565b5b600061310b848285016130d2565b91505092915050565b600081519050919050565b600061312a82613114565b613134818561304b565b9350613144818560208601612824565b61314d8161284e565b840191505092915050565b600060808201905061316d600083018761294f565b61317a602083018661294f565b6131876040830185612c2a565b8181036060830152613199818461311f565b905095945050505050565b6000815190506131b381612779565b92915050565b6000602082840312156131cf576131ce612743565b5b60006131dd848285016131a4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060408201905061322a600083018561294f565b6132376020830184612c2a565b9392505050565b6000606082019050613253600083018661294f565b613260602083018561294f565b61326d6040830184612c54565b949350505050565b600081905092915050565b600061328b82613114565b6132958185613275565b93506132a5818560208601612824565b80840191505092915050565b60006132bd8284613280565b915081905092915050565b6000815190506132d781612c7e565b92915050565b600063ffffffff82169050919050565b6132f6816132dd565b811461330157600080fd5b50565b600081519050613313816132ed565b92915050565b600080604083850312156133305761332f612743565b5b600061333e858286016132c8565b925050602061334f85828601613304565b9150509250929050565b60006020828403121561336f5761336e612743565b5b600061337d848285016132c8565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b6000600883026133db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612fdf565b6133e58683612fdf565b95508019841693508086168417925050509392505050565b600061341861341361340e846128ba565b612ed9565b6128ba565b9050919050565b6000819050919050565b613432836133fd565b61344661343e8261341f565b8484546133ab565b825550505050565b600090565b61345b61344e565b613466818484613429565b505050565b5b8181101561348a5761347f600082613453565b60018101905061346c565b5050565b601f8211156134cf576134a081613386565b6134a98461339b565b810160208510156134b8578190505b6134cc6134c48561339b565b83018261346b565b50505b505050565b600082821c905092915050565b60006134f2600019846008026134d4565b1980831691505092915050565b600061350b83836134e1565b9150826002028217905092915050565b61352482612808565b67ffffffffffffffff81111561353d5761353c612a6f565b5b6135478254612ddc565b61355282828561348e565b600060209050601f8311600181146135855760008415613573578287015190505b61357d85826134ff565b8655506135e5565b601f19841661359386613386565b60005b828110156135bb57848901518255600182019150602085019450602081019050613596565b868310156135d857848901516135d4601f8916826134e1565b8355505b6001600288020188555050505b50505050505056fea264697066735822122017f626d20d16d857248a110b31fe39f03d9f747a598270d651523f436bc3889e64736f6c63430008180033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x3623 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1449 ADD MSTORE DUP2 DUP2 PUSH2 0x149E ADD MSTORE PUSH2 0x1669 ADD MSTORE PUSH2 0x3623 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4FA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8FB36037 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3EC JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x40D097C3 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2F3 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x208 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x29A5 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2B9A JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AB PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x2CEA JUMP JUMPDEST PUSH2 0xBAA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47E PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0xBFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x521 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x602 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x612 JUMPI POP PUSH2 0x611 DUP3 PUSH2 0xF1D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x625 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x636 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x662 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x684 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x692 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C5 DUP3 PUSH2 0xFAF JUMP JUMPDEST POP PUSH2 0x6CF DUP3 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E8 DUP3 DUP3 PUSH2 0x6E3 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x108A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP4 DUP4 PUSH2 0x76D PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7E8 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x7F9 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x801 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x81A SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x82A DUP3 DUP3 PUSH2 0x1429 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBAA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x861 PUSH1 0x0 DUP3 PUSH2 0x85C PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x86D PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x876 DUP3 PUSH2 0x152D JUMP JUMPDEST PUSH2 0x880 DUP3 DUP3 PUSH2 0x1548 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88E PUSH2 0x1667 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 DUP3 PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D4 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x948 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99C PUSH2 0x1082 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A6 PUSH2 0xBC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA15 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xA71 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xC2F31E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7A DUP3 PUSH2 0x16EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA89 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAAB JUMPI PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0xAB4 JUMP JUMPDEST PUSH4 0x8FB36037 PUSH1 0xE0 SHL JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAC6 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xAD7 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB03 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB50 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB25 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB50 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB33 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xB66 PUSH2 0x1082 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x17A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xBB5 DUP5 DUP5 DUP5 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0xBC1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x191E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBD2 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC09 PUSH2 0x1AD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC57 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC8C JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC9A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xD21 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xD95 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E4654756E650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E46550000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xD9D PUSH2 0x1B13 JUMP JUMPDEST PUSH2 0xDA6 DUP7 PUSH2 0x1B1D JUMP JUMPDEST PUSH2 0xDAE PUSH2 0x1B31 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE0A JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x2F14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE1D DUP3 PUSH2 0xFAF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE28 PUSH2 0x1B3B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE73 JUMP JUMPDEST DUP1 PUSH2 0xE52 DUP5 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE63 SWAP3 SWAP2 SWAP1 PUSH2 0x2F6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE86 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFBB DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x102E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1042 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1097 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C6B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10A7 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10B4 DUP6 PUSH2 0x1C20 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F6 JUMPI PUSH2 0x10F5 DUP2 DUP6 DUP8 PUSH2 0x1E3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1189 JUMPI PUSH2 0x1138 PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x1C6B JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x120E JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E0 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1316 PUSH2 0x12F0 PUSH2 0xBC7 JUMP JUMPDEST DUP8 ADDRESS DUP9 DUP9 PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP3 PUSH2 0x1306 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST SWAP1 PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x1F03 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1421 JUMPI PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x13E3 JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1353 PUSH2 0xBC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94C7D7EE DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3089 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1420 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1417 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1443 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2029 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x14F4 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14DB PUSH2 0x2045 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x152B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1545 PUSH2 0x1538 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x1540 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15B0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AD SWAP2 SWAP1 PUSH2 0x30E7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15F1 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E8 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1658 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164F SWAP2 SWAP1 PUSH2 0x2C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1662 DUP4 DUP4 PUSH2 0x209C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F8 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x176C SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF3177357AB46D8AF007AB3FDB9AF81DA189E1068FEFDC0073DCA88A2CAB40A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AA PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1814 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1910 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1ACF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1962 PUSH2 0x1082 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1984 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19C0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19BD SWAP2 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A44 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A3C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1ACD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC4 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B05 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x1B0F DUP3 DUP3 PUSH2 0x214F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1B1B PUSH2 0x210F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B25 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x1B2E DUP2 PUSH2 0x218C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B39 PUSH2 0x210F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1B61 DUP5 PUSH2 0x21A0 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x2A6F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BB2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1C15 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1BC0 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C2B PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C75 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x1CB0 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DE4 JUMPI PUSH1 0x0 PUSH2 0x1CC0 DUP6 PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D2B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D3E JUMPI POP PUSH2 0x1D3C DUP2 DUP6 PUSH2 0xE7B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1D80 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x1DE2 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E4A DUP4 DUP4 DUP4 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x1EFE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EBF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB6 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF5 SWAP3 SWAP2 SWAP1 PUSH2 0x3215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F35 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x323E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xB7009613 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1F87 SWAP2 SWAP1 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x201E JUMPI PUSH1 0x40 DUP2 MLOAD LT PUSH2 0x1FFC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1FEF SWAP2 SWAP1 PUSH2 0x3319 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP PUSH2 0x201D JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x201C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2019 SWAP2 SWAP1 PUSH2 0x3359 JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2033 DUP4 DUP4 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x2040 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x191E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2073 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20A5 DUP3 PUSH2 0x24B7 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2102 JUMPI PUSH2 0x20FC DUP3 DUP3 PUSH2 0x2584 JUMP JUMPDEST POP PUSH2 0x210B JUMP JUMPDEST PUSH2 0x210A PUSH2 0x2608 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2117 PUSH2 0x2645 JUMP JUMPDEST PUSH2 0x214D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2157 PUSH2 0x210F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2161 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2174 SWAP2 SWAP1 PUSH2 0x351B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x351B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2194 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x219D DUP2 PUSH2 0x16EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x21FE JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x21F4 JUMPI PUSH2 0x21F3 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x223B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2231 JUMPI PUSH2 0x2230 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x226A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2293 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2289 JUMPI PUSH2 0x2288 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x22B8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x22DB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x22EA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x23AB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x236C JUMPI POP PUSH2 0x236B DUP5 DUP5 PUSH2 0xE7B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x23AA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2392 DUP4 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2426 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x241D SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2434 DUP4 DUP4 PUSH1 0x0 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24A8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249F SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2513 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250A SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2540 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x25AE SWAP2 SWAP1 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x25FE DUP6 DUP4 DUP4 PUSH2 0x2665 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2643 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x264F PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x267A JUMPI PUSH2 0x2675 DUP3 PUSH2 0x26F4 JUMP JUMPDEST PUSH2 0x26EC JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x26A2 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x26E4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26DB SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x26ED JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2707 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2782 DUP2 PUSH2 0x274D JUMP JUMPDEST DUP2 EQ PUSH2 0x278D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x279F DUP2 PUSH2 0x2779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C9 DUP5 DUP3 DUP6 ADD PUSH2 0x2790 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E7 DUP2 PUSH2 0x27D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2802 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2842 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x286A DUP3 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2874 DUP2 DUP6 PUSH2 0x2813 JUMP JUMPDEST SWAP4 POP PUSH2 0x2884 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x288D DUP2 PUSH2 0x284E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28B2 DUP2 DUP5 PUSH2 0x285F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28CD DUP2 PUSH2 0x28BA JUMP JUMPDEST DUP2 EQ PUSH2 0x28D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28EA DUP2 PUSH2 0x28C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2906 JUMPI PUSH2 0x2905 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2914 DUP5 DUP3 DUP6 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2948 DUP3 PUSH2 0x291D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2958 DUP2 PUSH2 0x293D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2973 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x294F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2982 DUP2 PUSH2 0x293D JUMP JUMPDEST DUP2 EQ PUSH2 0x298D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x299F DUP2 PUSH2 0x2979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29BC JUMPI PUSH2 0x29BB PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29CA DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29DB DUP6 DUP3 DUP7 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29FE JUMPI PUSH2 0x29FD PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A0C DUP7 DUP3 DUP8 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A1D DUP7 DUP3 DUP8 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A2E DUP7 DUP3 DUP8 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A4E JUMPI PUSH2 0x2A4D PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A5C DUP5 DUP3 DUP6 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2AA7 DUP3 PUSH2 0x284E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2AC6 JUMPI PUSH2 0x2AC5 PUSH2 0x2A6F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD9 PUSH2 0x2739 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AE5 DUP3 DUP3 PUSH2 0x2A9E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B05 JUMPI PUSH2 0x2B04 PUSH2 0x2A6F JUMP JUMPDEST JUMPDEST PUSH2 0x2B0E DUP3 PUSH2 0x284E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B3D PUSH2 0x2B38 DUP5 PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x2ACF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B59 JUMPI PUSH2 0x2B58 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST PUSH2 0x2B64 DUP5 DUP3 DUP6 PUSH2 0x2B1B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B81 JUMPI PUSH2 0x2B80 PUSH2 0x2A65 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B91 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2B2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BB1 JUMPI PUSH2 0x2BB0 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BBF DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BE0 JUMPI PUSH2 0x2BDF PUSH2 0x2748 JUMP JUMPDEST JUMPDEST PUSH2 0x2BEC DUP6 DUP3 DUP7 ADD PUSH2 0x2B6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C09 DUP2 PUSH2 0x2BF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C33 DUP2 PUSH2 0x28BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C5D DUP2 PUSH2 0x274D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C87 DUP2 PUSH2 0x27D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CA4 DUP2 PUSH2 0x2C7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CC1 JUMPI PUSH2 0x2CC0 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CCF DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CE0 DUP6 DUP3 DUP7 ADD PUSH2 0x2C95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D04 JUMPI PUSH2 0x2D03 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D12 DUP8 DUP3 DUP9 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2D23 DUP8 DUP3 DUP9 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2D34 DUP8 DUP3 DUP9 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D55 JUMPI PUSH2 0x2D54 PUSH2 0x2748 JUMP JUMPDEST JUMPDEST PUSH2 0x2D61 DUP8 DUP3 DUP9 ADD PUSH2 0x2B6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D84 JUMPI PUSH2 0x2D83 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D92 DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DA3 DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2DF4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E07 JUMPI PUSH2 0x2E06 PUSH2 0x2DAD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E22 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x2E2F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C2A JUMP JUMPDEST PUSH2 0x2E3C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x294F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E7E DUP3 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2EB0 JUMPI PUSH2 0x2EAF PUSH2 0x2E44 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EFE PUSH2 0x2EF9 PUSH2 0x2EF4 DUP5 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x2EC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F0E DUP2 PUSH2 0x2EE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F45 DUP3 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2F4F DUP2 DUP6 PUSH2 0x2F2F JUMP JUMPDEST SWAP4 POP PUSH2 0x2F5F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2824 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F77 DUP3 DUP6 PUSH2 0x2F3A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F83 DUP3 DUP5 PUSH2 0x2F3A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x2FAD JUMPI PUSH2 0x2FAC PUSH2 0x2F8F JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x2FBE JUMPI PUSH2 0x2FBD PUSH2 0x2F94 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF8 DUP4 DUP4 PUSH2 0x2FD4 JUMP JUMPDEST DUP3 PUSH2 0x3003 DUP2 CALLDATALOAD PUSH2 0x274D JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x3043 JUMPI PUSH2 0x303E PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x2FDF JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3068 DUP4 DUP6 PUSH2 0x304B JUMP JUMPDEST SWAP4 POP PUSH2 0x3075 DUP4 DUP6 DUP5 PUSH2 0x2B1B JUMP JUMPDEST PUSH2 0x307E DUP4 PUSH2 0x284E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x309E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x294F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x30B1 DUP2 DUP5 DUP7 PUSH2 0x305C JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x30C4 DUP2 PUSH2 0x2BF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x30CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x30E1 DUP2 PUSH2 0x30BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30FD JUMPI PUSH2 0x30FC PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP5 DUP3 DUP6 ADD PUSH2 0x30D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312A DUP3 PUSH2 0x3114 JUMP JUMPDEST PUSH2 0x3134 DUP2 DUP6 PUSH2 0x304B JUMP JUMPDEST SWAP4 POP PUSH2 0x3144 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x314D DUP2 PUSH2 0x284E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x316D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x317A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x3187 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2C2A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3199 DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x31B3 DUP2 PUSH2 0x2779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31CF JUMPI PUSH2 0x31CE PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31DD DUP5 DUP3 DUP6 ADD PUSH2 0x31A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x322A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x3237 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3253 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x3260 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x326D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C54 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328B DUP3 PUSH2 0x3114 JUMP JUMPDEST PUSH2 0x3295 DUP2 DUP6 PUSH2 0x3275 JUMP JUMPDEST SWAP4 POP PUSH2 0x32A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2824 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32BD DUP3 DUP5 PUSH2 0x3280 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32D7 DUP2 PUSH2 0x2C7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F6 DUP2 PUSH2 0x32DD JUMP JUMPDEST DUP2 EQ PUSH2 0x3301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3313 DUP2 PUSH2 0x32ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3330 JUMPI PUSH2 0x332F PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x333E DUP6 DUP3 DUP7 ADD PUSH2 0x32C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x334F DUP6 DUP3 DUP7 ADD PUSH2 0x3304 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x336F JUMPI PUSH2 0x336E PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x337D DUP5 DUP3 DUP6 ADD PUSH2 0x32C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x33DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2FDF JUMP JUMPDEST PUSH2 0x33E5 DUP7 DUP4 PUSH2 0x2FDF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3418 PUSH2 0x3413 PUSH2 0x340E DUP5 PUSH2 0x28BA JUMP JUMPDEST PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x28BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3432 DUP4 PUSH2 0x33FD JUMP JUMPDEST PUSH2 0x3446 PUSH2 0x343E DUP3 PUSH2 0x341F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x33AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x345B PUSH2 0x344E JUMP JUMPDEST PUSH2 0x3466 DUP2 DUP5 DUP5 PUSH2 0x3429 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x348A JUMPI PUSH2 0x347F PUSH1 0x0 DUP3 PUSH2 0x3453 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x346C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x34CF JUMPI PUSH2 0x34A0 DUP2 PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x34A9 DUP5 PUSH2 0x339B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x34B8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x34CC PUSH2 0x34C4 DUP6 PUSH2 0x339B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x346B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34F2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x34D4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x350B DUP4 DUP4 PUSH2 0x34E1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3524 DUP3 PUSH2 0x2808 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x353D JUMPI PUSH2 0x353C PUSH2 0x2A6F JUMP JUMPDEST JUMPDEST PUSH2 0x3547 DUP3 SLOAD PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x3552 DUP3 DUP3 DUP6 PUSH2 0x348E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3585 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3573 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x357D DUP6 DUP3 PUSH2 0x34FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x35E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3593 DUP7 PUSH2 0x3386 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3596 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x35D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x35D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x34E1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xF6 0x26 0xD2 0xD AND 0xD8 JUMPI 0x24 DUP11 GT SIGNEXTEND BALANCE INVALID CODECOPY CREATE RETURNDATASIZE SWAP16 PUSH21 0x7A598270D651523F436BC3889E64736F6C63430008 XOR STOP CALLER ","sourceMap":"533:770:31:-:0;;;1171:4:2;1128:48;;;;;;;;;533:770:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_525":{"entryPoint":2929,"id":525,"parameterSlots":0,"returnSlots":0},"@__AccessManaged_init_50":{"entryPoint":6941,"id":50,"parameterSlots":1,"returnSlots":0},"@__AccessManaged_init_unchained_62":{"entryPoint":8588,"id":62,"parameterSlots":1,"returnSlots":0},"@__ERC721Burnable_init_2515":{"entryPoint":6931,"id":2515,"parameterSlots":0,"returnSlots":0},"@__ERC721_init_1449":{"entryPoint":6909,"id":1449,"parameterSlots":2,"returnSlots":0},"@__ERC721_init_unchained_1477":{"entryPoint":8527,"id":1477,"parameterSlots":2,"returnSlots":0},"@__UUPSUpgradeable_init_555":{"entryPoint":6961,"id":555,"parameterSlots":0,"returnSlots":0},"@_approve_2281":{"entryPoint":4234,"id":2281,"parameterSlots":3,"returnSlots":0},"@_approve_2355":{"entryPoint":7275,"id":2355,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_7889":{"entryPoint":5421,"id":7889,"parameterSlots":1,"returnSlots":0},"@_baseURI_1633":{"entryPoint":6971,"id":1633,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1909":{"entryPoint":7743,"id":1909,"parameterSlots":3,"returnSlots":0},"@_checkCanCall_246":{"entryPoint":4822,"id":246,"parameterSlots":3,"returnSlots":0},"@_checkInitializing_423":{"entryPoint":8463,"id":423,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_3650":{"entryPoint":9736,"id":3650,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_631":{"entryPoint":5735,"id":631,"parameterSlots":0,"returnSlots":0},"@_checkOnERC721Received_2493":{"entryPoint":6430,"id":2493,"parameterSlots":4,"returnSlots":0},"@_checkProxy_615":{"entryPoint":5191,"id":615,"parameterSlots":0,"returnSlots":0},"@_getAccessManagedStorage_37":{"entryPoint":6008,"id":37,"parameterSlots":0,"returnSlots":1},"@_getApproved_1836":{"entryPoint":4151,"id":1836,"parameterSlots":1,"returnSlots":1},"@_getERC721Storage_1433":{"entryPoint":3975,"id":1433,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_500":{"entryPoint":6869,"id":500,"parameterSlots":0,"returnSlots":1},"@_isAuthorized_1872":{"entryPoint":8947,"id":1872,"parameterSlots":3,"returnSlots":1},"@_isInitializing_491":{"entryPoint":9797,"id":491,"parameterSlots":0,"returnSlots":1},"@_mint_2085":{"entryPoint":9140,"id":2085,"parameterSlots":2,"returnSlots":0},"@_msgData_2576":{"entryPoint":4809,"id":2576,"parameterSlots":0,"returnSlots":2},"@_msgSender_2567":{"entryPoint":4226,"id":2567,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1816":{"entryPoint":7200,"id":1816,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2429":{"entryPoint":4015,"id":2429,"parameterSlots":1,"returnSlots":1},"@_revert_4180":{"entryPoint":9972,"id":4180,"parameterSlots":1,"returnSlots":0},"@_safeMint_2100":{"entryPoint":5161,"id":2100,"parameterSlots":2,"returnSlots":0},"@_safeMint_2126":{"entryPoint":8233,"id":2126,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_2400":{"entryPoint":6048,"id":2400,"parameterSlots":3,"returnSlots":0},"@_setAuthority_174":{"entryPoint":5870,"id":174,"parameterSlots":1,"returnSlots":0},"@_setImplementation_3436":{"entryPoint":9399,"id":3436,"parameterSlots":1,"returnSlots":0},"@_update_2035":{"entryPoint":4252,"id":2035,"parameterSlots":3,"returnSlots":1},"@_upgradeToAndCallUUPS_682":{"entryPoint":5448,"id":682,"parameterSlots":2,"returnSlots":0},"@approve_1649":{"entryPoint":1750,"id":1649,"parameterSlots":2,"returnSlots":0},"@authority_90":{"entryPoint":3015,"id":90,"parameterSlots":0,"returnSlots":1},"@balanceOf_1543":{"entryPoint":2249,"id":1543,"parameterSlots":1,"returnSlots":1},"@burn_2538":{"entryPoint":2126,"id":2538,"parameterSlots":1,"returnSlots":0},"@canCallWithDelay_2706":{"entryPoint":7939,"id":2706,"parameterSlots":4,"returnSlots":2},"@functionDelegateCall_4100":{"entryPoint":9604,"id":4100,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_4213":{"entryPoint":9389,"id":4213,"parameterSlots":1,"returnSlots":1},"@getApproved_1666":{"entryPoint":1722,"id":1666,"parameterSlots":1,"returnSlots":1},"@getImplementation_3409":{"entryPoint":8261,"id":3409,"parameterSlots":0,"returnSlots":1},"@initialize_7862":{"entryPoint":3071,"id":7862,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_1706":{"entryPoint":3707,"id":1706,"parameterSlots":2,"returnSlots":1},"@isConsumingScheduledOp_151":{"entryPoint":2686,"id":151,"parameterSlots":0,"returnSlots":1},"@log10_5432":{"entryPoint":8608,"id":5432,"parameterSlots":1,"returnSlots":1},"@name_1572":{"entryPoint":1561,"id":1572,"parameterSlots":0,"returnSlots":1},"@ownerOf_1556":{"entryPoint":2231,"id":1556,"parameterSlots":1,"returnSlots":1},"@proxiableUUID_573":{"entryPoint":2180,"id":573,"parameterSlots":0,"returnSlots":1},"@safeMint_7880":{"entryPoint":2030,"id":7880,"parameterSlots":1,"returnSlots":0},"@safeTransferFrom_1770":{"entryPoint":2094,"id":1770,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1796":{"entryPoint":2986,"id":1796,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1682":{"entryPoint":2907,"id":1682,"parameterSlots":2,"returnSlots":0},"@setAuthority_127":{"entryPoint":2450,"id":127,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1508":{"entryPoint":1335,"id":1508,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2624":{"entryPoint":3869,"id":2624,"parameterSlots":1,"returnSlots":1},"@symbol_1588":{"entryPoint":2746,"id":1588,"parameterSlots":0,"returnSlots":1},"@toString_4359":{"entryPoint":6994,"id":4359,"parameterSlots":1,"returnSlots":1},"@tokenURI_1624":{"entryPoint":3602,"id":1624,"parameterSlots":1,"returnSlots":1},"@transferFrom_1752":{"entryPoint":1772,"id":1752,"parameterSlots":3,"returnSlots":0},"@upgradeToAndCall_3470":{"entryPoint":8348,"id":3470,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_593":{"entryPoint":2149,"id":593,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_4140":{"entryPoint":9829,"id":4140,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":11050,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10640,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":11413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":13000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":12498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":10128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":12708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":11116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":13060,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10808,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11629,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10725,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":11498,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":11434,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":11162,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10661,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":13145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_boolt_uint32_fromMemory":{"entryPoint":13081,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":12519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":10149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":12729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10575,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10206,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":11264,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":11348,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12380,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":12037,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11306,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12139,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed":{"entryPoint":12862,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12632,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12425,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":12821,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":11789,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":11279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":11363,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":12052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11321,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10959,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":10041,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":10986,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":13190,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":12244,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12564,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10248,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":12363,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12917,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10259,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12079,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":12185,"id":null,"parameterSlots":4,"returnSlots":2},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":13454,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":10557,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10194,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11254,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":10061,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":11963,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10525,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10426,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":13021,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":11973,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":13419,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4":{"entryPoint":12268,"id":null,"parameterSlots":2,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":12003,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":13309,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":13595,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":11035,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":10276,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":13211,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11740,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":13567,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":10910,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":11993,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11891,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":13537,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11844,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12774,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11693,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10863,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":13343,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10853,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":12180,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":12175,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":10858,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10056,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10051,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10318,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":12255,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":13524,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":13395,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":13227,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":13353,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11390,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":12475,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":10105,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10436,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":13037,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":13390,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:27232:32","nodeType":"YulBlock","src":"0:27232:32","statements":[{"body":{"nativeSrc":"47:35:32","nodeType":"YulBlock","src":"47:35:32","statements":[{"nativeSrc":"57:19:32","nodeType":"YulAssignment","src":"57:19:32","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:32","nodeType":"YulLiteral","src":"73:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:32","nodeType":"YulIdentifier","src":"67:5:32"},"nativeSrc":"67:9:32","nodeType":"YulFunctionCall","src":"67:9:32"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:32","nodeType":"YulIdentifier","src":"57:6:32"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:32","nodeType":"YulTypedName","src":"40:6:32","type":""}],"src":"7:75:32"},{"body":{"nativeSrc":"177:28:32","nodeType":"YulBlock","src":"177:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:32","nodeType":"YulLiteral","src":"194:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:32","nodeType":"YulLiteral","src":"197:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:32","nodeType":"YulIdentifier","src":"187:6:32"},"nativeSrc":"187:12:32","nodeType":"YulFunctionCall","src":"187:12:32"},"nativeSrc":"187:12:32","nodeType":"YulExpressionStatement","src":"187:12:32"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:32","nodeType":"YulFunctionDefinition","src":"88:117:32"},{"body":{"nativeSrc":"300:28:32","nodeType":"YulBlock","src":"300:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:32","nodeType":"YulLiteral","src":"317:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:32","nodeType":"YulLiteral","src":"320:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:32","nodeType":"YulIdentifier","src":"310:6:32"},"nativeSrc":"310:12:32","nodeType":"YulFunctionCall","src":"310:12:32"},"nativeSrc":"310:12:32","nodeType":"YulExpressionStatement","src":"310:12:32"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:32","nodeType":"YulFunctionDefinition","src":"211:117:32"},{"body":{"nativeSrc":"378:105:32","nodeType":"YulBlock","src":"378:105:32","statements":[{"nativeSrc":"388:89:32","nodeType":"YulAssignment","src":"388:89:32","value":{"arguments":[{"name":"value","nativeSrc":"403:5:32","nodeType":"YulIdentifier","src":"403:5:32"},{"kind":"number","nativeSrc":"410:66:32","nodeType":"YulLiteral","src":"410:66:32","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:32","nodeType":"YulIdentifier","src":"399:3:32"},"nativeSrc":"399:78:32","nodeType":"YulFunctionCall","src":"399:78:32"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:32","nodeType":"YulIdentifier","src":"388:7:32"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:32","nodeType":"YulTypedName","src":"360:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:32","nodeType":"YulTypedName","src":"370:7:32","type":""}],"src":"334:149:32"},{"body":{"nativeSrc":"531:78:32","nodeType":"YulBlock","src":"531:78:32","statements":[{"body":{"nativeSrc":"587:16:32","nodeType":"YulBlock","src":"587:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:32","nodeType":"YulLiteral","src":"596:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:32","nodeType":"YulLiteral","src":"599:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:32","nodeType":"YulIdentifier","src":"589:6:32"},"nativeSrc":"589:12:32","nodeType":"YulFunctionCall","src":"589:12:32"},"nativeSrc":"589:12:32","nodeType":"YulExpressionStatement","src":"589:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:32","nodeType":"YulIdentifier","src":"554:5:32"},{"arguments":[{"name":"value","nativeSrc":"578:5:32","nodeType":"YulIdentifier","src":"578:5:32"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:32","nodeType":"YulIdentifier","src":"561:16:32"},"nativeSrc":"561:23:32","nodeType":"YulFunctionCall","src":"561:23:32"}],"functionName":{"name":"eq","nativeSrc":"551:2:32","nodeType":"YulIdentifier","src":"551:2:32"},"nativeSrc":"551:34:32","nodeType":"YulFunctionCall","src":"551:34:32"}],"functionName":{"name":"iszero","nativeSrc":"544:6:32","nodeType":"YulIdentifier","src":"544:6:32"},"nativeSrc":"544:42:32","nodeType":"YulFunctionCall","src":"544:42:32"},"nativeSrc":"541:62:32","nodeType":"YulIf","src":"541:62:32"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:32","nodeType":"YulTypedName","src":"524:5:32","type":""}],"src":"489:120:32"},{"body":{"nativeSrc":"666:86:32","nodeType":"YulBlock","src":"666:86:32","statements":[{"nativeSrc":"676:29:32","nodeType":"YulAssignment","src":"676:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:32","nodeType":"YulIdentifier","src":"698:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:32","nodeType":"YulIdentifier","src":"685:12:32"},"nativeSrc":"685:20:32","nodeType":"YulFunctionCall","src":"685:20:32"},"variableNames":[{"name":"value","nativeSrc":"676:5:32","nodeType":"YulIdentifier","src":"676:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:32","nodeType":"YulIdentifier","src":"740:5:32"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:32","nodeType":"YulIdentifier","src":"714:25:32"},"nativeSrc":"714:32:32","nodeType":"YulFunctionCall","src":"714:32:32"},"nativeSrc":"714:32:32","nodeType":"YulExpressionStatement","src":"714:32:32"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:32","nodeType":"YulTypedName","src":"644:6:32","type":""},{"name":"end","nativeSrc":"652:3:32","nodeType":"YulTypedName","src":"652:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:32","nodeType":"YulTypedName","src":"660:5:32","type":""}],"src":"615:137:32"},{"body":{"nativeSrc":"823:262:32","nodeType":"YulBlock","src":"823:262:32","statements":[{"body":{"nativeSrc":"869:83:32","nodeType":"YulBlock","src":"869:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:32","nodeType":"YulIdentifier","src":"871:77:32"},"nativeSrc":"871:79:32","nodeType":"YulFunctionCall","src":"871:79:32"},"nativeSrc":"871:79:32","nodeType":"YulExpressionStatement","src":"871:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:32","nodeType":"YulIdentifier","src":"844:7:32"},{"name":"headStart","nativeSrc":"853:9:32","nodeType":"YulIdentifier","src":"853:9:32"}],"functionName":{"name":"sub","nativeSrc":"840:3:32","nodeType":"YulIdentifier","src":"840:3:32"},"nativeSrc":"840:23:32","nodeType":"YulFunctionCall","src":"840:23:32"},{"kind":"number","nativeSrc":"865:2:32","nodeType":"YulLiteral","src":"865:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:32","nodeType":"YulIdentifier","src":"836:3:32"},"nativeSrc":"836:32:32","nodeType":"YulFunctionCall","src":"836:32:32"},"nativeSrc":"833:119:32","nodeType":"YulIf","src":"833:119:32"},{"nativeSrc":"962:116:32","nodeType":"YulBlock","src":"962:116:32","statements":[{"nativeSrc":"977:15:32","nodeType":"YulVariableDeclaration","src":"977:15:32","value":{"kind":"number","nativeSrc":"991:1:32","nodeType":"YulLiteral","src":"991:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:32","nodeType":"YulTypedName","src":"981:6:32","type":""}]},{"nativeSrc":"1006:62:32","nodeType":"YulAssignment","src":"1006:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:32","nodeType":"YulIdentifier","src":"1040:9:32"},{"name":"offset","nativeSrc":"1051:6:32","nodeType":"YulIdentifier","src":"1051:6:32"}],"functionName":{"name":"add","nativeSrc":"1036:3:32","nodeType":"YulIdentifier","src":"1036:3:32"},"nativeSrc":"1036:22:32","nodeType":"YulFunctionCall","src":"1036:22:32"},{"name":"dataEnd","nativeSrc":"1060:7:32","nodeType":"YulIdentifier","src":"1060:7:32"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:32","nodeType":"YulIdentifier","src":"1016:19:32"},"nativeSrc":"1016:52:32","nodeType":"YulFunctionCall","src":"1016:52:32"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:32","nodeType":"YulIdentifier","src":"1006:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:32","nodeType":"YulTypedName","src":"793:9:32","type":""},{"name":"dataEnd","nativeSrc":"804:7:32","nodeType":"YulTypedName","src":"804:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:32","nodeType":"YulTypedName","src":"816:6:32","type":""}],"src":"758:327:32"},{"body":{"nativeSrc":"1133:48:32","nodeType":"YulBlock","src":"1133:48:32","statements":[{"nativeSrc":"1143:32:32","nodeType":"YulAssignment","src":"1143:32:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:32","nodeType":"YulIdentifier","src":"1168:5:32"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:32","nodeType":"YulIdentifier","src":"1161:6:32"},"nativeSrc":"1161:13:32","nodeType":"YulFunctionCall","src":"1161:13:32"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:32","nodeType":"YulIdentifier","src":"1154:6:32"},"nativeSrc":"1154:21:32","nodeType":"YulFunctionCall","src":"1154:21:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:32","nodeType":"YulIdentifier","src":"1143:7:32"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:32","nodeType":"YulTypedName","src":"1115:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:32","nodeType":"YulTypedName","src":"1125:7:32","type":""}],"src":"1091:90:32"},{"body":{"nativeSrc":"1246:50:32","nodeType":"YulBlock","src":"1246:50:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:32","nodeType":"YulIdentifier","src":"1263:3:32"},{"arguments":[{"name":"value","nativeSrc":"1283:5:32","nodeType":"YulIdentifier","src":"1283:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:32","nodeType":"YulIdentifier","src":"1268:14:32"},"nativeSrc":"1268:21:32","nodeType":"YulFunctionCall","src":"1268:21:32"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:32","nodeType":"YulIdentifier","src":"1256:6:32"},"nativeSrc":"1256:34:32","nodeType":"YulFunctionCall","src":"1256:34:32"},"nativeSrc":"1256:34:32","nodeType":"YulExpressionStatement","src":"1256:34:32"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:32","nodeType":"YulTypedName","src":"1234:5:32","type":""},{"name":"pos","nativeSrc":"1241:3:32","nodeType":"YulTypedName","src":"1241:3:32","type":""}],"src":"1187:109:32"},{"body":{"nativeSrc":"1394:118:32","nodeType":"YulBlock","src":"1394:118:32","statements":[{"nativeSrc":"1404:26:32","nodeType":"YulAssignment","src":"1404:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:32","nodeType":"YulIdentifier","src":"1416:9:32"},{"kind":"number","nativeSrc":"1427:2:32","nodeType":"YulLiteral","src":"1427:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:32","nodeType":"YulIdentifier","src":"1412:3:32"},"nativeSrc":"1412:18:32","nodeType":"YulFunctionCall","src":"1412:18:32"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:32","nodeType":"YulIdentifier","src":"1404:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:32","nodeType":"YulIdentifier","src":"1478:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:32","nodeType":"YulIdentifier","src":"1491:9:32"},{"kind":"number","nativeSrc":"1502:1:32","nodeType":"YulLiteral","src":"1502:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:32","nodeType":"YulIdentifier","src":"1487:3:32"},"nativeSrc":"1487:17:32","nodeType":"YulFunctionCall","src":"1487:17:32"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:32","nodeType":"YulIdentifier","src":"1440:37:32"},"nativeSrc":"1440:65:32","nodeType":"YulFunctionCall","src":"1440:65:32"},"nativeSrc":"1440:65:32","nodeType":"YulExpressionStatement","src":"1440:65:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:32","nodeType":"YulTypedName","src":"1366:9:32","type":""},{"name":"value0","nativeSrc":"1378:6:32","nodeType":"YulTypedName","src":"1378:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:32","nodeType":"YulTypedName","src":"1389:4:32","type":""}],"src":"1302:210:32"},{"body":{"nativeSrc":"1577:40:32","nodeType":"YulBlock","src":"1577:40:32","statements":[{"nativeSrc":"1588:22:32","nodeType":"YulAssignment","src":"1588:22:32","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:32","nodeType":"YulIdentifier","src":"1604:5:32"}],"functionName":{"name":"mload","nativeSrc":"1598:5:32","nodeType":"YulIdentifier","src":"1598:5:32"},"nativeSrc":"1598:12:32","nodeType":"YulFunctionCall","src":"1598:12:32"},"variableNames":[{"name":"length","nativeSrc":"1588:6:32","nodeType":"YulIdentifier","src":"1588:6:32"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:32","nodeType":"YulTypedName","src":"1560:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:32","nodeType":"YulTypedName","src":"1570:6:32","type":""}],"src":"1518:99:32"},{"body":{"nativeSrc":"1719:73:32","nodeType":"YulBlock","src":"1719:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:32","nodeType":"YulIdentifier","src":"1736:3:32"},{"name":"length","nativeSrc":"1741:6:32","nodeType":"YulIdentifier","src":"1741:6:32"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:32","nodeType":"YulIdentifier","src":"1729:6:32"},"nativeSrc":"1729:19:32","nodeType":"YulFunctionCall","src":"1729:19:32"},"nativeSrc":"1729:19:32","nodeType":"YulExpressionStatement","src":"1729:19:32"},{"nativeSrc":"1757:29:32","nodeType":"YulAssignment","src":"1757:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:32","nodeType":"YulIdentifier","src":"1776:3:32"},{"kind":"number","nativeSrc":"1781:4:32","nodeType":"YulLiteral","src":"1781:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:32","nodeType":"YulIdentifier","src":"1772:3:32"},"nativeSrc":"1772:14:32","nodeType":"YulFunctionCall","src":"1772:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:32","nodeType":"YulIdentifier","src":"1757:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:32","nodeType":"YulTypedName","src":"1691:3:32","type":""},{"name":"length","nativeSrc":"1696:6:32","nodeType":"YulTypedName","src":"1696:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:32","nodeType":"YulTypedName","src":"1707:11:32","type":""}],"src":"1623:169:32"},{"body":{"nativeSrc":"1860:184:32","nodeType":"YulBlock","src":"1860:184:32","statements":[{"nativeSrc":"1870:10:32","nodeType":"YulVariableDeclaration","src":"1870:10:32","value":{"kind":"number","nativeSrc":"1879:1:32","nodeType":"YulLiteral","src":"1879:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1874:1:32","nodeType":"YulTypedName","src":"1874:1:32","type":""}]},{"body":{"nativeSrc":"1939:63:32","nodeType":"YulBlock","src":"1939:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1964:3:32","nodeType":"YulIdentifier","src":"1964:3:32"},{"name":"i","nativeSrc":"1969:1:32","nodeType":"YulIdentifier","src":"1969:1:32"}],"functionName":{"name":"add","nativeSrc":"1960:3:32","nodeType":"YulIdentifier","src":"1960:3:32"},"nativeSrc":"1960:11:32","nodeType":"YulFunctionCall","src":"1960:11:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1983:3:32","nodeType":"YulIdentifier","src":"1983:3:32"},{"name":"i","nativeSrc":"1988:1:32","nodeType":"YulIdentifier","src":"1988:1:32"}],"functionName":{"name":"add","nativeSrc":"1979:3:32","nodeType":"YulIdentifier","src":"1979:3:32"},"nativeSrc":"1979:11:32","nodeType":"YulFunctionCall","src":"1979:11:32"}],"functionName":{"name":"mload","nativeSrc":"1973:5:32","nodeType":"YulIdentifier","src":"1973:5:32"},"nativeSrc":"1973:18:32","nodeType":"YulFunctionCall","src":"1973:18:32"}],"functionName":{"name":"mstore","nativeSrc":"1953:6:32","nodeType":"YulIdentifier","src":"1953:6:32"},"nativeSrc":"1953:39:32","nodeType":"YulFunctionCall","src":"1953:39:32"},"nativeSrc":"1953:39:32","nodeType":"YulExpressionStatement","src":"1953:39:32"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1900:1:32","nodeType":"YulIdentifier","src":"1900:1:32"},{"name":"length","nativeSrc":"1903:6:32","nodeType":"YulIdentifier","src":"1903:6:32"}],"functionName":{"name":"lt","nativeSrc":"1897:2:32","nodeType":"YulIdentifier","src":"1897:2:32"},"nativeSrc":"1897:13:32","nodeType":"YulFunctionCall","src":"1897:13:32"},"nativeSrc":"1889:113:32","nodeType":"YulForLoop","post":{"nativeSrc":"1911:19:32","nodeType":"YulBlock","src":"1911:19:32","statements":[{"nativeSrc":"1913:15:32","nodeType":"YulAssignment","src":"1913:15:32","value":{"arguments":[{"name":"i","nativeSrc":"1922:1:32","nodeType":"YulIdentifier","src":"1922:1:32"},{"kind":"number","nativeSrc":"1925:2:32","nodeType":"YulLiteral","src":"1925:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1918:3:32","nodeType":"YulIdentifier","src":"1918:3:32"},"nativeSrc":"1918:10:32","nodeType":"YulFunctionCall","src":"1918:10:32"},"variableNames":[{"name":"i","nativeSrc":"1913:1:32","nodeType":"YulIdentifier","src":"1913:1:32"}]}]},"pre":{"nativeSrc":"1893:3:32","nodeType":"YulBlock","src":"1893:3:32","statements":[]},"src":"1889:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2022:3:32","nodeType":"YulIdentifier","src":"2022:3:32"},{"name":"length","nativeSrc":"2027:6:32","nodeType":"YulIdentifier","src":"2027:6:32"}],"functionName":{"name":"add","nativeSrc":"2018:3:32","nodeType":"YulIdentifier","src":"2018:3:32"},"nativeSrc":"2018:16:32","nodeType":"YulFunctionCall","src":"2018:16:32"},{"kind":"number","nativeSrc":"2036:1:32","nodeType":"YulLiteral","src":"2036:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2011:6:32","nodeType":"YulIdentifier","src":"2011:6:32"},"nativeSrc":"2011:27:32","nodeType":"YulFunctionCall","src":"2011:27:32"},"nativeSrc":"2011:27:32","nodeType":"YulExpressionStatement","src":"2011:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:246:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:32","nodeType":"YulTypedName","src":"1842:3:32","type":""},{"name":"dst","nativeSrc":"1847:3:32","nodeType":"YulTypedName","src":"1847:3:32","type":""},{"name":"length","nativeSrc":"1852:6:32","nodeType":"YulTypedName","src":"1852:6:32","type":""}],"src":"1798:246:32"},{"body":{"nativeSrc":"2098:54:32","nodeType":"YulBlock","src":"2098:54:32","statements":[{"nativeSrc":"2108:38:32","nodeType":"YulAssignment","src":"2108:38:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2126:5:32","nodeType":"YulIdentifier","src":"2126:5:32"},{"kind":"number","nativeSrc":"2133:2:32","nodeType":"YulLiteral","src":"2133:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2122:3:32","nodeType":"YulIdentifier","src":"2122:3:32"},"nativeSrc":"2122:14:32","nodeType":"YulFunctionCall","src":"2122:14:32"},{"arguments":[{"kind":"number","nativeSrc":"2142:2:32","nodeType":"YulLiteral","src":"2142:2:32","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2138:3:32","nodeType":"YulIdentifier","src":"2138:3:32"},"nativeSrc":"2138:7:32","nodeType":"YulFunctionCall","src":"2138:7:32"}],"functionName":{"name":"and","nativeSrc":"2118:3:32","nodeType":"YulIdentifier","src":"2118:3:32"},"nativeSrc":"2118:28:32","nodeType":"YulFunctionCall","src":"2118:28:32"},"variableNames":[{"name":"result","nativeSrc":"2108:6:32","nodeType":"YulIdentifier","src":"2108:6:32"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2050:102:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2081:5:32","nodeType":"YulTypedName","src":"2081:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2091:6:32","nodeType":"YulTypedName","src":"2091:6:32","type":""}],"src":"2050:102:32"},{"body":{"nativeSrc":"2250:285:32","nodeType":"YulBlock","src":"2250:285:32","statements":[{"nativeSrc":"2260:53:32","nodeType":"YulVariableDeclaration","src":"2260:53:32","value":{"arguments":[{"name":"value","nativeSrc":"2307:5:32","nodeType":"YulIdentifier","src":"2307:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2274:32:32","nodeType":"YulIdentifier","src":"2274:32:32"},"nativeSrc":"2274:39:32","nodeType":"YulFunctionCall","src":"2274:39:32"},"variables":[{"name":"length","nativeSrc":"2264:6:32","nodeType":"YulTypedName","src":"2264:6:32","type":""}]},{"nativeSrc":"2322:78:32","nodeType":"YulAssignment","src":"2322:78:32","value":{"arguments":[{"name":"pos","nativeSrc":"2388:3:32","nodeType":"YulIdentifier","src":"2388:3:32"},{"name":"length","nativeSrc":"2393:6:32","nodeType":"YulIdentifier","src":"2393:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2329:58:32","nodeType":"YulIdentifier","src":"2329:58:32"},"nativeSrc":"2329:71:32","nodeType":"YulFunctionCall","src":"2329:71:32"},"variableNames":[{"name":"pos","nativeSrc":"2322:3:32","nodeType":"YulIdentifier","src":"2322:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2448:5:32","nodeType":"YulIdentifier","src":"2448:5:32"},{"kind":"number","nativeSrc":"2455:4:32","nodeType":"YulLiteral","src":"2455:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2444:3:32","nodeType":"YulIdentifier","src":"2444:3:32"},"nativeSrc":"2444:16:32","nodeType":"YulFunctionCall","src":"2444:16:32"},{"name":"pos","nativeSrc":"2462:3:32","nodeType":"YulIdentifier","src":"2462:3:32"},{"name":"length","nativeSrc":"2467:6:32","nodeType":"YulIdentifier","src":"2467:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2409:34:32","nodeType":"YulIdentifier","src":"2409:34:32"},"nativeSrc":"2409:65:32","nodeType":"YulFunctionCall","src":"2409:65:32"},"nativeSrc":"2409:65:32","nodeType":"YulExpressionStatement","src":"2409:65:32"},{"nativeSrc":"2483:46:32","nodeType":"YulAssignment","src":"2483:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"2494:3:32","nodeType":"YulIdentifier","src":"2494:3:32"},{"arguments":[{"name":"length","nativeSrc":"2521:6:32","nodeType":"YulIdentifier","src":"2521:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2499:21:32","nodeType":"YulIdentifier","src":"2499:21:32"},"nativeSrc":"2499:29:32","nodeType":"YulFunctionCall","src":"2499:29:32"}],"functionName":{"name":"add","nativeSrc":"2490:3:32","nodeType":"YulIdentifier","src":"2490:3:32"},"nativeSrc":"2490:39:32","nodeType":"YulFunctionCall","src":"2490:39:32"},"variableNames":[{"name":"end","nativeSrc":"2483:3:32","nodeType":"YulIdentifier","src":"2483:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2158:377:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2231:5:32","nodeType":"YulTypedName","src":"2231:5:32","type":""},{"name":"pos","nativeSrc":"2238:3:32","nodeType":"YulTypedName","src":"2238:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2246:3:32","nodeType":"YulTypedName","src":"2246:3:32","type":""}],"src":"2158:377:32"},{"body":{"nativeSrc":"2659:195:32","nodeType":"YulBlock","src":"2659:195:32","statements":[{"nativeSrc":"2669:26:32","nodeType":"YulAssignment","src":"2669:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"2681:9:32","nodeType":"YulIdentifier","src":"2681:9:32"},{"kind":"number","nativeSrc":"2692:2:32","nodeType":"YulLiteral","src":"2692:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2677:3:32","nodeType":"YulIdentifier","src":"2677:3:32"},"nativeSrc":"2677:18:32","nodeType":"YulFunctionCall","src":"2677:18:32"},"variableNames":[{"name":"tail","nativeSrc":"2669:4:32","nodeType":"YulIdentifier","src":"2669:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2716:9:32","nodeType":"YulIdentifier","src":"2716:9:32"},{"kind":"number","nativeSrc":"2727:1:32","nodeType":"YulLiteral","src":"2727:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2712:3:32","nodeType":"YulIdentifier","src":"2712:3:32"},"nativeSrc":"2712:17:32","nodeType":"YulFunctionCall","src":"2712:17:32"},{"arguments":[{"name":"tail","nativeSrc":"2735:4:32","nodeType":"YulIdentifier","src":"2735:4:32"},{"name":"headStart","nativeSrc":"2741:9:32","nodeType":"YulIdentifier","src":"2741:9:32"}],"functionName":{"name":"sub","nativeSrc":"2731:3:32","nodeType":"YulIdentifier","src":"2731:3:32"},"nativeSrc":"2731:20:32","nodeType":"YulFunctionCall","src":"2731:20:32"}],"functionName":{"name":"mstore","nativeSrc":"2705:6:32","nodeType":"YulIdentifier","src":"2705:6:32"},"nativeSrc":"2705:47:32","nodeType":"YulFunctionCall","src":"2705:47:32"},"nativeSrc":"2705:47:32","nodeType":"YulExpressionStatement","src":"2705:47:32"},{"nativeSrc":"2761:86:32","nodeType":"YulAssignment","src":"2761:86:32","value":{"arguments":[{"name":"value0","nativeSrc":"2833:6:32","nodeType":"YulIdentifier","src":"2833:6:32"},{"name":"tail","nativeSrc":"2842:4:32","nodeType":"YulIdentifier","src":"2842:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2769:63:32","nodeType":"YulIdentifier","src":"2769:63:32"},"nativeSrc":"2769:78:32","nodeType":"YulFunctionCall","src":"2769:78:32"},"variableNames":[{"name":"tail","nativeSrc":"2761:4:32","nodeType":"YulIdentifier","src":"2761:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2541:313:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2631:9:32","nodeType":"YulTypedName","src":"2631:9:32","type":""},{"name":"value0","nativeSrc":"2643:6:32","nodeType":"YulTypedName","src":"2643:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2654:4:32","nodeType":"YulTypedName","src":"2654:4:32","type":""}],"src":"2541:313:32"},{"body":{"nativeSrc":"2905:32:32","nodeType":"YulBlock","src":"2905:32:32","statements":[{"nativeSrc":"2915:16:32","nodeType":"YulAssignment","src":"2915:16:32","value":{"name":"value","nativeSrc":"2926:5:32","nodeType":"YulIdentifier","src":"2926:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"2915:7:32","nodeType":"YulIdentifier","src":"2915:7:32"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2860:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2887:5:32","nodeType":"YulTypedName","src":"2887:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2897:7:32","nodeType":"YulTypedName","src":"2897:7:32","type":""}],"src":"2860:77:32"},{"body":{"nativeSrc":"2986:79:32","nodeType":"YulBlock","src":"2986:79:32","statements":[{"body":{"nativeSrc":"3043:16:32","nodeType":"YulBlock","src":"3043:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3052:1:32","nodeType":"YulLiteral","src":"3052:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"3055:1:32","nodeType":"YulLiteral","src":"3055:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3045:6:32","nodeType":"YulIdentifier","src":"3045:6:32"},"nativeSrc":"3045:12:32","nodeType":"YulFunctionCall","src":"3045:12:32"},"nativeSrc":"3045:12:32","nodeType":"YulExpressionStatement","src":"3045:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3009:5:32","nodeType":"YulIdentifier","src":"3009:5:32"},{"arguments":[{"name":"value","nativeSrc":"3034:5:32","nodeType":"YulIdentifier","src":"3034:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3016:17:32","nodeType":"YulIdentifier","src":"3016:17:32"},"nativeSrc":"3016:24:32","nodeType":"YulFunctionCall","src":"3016:24:32"}],"functionName":{"name":"eq","nativeSrc":"3006:2:32","nodeType":"YulIdentifier","src":"3006:2:32"},"nativeSrc":"3006:35:32","nodeType":"YulFunctionCall","src":"3006:35:32"}],"functionName":{"name":"iszero","nativeSrc":"2999:6:32","nodeType":"YulIdentifier","src":"2999:6:32"},"nativeSrc":"2999:43:32","nodeType":"YulFunctionCall","src":"2999:43:32"},"nativeSrc":"2996:63:32","nodeType":"YulIf","src":"2996:63:32"}]},"name":"validator_revert_t_uint256","nativeSrc":"2943:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2979:5:32","nodeType":"YulTypedName","src":"2979:5:32","type":""}],"src":"2943:122:32"},{"body":{"nativeSrc":"3123:87:32","nodeType":"YulBlock","src":"3123:87:32","statements":[{"nativeSrc":"3133:29:32","nodeType":"YulAssignment","src":"3133:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"3155:6:32","nodeType":"YulIdentifier","src":"3155:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"3142:12:32","nodeType":"YulIdentifier","src":"3142:12:32"},"nativeSrc":"3142:20:32","nodeType":"YulFunctionCall","src":"3142:20:32"},"variableNames":[{"name":"value","nativeSrc":"3133:5:32","nodeType":"YulIdentifier","src":"3133:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3198:5:32","nodeType":"YulIdentifier","src":"3198:5:32"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3171:26:32","nodeType":"YulIdentifier","src":"3171:26:32"},"nativeSrc":"3171:33:32","nodeType":"YulFunctionCall","src":"3171:33:32"},"nativeSrc":"3171:33:32","nodeType":"YulExpressionStatement","src":"3171:33:32"}]},"name":"abi_decode_t_uint256","nativeSrc":"3071:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3101:6:32","nodeType":"YulTypedName","src":"3101:6:32","type":""},{"name":"end","nativeSrc":"3109:3:32","nodeType":"YulTypedName","src":"3109:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3117:5:32","nodeType":"YulTypedName","src":"3117:5:32","type":""}],"src":"3071:139:32"},{"body":{"nativeSrc":"3282:263:32","nodeType":"YulBlock","src":"3282:263:32","statements":[{"body":{"nativeSrc":"3328:83:32","nodeType":"YulBlock","src":"3328:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3330:77:32","nodeType":"YulIdentifier","src":"3330:77:32"},"nativeSrc":"3330:79:32","nodeType":"YulFunctionCall","src":"3330:79:32"},"nativeSrc":"3330:79:32","nodeType":"YulExpressionStatement","src":"3330:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3303:7:32","nodeType":"YulIdentifier","src":"3303:7:32"},{"name":"headStart","nativeSrc":"3312:9:32","nodeType":"YulIdentifier","src":"3312:9:32"}],"functionName":{"name":"sub","nativeSrc":"3299:3:32","nodeType":"YulIdentifier","src":"3299:3:32"},"nativeSrc":"3299:23:32","nodeType":"YulFunctionCall","src":"3299:23:32"},{"kind":"number","nativeSrc":"3324:2:32","nodeType":"YulLiteral","src":"3324:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3295:3:32","nodeType":"YulIdentifier","src":"3295:3:32"},"nativeSrc":"3295:32:32","nodeType":"YulFunctionCall","src":"3295:32:32"},"nativeSrc":"3292:119:32","nodeType":"YulIf","src":"3292:119:32"},{"nativeSrc":"3421:117:32","nodeType":"YulBlock","src":"3421:117:32","statements":[{"nativeSrc":"3436:15:32","nodeType":"YulVariableDeclaration","src":"3436:15:32","value":{"kind":"number","nativeSrc":"3450:1:32","nodeType":"YulLiteral","src":"3450:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3440:6:32","nodeType":"YulTypedName","src":"3440:6:32","type":""}]},{"nativeSrc":"3465:63:32","nodeType":"YulAssignment","src":"3465:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3500:9:32","nodeType":"YulIdentifier","src":"3500:9:32"},{"name":"offset","nativeSrc":"3511:6:32","nodeType":"YulIdentifier","src":"3511:6:32"}],"functionName":{"name":"add","nativeSrc":"3496:3:32","nodeType":"YulIdentifier","src":"3496:3:32"},"nativeSrc":"3496:22:32","nodeType":"YulFunctionCall","src":"3496:22:32"},{"name":"dataEnd","nativeSrc":"3520:7:32","nodeType":"YulIdentifier","src":"3520:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3475:20:32","nodeType":"YulIdentifier","src":"3475:20:32"},"nativeSrc":"3475:53:32","nodeType":"YulFunctionCall","src":"3475:53:32"},"variableNames":[{"name":"value0","nativeSrc":"3465:6:32","nodeType":"YulIdentifier","src":"3465:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3216:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3252:9:32","nodeType":"YulTypedName","src":"3252:9:32","type":""},{"name":"dataEnd","nativeSrc":"3263:7:32","nodeType":"YulTypedName","src":"3263:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3275:6:32","nodeType":"YulTypedName","src":"3275:6:32","type":""}],"src":"3216:329:32"},{"body":{"nativeSrc":"3596:81:32","nodeType":"YulBlock","src":"3596:81:32","statements":[{"nativeSrc":"3606:65:32","nodeType":"YulAssignment","src":"3606:65:32","value":{"arguments":[{"name":"value","nativeSrc":"3621:5:32","nodeType":"YulIdentifier","src":"3621:5:32"},{"kind":"number","nativeSrc":"3628:42:32","nodeType":"YulLiteral","src":"3628:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3617:3:32","nodeType":"YulIdentifier","src":"3617:3:32"},"nativeSrc":"3617:54:32","nodeType":"YulFunctionCall","src":"3617:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3606:7:32","nodeType":"YulIdentifier","src":"3606:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3551:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3578:5:32","nodeType":"YulTypedName","src":"3578:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3588:7:32","nodeType":"YulTypedName","src":"3588:7:32","type":""}],"src":"3551:126:32"},{"body":{"nativeSrc":"3728:51:32","nodeType":"YulBlock","src":"3728:51:32","statements":[{"nativeSrc":"3738:35:32","nodeType":"YulAssignment","src":"3738:35:32","value":{"arguments":[{"name":"value","nativeSrc":"3767:5:32","nodeType":"YulIdentifier","src":"3767:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3749:17:32","nodeType":"YulIdentifier","src":"3749:17:32"},"nativeSrc":"3749:24:32","nodeType":"YulFunctionCall","src":"3749:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3738:7:32","nodeType":"YulIdentifier","src":"3738:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"3683:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3710:5:32","nodeType":"YulTypedName","src":"3710:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3720:7:32","nodeType":"YulTypedName","src":"3720:7:32","type":""}],"src":"3683:96:32"},{"body":{"nativeSrc":"3850:53:32","nodeType":"YulBlock","src":"3850:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3867:3:32","nodeType":"YulIdentifier","src":"3867:3:32"},{"arguments":[{"name":"value","nativeSrc":"3890:5:32","nodeType":"YulIdentifier","src":"3890:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3872:17:32","nodeType":"YulIdentifier","src":"3872:17:32"},"nativeSrc":"3872:24:32","nodeType":"YulFunctionCall","src":"3872:24:32"}],"functionName":{"name":"mstore","nativeSrc":"3860:6:32","nodeType":"YulIdentifier","src":"3860:6:32"},"nativeSrc":"3860:37:32","nodeType":"YulFunctionCall","src":"3860:37:32"},"nativeSrc":"3860:37:32","nodeType":"YulExpressionStatement","src":"3860:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3785:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3838:5:32","nodeType":"YulTypedName","src":"3838:5:32","type":""},{"name":"pos","nativeSrc":"3845:3:32","nodeType":"YulTypedName","src":"3845:3:32","type":""}],"src":"3785:118:32"},{"body":{"nativeSrc":"4007:124:32","nodeType":"YulBlock","src":"4007:124:32","statements":[{"nativeSrc":"4017:26:32","nodeType":"YulAssignment","src":"4017:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"4029:9:32","nodeType":"YulIdentifier","src":"4029:9:32"},{"kind":"number","nativeSrc":"4040:2:32","nodeType":"YulLiteral","src":"4040:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4025:3:32","nodeType":"YulIdentifier","src":"4025:3:32"},"nativeSrc":"4025:18:32","nodeType":"YulFunctionCall","src":"4025:18:32"},"variableNames":[{"name":"tail","nativeSrc":"4017:4:32","nodeType":"YulIdentifier","src":"4017:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4097:6:32","nodeType":"YulIdentifier","src":"4097:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"4110:9:32","nodeType":"YulIdentifier","src":"4110:9:32"},{"kind":"number","nativeSrc":"4121:1:32","nodeType":"YulLiteral","src":"4121:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4106:3:32","nodeType":"YulIdentifier","src":"4106:3:32"},"nativeSrc":"4106:17:32","nodeType":"YulFunctionCall","src":"4106:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4053:43:32","nodeType":"YulIdentifier","src":"4053:43:32"},"nativeSrc":"4053:71:32","nodeType":"YulFunctionCall","src":"4053:71:32"},"nativeSrc":"4053:71:32","nodeType":"YulExpressionStatement","src":"4053:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3909:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3979:9:32","nodeType":"YulTypedName","src":"3979:9:32","type":""},{"name":"value0","nativeSrc":"3991:6:32","nodeType":"YulTypedName","src":"3991:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4002:4:32","nodeType":"YulTypedName","src":"4002:4:32","type":""}],"src":"3909:222:32"},{"body":{"nativeSrc":"4180:79:32","nodeType":"YulBlock","src":"4180:79:32","statements":[{"body":{"nativeSrc":"4237:16:32","nodeType":"YulBlock","src":"4237:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4246:1:32","nodeType":"YulLiteral","src":"4246:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"4249:1:32","nodeType":"YulLiteral","src":"4249:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4239:6:32","nodeType":"YulIdentifier","src":"4239:6:32"},"nativeSrc":"4239:12:32","nodeType":"YulFunctionCall","src":"4239:12:32"},"nativeSrc":"4239:12:32","nodeType":"YulExpressionStatement","src":"4239:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4203:5:32","nodeType":"YulIdentifier","src":"4203:5:32"},{"arguments":[{"name":"value","nativeSrc":"4228:5:32","nodeType":"YulIdentifier","src":"4228:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4210:17:32","nodeType":"YulIdentifier","src":"4210:17:32"},"nativeSrc":"4210:24:32","nodeType":"YulFunctionCall","src":"4210:24:32"}],"functionName":{"name":"eq","nativeSrc":"4200:2:32","nodeType":"YulIdentifier","src":"4200:2:32"},"nativeSrc":"4200:35:32","nodeType":"YulFunctionCall","src":"4200:35:32"}],"functionName":{"name":"iszero","nativeSrc":"4193:6:32","nodeType":"YulIdentifier","src":"4193:6:32"},"nativeSrc":"4193:43:32","nodeType":"YulFunctionCall","src":"4193:43:32"},"nativeSrc":"4190:63:32","nodeType":"YulIf","src":"4190:63:32"}]},"name":"validator_revert_t_address","nativeSrc":"4137:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4173:5:32","nodeType":"YulTypedName","src":"4173:5:32","type":""}],"src":"4137:122:32"},{"body":{"nativeSrc":"4317:87:32","nodeType":"YulBlock","src":"4317:87:32","statements":[{"nativeSrc":"4327:29:32","nodeType":"YulAssignment","src":"4327:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"4349:6:32","nodeType":"YulIdentifier","src":"4349:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"4336:12:32","nodeType":"YulIdentifier","src":"4336:12:32"},"nativeSrc":"4336:20:32","nodeType":"YulFunctionCall","src":"4336:20:32"},"variableNames":[{"name":"value","nativeSrc":"4327:5:32","nodeType":"YulIdentifier","src":"4327:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4392:5:32","nodeType":"YulIdentifier","src":"4392:5:32"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4365:26:32","nodeType":"YulIdentifier","src":"4365:26:32"},"nativeSrc":"4365:33:32","nodeType":"YulFunctionCall","src":"4365:33:32"},"nativeSrc":"4365:33:32","nodeType":"YulExpressionStatement","src":"4365:33:32"}]},"name":"abi_decode_t_address","nativeSrc":"4265:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4295:6:32","nodeType":"YulTypedName","src":"4295:6:32","type":""},{"name":"end","nativeSrc":"4303:3:32","nodeType":"YulTypedName","src":"4303:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4311:5:32","nodeType":"YulTypedName","src":"4311:5:32","type":""}],"src":"4265:139:32"},{"body":{"nativeSrc":"4493:391:32","nodeType":"YulBlock","src":"4493:391:32","statements":[{"body":{"nativeSrc":"4539:83:32","nodeType":"YulBlock","src":"4539:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4541:77:32","nodeType":"YulIdentifier","src":"4541:77:32"},"nativeSrc":"4541:79:32","nodeType":"YulFunctionCall","src":"4541:79:32"},"nativeSrc":"4541:79:32","nodeType":"YulExpressionStatement","src":"4541:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4514:7:32","nodeType":"YulIdentifier","src":"4514:7:32"},{"name":"headStart","nativeSrc":"4523:9:32","nodeType":"YulIdentifier","src":"4523:9:32"}],"functionName":{"name":"sub","nativeSrc":"4510:3:32","nodeType":"YulIdentifier","src":"4510:3:32"},"nativeSrc":"4510:23:32","nodeType":"YulFunctionCall","src":"4510:23:32"},{"kind":"number","nativeSrc":"4535:2:32","nodeType":"YulLiteral","src":"4535:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4506:3:32","nodeType":"YulIdentifier","src":"4506:3:32"},"nativeSrc":"4506:32:32","nodeType":"YulFunctionCall","src":"4506:32:32"},"nativeSrc":"4503:119:32","nodeType":"YulIf","src":"4503:119:32"},{"nativeSrc":"4632:117:32","nodeType":"YulBlock","src":"4632:117:32","statements":[{"nativeSrc":"4647:15:32","nodeType":"YulVariableDeclaration","src":"4647:15:32","value":{"kind":"number","nativeSrc":"4661:1:32","nodeType":"YulLiteral","src":"4661:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4651:6:32","nodeType":"YulTypedName","src":"4651:6:32","type":""}]},{"nativeSrc":"4676:63:32","nodeType":"YulAssignment","src":"4676:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4711:9:32","nodeType":"YulIdentifier","src":"4711:9:32"},{"name":"offset","nativeSrc":"4722:6:32","nodeType":"YulIdentifier","src":"4722:6:32"}],"functionName":{"name":"add","nativeSrc":"4707:3:32","nodeType":"YulIdentifier","src":"4707:3:32"},"nativeSrc":"4707:22:32","nodeType":"YulFunctionCall","src":"4707:22:32"},{"name":"dataEnd","nativeSrc":"4731:7:32","nodeType":"YulIdentifier","src":"4731:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4686:20:32","nodeType":"YulIdentifier","src":"4686:20:32"},"nativeSrc":"4686:53:32","nodeType":"YulFunctionCall","src":"4686:53:32"},"variableNames":[{"name":"value0","nativeSrc":"4676:6:32","nodeType":"YulIdentifier","src":"4676:6:32"}]}]},{"nativeSrc":"4759:118:32","nodeType":"YulBlock","src":"4759:118:32","statements":[{"nativeSrc":"4774:16:32","nodeType":"YulVariableDeclaration","src":"4774:16:32","value":{"kind":"number","nativeSrc":"4788:2:32","nodeType":"YulLiteral","src":"4788:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4778:6:32","nodeType":"YulTypedName","src":"4778:6:32","type":""}]},{"nativeSrc":"4804:63:32","nodeType":"YulAssignment","src":"4804:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4839:9:32","nodeType":"YulIdentifier","src":"4839:9:32"},{"name":"offset","nativeSrc":"4850:6:32","nodeType":"YulIdentifier","src":"4850:6:32"}],"functionName":{"name":"add","nativeSrc":"4835:3:32","nodeType":"YulIdentifier","src":"4835:3:32"},"nativeSrc":"4835:22:32","nodeType":"YulFunctionCall","src":"4835:22:32"},{"name":"dataEnd","nativeSrc":"4859:7:32","nodeType":"YulIdentifier","src":"4859:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4814:20:32","nodeType":"YulIdentifier","src":"4814:20:32"},"nativeSrc":"4814:53:32","nodeType":"YulFunctionCall","src":"4814:53:32"},"variableNames":[{"name":"value1","nativeSrc":"4804:6:32","nodeType":"YulIdentifier","src":"4804:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4410:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4455:9:32","nodeType":"YulTypedName","src":"4455:9:32","type":""},{"name":"dataEnd","nativeSrc":"4466:7:32","nodeType":"YulTypedName","src":"4466:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4478:6:32","nodeType":"YulTypedName","src":"4478:6:32","type":""},{"name":"value1","nativeSrc":"4486:6:32","nodeType":"YulTypedName","src":"4486:6:32","type":""}],"src":"4410:474:32"},{"body":{"nativeSrc":"4990:519:32","nodeType":"YulBlock","src":"4990:519:32","statements":[{"body":{"nativeSrc":"5036:83:32","nodeType":"YulBlock","src":"5036:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5038:77:32","nodeType":"YulIdentifier","src":"5038:77:32"},"nativeSrc":"5038:79:32","nodeType":"YulFunctionCall","src":"5038:79:32"},"nativeSrc":"5038:79:32","nodeType":"YulExpressionStatement","src":"5038:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5011:7:32","nodeType":"YulIdentifier","src":"5011:7:32"},{"name":"headStart","nativeSrc":"5020:9:32","nodeType":"YulIdentifier","src":"5020:9:32"}],"functionName":{"name":"sub","nativeSrc":"5007:3:32","nodeType":"YulIdentifier","src":"5007:3:32"},"nativeSrc":"5007:23:32","nodeType":"YulFunctionCall","src":"5007:23:32"},{"kind":"number","nativeSrc":"5032:2:32","nodeType":"YulLiteral","src":"5032:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5003:3:32","nodeType":"YulIdentifier","src":"5003:3:32"},"nativeSrc":"5003:32:32","nodeType":"YulFunctionCall","src":"5003:32:32"},"nativeSrc":"5000:119:32","nodeType":"YulIf","src":"5000:119:32"},{"nativeSrc":"5129:117:32","nodeType":"YulBlock","src":"5129:117:32","statements":[{"nativeSrc":"5144:15:32","nodeType":"YulVariableDeclaration","src":"5144:15:32","value":{"kind":"number","nativeSrc":"5158:1:32","nodeType":"YulLiteral","src":"5158:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5148:6:32","nodeType":"YulTypedName","src":"5148:6:32","type":""}]},{"nativeSrc":"5173:63:32","nodeType":"YulAssignment","src":"5173:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5208:9:32","nodeType":"YulIdentifier","src":"5208:9:32"},{"name":"offset","nativeSrc":"5219:6:32","nodeType":"YulIdentifier","src":"5219:6:32"}],"functionName":{"name":"add","nativeSrc":"5204:3:32","nodeType":"YulIdentifier","src":"5204:3:32"},"nativeSrc":"5204:22:32","nodeType":"YulFunctionCall","src":"5204:22:32"},{"name":"dataEnd","nativeSrc":"5228:7:32","nodeType":"YulIdentifier","src":"5228:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5183:20:32","nodeType":"YulIdentifier","src":"5183:20:32"},"nativeSrc":"5183:53:32","nodeType":"YulFunctionCall","src":"5183:53:32"},"variableNames":[{"name":"value0","nativeSrc":"5173:6:32","nodeType":"YulIdentifier","src":"5173:6:32"}]}]},{"nativeSrc":"5256:118:32","nodeType":"YulBlock","src":"5256:118:32","statements":[{"nativeSrc":"5271:16:32","nodeType":"YulVariableDeclaration","src":"5271:16:32","value":{"kind":"number","nativeSrc":"5285:2:32","nodeType":"YulLiteral","src":"5285:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5275:6:32","nodeType":"YulTypedName","src":"5275:6:32","type":""}]},{"nativeSrc":"5301:63:32","nodeType":"YulAssignment","src":"5301:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5336:9:32","nodeType":"YulIdentifier","src":"5336:9:32"},{"name":"offset","nativeSrc":"5347:6:32","nodeType":"YulIdentifier","src":"5347:6:32"}],"functionName":{"name":"add","nativeSrc":"5332:3:32","nodeType":"YulIdentifier","src":"5332:3:32"},"nativeSrc":"5332:22:32","nodeType":"YulFunctionCall","src":"5332:22:32"},{"name":"dataEnd","nativeSrc":"5356:7:32","nodeType":"YulIdentifier","src":"5356:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5311:20:32","nodeType":"YulIdentifier","src":"5311:20:32"},"nativeSrc":"5311:53:32","nodeType":"YulFunctionCall","src":"5311:53:32"},"variableNames":[{"name":"value1","nativeSrc":"5301:6:32","nodeType":"YulIdentifier","src":"5301:6:32"}]}]},{"nativeSrc":"5384:118:32","nodeType":"YulBlock","src":"5384:118:32","statements":[{"nativeSrc":"5399:16:32","nodeType":"YulVariableDeclaration","src":"5399:16:32","value":{"kind":"number","nativeSrc":"5413:2:32","nodeType":"YulLiteral","src":"5413:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5403:6:32","nodeType":"YulTypedName","src":"5403:6:32","type":""}]},{"nativeSrc":"5429:63:32","nodeType":"YulAssignment","src":"5429:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5464:9:32","nodeType":"YulIdentifier","src":"5464:9:32"},{"name":"offset","nativeSrc":"5475:6:32","nodeType":"YulIdentifier","src":"5475:6:32"}],"functionName":{"name":"add","nativeSrc":"5460:3:32","nodeType":"YulIdentifier","src":"5460:3:32"},"nativeSrc":"5460:22:32","nodeType":"YulFunctionCall","src":"5460:22:32"},{"name":"dataEnd","nativeSrc":"5484:7:32","nodeType":"YulIdentifier","src":"5484:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5439:20:32","nodeType":"YulIdentifier","src":"5439:20:32"},"nativeSrc":"5439:53:32","nodeType":"YulFunctionCall","src":"5439:53:32"},"variableNames":[{"name":"value2","nativeSrc":"5429:6:32","nodeType":"YulIdentifier","src":"5429:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4890:619:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4944:9:32","nodeType":"YulTypedName","src":"4944:9:32","type":""},{"name":"dataEnd","nativeSrc":"4955:7:32","nodeType":"YulTypedName","src":"4955:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4967:6:32","nodeType":"YulTypedName","src":"4967:6:32","type":""},{"name":"value1","nativeSrc":"4975:6:32","nodeType":"YulTypedName","src":"4975:6:32","type":""},{"name":"value2","nativeSrc":"4983:6:32","nodeType":"YulTypedName","src":"4983:6:32","type":""}],"src":"4890:619:32"},{"body":{"nativeSrc":"5581:263:32","nodeType":"YulBlock","src":"5581:263:32","statements":[{"body":{"nativeSrc":"5627:83:32","nodeType":"YulBlock","src":"5627:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5629:77:32","nodeType":"YulIdentifier","src":"5629:77:32"},"nativeSrc":"5629:79:32","nodeType":"YulFunctionCall","src":"5629:79:32"},"nativeSrc":"5629:79:32","nodeType":"YulExpressionStatement","src":"5629:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5602:7:32","nodeType":"YulIdentifier","src":"5602:7:32"},{"name":"headStart","nativeSrc":"5611:9:32","nodeType":"YulIdentifier","src":"5611:9:32"}],"functionName":{"name":"sub","nativeSrc":"5598:3:32","nodeType":"YulIdentifier","src":"5598:3:32"},"nativeSrc":"5598:23:32","nodeType":"YulFunctionCall","src":"5598:23:32"},{"kind":"number","nativeSrc":"5623:2:32","nodeType":"YulLiteral","src":"5623:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5594:3:32","nodeType":"YulIdentifier","src":"5594:3:32"},"nativeSrc":"5594:32:32","nodeType":"YulFunctionCall","src":"5594:32:32"},"nativeSrc":"5591:119:32","nodeType":"YulIf","src":"5591:119:32"},{"nativeSrc":"5720:117:32","nodeType":"YulBlock","src":"5720:117:32","statements":[{"nativeSrc":"5735:15:32","nodeType":"YulVariableDeclaration","src":"5735:15:32","value":{"kind":"number","nativeSrc":"5749:1:32","nodeType":"YulLiteral","src":"5749:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5739:6:32","nodeType":"YulTypedName","src":"5739:6:32","type":""}]},{"nativeSrc":"5764:63:32","nodeType":"YulAssignment","src":"5764:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5799:9:32","nodeType":"YulIdentifier","src":"5799:9:32"},{"name":"offset","nativeSrc":"5810:6:32","nodeType":"YulIdentifier","src":"5810:6:32"}],"functionName":{"name":"add","nativeSrc":"5795:3:32","nodeType":"YulIdentifier","src":"5795:3:32"},"nativeSrc":"5795:22:32","nodeType":"YulFunctionCall","src":"5795:22:32"},{"name":"dataEnd","nativeSrc":"5819:7:32","nodeType":"YulIdentifier","src":"5819:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5774:20:32","nodeType":"YulIdentifier","src":"5774:20:32"},"nativeSrc":"5774:53:32","nodeType":"YulFunctionCall","src":"5774:53:32"},"variableNames":[{"name":"value0","nativeSrc":"5764:6:32","nodeType":"YulIdentifier","src":"5764:6:32"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5515:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5551:9:32","nodeType":"YulTypedName","src":"5551:9:32","type":""},{"name":"dataEnd","nativeSrc":"5562:7:32","nodeType":"YulTypedName","src":"5562:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5574:6:32","nodeType":"YulTypedName","src":"5574:6:32","type":""}],"src":"5515:329:32"},{"body":{"nativeSrc":"5939:28:32","nodeType":"YulBlock","src":"5939:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5956:1:32","nodeType":"YulLiteral","src":"5956:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5959:1:32","nodeType":"YulLiteral","src":"5959:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5949:6:32","nodeType":"YulIdentifier","src":"5949:6:32"},"nativeSrc":"5949:12:32","nodeType":"YulFunctionCall","src":"5949:12:32"},"nativeSrc":"5949:12:32","nodeType":"YulExpressionStatement","src":"5949:12:32"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5850:117:32","nodeType":"YulFunctionDefinition","src":"5850:117:32"},{"body":{"nativeSrc":"6062:28:32","nodeType":"YulBlock","src":"6062:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6079:1:32","nodeType":"YulLiteral","src":"6079:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"6082:1:32","nodeType":"YulLiteral","src":"6082:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6072:6:32","nodeType":"YulIdentifier","src":"6072:6:32"},"nativeSrc":"6072:12:32","nodeType":"YulFunctionCall","src":"6072:12:32"},"nativeSrc":"6072:12:32","nodeType":"YulExpressionStatement","src":"6072:12:32"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"5973:117:32","nodeType":"YulFunctionDefinition","src":"5973:117:32"},{"body":{"nativeSrc":"6124:152:32","nodeType":"YulBlock","src":"6124:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6141:1:32","nodeType":"YulLiteral","src":"6141:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"6144:77:32","nodeType":"YulLiteral","src":"6144:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6134:6:32","nodeType":"YulIdentifier","src":"6134:6:32"},"nativeSrc":"6134:88:32","nodeType":"YulFunctionCall","src":"6134:88:32"},"nativeSrc":"6134:88:32","nodeType":"YulExpressionStatement","src":"6134:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6238:1:32","nodeType":"YulLiteral","src":"6238:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"6241:4:32","nodeType":"YulLiteral","src":"6241:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"6231:6:32","nodeType":"YulIdentifier","src":"6231:6:32"},"nativeSrc":"6231:15:32","nodeType":"YulFunctionCall","src":"6231:15:32"},"nativeSrc":"6231:15:32","nodeType":"YulExpressionStatement","src":"6231:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6262:1:32","nodeType":"YulLiteral","src":"6262:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"6265:4:32","nodeType":"YulLiteral","src":"6265:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6255:6:32","nodeType":"YulIdentifier","src":"6255:6:32"},"nativeSrc":"6255:15:32","nodeType":"YulFunctionCall","src":"6255:15:32"},"nativeSrc":"6255:15:32","nodeType":"YulExpressionStatement","src":"6255:15:32"}]},"name":"panic_error_0x41","nativeSrc":"6096:180:32","nodeType":"YulFunctionDefinition","src":"6096:180:32"},{"body":{"nativeSrc":"6325:238:32","nodeType":"YulBlock","src":"6325:238:32","statements":[{"nativeSrc":"6335:58:32","nodeType":"YulVariableDeclaration","src":"6335:58:32","value":{"arguments":[{"name":"memPtr","nativeSrc":"6357:6:32","nodeType":"YulIdentifier","src":"6357:6:32"},{"arguments":[{"name":"size","nativeSrc":"6387:4:32","nodeType":"YulIdentifier","src":"6387:4:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6365:21:32","nodeType":"YulIdentifier","src":"6365:21:32"},"nativeSrc":"6365:27:32","nodeType":"YulFunctionCall","src":"6365:27:32"}],"functionName":{"name":"add","nativeSrc":"6353:3:32","nodeType":"YulIdentifier","src":"6353:3:32"},"nativeSrc":"6353:40:32","nodeType":"YulFunctionCall","src":"6353:40:32"},"variables":[{"name":"newFreePtr","nativeSrc":"6339:10:32","nodeType":"YulTypedName","src":"6339:10:32","type":""}]},{"body":{"nativeSrc":"6504:22:32","nodeType":"YulBlock","src":"6504:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6506:16:32","nodeType":"YulIdentifier","src":"6506:16:32"},"nativeSrc":"6506:18:32","nodeType":"YulFunctionCall","src":"6506:18:32"},"nativeSrc":"6506:18:32","nodeType":"YulExpressionStatement","src":"6506:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"6447:10:32","nodeType":"YulIdentifier","src":"6447:10:32"},{"kind":"number","nativeSrc":"6459:18:32","nodeType":"YulLiteral","src":"6459:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6444:2:32","nodeType":"YulIdentifier","src":"6444:2:32"},"nativeSrc":"6444:34:32","nodeType":"YulFunctionCall","src":"6444:34:32"},{"arguments":[{"name":"newFreePtr","nativeSrc":"6483:10:32","nodeType":"YulIdentifier","src":"6483:10:32"},{"name":"memPtr","nativeSrc":"6495:6:32","nodeType":"YulIdentifier","src":"6495:6:32"}],"functionName":{"name":"lt","nativeSrc":"6480:2:32","nodeType":"YulIdentifier","src":"6480:2:32"},"nativeSrc":"6480:22:32","nodeType":"YulFunctionCall","src":"6480:22:32"}],"functionName":{"name":"or","nativeSrc":"6441:2:32","nodeType":"YulIdentifier","src":"6441:2:32"},"nativeSrc":"6441:62:32","nodeType":"YulFunctionCall","src":"6441:62:32"},"nativeSrc":"6438:88:32","nodeType":"YulIf","src":"6438:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6542:2:32","nodeType":"YulLiteral","src":"6542:2:32","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"6546:10:32","nodeType":"YulIdentifier","src":"6546:10:32"}],"functionName":{"name":"mstore","nativeSrc":"6535:6:32","nodeType":"YulIdentifier","src":"6535:6:32"},"nativeSrc":"6535:22:32","nodeType":"YulFunctionCall","src":"6535:22:32"},"nativeSrc":"6535:22:32","nodeType":"YulExpressionStatement","src":"6535:22:32"}]},"name":"finalize_allocation","nativeSrc":"6282:281:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6311:6:32","nodeType":"YulTypedName","src":"6311:6:32","type":""},{"name":"size","nativeSrc":"6319:4:32","nodeType":"YulTypedName","src":"6319:4:32","type":""}],"src":"6282:281:32"},{"body":{"nativeSrc":"6610:88:32","nodeType":"YulBlock","src":"6610:88:32","statements":[{"nativeSrc":"6620:30:32","nodeType":"YulAssignment","src":"6620:30:32","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"6630:18:32","nodeType":"YulIdentifier","src":"6630:18:32"},"nativeSrc":"6630:20:32","nodeType":"YulFunctionCall","src":"6630:20:32"},"variableNames":[{"name":"memPtr","nativeSrc":"6620:6:32","nodeType":"YulIdentifier","src":"6620:6:32"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"6679:6:32","nodeType":"YulIdentifier","src":"6679:6:32"},{"name":"size","nativeSrc":"6687:4:32","nodeType":"YulIdentifier","src":"6687:4:32"}],"functionName":{"name":"finalize_allocation","nativeSrc":"6659:19:32","nodeType":"YulIdentifier","src":"6659:19:32"},"nativeSrc":"6659:33:32","nodeType":"YulFunctionCall","src":"6659:33:32"},"nativeSrc":"6659:33:32","nodeType":"YulExpressionStatement","src":"6659:33:32"}]},"name":"allocate_memory","nativeSrc":"6569:129:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"6594:4:32","nodeType":"YulTypedName","src":"6594:4:32","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"6603:6:32","nodeType":"YulTypedName","src":"6603:6:32","type":""}],"src":"6569:129:32"},{"body":{"nativeSrc":"6770:241:32","nodeType":"YulBlock","src":"6770:241:32","statements":[{"body":{"nativeSrc":"6875:22:32","nodeType":"YulBlock","src":"6875:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6877:16:32","nodeType":"YulIdentifier","src":"6877:16:32"},"nativeSrc":"6877:18:32","nodeType":"YulFunctionCall","src":"6877:18:32"},"nativeSrc":"6877:18:32","nodeType":"YulExpressionStatement","src":"6877:18:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6847:6:32","nodeType":"YulIdentifier","src":"6847:6:32"},{"kind":"number","nativeSrc":"6855:18:32","nodeType":"YulLiteral","src":"6855:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6844:2:32","nodeType":"YulIdentifier","src":"6844:2:32"},"nativeSrc":"6844:30:32","nodeType":"YulFunctionCall","src":"6844:30:32"},"nativeSrc":"6841:56:32","nodeType":"YulIf","src":"6841:56:32"},{"nativeSrc":"6907:37:32","nodeType":"YulAssignment","src":"6907:37:32","value":{"arguments":[{"name":"length","nativeSrc":"6937:6:32","nodeType":"YulIdentifier","src":"6937:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6915:21:32","nodeType":"YulIdentifier","src":"6915:21:32"},"nativeSrc":"6915:29:32","nodeType":"YulFunctionCall","src":"6915:29:32"},"variableNames":[{"name":"size","nativeSrc":"6907:4:32","nodeType":"YulIdentifier","src":"6907:4:32"}]},{"nativeSrc":"6981:23:32","nodeType":"YulAssignment","src":"6981:23:32","value":{"arguments":[{"name":"size","nativeSrc":"6993:4:32","nodeType":"YulIdentifier","src":"6993:4:32"},{"kind":"number","nativeSrc":"6999:4:32","nodeType":"YulLiteral","src":"6999:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6989:3:32","nodeType":"YulIdentifier","src":"6989:3:32"},"nativeSrc":"6989:15:32","nodeType":"YulFunctionCall","src":"6989:15:32"},"variableNames":[{"name":"size","nativeSrc":"6981:4:32","nodeType":"YulIdentifier","src":"6981:4:32"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6704:307:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"6754:6:32","nodeType":"YulTypedName","src":"6754:6:32","type":""}],"returnVariables":[{"name":"size","nativeSrc":"6765:4:32","nodeType":"YulTypedName","src":"6765:4:32","type":""}],"src":"6704:307:32"},{"body":{"nativeSrc":"7081:82:32","nodeType":"YulBlock","src":"7081:82:32","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"7104:3:32","nodeType":"YulIdentifier","src":"7104:3:32"},{"name":"src","nativeSrc":"7109:3:32","nodeType":"YulIdentifier","src":"7109:3:32"},{"name":"length","nativeSrc":"7114:6:32","nodeType":"YulIdentifier","src":"7114:6:32"}],"functionName":{"name":"calldatacopy","nativeSrc":"7091:12:32","nodeType":"YulIdentifier","src":"7091:12:32"},"nativeSrc":"7091:30:32","nodeType":"YulFunctionCall","src":"7091:30:32"},"nativeSrc":"7091:30:32","nodeType":"YulExpressionStatement","src":"7091:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7141:3:32","nodeType":"YulIdentifier","src":"7141:3:32"},{"name":"length","nativeSrc":"7146:6:32","nodeType":"YulIdentifier","src":"7146:6:32"}],"functionName":{"name":"add","nativeSrc":"7137:3:32","nodeType":"YulIdentifier","src":"7137:3:32"},"nativeSrc":"7137:16:32","nodeType":"YulFunctionCall","src":"7137:16:32"},{"kind":"number","nativeSrc":"7155:1:32","nodeType":"YulLiteral","src":"7155:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7130:6:32","nodeType":"YulIdentifier","src":"7130:6:32"},"nativeSrc":"7130:27:32","nodeType":"YulFunctionCall","src":"7130:27:32"},"nativeSrc":"7130:27:32","nodeType":"YulExpressionStatement","src":"7130:27:32"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7017:146:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7063:3:32","nodeType":"YulTypedName","src":"7063:3:32","type":""},{"name":"dst","nativeSrc":"7068:3:32","nodeType":"YulTypedName","src":"7068:3:32","type":""},{"name":"length","nativeSrc":"7073:6:32","nodeType":"YulTypedName","src":"7073:6:32","type":""}],"src":"7017:146:32"},{"body":{"nativeSrc":"7252:340:32","nodeType":"YulBlock","src":"7252:340:32","statements":[{"nativeSrc":"7262:74:32","nodeType":"YulAssignment","src":"7262:74:32","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7328:6:32","nodeType":"YulIdentifier","src":"7328:6:32"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7287:40:32","nodeType":"YulIdentifier","src":"7287:40:32"},"nativeSrc":"7287:48:32","nodeType":"YulFunctionCall","src":"7287:48:32"}],"functionName":{"name":"allocate_memory","nativeSrc":"7271:15:32","nodeType":"YulIdentifier","src":"7271:15:32"},"nativeSrc":"7271:65:32","nodeType":"YulFunctionCall","src":"7271:65:32"},"variableNames":[{"name":"array","nativeSrc":"7262:5:32","nodeType":"YulIdentifier","src":"7262:5:32"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7352:5:32","nodeType":"YulIdentifier","src":"7352:5:32"},{"name":"length","nativeSrc":"7359:6:32","nodeType":"YulIdentifier","src":"7359:6:32"}],"functionName":{"name":"mstore","nativeSrc":"7345:6:32","nodeType":"YulIdentifier","src":"7345:6:32"},"nativeSrc":"7345:21:32","nodeType":"YulFunctionCall","src":"7345:21:32"},"nativeSrc":"7345:21:32","nodeType":"YulExpressionStatement","src":"7345:21:32"},{"nativeSrc":"7375:27:32","nodeType":"YulVariableDeclaration","src":"7375:27:32","value":{"arguments":[{"name":"array","nativeSrc":"7390:5:32","nodeType":"YulIdentifier","src":"7390:5:32"},{"kind":"number","nativeSrc":"7397:4:32","nodeType":"YulLiteral","src":"7397:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7386:3:32","nodeType":"YulIdentifier","src":"7386:3:32"},"nativeSrc":"7386:16:32","nodeType":"YulFunctionCall","src":"7386:16:32"},"variables":[{"name":"dst","nativeSrc":"7379:3:32","nodeType":"YulTypedName","src":"7379:3:32","type":""}]},{"body":{"nativeSrc":"7440:83:32","nodeType":"YulBlock","src":"7440:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7442:77:32","nodeType":"YulIdentifier","src":"7442:77:32"},"nativeSrc":"7442:79:32","nodeType":"YulFunctionCall","src":"7442:79:32"},"nativeSrc":"7442:79:32","nodeType":"YulExpressionStatement","src":"7442:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7421:3:32","nodeType":"YulIdentifier","src":"7421:3:32"},{"name":"length","nativeSrc":"7426:6:32","nodeType":"YulIdentifier","src":"7426:6:32"}],"functionName":{"name":"add","nativeSrc":"7417:3:32","nodeType":"YulIdentifier","src":"7417:3:32"},"nativeSrc":"7417:16:32","nodeType":"YulFunctionCall","src":"7417:16:32"},{"name":"end","nativeSrc":"7435:3:32","nodeType":"YulIdentifier","src":"7435:3:32"}],"functionName":{"name":"gt","nativeSrc":"7414:2:32","nodeType":"YulIdentifier","src":"7414:2:32"},"nativeSrc":"7414:25:32","nodeType":"YulFunctionCall","src":"7414:25:32"},"nativeSrc":"7411:112:32","nodeType":"YulIf","src":"7411:112:32"},{"expression":{"arguments":[{"name":"src","nativeSrc":"7569:3:32","nodeType":"YulIdentifier","src":"7569:3:32"},{"name":"dst","nativeSrc":"7574:3:32","nodeType":"YulIdentifier","src":"7574:3:32"},{"name":"length","nativeSrc":"7579:6:32","nodeType":"YulIdentifier","src":"7579:6:32"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7532:36:32","nodeType":"YulIdentifier","src":"7532:36:32"},"nativeSrc":"7532:54:32","nodeType":"YulFunctionCall","src":"7532:54:32"},"nativeSrc":"7532:54:32","nodeType":"YulExpressionStatement","src":"7532:54:32"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7169:423:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7225:3:32","nodeType":"YulTypedName","src":"7225:3:32","type":""},{"name":"length","nativeSrc":"7230:6:32","nodeType":"YulTypedName","src":"7230:6:32","type":""},{"name":"end","nativeSrc":"7238:3:32","nodeType":"YulTypedName","src":"7238:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7246:5:32","nodeType":"YulTypedName","src":"7246:5:32","type":""}],"src":"7169:423:32"},{"body":{"nativeSrc":"7672:277:32","nodeType":"YulBlock","src":"7672:277:32","statements":[{"body":{"nativeSrc":"7721:83:32","nodeType":"YulBlock","src":"7721:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7723:77:32","nodeType":"YulIdentifier","src":"7723:77:32"},"nativeSrc":"7723:79:32","nodeType":"YulFunctionCall","src":"7723:79:32"},"nativeSrc":"7723:79:32","nodeType":"YulExpressionStatement","src":"7723:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7700:6:32","nodeType":"YulIdentifier","src":"7700:6:32"},{"kind":"number","nativeSrc":"7708:4:32","nodeType":"YulLiteral","src":"7708:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7696:3:32","nodeType":"YulIdentifier","src":"7696:3:32"},"nativeSrc":"7696:17:32","nodeType":"YulFunctionCall","src":"7696:17:32"},{"name":"end","nativeSrc":"7715:3:32","nodeType":"YulIdentifier","src":"7715:3:32"}],"functionName":{"name":"slt","nativeSrc":"7692:3:32","nodeType":"YulIdentifier","src":"7692:3:32"},"nativeSrc":"7692:27:32","nodeType":"YulFunctionCall","src":"7692:27:32"}],"functionName":{"name":"iszero","nativeSrc":"7685:6:32","nodeType":"YulIdentifier","src":"7685:6:32"},"nativeSrc":"7685:35:32","nodeType":"YulFunctionCall","src":"7685:35:32"},"nativeSrc":"7682:122:32","nodeType":"YulIf","src":"7682:122:32"},{"nativeSrc":"7813:34:32","nodeType":"YulVariableDeclaration","src":"7813:34:32","value":{"arguments":[{"name":"offset","nativeSrc":"7840:6:32","nodeType":"YulIdentifier","src":"7840:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"7827:12:32","nodeType":"YulIdentifier","src":"7827:12:32"},"nativeSrc":"7827:20:32","nodeType":"YulFunctionCall","src":"7827:20:32"},"variables":[{"name":"length","nativeSrc":"7817:6:32","nodeType":"YulTypedName","src":"7817:6:32","type":""}]},{"nativeSrc":"7856:87:32","nodeType":"YulAssignment","src":"7856:87:32","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7916:6:32","nodeType":"YulIdentifier","src":"7916:6:32"},{"kind":"number","nativeSrc":"7924:4:32","nodeType":"YulLiteral","src":"7924:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7912:3:32","nodeType":"YulIdentifier","src":"7912:3:32"},"nativeSrc":"7912:17:32","nodeType":"YulFunctionCall","src":"7912:17:32"},{"name":"length","nativeSrc":"7931:6:32","nodeType":"YulIdentifier","src":"7931:6:32"},{"name":"end","nativeSrc":"7939:3:32","nodeType":"YulIdentifier","src":"7939:3:32"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7865:46:32","nodeType":"YulIdentifier","src":"7865:46:32"},"nativeSrc":"7865:78:32","nodeType":"YulFunctionCall","src":"7865:78:32"},"variableNames":[{"name":"array","nativeSrc":"7856:5:32","nodeType":"YulIdentifier","src":"7856:5:32"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"7611:338:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7650:6:32","nodeType":"YulTypedName","src":"7650:6:32","type":""},{"name":"end","nativeSrc":"7658:3:32","nodeType":"YulTypedName","src":"7658:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7666:5:32","nodeType":"YulTypedName","src":"7666:5:32","type":""}],"src":"7611:338:32"},{"body":{"nativeSrc":"8047:560:32","nodeType":"YulBlock","src":"8047:560:32","statements":[{"body":{"nativeSrc":"8093:83:32","nodeType":"YulBlock","src":"8093:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8095:77:32","nodeType":"YulIdentifier","src":"8095:77:32"},"nativeSrc":"8095:79:32","nodeType":"YulFunctionCall","src":"8095:79:32"},"nativeSrc":"8095:79:32","nodeType":"YulExpressionStatement","src":"8095:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8068:7:32","nodeType":"YulIdentifier","src":"8068:7:32"},{"name":"headStart","nativeSrc":"8077:9:32","nodeType":"YulIdentifier","src":"8077:9:32"}],"functionName":{"name":"sub","nativeSrc":"8064:3:32","nodeType":"YulIdentifier","src":"8064:3:32"},"nativeSrc":"8064:23:32","nodeType":"YulFunctionCall","src":"8064:23:32"},{"kind":"number","nativeSrc":"8089:2:32","nodeType":"YulLiteral","src":"8089:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8060:3:32","nodeType":"YulIdentifier","src":"8060:3:32"},"nativeSrc":"8060:32:32","nodeType":"YulFunctionCall","src":"8060:32:32"},"nativeSrc":"8057:119:32","nodeType":"YulIf","src":"8057:119:32"},{"nativeSrc":"8186:117:32","nodeType":"YulBlock","src":"8186:117:32","statements":[{"nativeSrc":"8201:15:32","nodeType":"YulVariableDeclaration","src":"8201:15:32","value":{"kind":"number","nativeSrc":"8215:1:32","nodeType":"YulLiteral","src":"8215:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8205:6:32","nodeType":"YulTypedName","src":"8205:6:32","type":""}]},{"nativeSrc":"8230:63:32","nodeType":"YulAssignment","src":"8230:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8265:9:32","nodeType":"YulIdentifier","src":"8265:9:32"},{"name":"offset","nativeSrc":"8276:6:32","nodeType":"YulIdentifier","src":"8276:6:32"}],"functionName":{"name":"add","nativeSrc":"8261:3:32","nodeType":"YulIdentifier","src":"8261:3:32"},"nativeSrc":"8261:22:32","nodeType":"YulFunctionCall","src":"8261:22:32"},{"name":"dataEnd","nativeSrc":"8285:7:32","nodeType":"YulIdentifier","src":"8285:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8240:20:32","nodeType":"YulIdentifier","src":"8240:20:32"},"nativeSrc":"8240:53:32","nodeType":"YulFunctionCall","src":"8240:53:32"},"variableNames":[{"name":"value0","nativeSrc":"8230:6:32","nodeType":"YulIdentifier","src":"8230:6:32"}]}]},{"nativeSrc":"8313:287:32","nodeType":"YulBlock","src":"8313:287:32","statements":[{"nativeSrc":"8328:46:32","nodeType":"YulVariableDeclaration","src":"8328:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8359:9:32","nodeType":"YulIdentifier","src":"8359:9:32"},{"kind":"number","nativeSrc":"8370:2:32","nodeType":"YulLiteral","src":"8370:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8355:3:32","nodeType":"YulIdentifier","src":"8355:3:32"},"nativeSrc":"8355:18:32","nodeType":"YulFunctionCall","src":"8355:18:32"}],"functionName":{"name":"calldataload","nativeSrc":"8342:12:32","nodeType":"YulIdentifier","src":"8342:12:32"},"nativeSrc":"8342:32:32","nodeType":"YulFunctionCall","src":"8342:32:32"},"variables":[{"name":"offset","nativeSrc":"8332:6:32","nodeType":"YulTypedName","src":"8332:6:32","type":""}]},{"body":{"nativeSrc":"8421:83:32","nodeType":"YulBlock","src":"8421:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8423:77:32","nodeType":"YulIdentifier","src":"8423:77:32"},"nativeSrc":"8423:79:32","nodeType":"YulFunctionCall","src":"8423:79:32"},"nativeSrc":"8423:79:32","nodeType":"YulExpressionStatement","src":"8423:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8393:6:32","nodeType":"YulIdentifier","src":"8393:6:32"},{"kind":"number","nativeSrc":"8401:18:32","nodeType":"YulLiteral","src":"8401:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8390:2:32","nodeType":"YulIdentifier","src":"8390:2:32"},"nativeSrc":"8390:30:32","nodeType":"YulFunctionCall","src":"8390:30:32"},"nativeSrc":"8387:117:32","nodeType":"YulIf","src":"8387:117:32"},{"nativeSrc":"8518:72:32","nodeType":"YulAssignment","src":"8518:72:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8562:9:32","nodeType":"YulIdentifier","src":"8562:9:32"},{"name":"offset","nativeSrc":"8573:6:32","nodeType":"YulIdentifier","src":"8573:6:32"}],"functionName":{"name":"add","nativeSrc":"8558:3:32","nodeType":"YulIdentifier","src":"8558:3:32"},"nativeSrc":"8558:22:32","nodeType":"YulFunctionCall","src":"8558:22:32"},{"name":"dataEnd","nativeSrc":"8582:7:32","nodeType":"YulIdentifier","src":"8582:7:32"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8528:29:32","nodeType":"YulIdentifier","src":"8528:29:32"},"nativeSrc":"8528:62:32","nodeType":"YulFunctionCall","src":"8528:62:32"},"variableNames":[{"name":"value1","nativeSrc":"8518:6:32","nodeType":"YulIdentifier","src":"8518:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"7955:652:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8009:9:32","nodeType":"YulTypedName","src":"8009:9:32","type":""},{"name":"dataEnd","nativeSrc":"8020:7:32","nodeType":"YulTypedName","src":"8020:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8032:6:32","nodeType":"YulTypedName","src":"8032:6:32","type":""},{"name":"value1","nativeSrc":"8040:6:32","nodeType":"YulTypedName","src":"8040:6:32","type":""}],"src":"7955:652:32"},{"body":{"nativeSrc":"8658:32:32","nodeType":"YulBlock","src":"8658:32:32","statements":[{"nativeSrc":"8668:16:32","nodeType":"YulAssignment","src":"8668:16:32","value":{"name":"value","nativeSrc":"8679:5:32","nodeType":"YulIdentifier","src":"8679:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"8668:7:32","nodeType":"YulIdentifier","src":"8668:7:32"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"8613:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8640:5:32","nodeType":"YulTypedName","src":"8640:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8650:7:32","nodeType":"YulTypedName","src":"8650:7:32","type":""}],"src":"8613:77:32"},{"body":{"nativeSrc":"8761:53:32","nodeType":"YulBlock","src":"8761:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8778:3:32","nodeType":"YulIdentifier","src":"8778:3:32"},{"arguments":[{"name":"value","nativeSrc":"8801:5:32","nodeType":"YulIdentifier","src":"8801:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8783:17:32","nodeType":"YulIdentifier","src":"8783:17:32"},"nativeSrc":"8783:24:32","nodeType":"YulFunctionCall","src":"8783:24:32"}],"functionName":{"name":"mstore","nativeSrc":"8771:6:32","nodeType":"YulIdentifier","src":"8771:6:32"},"nativeSrc":"8771:37:32","nodeType":"YulFunctionCall","src":"8771:37:32"},"nativeSrc":"8771:37:32","nodeType":"YulExpressionStatement","src":"8771:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8696:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8749:5:32","nodeType":"YulTypedName","src":"8749:5:32","type":""},{"name":"pos","nativeSrc":"8756:3:32","nodeType":"YulTypedName","src":"8756:3:32","type":""}],"src":"8696:118:32"},{"body":{"nativeSrc":"8918:124:32","nodeType":"YulBlock","src":"8918:124:32","statements":[{"nativeSrc":"8928:26:32","nodeType":"YulAssignment","src":"8928:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"8940:9:32","nodeType":"YulIdentifier","src":"8940:9:32"},{"kind":"number","nativeSrc":"8951:2:32","nodeType":"YulLiteral","src":"8951:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8936:3:32","nodeType":"YulIdentifier","src":"8936:3:32"},"nativeSrc":"8936:18:32","nodeType":"YulFunctionCall","src":"8936:18:32"},"variableNames":[{"name":"tail","nativeSrc":"8928:4:32","nodeType":"YulIdentifier","src":"8928:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9008:6:32","nodeType":"YulIdentifier","src":"9008:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9021:9:32","nodeType":"YulIdentifier","src":"9021:9:32"},{"kind":"number","nativeSrc":"9032:1:32","nodeType":"YulLiteral","src":"9032:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9017:3:32","nodeType":"YulIdentifier","src":"9017:3:32"},"nativeSrc":"9017:17:32","nodeType":"YulFunctionCall","src":"9017:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8964:43:32","nodeType":"YulIdentifier","src":"8964:43:32"},"nativeSrc":"8964:71:32","nodeType":"YulFunctionCall","src":"8964:71:32"},"nativeSrc":"8964:71:32","nodeType":"YulExpressionStatement","src":"8964:71:32"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"8820:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8890:9:32","nodeType":"YulTypedName","src":"8890:9:32","type":""},{"name":"value0","nativeSrc":"8902:6:32","nodeType":"YulTypedName","src":"8902:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8913:4:32","nodeType":"YulTypedName","src":"8913:4:32","type":""}],"src":"8820:222:32"},{"body":{"nativeSrc":"9113:53:32","nodeType":"YulBlock","src":"9113:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9130:3:32","nodeType":"YulIdentifier","src":"9130:3:32"},{"arguments":[{"name":"value","nativeSrc":"9153:5:32","nodeType":"YulIdentifier","src":"9153:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9135:17:32","nodeType":"YulIdentifier","src":"9135:17:32"},"nativeSrc":"9135:24:32","nodeType":"YulFunctionCall","src":"9135:24:32"}],"functionName":{"name":"mstore","nativeSrc":"9123:6:32","nodeType":"YulIdentifier","src":"9123:6:32"},"nativeSrc":"9123:37:32","nodeType":"YulFunctionCall","src":"9123:37:32"},"nativeSrc":"9123:37:32","nodeType":"YulExpressionStatement","src":"9123:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9048:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9101:5:32","nodeType":"YulTypedName","src":"9101:5:32","type":""},{"name":"pos","nativeSrc":"9108:3:32","nodeType":"YulTypedName","src":"9108:3:32","type":""}],"src":"9048:118:32"},{"body":{"nativeSrc":"9270:124:32","nodeType":"YulBlock","src":"9270:124:32","statements":[{"nativeSrc":"9280:26:32","nodeType":"YulAssignment","src":"9280:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"9292:9:32","nodeType":"YulIdentifier","src":"9292:9:32"},{"kind":"number","nativeSrc":"9303:2:32","nodeType":"YulLiteral","src":"9303:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9288:3:32","nodeType":"YulIdentifier","src":"9288:3:32"},"nativeSrc":"9288:18:32","nodeType":"YulFunctionCall","src":"9288:18:32"},"variableNames":[{"name":"tail","nativeSrc":"9280:4:32","nodeType":"YulIdentifier","src":"9280:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9360:6:32","nodeType":"YulIdentifier","src":"9360:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9373:9:32","nodeType":"YulIdentifier","src":"9373:9:32"},{"kind":"number","nativeSrc":"9384:1:32","nodeType":"YulLiteral","src":"9384:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9369:3:32","nodeType":"YulIdentifier","src":"9369:3:32"},"nativeSrc":"9369:17:32","nodeType":"YulFunctionCall","src":"9369:17:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9316:43:32","nodeType":"YulIdentifier","src":"9316:43:32"},"nativeSrc":"9316:71:32","nodeType":"YulFunctionCall","src":"9316:71:32"},"nativeSrc":"9316:71:32","nodeType":"YulExpressionStatement","src":"9316:71:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"9172:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9242:9:32","nodeType":"YulTypedName","src":"9242:9:32","type":""},{"name":"value0","nativeSrc":"9254:6:32","nodeType":"YulTypedName","src":"9254:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9265:4:32","nodeType":"YulTypedName","src":"9265:4:32","type":""}],"src":"9172:222:32"},{"body":{"nativeSrc":"9463:52:32","nodeType":"YulBlock","src":"9463:52:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9480:3:32","nodeType":"YulIdentifier","src":"9480:3:32"},{"arguments":[{"name":"value","nativeSrc":"9502:5:32","nodeType":"YulIdentifier","src":"9502:5:32"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"9485:16:32","nodeType":"YulIdentifier","src":"9485:16:32"},"nativeSrc":"9485:23:32","nodeType":"YulFunctionCall","src":"9485:23:32"}],"functionName":{"name":"mstore","nativeSrc":"9473:6:32","nodeType":"YulIdentifier","src":"9473:6:32"},"nativeSrc":"9473:36:32","nodeType":"YulFunctionCall","src":"9473:36:32"},"nativeSrc":"9473:36:32","nodeType":"YulExpressionStatement","src":"9473:36:32"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"9400:115:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9451:5:32","nodeType":"YulTypedName","src":"9451:5:32","type":""},{"name":"pos","nativeSrc":"9458:3:32","nodeType":"YulTypedName","src":"9458:3:32","type":""}],"src":"9400:115:32"},{"body":{"nativeSrc":"9617:122:32","nodeType":"YulBlock","src":"9617:122:32","statements":[{"nativeSrc":"9627:26:32","nodeType":"YulAssignment","src":"9627:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"9639:9:32","nodeType":"YulIdentifier","src":"9639:9:32"},{"kind":"number","nativeSrc":"9650:2:32","nodeType":"YulLiteral","src":"9650:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9635:3:32","nodeType":"YulIdentifier","src":"9635:3:32"},"nativeSrc":"9635:18:32","nodeType":"YulFunctionCall","src":"9635:18:32"},"variableNames":[{"name":"tail","nativeSrc":"9627:4:32","nodeType":"YulIdentifier","src":"9627:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9705:6:32","nodeType":"YulIdentifier","src":"9705:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9718:9:32","nodeType":"YulIdentifier","src":"9718:9:32"},{"kind":"number","nativeSrc":"9729:1:32","nodeType":"YulLiteral","src":"9729:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9714:3:32","nodeType":"YulIdentifier","src":"9714:3:32"},"nativeSrc":"9714:17:32","nodeType":"YulFunctionCall","src":"9714:17:32"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"9663:41:32","nodeType":"YulIdentifier","src":"9663:41:32"},"nativeSrc":"9663:69:32","nodeType":"YulFunctionCall","src":"9663:69:32"},"nativeSrc":"9663:69:32","nodeType":"YulExpressionStatement","src":"9663:69:32"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"9521:218:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9589:9:32","nodeType":"YulTypedName","src":"9589:9:32","type":""},{"name":"value0","nativeSrc":"9601:6:32","nodeType":"YulTypedName","src":"9601:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9612:4:32","nodeType":"YulTypedName","src":"9612:4:32","type":""}],"src":"9521:218:32"},{"body":{"nativeSrc":"9785:76:32","nodeType":"YulBlock","src":"9785:76:32","statements":[{"body":{"nativeSrc":"9839:16:32","nodeType":"YulBlock","src":"9839:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9848:1:32","nodeType":"YulLiteral","src":"9848:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"9851:1:32","nodeType":"YulLiteral","src":"9851:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9841:6:32","nodeType":"YulIdentifier","src":"9841:6:32"},"nativeSrc":"9841:12:32","nodeType":"YulFunctionCall","src":"9841:12:32"},"nativeSrc":"9841:12:32","nodeType":"YulExpressionStatement","src":"9841:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9808:5:32","nodeType":"YulIdentifier","src":"9808:5:32"},{"arguments":[{"name":"value","nativeSrc":"9830:5:32","nodeType":"YulIdentifier","src":"9830:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"9815:14:32","nodeType":"YulIdentifier","src":"9815:14:32"},"nativeSrc":"9815:21:32","nodeType":"YulFunctionCall","src":"9815:21:32"}],"functionName":{"name":"eq","nativeSrc":"9805:2:32","nodeType":"YulIdentifier","src":"9805:2:32"},"nativeSrc":"9805:32:32","nodeType":"YulFunctionCall","src":"9805:32:32"}],"functionName":{"name":"iszero","nativeSrc":"9798:6:32","nodeType":"YulIdentifier","src":"9798:6:32"},"nativeSrc":"9798:40:32","nodeType":"YulFunctionCall","src":"9798:40:32"},"nativeSrc":"9795:60:32","nodeType":"YulIf","src":"9795:60:32"}]},"name":"validator_revert_t_bool","nativeSrc":"9745:116:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9778:5:32","nodeType":"YulTypedName","src":"9778:5:32","type":""}],"src":"9745:116:32"},{"body":{"nativeSrc":"9916:84:32","nodeType":"YulBlock","src":"9916:84:32","statements":[{"nativeSrc":"9926:29:32","nodeType":"YulAssignment","src":"9926:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"9948:6:32","nodeType":"YulIdentifier","src":"9948:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"9935:12:32","nodeType":"YulIdentifier","src":"9935:12:32"},"nativeSrc":"9935:20:32","nodeType":"YulFunctionCall","src":"9935:20:32"},"variableNames":[{"name":"value","nativeSrc":"9926:5:32","nodeType":"YulIdentifier","src":"9926:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9988:5:32","nodeType":"YulIdentifier","src":"9988:5:32"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"9964:23:32","nodeType":"YulIdentifier","src":"9964:23:32"},"nativeSrc":"9964:30:32","nodeType":"YulFunctionCall","src":"9964:30:32"},"nativeSrc":"9964:30:32","nodeType":"YulExpressionStatement","src":"9964:30:32"}]},"name":"abi_decode_t_bool","nativeSrc":"9867:133:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9894:6:32","nodeType":"YulTypedName","src":"9894:6:32","type":""},{"name":"end","nativeSrc":"9902:3:32","nodeType":"YulTypedName","src":"9902:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9910:5:32","nodeType":"YulTypedName","src":"9910:5:32","type":""}],"src":"9867:133:32"},{"body":{"nativeSrc":"10086:388:32","nodeType":"YulBlock","src":"10086:388:32","statements":[{"body":{"nativeSrc":"10132:83:32","nodeType":"YulBlock","src":"10132:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10134:77:32","nodeType":"YulIdentifier","src":"10134:77:32"},"nativeSrc":"10134:79:32","nodeType":"YulFunctionCall","src":"10134:79:32"},"nativeSrc":"10134:79:32","nodeType":"YulExpressionStatement","src":"10134:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10107:7:32","nodeType":"YulIdentifier","src":"10107:7:32"},{"name":"headStart","nativeSrc":"10116:9:32","nodeType":"YulIdentifier","src":"10116:9:32"}],"functionName":{"name":"sub","nativeSrc":"10103:3:32","nodeType":"YulIdentifier","src":"10103:3:32"},"nativeSrc":"10103:23:32","nodeType":"YulFunctionCall","src":"10103:23:32"},{"kind":"number","nativeSrc":"10128:2:32","nodeType":"YulLiteral","src":"10128:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10099:3:32","nodeType":"YulIdentifier","src":"10099:3:32"},"nativeSrc":"10099:32:32","nodeType":"YulFunctionCall","src":"10099:32:32"},"nativeSrc":"10096:119:32","nodeType":"YulIf","src":"10096:119:32"},{"nativeSrc":"10225:117:32","nodeType":"YulBlock","src":"10225:117:32","statements":[{"nativeSrc":"10240:15:32","nodeType":"YulVariableDeclaration","src":"10240:15:32","value":{"kind":"number","nativeSrc":"10254:1:32","nodeType":"YulLiteral","src":"10254:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10244:6:32","nodeType":"YulTypedName","src":"10244:6:32","type":""}]},{"nativeSrc":"10269:63:32","nodeType":"YulAssignment","src":"10269:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10304:9:32","nodeType":"YulIdentifier","src":"10304:9:32"},{"name":"offset","nativeSrc":"10315:6:32","nodeType":"YulIdentifier","src":"10315:6:32"}],"functionName":{"name":"add","nativeSrc":"10300:3:32","nodeType":"YulIdentifier","src":"10300:3:32"},"nativeSrc":"10300:22:32","nodeType":"YulFunctionCall","src":"10300:22:32"},{"name":"dataEnd","nativeSrc":"10324:7:32","nodeType":"YulIdentifier","src":"10324:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10279:20:32","nodeType":"YulIdentifier","src":"10279:20:32"},"nativeSrc":"10279:53:32","nodeType":"YulFunctionCall","src":"10279:53:32"},"variableNames":[{"name":"value0","nativeSrc":"10269:6:32","nodeType":"YulIdentifier","src":"10269:6:32"}]}]},{"nativeSrc":"10352:115:32","nodeType":"YulBlock","src":"10352:115:32","statements":[{"nativeSrc":"10367:16:32","nodeType":"YulVariableDeclaration","src":"10367:16:32","value":{"kind":"number","nativeSrc":"10381:2:32","nodeType":"YulLiteral","src":"10381:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10371:6:32","nodeType":"YulTypedName","src":"10371:6:32","type":""}]},{"nativeSrc":"10397:60:32","nodeType":"YulAssignment","src":"10397:60:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10429:9:32","nodeType":"YulIdentifier","src":"10429:9:32"},{"name":"offset","nativeSrc":"10440:6:32","nodeType":"YulIdentifier","src":"10440:6:32"}],"functionName":{"name":"add","nativeSrc":"10425:3:32","nodeType":"YulIdentifier","src":"10425:3:32"},"nativeSrc":"10425:22:32","nodeType":"YulFunctionCall","src":"10425:22:32"},{"name":"dataEnd","nativeSrc":"10449:7:32","nodeType":"YulIdentifier","src":"10449:7:32"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"10407:17:32","nodeType":"YulIdentifier","src":"10407:17:32"},"nativeSrc":"10407:50:32","nodeType":"YulFunctionCall","src":"10407:50:32"},"variableNames":[{"name":"value1","nativeSrc":"10397:6:32","nodeType":"YulIdentifier","src":"10397:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"10006:468:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10048:9:32","nodeType":"YulTypedName","src":"10048:9:32","type":""},{"name":"dataEnd","nativeSrc":"10059:7:32","nodeType":"YulTypedName","src":"10059:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10071:6:32","nodeType":"YulTypedName","src":"10071:6:32","type":""},{"name":"value1","nativeSrc":"10079:6:32","nodeType":"YulTypedName","src":"10079:6:32","type":""}],"src":"10006:468:32"},{"body":{"nativeSrc":"10606:817:32","nodeType":"YulBlock","src":"10606:817:32","statements":[{"body":{"nativeSrc":"10653:83:32","nodeType":"YulBlock","src":"10653:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10655:77:32","nodeType":"YulIdentifier","src":"10655:77:32"},"nativeSrc":"10655:79:32","nodeType":"YulFunctionCall","src":"10655:79:32"},"nativeSrc":"10655:79:32","nodeType":"YulExpressionStatement","src":"10655:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10627:7:32","nodeType":"YulIdentifier","src":"10627:7:32"},{"name":"headStart","nativeSrc":"10636:9:32","nodeType":"YulIdentifier","src":"10636:9:32"}],"functionName":{"name":"sub","nativeSrc":"10623:3:32","nodeType":"YulIdentifier","src":"10623:3:32"},"nativeSrc":"10623:23:32","nodeType":"YulFunctionCall","src":"10623:23:32"},{"kind":"number","nativeSrc":"10648:3:32","nodeType":"YulLiteral","src":"10648:3:32","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"10619:3:32","nodeType":"YulIdentifier","src":"10619:3:32"},"nativeSrc":"10619:33:32","nodeType":"YulFunctionCall","src":"10619:33:32"},"nativeSrc":"10616:120:32","nodeType":"YulIf","src":"10616:120:32"},{"nativeSrc":"10746:117:32","nodeType":"YulBlock","src":"10746:117:32","statements":[{"nativeSrc":"10761:15:32","nodeType":"YulVariableDeclaration","src":"10761:15:32","value":{"kind":"number","nativeSrc":"10775:1:32","nodeType":"YulLiteral","src":"10775:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10765:6:32","nodeType":"YulTypedName","src":"10765:6:32","type":""}]},{"nativeSrc":"10790:63:32","nodeType":"YulAssignment","src":"10790:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10825:9:32","nodeType":"YulIdentifier","src":"10825:9:32"},{"name":"offset","nativeSrc":"10836:6:32","nodeType":"YulIdentifier","src":"10836:6:32"}],"functionName":{"name":"add","nativeSrc":"10821:3:32","nodeType":"YulIdentifier","src":"10821:3:32"},"nativeSrc":"10821:22:32","nodeType":"YulFunctionCall","src":"10821:22:32"},{"name":"dataEnd","nativeSrc":"10845:7:32","nodeType":"YulIdentifier","src":"10845:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10800:20:32","nodeType":"YulIdentifier","src":"10800:20:32"},"nativeSrc":"10800:53:32","nodeType":"YulFunctionCall","src":"10800:53:32"},"variableNames":[{"name":"value0","nativeSrc":"10790:6:32","nodeType":"YulIdentifier","src":"10790:6:32"}]}]},{"nativeSrc":"10873:118:32","nodeType":"YulBlock","src":"10873:118:32","statements":[{"nativeSrc":"10888:16:32","nodeType":"YulVariableDeclaration","src":"10888:16:32","value":{"kind":"number","nativeSrc":"10902:2:32","nodeType":"YulLiteral","src":"10902:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10892:6:32","nodeType":"YulTypedName","src":"10892:6:32","type":""}]},{"nativeSrc":"10918:63:32","nodeType":"YulAssignment","src":"10918:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10953:9:32","nodeType":"YulIdentifier","src":"10953:9:32"},{"name":"offset","nativeSrc":"10964:6:32","nodeType":"YulIdentifier","src":"10964:6:32"}],"functionName":{"name":"add","nativeSrc":"10949:3:32","nodeType":"YulIdentifier","src":"10949:3:32"},"nativeSrc":"10949:22:32","nodeType":"YulFunctionCall","src":"10949:22:32"},{"name":"dataEnd","nativeSrc":"10973:7:32","nodeType":"YulIdentifier","src":"10973:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10928:20:32","nodeType":"YulIdentifier","src":"10928:20:32"},"nativeSrc":"10928:53:32","nodeType":"YulFunctionCall","src":"10928:53:32"},"variableNames":[{"name":"value1","nativeSrc":"10918:6:32","nodeType":"YulIdentifier","src":"10918:6:32"}]}]},{"nativeSrc":"11001:118:32","nodeType":"YulBlock","src":"11001:118:32","statements":[{"nativeSrc":"11016:16:32","nodeType":"YulVariableDeclaration","src":"11016:16:32","value":{"kind":"number","nativeSrc":"11030:2:32","nodeType":"YulLiteral","src":"11030:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"11020:6:32","nodeType":"YulTypedName","src":"11020:6:32","type":""}]},{"nativeSrc":"11046:63:32","nodeType":"YulAssignment","src":"11046:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11081:9:32","nodeType":"YulIdentifier","src":"11081:9:32"},{"name":"offset","nativeSrc":"11092:6:32","nodeType":"YulIdentifier","src":"11092:6:32"}],"functionName":{"name":"add","nativeSrc":"11077:3:32","nodeType":"YulIdentifier","src":"11077:3:32"},"nativeSrc":"11077:22:32","nodeType":"YulFunctionCall","src":"11077:22:32"},{"name":"dataEnd","nativeSrc":"11101:7:32","nodeType":"YulIdentifier","src":"11101:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11056:20:32","nodeType":"YulIdentifier","src":"11056:20:32"},"nativeSrc":"11056:53:32","nodeType":"YulFunctionCall","src":"11056:53:32"},"variableNames":[{"name":"value2","nativeSrc":"11046:6:32","nodeType":"YulIdentifier","src":"11046:6:32"}]}]},{"nativeSrc":"11129:287:32","nodeType":"YulBlock","src":"11129:287:32","statements":[{"nativeSrc":"11144:46:32","nodeType":"YulVariableDeclaration","src":"11144:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11175:9:32","nodeType":"YulIdentifier","src":"11175:9:32"},{"kind":"number","nativeSrc":"11186:2:32","nodeType":"YulLiteral","src":"11186:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11171:3:32","nodeType":"YulIdentifier","src":"11171:3:32"},"nativeSrc":"11171:18:32","nodeType":"YulFunctionCall","src":"11171:18:32"}],"functionName":{"name":"calldataload","nativeSrc":"11158:12:32","nodeType":"YulIdentifier","src":"11158:12:32"},"nativeSrc":"11158:32:32","nodeType":"YulFunctionCall","src":"11158:32:32"},"variables":[{"name":"offset","nativeSrc":"11148:6:32","nodeType":"YulTypedName","src":"11148:6:32","type":""}]},{"body":{"nativeSrc":"11237:83:32","nodeType":"YulBlock","src":"11237:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11239:77:32","nodeType":"YulIdentifier","src":"11239:77:32"},"nativeSrc":"11239:79:32","nodeType":"YulFunctionCall","src":"11239:79:32"},"nativeSrc":"11239:79:32","nodeType":"YulExpressionStatement","src":"11239:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11209:6:32","nodeType":"YulIdentifier","src":"11209:6:32"},{"kind":"number","nativeSrc":"11217:18:32","nodeType":"YulLiteral","src":"11217:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11206:2:32","nodeType":"YulIdentifier","src":"11206:2:32"},"nativeSrc":"11206:30:32","nodeType":"YulFunctionCall","src":"11206:30:32"},"nativeSrc":"11203:117:32","nodeType":"YulIf","src":"11203:117:32"},{"nativeSrc":"11334:72:32","nodeType":"YulAssignment","src":"11334:72:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11378:9:32","nodeType":"YulIdentifier","src":"11378:9:32"},{"name":"offset","nativeSrc":"11389:6:32","nodeType":"YulIdentifier","src":"11389:6:32"}],"functionName":{"name":"add","nativeSrc":"11374:3:32","nodeType":"YulIdentifier","src":"11374:3:32"},"nativeSrc":"11374:22:32","nodeType":"YulFunctionCall","src":"11374:22:32"},{"name":"dataEnd","nativeSrc":"11398:7:32","nodeType":"YulIdentifier","src":"11398:7:32"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"11344:29:32","nodeType":"YulIdentifier","src":"11344:29:32"},"nativeSrc":"11344:62:32","nodeType":"YulFunctionCall","src":"11344:62:32"},"variableNames":[{"name":"value3","nativeSrc":"11334:6:32","nodeType":"YulIdentifier","src":"11334:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"10480:943:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10552:9:32","nodeType":"YulTypedName","src":"10552:9:32","type":""},{"name":"dataEnd","nativeSrc":"10563:7:32","nodeType":"YulTypedName","src":"10563:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10575:6:32","nodeType":"YulTypedName","src":"10575:6:32","type":""},{"name":"value1","nativeSrc":"10583:6:32","nodeType":"YulTypedName","src":"10583:6:32","type":""},{"name":"value2","nativeSrc":"10591:6:32","nodeType":"YulTypedName","src":"10591:6:32","type":""},{"name":"value3","nativeSrc":"10599:6:32","nodeType":"YulTypedName","src":"10599:6:32","type":""}],"src":"10480:943:32"},{"body":{"nativeSrc":"11512:391:32","nodeType":"YulBlock","src":"11512:391:32","statements":[{"body":{"nativeSrc":"11558:83:32","nodeType":"YulBlock","src":"11558:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11560:77:32","nodeType":"YulIdentifier","src":"11560:77:32"},"nativeSrc":"11560:79:32","nodeType":"YulFunctionCall","src":"11560:79:32"},"nativeSrc":"11560:79:32","nodeType":"YulExpressionStatement","src":"11560:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11533:7:32","nodeType":"YulIdentifier","src":"11533:7:32"},{"name":"headStart","nativeSrc":"11542:9:32","nodeType":"YulIdentifier","src":"11542:9:32"}],"functionName":{"name":"sub","nativeSrc":"11529:3:32","nodeType":"YulIdentifier","src":"11529:3:32"},"nativeSrc":"11529:23:32","nodeType":"YulFunctionCall","src":"11529:23:32"},{"kind":"number","nativeSrc":"11554:2:32","nodeType":"YulLiteral","src":"11554:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11525:3:32","nodeType":"YulIdentifier","src":"11525:3:32"},"nativeSrc":"11525:32:32","nodeType":"YulFunctionCall","src":"11525:32:32"},"nativeSrc":"11522:119:32","nodeType":"YulIf","src":"11522:119:32"},{"nativeSrc":"11651:117:32","nodeType":"YulBlock","src":"11651:117:32","statements":[{"nativeSrc":"11666:15:32","nodeType":"YulVariableDeclaration","src":"11666:15:32","value":{"kind":"number","nativeSrc":"11680:1:32","nodeType":"YulLiteral","src":"11680:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11670:6:32","nodeType":"YulTypedName","src":"11670:6:32","type":""}]},{"nativeSrc":"11695:63:32","nodeType":"YulAssignment","src":"11695:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11730:9:32","nodeType":"YulIdentifier","src":"11730:9:32"},{"name":"offset","nativeSrc":"11741:6:32","nodeType":"YulIdentifier","src":"11741:6:32"}],"functionName":{"name":"add","nativeSrc":"11726:3:32","nodeType":"YulIdentifier","src":"11726:3:32"},"nativeSrc":"11726:22:32","nodeType":"YulFunctionCall","src":"11726:22:32"},{"name":"dataEnd","nativeSrc":"11750:7:32","nodeType":"YulIdentifier","src":"11750:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11705:20:32","nodeType":"YulIdentifier","src":"11705:20:32"},"nativeSrc":"11705:53:32","nodeType":"YulFunctionCall","src":"11705:53:32"},"variableNames":[{"name":"value0","nativeSrc":"11695:6:32","nodeType":"YulIdentifier","src":"11695:6:32"}]}]},{"nativeSrc":"11778:118:32","nodeType":"YulBlock","src":"11778:118:32","statements":[{"nativeSrc":"11793:16:32","nodeType":"YulVariableDeclaration","src":"11793:16:32","value":{"kind":"number","nativeSrc":"11807:2:32","nodeType":"YulLiteral","src":"11807:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11797:6:32","nodeType":"YulTypedName","src":"11797:6:32","type":""}]},{"nativeSrc":"11823:63:32","nodeType":"YulAssignment","src":"11823:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11858:9:32","nodeType":"YulIdentifier","src":"11858:9:32"},{"name":"offset","nativeSrc":"11869:6:32","nodeType":"YulIdentifier","src":"11869:6:32"}],"functionName":{"name":"add","nativeSrc":"11854:3:32","nodeType":"YulIdentifier","src":"11854:3:32"},"nativeSrc":"11854:22:32","nodeType":"YulFunctionCall","src":"11854:22:32"},{"name":"dataEnd","nativeSrc":"11878:7:32","nodeType":"YulIdentifier","src":"11878:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11833:20:32","nodeType":"YulIdentifier","src":"11833:20:32"},"nativeSrc":"11833:53:32","nodeType":"YulFunctionCall","src":"11833:53:32"},"variableNames":[{"name":"value1","nativeSrc":"11823:6:32","nodeType":"YulIdentifier","src":"11823:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"11429:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11474:9:32","nodeType":"YulTypedName","src":"11474:9:32","type":""},{"name":"dataEnd","nativeSrc":"11485:7:32","nodeType":"YulTypedName","src":"11485:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11497:6:32","nodeType":"YulTypedName","src":"11497:6:32","type":""},{"name":"value1","nativeSrc":"11505:6:32","nodeType":"YulTypedName","src":"11505:6:32","type":""}],"src":"11429:474:32"},{"body":{"nativeSrc":"11937:152:32","nodeType":"YulBlock","src":"11937:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11954:1:32","nodeType":"YulLiteral","src":"11954:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"11957:77:32","nodeType":"YulLiteral","src":"11957:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11947:6:32","nodeType":"YulIdentifier","src":"11947:6:32"},"nativeSrc":"11947:88:32","nodeType":"YulFunctionCall","src":"11947:88:32"},"nativeSrc":"11947:88:32","nodeType":"YulExpressionStatement","src":"11947:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12051:1:32","nodeType":"YulLiteral","src":"12051:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"12054:4:32","nodeType":"YulLiteral","src":"12054:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"12044:6:32","nodeType":"YulIdentifier","src":"12044:6:32"},"nativeSrc":"12044:15:32","nodeType":"YulFunctionCall","src":"12044:15:32"},"nativeSrc":"12044:15:32","nodeType":"YulExpressionStatement","src":"12044:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12075:1:32","nodeType":"YulLiteral","src":"12075:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"12078:4:32","nodeType":"YulLiteral","src":"12078:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12068:6:32","nodeType":"YulIdentifier","src":"12068:6:32"},"nativeSrc":"12068:15:32","nodeType":"YulFunctionCall","src":"12068:15:32"},"nativeSrc":"12068:15:32","nodeType":"YulExpressionStatement","src":"12068:15:32"}]},"name":"panic_error_0x22","nativeSrc":"11909:180:32","nodeType":"YulFunctionDefinition","src":"11909:180:32"},{"body":{"nativeSrc":"12146:269:32","nodeType":"YulBlock","src":"12146:269:32","statements":[{"nativeSrc":"12156:22:32","nodeType":"YulAssignment","src":"12156:22:32","value":{"arguments":[{"name":"data","nativeSrc":"12170:4:32","nodeType":"YulIdentifier","src":"12170:4:32"},{"kind":"number","nativeSrc":"12176:1:32","nodeType":"YulLiteral","src":"12176:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"12166:3:32","nodeType":"YulIdentifier","src":"12166:3:32"},"nativeSrc":"12166:12:32","nodeType":"YulFunctionCall","src":"12166:12:32"},"variableNames":[{"name":"length","nativeSrc":"12156:6:32","nodeType":"YulIdentifier","src":"12156:6:32"}]},{"nativeSrc":"12187:38:32","nodeType":"YulVariableDeclaration","src":"12187:38:32","value":{"arguments":[{"name":"data","nativeSrc":"12217:4:32","nodeType":"YulIdentifier","src":"12217:4:32"},{"kind":"number","nativeSrc":"12223:1:32","nodeType":"YulLiteral","src":"12223:1:32","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12213:3:32","nodeType":"YulIdentifier","src":"12213:3:32"},"nativeSrc":"12213:12:32","nodeType":"YulFunctionCall","src":"12213:12:32"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"12191:18:32","nodeType":"YulTypedName","src":"12191:18:32","type":""}]},{"body":{"nativeSrc":"12264:51:32","nodeType":"YulBlock","src":"12264:51:32","statements":[{"nativeSrc":"12278:27:32","nodeType":"YulAssignment","src":"12278:27:32","value":{"arguments":[{"name":"length","nativeSrc":"12292:6:32","nodeType":"YulIdentifier","src":"12292:6:32"},{"kind":"number","nativeSrc":"12300:4:32","nodeType":"YulLiteral","src":"12300:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12288:3:32","nodeType":"YulIdentifier","src":"12288:3:32"},"nativeSrc":"12288:17:32","nodeType":"YulFunctionCall","src":"12288:17:32"},"variableNames":[{"name":"length","nativeSrc":"12278:6:32","nodeType":"YulIdentifier","src":"12278:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12244:18:32","nodeType":"YulIdentifier","src":"12244:18:32"}],"functionName":{"name":"iszero","nativeSrc":"12237:6:32","nodeType":"YulIdentifier","src":"12237:6:32"},"nativeSrc":"12237:26:32","nodeType":"YulFunctionCall","src":"12237:26:32"},"nativeSrc":"12234:81:32","nodeType":"YulIf","src":"12234:81:32"},{"body":{"nativeSrc":"12367:42:32","nodeType":"YulBlock","src":"12367:42:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"12381:16:32","nodeType":"YulIdentifier","src":"12381:16:32"},"nativeSrc":"12381:18:32","nodeType":"YulFunctionCall","src":"12381:18:32"},"nativeSrc":"12381:18:32","nodeType":"YulExpressionStatement","src":"12381:18:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12331:18:32","nodeType":"YulIdentifier","src":"12331:18:32"},{"arguments":[{"name":"length","nativeSrc":"12354:6:32","nodeType":"YulIdentifier","src":"12354:6:32"},{"kind":"number","nativeSrc":"12362:2:32","nodeType":"YulLiteral","src":"12362:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12351:2:32","nodeType":"YulIdentifier","src":"12351:2:32"},"nativeSrc":"12351:14:32","nodeType":"YulFunctionCall","src":"12351:14:32"}],"functionName":{"name":"eq","nativeSrc":"12328:2:32","nodeType":"YulIdentifier","src":"12328:2:32"},"nativeSrc":"12328:38:32","nodeType":"YulFunctionCall","src":"12328:38:32"},"nativeSrc":"12325:84:32","nodeType":"YulIf","src":"12325:84:32"}]},"name":"extract_byte_array_length","nativeSrc":"12095:320:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12130:4:32","nodeType":"YulTypedName","src":"12130:4:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12139:6:32","nodeType":"YulTypedName","src":"12139:6:32","type":""}],"src":"12095:320:32"},{"body":{"nativeSrc":"12575:288:32","nodeType":"YulBlock","src":"12575:288:32","statements":[{"nativeSrc":"12585:26:32","nodeType":"YulAssignment","src":"12585:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"12597:9:32","nodeType":"YulIdentifier","src":"12597:9:32"},{"kind":"number","nativeSrc":"12608:2:32","nodeType":"YulLiteral","src":"12608:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12593:3:32","nodeType":"YulIdentifier","src":"12593:3:32"},"nativeSrc":"12593:18:32","nodeType":"YulFunctionCall","src":"12593:18:32"},"variableNames":[{"name":"tail","nativeSrc":"12585:4:32","nodeType":"YulIdentifier","src":"12585:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12665:6:32","nodeType":"YulIdentifier","src":"12665:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12678:9:32","nodeType":"YulIdentifier","src":"12678:9:32"},{"kind":"number","nativeSrc":"12689:1:32","nodeType":"YulLiteral","src":"12689:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12674:3:32","nodeType":"YulIdentifier","src":"12674:3:32"},"nativeSrc":"12674:17:32","nodeType":"YulFunctionCall","src":"12674:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12621:43:32","nodeType":"YulIdentifier","src":"12621:43:32"},"nativeSrc":"12621:71:32","nodeType":"YulFunctionCall","src":"12621:71:32"},"nativeSrc":"12621:71:32","nodeType":"YulExpressionStatement","src":"12621:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12746:6:32","nodeType":"YulIdentifier","src":"12746:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12759:9:32","nodeType":"YulIdentifier","src":"12759:9:32"},{"kind":"number","nativeSrc":"12770:2:32","nodeType":"YulLiteral","src":"12770:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12755:3:32","nodeType":"YulIdentifier","src":"12755:3:32"},"nativeSrc":"12755:18:32","nodeType":"YulFunctionCall","src":"12755:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12702:43:32","nodeType":"YulIdentifier","src":"12702:43:32"},"nativeSrc":"12702:72:32","nodeType":"YulFunctionCall","src":"12702:72:32"},"nativeSrc":"12702:72:32","nodeType":"YulExpressionStatement","src":"12702:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12828:6:32","nodeType":"YulIdentifier","src":"12828:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12841:9:32","nodeType":"YulIdentifier","src":"12841:9:32"},{"kind":"number","nativeSrc":"12852:2:32","nodeType":"YulLiteral","src":"12852:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12837:3:32","nodeType":"YulIdentifier","src":"12837:3:32"},"nativeSrc":"12837:18:32","nodeType":"YulFunctionCall","src":"12837:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12784:43:32","nodeType":"YulIdentifier","src":"12784:43:32"},"nativeSrc":"12784:72:32","nodeType":"YulFunctionCall","src":"12784:72:32"},"nativeSrc":"12784:72:32","nodeType":"YulExpressionStatement","src":"12784:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"12421:442:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12531:9:32","nodeType":"YulTypedName","src":"12531:9:32","type":""},{"name":"value2","nativeSrc":"12543:6:32","nodeType":"YulTypedName","src":"12543:6:32","type":""},{"name":"value1","nativeSrc":"12551:6:32","nodeType":"YulTypedName","src":"12551:6:32","type":""},{"name":"value0","nativeSrc":"12559:6:32","nodeType":"YulTypedName","src":"12559:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12570:4:32","nodeType":"YulTypedName","src":"12570:4:32","type":""}],"src":"12421:442:32"},{"body":{"nativeSrc":"12897:152:32","nodeType":"YulBlock","src":"12897:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12914:1:32","nodeType":"YulLiteral","src":"12914:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"12917:77:32","nodeType":"YulLiteral","src":"12917:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12907:6:32","nodeType":"YulIdentifier","src":"12907:6:32"},"nativeSrc":"12907:88:32","nodeType":"YulFunctionCall","src":"12907:88:32"},"nativeSrc":"12907:88:32","nodeType":"YulExpressionStatement","src":"12907:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13011:1:32","nodeType":"YulLiteral","src":"13011:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"13014:4:32","nodeType":"YulLiteral","src":"13014:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13004:6:32","nodeType":"YulIdentifier","src":"13004:6:32"},"nativeSrc":"13004:15:32","nodeType":"YulFunctionCall","src":"13004:15:32"},"nativeSrc":"13004:15:32","nodeType":"YulExpressionStatement","src":"13004:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13035:1:32","nodeType":"YulLiteral","src":"13035:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"13038:4:32","nodeType":"YulLiteral","src":"13038:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13028:6:32","nodeType":"YulIdentifier","src":"13028:6:32"},"nativeSrc":"13028:15:32","nodeType":"YulFunctionCall","src":"13028:15:32"},"nativeSrc":"13028:15:32","nodeType":"YulExpressionStatement","src":"13028:15:32"}]},"name":"panic_error_0x11","nativeSrc":"12869:180:32","nodeType":"YulFunctionDefinition","src":"12869:180:32"},{"body":{"nativeSrc":"13098:190:32","nodeType":"YulBlock","src":"13098:190:32","statements":[{"nativeSrc":"13108:33:32","nodeType":"YulAssignment","src":"13108:33:32","value":{"arguments":[{"name":"value","nativeSrc":"13135:5:32","nodeType":"YulIdentifier","src":"13135:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13117:17:32","nodeType":"YulIdentifier","src":"13117:17:32"},"nativeSrc":"13117:24:32","nodeType":"YulFunctionCall","src":"13117:24:32"},"variableNames":[{"name":"value","nativeSrc":"13108:5:32","nodeType":"YulIdentifier","src":"13108:5:32"}]},{"body":{"nativeSrc":"13231:22:32","nodeType":"YulBlock","src":"13231:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13233:16:32","nodeType":"YulIdentifier","src":"13233:16:32"},"nativeSrc":"13233:18:32","nodeType":"YulFunctionCall","src":"13233:18:32"},"nativeSrc":"13233:18:32","nodeType":"YulExpressionStatement","src":"13233:18:32"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"13156:5:32","nodeType":"YulIdentifier","src":"13156:5:32"},{"kind":"number","nativeSrc":"13163:66:32","nodeType":"YulLiteral","src":"13163:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"13153:2:32","nodeType":"YulIdentifier","src":"13153:2:32"},"nativeSrc":"13153:77:32","nodeType":"YulFunctionCall","src":"13153:77:32"},"nativeSrc":"13150:103:32","nodeType":"YulIf","src":"13150:103:32"},{"nativeSrc":"13262:20:32","nodeType":"YulAssignment","src":"13262:20:32","value":{"arguments":[{"name":"value","nativeSrc":"13273:5:32","nodeType":"YulIdentifier","src":"13273:5:32"},{"kind":"number","nativeSrc":"13280:1:32","nodeType":"YulLiteral","src":"13280:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"13269:3:32","nodeType":"YulIdentifier","src":"13269:3:32"},"nativeSrc":"13269:13:32","nodeType":"YulFunctionCall","src":"13269:13:32"},"variableNames":[{"name":"ret","nativeSrc":"13262:3:32","nodeType":"YulIdentifier","src":"13262:3:32"}]}]},"name":"increment_t_uint256","nativeSrc":"13055:233:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13084:5:32","nodeType":"YulTypedName","src":"13084:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"13094:3:32","nodeType":"YulTypedName","src":"13094:3:32","type":""}],"src":"13055:233:32"},{"body":{"nativeSrc":"13347:32:32","nodeType":"YulBlock","src":"13347:32:32","statements":[{"nativeSrc":"13357:16:32","nodeType":"YulAssignment","src":"13357:16:32","value":{"name":"value","nativeSrc":"13368:5:32","nodeType":"YulIdentifier","src":"13368:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"13357:7:32","nodeType":"YulIdentifier","src":"13357:7:32"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"13294:85:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13329:5:32","nodeType":"YulTypedName","src":"13329:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"13339:7:32","nodeType":"YulTypedName","src":"13339:7:32","type":""}],"src":"13294:85:32"},{"body":{"nativeSrc":"13429:57:32","nodeType":"YulBlock","src":"13429:57:32","statements":[{"nativeSrc":"13439:41:32","nodeType":"YulAssignment","src":"13439:41:32","value":{"arguments":[{"name":"value","nativeSrc":"13454:5:32","nodeType":"YulIdentifier","src":"13454:5:32"},{"kind":"number","nativeSrc":"13461:18:32","nodeType":"YulLiteral","src":"13461:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"13450:3:32","nodeType":"YulIdentifier","src":"13450:3:32"},"nativeSrc":"13450:30:32","nodeType":"YulFunctionCall","src":"13450:30:32"},"variableNames":[{"name":"cleaned","nativeSrc":"13439:7:32","nodeType":"YulIdentifier","src":"13439:7:32"}]}]},"name":"cleanup_t_uint64","nativeSrc":"13385:101:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13411:5:32","nodeType":"YulTypedName","src":"13411:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"13421:7:32","nodeType":"YulTypedName","src":"13421:7:32","type":""}],"src":"13385:101:32"},{"body":{"nativeSrc":"13524:28:32","nodeType":"YulBlock","src":"13524:28:32","statements":[{"nativeSrc":"13534:12:32","nodeType":"YulAssignment","src":"13534:12:32","value":{"name":"value","nativeSrc":"13541:5:32","nodeType":"YulIdentifier","src":"13541:5:32"},"variableNames":[{"name":"ret","nativeSrc":"13534:3:32","nodeType":"YulIdentifier","src":"13534:3:32"}]}]},"name":"identity","nativeSrc":"13492:60:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13510:5:32","nodeType":"YulTypedName","src":"13510:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"13520:3:32","nodeType":"YulTypedName","src":"13520:3:32","type":""}],"src":"13492:60:32"},{"body":{"nativeSrc":"13625:89:32","nodeType":"YulBlock","src":"13625:89:32","statements":[{"nativeSrc":"13635:73:32","nodeType":"YulAssignment","src":"13635:73:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13700:5:32","nodeType":"YulIdentifier","src":"13700:5:32"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"13674:25:32","nodeType":"YulIdentifier","src":"13674:25:32"},"nativeSrc":"13674:32:32","nodeType":"YulFunctionCall","src":"13674:32:32"}],"functionName":{"name":"identity","nativeSrc":"13665:8:32","nodeType":"YulIdentifier","src":"13665:8:32"},"nativeSrc":"13665:42:32","nodeType":"YulFunctionCall","src":"13665:42:32"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"13648:16:32","nodeType":"YulIdentifier","src":"13648:16:32"},"nativeSrc":"13648:60:32","nodeType":"YulFunctionCall","src":"13648:60:32"},"variableNames":[{"name":"converted","nativeSrc":"13635:9:32","nodeType":"YulIdentifier","src":"13635:9:32"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"13558:156:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13605:5:32","nodeType":"YulTypedName","src":"13605:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"13615:9:32","nodeType":"YulTypedName","src":"13615:9:32","type":""}],"src":"13558:156:32"},{"body":{"nativeSrc":"13792:73:32","nodeType":"YulBlock","src":"13792:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13809:3:32","nodeType":"YulIdentifier","src":"13809:3:32"},{"arguments":[{"name":"value","nativeSrc":"13852:5:32","nodeType":"YulIdentifier","src":"13852:5:32"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"13814:37:32","nodeType":"YulIdentifier","src":"13814:37:32"},"nativeSrc":"13814:44:32","nodeType":"YulFunctionCall","src":"13814:44:32"}],"functionName":{"name":"mstore","nativeSrc":"13802:6:32","nodeType":"YulIdentifier","src":"13802:6:32"},"nativeSrc":"13802:57:32","nodeType":"YulFunctionCall","src":"13802:57:32"},"nativeSrc":"13802:57:32","nodeType":"YulExpressionStatement","src":"13802:57:32"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"13720:145:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13780:5:32","nodeType":"YulTypedName","src":"13780:5:32","type":""},{"name":"pos","nativeSrc":"13787:3:32","nodeType":"YulTypedName","src":"13787:3:32","type":""}],"src":"13720:145:32"},{"body":{"nativeSrc":"13976:131:32","nodeType":"YulBlock","src":"13976:131:32","statements":[{"nativeSrc":"13986:26:32","nodeType":"YulAssignment","src":"13986:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"13998:9:32","nodeType":"YulIdentifier","src":"13998:9:32"},{"kind":"number","nativeSrc":"14009:2:32","nodeType":"YulLiteral","src":"14009:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13994:3:32","nodeType":"YulIdentifier","src":"13994:3:32"},"nativeSrc":"13994:18:32","nodeType":"YulFunctionCall","src":"13994:18:32"},"variableNames":[{"name":"tail","nativeSrc":"13986:4:32","nodeType":"YulIdentifier","src":"13986:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14073:6:32","nodeType":"YulIdentifier","src":"14073:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"14086:9:32","nodeType":"YulIdentifier","src":"14086:9:32"},{"kind":"number","nativeSrc":"14097:1:32","nodeType":"YulLiteral","src":"14097:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14082:3:32","nodeType":"YulIdentifier","src":"14082:3:32"},"nativeSrc":"14082:17:32","nodeType":"YulFunctionCall","src":"14082:17:32"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"14022:50:32","nodeType":"YulIdentifier","src":"14022:50:32"},"nativeSrc":"14022:78:32","nodeType":"YulFunctionCall","src":"14022:78:32"},"nativeSrc":"14022:78:32","nodeType":"YulExpressionStatement","src":"14022:78:32"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"13871:236:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13948:9:32","nodeType":"YulTypedName","src":"13948:9:32","type":""},{"name":"value0","nativeSrc":"13960:6:32","nodeType":"YulTypedName","src":"13960:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13971:4:32","nodeType":"YulTypedName","src":"13971:4:32","type":""}],"src":"13871:236:32"},{"body":{"nativeSrc":"14227:34:32","nodeType":"YulBlock","src":"14227:34:32","statements":[{"nativeSrc":"14237:18:32","nodeType":"YulAssignment","src":"14237:18:32","value":{"name":"pos","nativeSrc":"14252:3:32","nodeType":"YulIdentifier","src":"14252:3:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"14237:11:32","nodeType":"YulIdentifier","src":"14237:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14113:148:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14199:3:32","nodeType":"YulTypedName","src":"14199:3:32","type":""},{"name":"length","nativeSrc":"14204:6:32","nodeType":"YulTypedName","src":"14204:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14215:11:32","nodeType":"YulTypedName","src":"14215:11:32","type":""}],"src":"14113:148:32"},{"body":{"nativeSrc":"14377:280:32","nodeType":"YulBlock","src":"14377:280:32","statements":[{"nativeSrc":"14387:53:32","nodeType":"YulVariableDeclaration","src":"14387:53:32","value":{"arguments":[{"name":"value","nativeSrc":"14434:5:32","nodeType":"YulIdentifier","src":"14434:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"14401:32:32","nodeType":"YulIdentifier","src":"14401:32:32"},"nativeSrc":"14401:39:32","nodeType":"YulFunctionCall","src":"14401:39:32"},"variables":[{"name":"length","nativeSrc":"14391:6:32","nodeType":"YulTypedName","src":"14391:6:32","type":""}]},{"nativeSrc":"14449:96:32","nodeType":"YulAssignment","src":"14449:96:32","value":{"arguments":[{"name":"pos","nativeSrc":"14533:3:32","nodeType":"YulIdentifier","src":"14533:3:32"},{"name":"length","nativeSrc":"14538:6:32","nodeType":"YulIdentifier","src":"14538:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14456:76:32","nodeType":"YulIdentifier","src":"14456:76:32"},"nativeSrc":"14456:89:32","nodeType":"YulFunctionCall","src":"14456:89:32"},"variableNames":[{"name":"pos","nativeSrc":"14449:3:32","nodeType":"YulIdentifier","src":"14449:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14593:5:32","nodeType":"YulIdentifier","src":"14593:5:32"},{"kind":"number","nativeSrc":"14600:4:32","nodeType":"YulLiteral","src":"14600:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14589:3:32","nodeType":"YulIdentifier","src":"14589:3:32"},"nativeSrc":"14589:16:32","nodeType":"YulFunctionCall","src":"14589:16:32"},{"name":"pos","nativeSrc":"14607:3:32","nodeType":"YulIdentifier","src":"14607:3:32"},{"name":"length","nativeSrc":"14612:6:32","nodeType":"YulIdentifier","src":"14612:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"14554:34:32","nodeType":"YulIdentifier","src":"14554:34:32"},"nativeSrc":"14554:65:32","nodeType":"YulFunctionCall","src":"14554:65:32"},"nativeSrc":"14554:65:32","nodeType":"YulExpressionStatement","src":"14554:65:32"},{"nativeSrc":"14628:23:32","nodeType":"YulAssignment","src":"14628:23:32","value":{"arguments":[{"name":"pos","nativeSrc":"14639:3:32","nodeType":"YulIdentifier","src":"14639:3:32"},{"name":"length","nativeSrc":"14644:6:32","nodeType":"YulIdentifier","src":"14644:6:32"}],"functionName":{"name":"add","nativeSrc":"14635:3:32","nodeType":"YulIdentifier","src":"14635:3:32"},"nativeSrc":"14635:16:32","nodeType":"YulFunctionCall","src":"14635:16:32"},"variableNames":[{"name":"end","nativeSrc":"14628:3:32","nodeType":"YulIdentifier","src":"14628:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14267:390:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14358:5:32","nodeType":"YulTypedName","src":"14358:5:32","type":""},{"name":"pos","nativeSrc":"14365:3:32","nodeType":"YulTypedName","src":"14365:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14373:3:32","nodeType":"YulTypedName","src":"14373:3:32","type":""}],"src":"14267:390:32"},{"body":{"nativeSrc":"14847:251:32","nodeType":"YulBlock","src":"14847:251:32","statements":[{"nativeSrc":"14858:102:32","nodeType":"YulAssignment","src":"14858:102:32","value":{"arguments":[{"name":"value0","nativeSrc":"14947:6:32","nodeType":"YulIdentifier","src":"14947:6:32"},{"name":"pos","nativeSrc":"14956:3:32","nodeType":"YulIdentifier","src":"14956:3:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14865:81:32","nodeType":"YulIdentifier","src":"14865:81:32"},"nativeSrc":"14865:95:32","nodeType":"YulFunctionCall","src":"14865:95:32"},"variableNames":[{"name":"pos","nativeSrc":"14858:3:32","nodeType":"YulIdentifier","src":"14858:3:32"}]},{"nativeSrc":"14970:102:32","nodeType":"YulAssignment","src":"14970:102:32","value":{"arguments":[{"name":"value1","nativeSrc":"15059:6:32","nodeType":"YulIdentifier","src":"15059:6:32"},{"name":"pos","nativeSrc":"15068:3:32","nodeType":"YulIdentifier","src":"15068:3:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14977:81:32","nodeType":"YulIdentifier","src":"14977:81:32"},"nativeSrc":"14977:95:32","nodeType":"YulFunctionCall","src":"14977:95:32"},"variableNames":[{"name":"pos","nativeSrc":"14970:3:32","nodeType":"YulIdentifier","src":"14970:3:32"}]},{"nativeSrc":"15082:10:32","nodeType":"YulAssignment","src":"15082:10:32","value":{"name":"pos","nativeSrc":"15089:3:32","nodeType":"YulIdentifier","src":"15089:3:32"},"variableNames":[{"name":"end","nativeSrc":"15082:3:32","nodeType":"YulIdentifier","src":"15082:3:32"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"14663:435:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14818:3:32","nodeType":"YulTypedName","src":"14818:3:32","type":""},{"name":"value1","nativeSrc":"14824:6:32","nodeType":"YulTypedName","src":"14824:6:32","type":""},{"name":"value0","nativeSrc":"14832:6:32","nodeType":"YulTypedName","src":"14832:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14843:3:32","nodeType":"YulTypedName","src":"14843:3:32","type":""}],"src":"14663:435:32"},{"body":{"nativeSrc":"15193:28:32","nodeType":"YulBlock","src":"15193:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15210:1:32","nodeType":"YulLiteral","src":"15210:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"15213:1:32","nodeType":"YulLiteral","src":"15213:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15203:6:32","nodeType":"YulIdentifier","src":"15203:6:32"},"nativeSrc":"15203:12:32","nodeType":"YulFunctionCall","src":"15203:12:32"},"nativeSrc":"15203:12:32","nodeType":"YulExpressionStatement","src":"15203:12:32"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nativeSrc":"15104:117:32","nodeType":"YulFunctionDefinition","src":"15104:117:32"},{"body":{"nativeSrc":"15316:28:32","nodeType":"YulBlock","src":"15316:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15333:1:32","nodeType":"YulLiteral","src":"15333:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"15336:1:32","nodeType":"YulLiteral","src":"15336:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15326:6:32","nodeType":"YulIdentifier","src":"15326:6:32"},"nativeSrc":"15326:12:32","nodeType":"YulFunctionCall","src":"15326:12:32"},"nativeSrc":"15326:12:32","nodeType":"YulExpressionStatement","src":"15326:12:32"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nativeSrc":"15227:117:32","nodeType":"YulFunctionDefinition","src":"15227:117:32"},{"body":{"nativeSrc":"15476:343:32","nodeType":"YulBlock","src":"15476:343:32","statements":[{"body":{"nativeSrc":"15514:83:32","nodeType":"YulBlock","src":"15514:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nativeSrc":"15516:77:32","nodeType":"YulIdentifier","src":"15516:77:32"},"nativeSrc":"15516:79:32","nodeType":"YulFunctionCall","src":"15516:79:32"},"nativeSrc":"15516:79:32","nodeType":"YulExpressionStatement","src":"15516:79:32"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"15492:10:32","nodeType":"YulIdentifier","src":"15492:10:32"},{"name":"endIndex","nativeSrc":"15504:8:32","nodeType":"YulIdentifier","src":"15504:8:32"}],"functionName":{"name":"gt","nativeSrc":"15489:2:32","nodeType":"YulIdentifier","src":"15489:2:32"},"nativeSrc":"15489:24:32","nodeType":"YulFunctionCall","src":"15489:24:32"},"nativeSrc":"15486:111:32","nodeType":"YulIf","src":"15486:111:32"},{"body":{"nativeSrc":"15630:83:32","nodeType":"YulBlock","src":"15630:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nativeSrc":"15632:77:32","nodeType":"YulIdentifier","src":"15632:77:32"},"nativeSrc":"15632:79:32","nodeType":"YulFunctionCall","src":"15632:79:32"},"nativeSrc":"15632:79:32","nodeType":"YulExpressionStatement","src":"15632:79:32"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"15612:8:32","nodeType":"YulIdentifier","src":"15612:8:32"},{"name":"length","nativeSrc":"15622:6:32","nodeType":"YulIdentifier","src":"15622:6:32"}],"functionName":{"name":"gt","nativeSrc":"15609:2:32","nodeType":"YulIdentifier","src":"15609:2:32"},"nativeSrc":"15609:20:32","nodeType":"YulFunctionCall","src":"15609:20:32"},"nativeSrc":"15606:107:32","nodeType":"YulIf","src":"15606:107:32"},{"nativeSrc":"15722:44:32","nodeType":"YulAssignment","src":"15722:44:32","value":{"arguments":[{"name":"offset","nativeSrc":"15739:6:32","nodeType":"YulIdentifier","src":"15739:6:32"},{"arguments":[{"name":"startIndex","nativeSrc":"15751:10:32","nodeType":"YulIdentifier","src":"15751:10:32"},{"kind":"number","nativeSrc":"15763:1:32","nodeType":"YulLiteral","src":"15763:1:32","type":"","value":"1"}],"functionName":{"name":"mul","nativeSrc":"15747:3:32","nodeType":"YulIdentifier","src":"15747:3:32"},"nativeSrc":"15747:18:32","nodeType":"YulFunctionCall","src":"15747:18:32"}],"functionName":{"name":"add","nativeSrc":"15735:3:32","nodeType":"YulIdentifier","src":"15735:3:32"},"nativeSrc":"15735:31:32","nodeType":"YulFunctionCall","src":"15735:31:32"},"variableNames":[{"name":"offsetOut","nativeSrc":"15722:9:32","nodeType":"YulIdentifier","src":"15722:9:32"}]},{"nativeSrc":"15775:38:32","nodeType":"YulAssignment","src":"15775:38:32","value":{"arguments":[{"name":"endIndex","nativeSrc":"15792:8:32","nodeType":"YulIdentifier","src":"15792:8:32"},{"name":"startIndex","nativeSrc":"15802:10:32","nodeType":"YulIdentifier","src":"15802:10:32"}],"functionName":{"name":"sub","nativeSrc":"15788:3:32","nodeType":"YulIdentifier","src":"15788:3:32"},"nativeSrc":"15788:25:32","nodeType":"YulFunctionCall","src":"15788:25:32"},"variableNames":[{"name":"lengthOut","nativeSrc":"15775:9:32","nodeType":"YulIdentifier","src":"15775:9:32"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"15350:469:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15414:6:32","nodeType":"YulTypedName","src":"15414:6:32","type":""},{"name":"length","nativeSrc":"15422:6:32","nodeType":"YulTypedName","src":"15422:6:32","type":""},{"name":"startIndex","nativeSrc":"15430:10:32","nodeType":"YulTypedName","src":"15430:10:32","type":""},{"name":"endIndex","nativeSrc":"15442:8:32","nodeType":"YulTypedName","src":"15442:8:32","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"15455:9:32","nodeType":"YulTypedName","src":"15455:9:32","type":""},{"name":"lengthOut","nativeSrc":"15466:9:32","nodeType":"YulTypedName","src":"15466:9:32","type":""}],"src":"15350:469:32"},{"body":{"nativeSrc":"15890:31:32","nodeType":"YulBlock","src":"15890:31:32","statements":[{"nativeSrc":"15901:13:32","nodeType":"YulAssignment","src":"15901:13:32","value":{"name":"len","nativeSrc":"15911:3:32","nodeType":"YulIdentifier","src":"15911:3:32"},"variableNames":[{"name":"length","nativeSrc":"15901:6:32","nodeType":"YulIdentifier","src":"15901:6:32"}]}]},"name":"array_length_t_bytes_calldata_ptr","nativeSrc":"15825:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15868:5:32","nodeType":"YulTypedName","src":"15868:5:32","type":""},{"name":"len","nativeSrc":"15875:3:32","nodeType":"YulTypedName","src":"15875:3:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15883:6:32","nodeType":"YulTypedName","src":"15883:6:32","type":""}],"src":"15825:96:32"},{"body":{"nativeSrc":"15985:28:32","nodeType":"YulBlock","src":"15985:28:32","statements":[{"nativeSrc":"15995:11:32","nodeType":"YulAssignment","src":"15995:11:32","value":{"name":"ptr","nativeSrc":"16003:3:32","nodeType":"YulIdentifier","src":"16003:3:32"},"variableNames":[{"name":"data","nativeSrc":"15995:4:32","nodeType":"YulIdentifier","src":"15995:4:32"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nativeSrc":"15927:86:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"15972:3:32","nodeType":"YulTypedName","src":"15972:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"15980:4:32","nodeType":"YulTypedName","src":"15980:4:32","type":""}],"src":"15927:86:32"},{"body":{"nativeSrc":"16072:54:32","nodeType":"YulBlock","src":"16072:54:32","statements":[{"nativeSrc":"16082:37:32","nodeType":"YulAssignment","src":"16082:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"16107:4:32","nodeType":"YulIdentifier","src":"16107:4:32"},{"name":"value","nativeSrc":"16113:5:32","nodeType":"YulIdentifier","src":"16113:5:32"}],"functionName":{"name":"shl","nativeSrc":"16103:3:32","nodeType":"YulIdentifier","src":"16103:3:32"},"nativeSrc":"16103:16:32","nodeType":"YulFunctionCall","src":"16103:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"16082:8:32","nodeType":"YulIdentifier","src":"16082:8:32"}]}]},"name":"shift_left_dynamic","nativeSrc":"16019:107:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"16047:4:32","nodeType":"YulTypedName","src":"16047:4:32","type":""},{"name":"value","nativeSrc":"16053:5:32","nodeType":"YulTypedName","src":"16053:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"16063:8:32","nodeType":"YulTypedName","src":"16063:8:32","type":""}],"src":"16019:107:32"},{"body":{"nativeSrc":"16228:452:32","nodeType":"YulBlock","src":"16228:452:32","statements":[{"nativeSrc":"16239:59:32","nodeType":"YulVariableDeclaration","src":"16239:59:32","value":{"arguments":[{"name":"array","nativeSrc":"16287:5:32","nodeType":"YulIdentifier","src":"16287:5:32"},{"name":"len","nativeSrc":"16294:3:32","nodeType":"YulIdentifier","src":"16294:3:32"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nativeSrc":"16253:33:32","nodeType":"YulIdentifier","src":"16253:33:32"},"nativeSrc":"16253:45:32","nodeType":"YulFunctionCall","src":"16253:45:32"},"variables":[{"name":"length","nativeSrc":"16243:6:32","nodeType":"YulTypedName","src":"16243:6:32","type":""}]},{"nativeSrc":"16307:21:32","nodeType":"YulVariableDeclaration","src":"16307:21:32","value":{"name":"array","nativeSrc":"16323:5:32","nodeType":"YulIdentifier","src":"16323:5:32"},"variables":[{"name":"dataArea","nativeSrc":"16311:8:32","nodeType":"YulTypedName","src":"16311:8:32","type":""}]},{"nativeSrc":"16338:49:32","nodeType":"YulAssignment","src":"16338:49:32","value":{"arguments":[{"arguments":[{"name":"dataArea","nativeSrc":"16377:8:32","nodeType":"YulIdentifier","src":"16377:8:32"}],"functionName":{"name":"calldataload","nativeSrc":"16364:12:32","nodeType":"YulIdentifier","src":"16364:12:32"},"nativeSrc":"16364:22:32","nodeType":"YulFunctionCall","src":"16364:22:32"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"16347:16:32","nodeType":"YulIdentifier","src":"16347:16:32"},"nativeSrc":"16347:40:32","nodeType":"YulFunctionCall","src":"16347:40:32"},"variableNames":[{"name":"value","nativeSrc":"16338:5:32","nodeType":"YulIdentifier","src":"16338:5:32"}]},{"body":{"nativeSrc":"16414:259:32","nodeType":"YulBlock","src":"16414:259:32","statements":[{"nativeSrc":"16428:235:32","nodeType":"YulAssignment","src":"16428:235:32","value":{"arguments":[{"name":"value","nativeSrc":"16458:5:32","nodeType":"YulIdentifier","src":"16458:5:32"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16525:1:32","nodeType":"YulLiteral","src":"16525:1:32","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"16532:1:32","nodeType":"YulLiteral","src":"16532:1:32","type":"","value":"4"},{"name":"length","nativeSrc":"16535:6:32","nodeType":"YulIdentifier","src":"16535:6:32"}],"functionName":{"name":"sub","nativeSrc":"16528:3:32","nodeType":"YulIdentifier","src":"16528:3:32"},"nativeSrc":"16528:14:32","nodeType":"YulFunctionCall","src":"16528:14:32"}],"functionName":{"name":"mul","nativeSrc":"16521:3:32","nodeType":"YulIdentifier","src":"16521:3:32"},"nativeSrc":"16521:22:32","nodeType":"YulFunctionCall","src":"16521:22:32"},{"kind":"number","nativeSrc":"16565:66:32","nodeType":"YulLiteral","src":"16565:66:32","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"16481:18:32","nodeType":"YulIdentifier","src":"16481:18:32"},"nativeSrc":"16481:168:32","nodeType":"YulFunctionCall","src":"16481:168:32"}],"functionName":{"name":"and","nativeSrc":"16437:3:32","nodeType":"YulIdentifier","src":"16437:3:32"},"nativeSrc":"16437:226:32","nodeType":"YulFunctionCall","src":"16437:226:32"},"variableNames":[{"name":"value","nativeSrc":"16428:5:32","nodeType":"YulIdentifier","src":"16428:5:32"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"16403:6:32","nodeType":"YulIdentifier","src":"16403:6:32"},{"kind":"number","nativeSrc":"16411:1:32","nodeType":"YulLiteral","src":"16411:1:32","type":"","value":"4"}],"functionName":{"name":"lt","nativeSrc":"16400:2:32","nodeType":"YulIdentifier","src":"16400:2:32"},"nativeSrc":"16400:13:32","nodeType":"YulFunctionCall","src":"16400:13:32"},"nativeSrc":"16397:276:32","nodeType":"YulIf","src":"16397:276:32"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4","nativeSrc":"16132:548:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"16207:5:32","nodeType":"YulTypedName","src":"16207:5:32","type":""},{"name":"len","nativeSrc":"16214:3:32","nodeType":"YulTypedName","src":"16214:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16222:5:32","nodeType":"YulTypedName","src":"16222:5:32","type":""}],"src":"16132:548:32"},{"body":{"nativeSrc":"16781:73:32","nodeType":"YulBlock","src":"16781:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16798:3:32","nodeType":"YulIdentifier","src":"16798:3:32"},{"name":"length","nativeSrc":"16803:6:32","nodeType":"YulIdentifier","src":"16803:6:32"}],"functionName":{"name":"mstore","nativeSrc":"16791:6:32","nodeType":"YulIdentifier","src":"16791:6:32"},"nativeSrc":"16791:19:32","nodeType":"YulFunctionCall","src":"16791:19:32"},"nativeSrc":"16791:19:32","nodeType":"YulExpressionStatement","src":"16791:19:32"},{"nativeSrc":"16819:29:32","nodeType":"YulAssignment","src":"16819:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"16838:3:32","nodeType":"YulIdentifier","src":"16838:3:32"},{"kind":"number","nativeSrc":"16843:4:32","nodeType":"YulLiteral","src":"16843:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16834:3:32","nodeType":"YulIdentifier","src":"16834:3:32"},"nativeSrc":"16834:14:32","nodeType":"YulFunctionCall","src":"16834:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"16819:11:32","nodeType":"YulIdentifier","src":"16819:11:32"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"16686:168:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16753:3:32","nodeType":"YulTypedName","src":"16753:3:32","type":""},{"name":"length","nativeSrc":"16758:6:32","nodeType":"YulTypedName","src":"16758:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"16769:11:32","nodeType":"YulTypedName","src":"16769:11:32","type":""}],"src":"16686:168:32"},{"body":{"nativeSrc":"16982:214:32","nodeType":"YulBlock","src":"16982:214:32","statements":[{"nativeSrc":"16992:77:32","nodeType":"YulAssignment","src":"16992:77:32","value":{"arguments":[{"name":"pos","nativeSrc":"17057:3:32","nodeType":"YulIdentifier","src":"17057:3:32"},{"name":"length","nativeSrc":"17062:6:32","nodeType":"YulIdentifier","src":"17062:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"16999:57:32","nodeType":"YulIdentifier","src":"16999:57:32"},"nativeSrc":"16999:70:32","nodeType":"YulFunctionCall","src":"16999:70:32"},"variableNames":[{"name":"pos","nativeSrc":"16992:3:32","nodeType":"YulIdentifier","src":"16992:3:32"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"17116:5:32","nodeType":"YulIdentifier","src":"17116:5:32"},{"name":"pos","nativeSrc":"17123:3:32","nodeType":"YulIdentifier","src":"17123:3:32"},{"name":"length","nativeSrc":"17128:6:32","nodeType":"YulIdentifier","src":"17128:6:32"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"17079:36:32","nodeType":"YulIdentifier","src":"17079:36:32"},"nativeSrc":"17079:56:32","nodeType":"YulFunctionCall","src":"17079:56:32"},"nativeSrc":"17079:56:32","nodeType":"YulExpressionStatement","src":"17079:56:32"},{"nativeSrc":"17144:46:32","nodeType":"YulAssignment","src":"17144:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"17155:3:32","nodeType":"YulIdentifier","src":"17155:3:32"},{"arguments":[{"name":"length","nativeSrc":"17182:6:32","nodeType":"YulIdentifier","src":"17182:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"17160:21:32","nodeType":"YulIdentifier","src":"17160:21:32"},"nativeSrc":"17160:29:32","nodeType":"YulFunctionCall","src":"17160:29:32"}],"functionName":{"name":"add","nativeSrc":"17151:3:32","nodeType":"YulIdentifier","src":"17151:3:32"},"nativeSrc":"17151:39:32","nodeType":"YulFunctionCall","src":"17151:39:32"},"variableNames":[{"name":"end","nativeSrc":"17144:3:32","nodeType":"YulIdentifier","src":"17144:3:32"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"16882:314:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"16955:5:32","nodeType":"YulTypedName","src":"16955:5:32","type":""},{"name":"length","nativeSrc":"16962:6:32","nodeType":"YulTypedName","src":"16962:6:32","type":""},{"name":"pos","nativeSrc":"16970:3:32","nodeType":"YulTypedName","src":"16970:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16978:3:32","nodeType":"YulTypedName","src":"16978:3:32","type":""}],"src":"16882:314:32"},{"body":{"nativeSrc":"17356:285:32","nodeType":"YulBlock","src":"17356:285:32","statements":[{"nativeSrc":"17366:26:32","nodeType":"YulAssignment","src":"17366:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"17378:9:32","nodeType":"YulIdentifier","src":"17378:9:32"},{"kind":"number","nativeSrc":"17389:2:32","nodeType":"YulLiteral","src":"17389:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17374:3:32","nodeType":"YulIdentifier","src":"17374:3:32"},"nativeSrc":"17374:18:32","nodeType":"YulFunctionCall","src":"17374:18:32"},"variableNames":[{"name":"tail","nativeSrc":"17366:4:32","nodeType":"YulIdentifier","src":"17366:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17446:6:32","nodeType":"YulIdentifier","src":"17446:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"17459:9:32","nodeType":"YulIdentifier","src":"17459:9:32"},{"kind":"number","nativeSrc":"17470:1:32","nodeType":"YulLiteral","src":"17470:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17455:3:32","nodeType":"YulIdentifier","src":"17455:3:32"},"nativeSrc":"17455:17:32","nodeType":"YulFunctionCall","src":"17455:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17402:43:32","nodeType":"YulIdentifier","src":"17402:43:32"},"nativeSrc":"17402:71:32","nodeType":"YulFunctionCall","src":"17402:71:32"},"nativeSrc":"17402:71:32","nodeType":"YulExpressionStatement","src":"17402:71:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17494:9:32","nodeType":"YulIdentifier","src":"17494:9:32"},{"kind":"number","nativeSrc":"17505:2:32","nodeType":"YulLiteral","src":"17505:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17490:3:32","nodeType":"YulIdentifier","src":"17490:3:32"},"nativeSrc":"17490:18:32","nodeType":"YulFunctionCall","src":"17490:18:32"},{"arguments":[{"name":"tail","nativeSrc":"17514:4:32","nodeType":"YulIdentifier","src":"17514:4:32"},{"name":"headStart","nativeSrc":"17520:9:32","nodeType":"YulIdentifier","src":"17520:9:32"}],"functionName":{"name":"sub","nativeSrc":"17510:3:32","nodeType":"YulIdentifier","src":"17510:3:32"},"nativeSrc":"17510:20:32","nodeType":"YulFunctionCall","src":"17510:20:32"}],"functionName":{"name":"mstore","nativeSrc":"17483:6:32","nodeType":"YulIdentifier","src":"17483:6:32"},"nativeSrc":"17483:48:32","nodeType":"YulFunctionCall","src":"17483:48:32"},"nativeSrc":"17483:48:32","nodeType":"YulExpressionStatement","src":"17483:48:32"},{"nativeSrc":"17540:94:32","nodeType":"YulAssignment","src":"17540:94:32","value":{"arguments":[{"name":"value1","nativeSrc":"17612:6:32","nodeType":"YulIdentifier","src":"17612:6:32"},{"name":"value2","nativeSrc":"17620:6:32","nodeType":"YulIdentifier","src":"17620:6:32"},{"name":"tail","nativeSrc":"17629:4:32","nodeType":"YulIdentifier","src":"17629:4:32"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"17548:63:32","nodeType":"YulIdentifier","src":"17548:63:32"},"nativeSrc":"17548:86:32","nodeType":"YulFunctionCall","src":"17548:86:32"},"variableNames":[{"name":"tail","nativeSrc":"17540:4:32","nodeType":"YulIdentifier","src":"17540:4:32"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"17202:439:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17312:9:32","nodeType":"YulTypedName","src":"17312:9:32","type":""},{"name":"value2","nativeSrc":"17324:6:32","nodeType":"YulTypedName","src":"17324:6:32","type":""},{"name":"value1","nativeSrc":"17332:6:32","nodeType":"YulTypedName","src":"17332:6:32","type":""},{"name":"value0","nativeSrc":"17340:6:32","nodeType":"YulTypedName","src":"17340:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17351:4:32","nodeType":"YulTypedName","src":"17351:4:32","type":""}],"src":"17202:439:32"},{"body":{"nativeSrc":"17690:79:32","nodeType":"YulBlock","src":"17690:79:32","statements":[{"body":{"nativeSrc":"17747:16:32","nodeType":"YulBlock","src":"17747:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17756:1:32","nodeType":"YulLiteral","src":"17756:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"17759:1:32","nodeType":"YulLiteral","src":"17759:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"17749:6:32","nodeType":"YulIdentifier","src":"17749:6:32"},"nativeSrc":"17749:12:32","nodeType":"YulFunctionCall","src":"17749:12:32"},"nativeSrc":"17749:12:32","nodeType":"YulExpressionStatement","src":"17749:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17713:5:32","nodeType":"YulIdentifier","src":"17713:5:32"},{"arguments":[{"name":"value","nativeSrc":"17738:5:32","nodeType":"YulIdentifier","src":"17738:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"17720:17:32","nodeType":"YulIdentifier","src":"17720:17:32"},"nativeSrc":"17720:24:32","nodeType":"YulFunctionCall","src":"17720:24:32"}],"functionName":{"name":"eq","nativeSrc":"17710:2:32","nodeType":"YulIdentifier","src":"17710:2:32"},"nativeSrc":"17710:35:32","nodeType":"YulFunctionCall","src":"17710:35:32"}],"functionName":{"name":"iszero","nativeSrc":"17703:6:32","nodeType":"YulIdentifier","src":"17703:6:32"},"nativeSrc":"17703:43:32","nodeType":"YulFunctionCall","src":"17703:43:32"},"nativeSrc":"17700:63:32","nodeType":"YulIf","src":"17700:63:32"}]},"name":"validator_revert_t_bytes32","nativeSrc":"17647:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17683:5:32","nodeType":"YulTypedName","src":"17683:5:32","type":""}],"src":"17647:122:32"},{"body":{"nativeSrc":"17838:80:32","nodeType":"YulBlock","src":"17838:80:32","statements":[{"nativeSrc":"17848:22:32","nodeType":"YulAssignment","src":"17848:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"17863:6:32","nodeType":"YulIdentifier","src":"17863:6:32"}],"functionName":{"name":"mload","nativeSrc":"17857:5:32","nodeType":"YulIdentifier","src":"17857:5:32"},"nativeSrc":"17857:13:32","nodeType":"YulFunctionCall","src":"17857:13:32"},"variableNames":[{"name":"value","nativeSrc":"17848:5:32","nodeType":"YulIdentifier","src":"17848:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17906:5:32","nodeType":"YulIdentifier","src":"17906:5:32"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"17879:26:32","nodeType":"YulIdentifier","src":"17879:26:32"},"nativeSrc":"17879:33:32","nodeType":"YulFunctionCall","src":"17879:33:32"},"nativeSrc":"17879:33:32","nodeType":"YulExpressionStatement","src":"17879:33:32"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"17775:143:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17816:6:32","nodeType":"YulTypedName","src":"17816:6:32","type":""},{"name":"end","nativeSrc":"17824:3:32","nodeType":"YulTypedName","src":"17824:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17832:5:32","nodeType":"YulTypedName","src":"17832:5:32","type":""}],"src":"17775:143:32"},{"body":{"nativeSrc":"18001:274:32","nodeType":"YulBlock","src":"18001:274:32","statements":[{"body":{"nativeSrc":"18047:83:32","nodeType":"YulBlock","src":"18047:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18049:77:32","nodeType":"YulIdentifier","src":"18049:77:32"},"nativeSrc":"18049:79:32","nodeType":"YulFunctionCall","src":"18049:79:32"},"nativeSrc":"18049:79:32","nodeType":"YulExpressionStatement","src":"18049:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18022:7:32","nodeType":"YulIdentifier","src":"18022:7:32"},{"name":"headStart","nativeSrc":"18031:9:32","nodeType":"YulIdentifier","src":"18031:9:32"}],"functionName":{"name":"sub","nativeSrc":"18018:3:32","nodeType":"YulIdentifier","src":"18018:3:32"},"nativeSrc":"18018:23:32","nodeType":"YulFunctionCall","src":"18018:23:32"},{"kind":"number","nativeSrc":"18043:2:32","nodeType":"YulLiteral","src":"18043:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"18014:3:32","nodeType":"YulIdentifier","src":"18014:3:32"},"nativeSrc":"18014:32:32","nodeType":"YulFunctionCall","src":"18014:32:32"},"nativeSrc":"18011:119:32","nodeType":"YulIf","src":"18011:119:32"},{"nativeSrc":"18140:128:32","nodeType":"YulBlock","src":"18140:128:32","statements":[{"nativeSrc":"18155:15:32","nodeType":"YulVariableDeclaration","src":"18155:15:32","value":{"kind":"number","nativeSrc":"18169:1:32","nodeType":"YulLiteral","src":"18169:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18159:6:32","nodeType":"YulTypedName","src":"18159:6:32","type":""}]},{"nativeSrc":"18184:74:32","nodeType":"YulAssignment","src":"18184:74:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18230:9:32","nodeType":"YulIdentifier","src":"18230:9:32"},{"name":"offset","nativeSrc":"18241:6:32","nodeType":"YulIdentifier","src":"18241:6:32"}],"functionName":{"name":"add","nativeSrc":"18226:3:32","nodeType":"YulIdentifier","src":"18226:3:32"},"nativeSrc":"18226:22:32","nodeType":"YulFunctionCall","src":"18226:22:32"},{"name":"dataEnd","nativeSrc":"18250:7:32","nodeType":"YulIdentifier","src":"18250:7:32"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"18194:31:32","nodeType":"YulIdentifier","src":"18194:31:32"},"nativeSrc":"18194:64:32","nodeType":"YulFunctionCall","src":"18194:64:32"},"variableNames":[{"name":"value0","nativeSrc":"18184:6:32","nodeType":"YulIdentifier","src":"18184:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"17924:351:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17971:9:32","nodeType":"YulTypedName","src":"17971:9:32","type":""},{"name":"dataEnd","nativeSrc":"17982:7:32","nodeType":"YulTypedName","src":"17982:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17994:6:32","nodeType":"YulTypedName","src":"17994:6:32","type":""}],"src":"17924:351:32"},{"body":{"nativeSrc":"18339:40:32","nodeType":"YulBlock","src":"18339:40:32","statements":[{"nativeSrc":"18350:22:32","nodeType":"YulAssignment","src":"18350:22:32","value":{"arguments":[{"name":"value","nativeSrc":"18366:5:32","nodeType":"YulIdentifier","src":"18366:5:32"}],"functionName":{"name":"mload","nativeSrc":"18360:5:32","nodeType":"YulIdentifier","src":"18360:5:32"},"nativeSrc":"18360:12:32","nodeType":"YulFunctionCall","src":"18360:12:32"},"variableNames":[{"name":"length","nativeSrc":"18350:6:32","nodeType":"YulIdentifier","src":"18350:6:32"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"18281:98:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18322:5:32","nodeType":"YulTypedName","src":"18322:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"18332:6:32","nodeType":"YulTypedName","src":"18332:6:32","type":""}],"src":"18281:98:32"},{"body":{"nativeSrc":"18475:283:32","nodeType":"YulBlock","src":"18475:283:32","statements":[{"nativeSrc":"18485:52:32","nodeType":"YulVariableDeclaration","src":"18485:52:32","value":{"arguments":[{"name":"value","nativeSrc":"18531:5:32","nodeType":"YulIdentifier","src":"18531:5:32"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"18499:31:32","nodeType":"YulIdentifier","src":"18499:31:32"},"nativeSrc":"18499:38:32","nodeType":"YulFunctionCall","src":"18499:38:32"},"variables":[{"name":"length","nativeSrc":"18489:6:32","nodeType":"YulTypedName","src":"18489:6:32","type":""}]},{"nativeSrc":"18546:77:32","nodeType":"YulAssignment","src":"18546:77:32","value":{"arguments":[{"name":"pos","nativeSrc":"18611:3:32","nodeType":"YulIdentifier","src":"18611:3:32"},{"name":"length","nativeSrc":"18616:6:32","nodeType":"YulIdentifier","src":"18616:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"18553:57:32","nodeType":"YulIdentifier","src":"18553:57:32"},"nativeSrc":"18553:70:32","nodeType":"YulFunctionCall","src":"18553:70:32"},"variableNames":[{"name":"pos","nativeSrc":"18546:3:32","nodeType":"YulIdentifier","src":"18546:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18671:5:32","nodeType":"YulIdentifier","src":"18671:5:32"},{"kind":"number","nativeSrc":"18678:4:32","nodeType":"YulLiteral","src":"18678:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18667:3:32","nodeType":"YulIdentifier","src":"18667:3:32"},"nativeSrc":"18667:16:32","nodeType":"YulFunctionCall","src":"18667:16:32"},{"name":"pos","nativeSrc":"18685:3:32","nodeType":"YulIdentifier","src":"18685:3:32"},{"name":"length","nativeSrc":"18690:6:32","nodeType":"YulIdentifier","src":"18690:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"18632:34:32","nodeType":"YulIdentifier","src":"18632:34:32"},"nativeSrc":"18632:65:32","nodeType":"YulFunctionCall","src":"18632:65:32"},"nativeSrc":"18632:65:32","nodeType":"YulExpressionStatement","src":"18632:65:32"},{"nativeSrc":"18706:46:32","nodeType":"YulAssignment","src":"18706:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"18717:3:32","nodeType":"YulIdentifier","src":"18717:3:32"},{"arguments":[{"name":"length","nativeSrc":"18744:6:32","nodeType":"YulIdentifier","src":"18744:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"18722:21:32","nodeType":"YulIdentifier","src":"18722:21:32"},"nativeSrc":"18722:29:32","nodeType":"YulFunctionCall","src":"18722:29:32"}],"functionName":{"name":"add","nativeSrc":"18713:3:32","nodeType":"YulIdentifier","src":"18713:3:32"},"nativeSrc":"18713:39:32","nodeType":"YulFunctionCall","src":"18713:39:32"},"variableNames":[{"name":"end","nativeSrc":"18706:3:32","nodeType":"YulIdentifier","src":"18706:3:32"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"18385:373:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18456:5:32","nodeType":"YulTypedName","src":"18456:5:32","type":""},{"name":"pos","nativeSrc":"18463:3:32","nodeType":"YulTypedName","src":"18463:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18471:3:32","nodeType":"YulTypedName","src":"18471:3:32","type":""}],"src":"18385:373:32"},{"body":{"nativeSrc":"18964:440:32","nodeType":"YulBlock","src":"18964:440:32","statements":[{"nativeSrc":"18974:27:32","nodeType":"YulAssignment","src":"18974:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"18986:9:32","nodeType":"YulIdentifier","src":"18986:9:32"},{"kind":"number","nativeSrc":"18997:3:32","nodeType":"YulLiteral","src":"18997:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18982:3:32","nodeType":"YulIdentifier","src":"18982:3:32"},"nativeSrc":"18982:19:32","nodeType":"YulFunctionCall","src":"18982:19:32"},"variableNames":[{"name":"tail","nativeSrc":"18974:4:32","nodeType":"YulIdentifier","src":"18974:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19055:6:32","nodeType":"YulIdentifier","src":"19055:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"19068:9:32","nodeType":"YulIdentifier","src":"19068:9:32"},{"kind":"number","nativeSrc":"19079:1:32","nodeType":"YulLiteral","src":"19079:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19064:3:32","nodeType":"YulIdentifier","src":"19064:3:32"},"nativeSrc":"19064:17:32","nodeType":"YulFunctionCall","src":"19064:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19011:43:32","nodeType":"YulIdentifier","src":"19011:43:32"},"nativeSrc":"19011:71:32","nodeType":"YulFunctionCall","src":"19011:71:32"},"nativeSrc":"19011:71:32","nodeType":"YulExpressionStatement","src":"19011:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"19136:6:32","nodeType":"YulIdentifier","src":"19136:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"19149:9:32","nodeType":"YulIdentifier","src":"19149:9:32"},{"kind":"number","nativeSrc":"19160:2:32","nodeType":"YulLiteral","src":"19160:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19145:3:32","nodeType":"YulIdentifier","src":"19145:3:32"},"nativeSrc":"19145:18:32","nodeType":"YulFunctionCall","src":"19145:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19092:43:32","nodeType":"YulIdentifier","src":"19092:43:32"},"nativeSrc":"19092:72:32","nodeType":"YulFunctionCall","src":"19092:72:32"},"nativeSrc":"19092:72:32","nodeType":"YulExpressionStatement","src":"19092:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"19218:6:32","nodeType":"YulIdentifier","src":"19218:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"19231:9:32","nodeType":"YulIdentifier","src":"19231:9:32"},{"kind":"number","nativeSrc":"19242:2:32","nodeType":"YulLiteral","src":"19242:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19227:3:32","nodeType":"YulIdentifier","src":"19227:3:32"},"nativeSrc":"19227:18:32","nodeType":"YulFunctionCall","src":"19227:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19174:43:32","nodeType":"YulIdentifier","src":"19174:43:32"},"nativeSrc":"19174:72:32","nodeType":"YulFunctionCall","src":"19174:72:32"},"nativeSrc":"19174:72:32","nodeType":"YulExpressionStatement","src":"19174:72:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19267:9:32","nodeType":"YulIdentifier","src":"19267:9:32"},{"kind":"number","nativeSrc":"19278:2:32","nodeType":"YulLiteral","src":"19278:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19263:3:32","nodeType":"YulIdentifier","src":"19263:3:32"},"nativeSrc":"19263:18:32","nodeType":"YulFunctionCall","src":"19263:18:32"},{"arguments":[{"name":"tail","nativeSrc":"19287:4:32","nodeType":"YulIdentifier","src":"19287:4:32"},{"name":"headStart","nativeSrc":"19293:9:32","nodeType":"YulIdentifier","src":"19293:9:32"}],"functionName":{"name":"sub","nativeSrc":"19283:3:32","nodeType":"YulIdentifier","src":"19283:3:32"},"nativeSrc":"19283:20:32","nodeType":"YulFunctionCall","src":"19283:20:32"}],"functionName":{"name":"mstore","nativeSrc":"19256:6:32","nodeType":"YulIdentifier","src":"19256:6:32"},"nativeSrc":"19256:48:32","nodeType":"YulFunctionCall","src":"19256:48:32"},"nativeSrc":"19256:48:32","nodeType":"YulExpressionStatement","src":"19256:48:32"},{"nativeSrc":"19313:84:32","nodeType":"YulAssignment","src":"19313:84:32","value":{"arguments":[{"name":"value3","nativeSrc":"19383:6:32","nodeType":"YulIdentifier","src":"19383:6:32"},{"name":"tail","nativeSrc":"19392:4:32","nodeType":"YulIdentifier","src":"19392:4:32"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"19321:61:32","nodeType":"YulIdentifier","src":"19321:61:32"},"nativeSrc":"19321:76:32","nodeType":"YulFunctionCall","src":"19321:76:32"},"variableNames":[{"name":"tail","nativeSrc":"19313:4:32","nodeType":"YulIdentifier","src":"19313:4:32"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"18764:640:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18912:9:32","nodeType":"YulTypedName","src":"18912:9:32","type":""},{"name":"value3","nativeSrc":"18924:6:32","nodeType":"YulTypedName","src":"18924:6:32","type":""},{"name":"value2","nativeSrc":"18932:6:32","nodeType":"YulTypedName","src":"18932:6:32","type":""},{"name":"value1","nativeSrc":"18940:6:32","nodeType":"YulTypedName","src":"18940:6:32","type":""},{"name":"value0","nativeSrc":"18948:6:32","nodeType":"YulTypedName","src":"18948:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18959:4:32","nodeType":"YulTypedName","src":"18959:4:32","type":""}],"src":"18764:640:32"},{"body":{"nativeSrc":"19472:79:32","nodeType":"YulBlock","src":"19472:79:32","statements":[{"nativeSrc":"19482:22:32","nodeType":"YulAssignment","src":"19482:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"19497:6:32","nodeType":"YulIdentifier","src":"19497:6:32"}],"functionName":{"name":"mload","nativeSrc":"19491:5:32","nodeType":"YulIdentifier","src":"19491:5:32"},"nativeSrc":"19491:13:32","nodeType":"YulFunctionCall","src":"19491:13:32"},"variableNames":[{"name":"value","nativeSrc":"19482:5:32","nodeType":"YulIdentifier","src":"19482:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"19539:5:32","nodeType":"YulIdentifier","src":"19539:5:32"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"19513:25:32","nodeType":"YulIdentifier","src":"19513:25:32"},"nativeSrc":"19513:32:32","nodeType":"YulFunctionCall","src":"19513:32:32"},"nativeSrc":"19513:32:32","nodeType":"YulExpressionStatement","src":"19513:32:32"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"19410:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"19450:6:32","nodeType":"YulTypedName","src":"19450:6:32","type":""},{"name":"end","nativeSrc":"19458:3:32","nodeType":"YulTypedName","src":"19458:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"19466:5:32","nodeType":"YulTypedName","src":"19466:5:32","type":""}],"src":"19410:141:32"},{"body":{"nativeSrc":"19633:273:32","nodeType":"YulBlock","src":"19633:273:32","statements":[{"body":{"nativeSrc":"19679:83:32","nodeType":"YulBlock","src":"19679:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19681:77:32","nodeType":"YulIdentifier","src":"19681:77:32"},"nativeSrc":"19681:79:32","nodeType":"YulFunctionCall","src":"19681:79:32"},"nativeSrc":"19681:79:32","nodeType":"YulExpressionStatement","src":"19681:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19654:7:32","nodeType":"YulIdentifier","src":"19654:7:32"},{"name":"headStart","nativeSrc":"19663:9:32","nodeType":"YulIdentifier","src":"19663:9:32"}],"functionName":{"name":"sub","nativeSrc":"19650:3:32","nodeType":"YulIdentifier","src":"19650:3:32"},"nativeSrc":"19650:23:32","nodeType":"YulFunctionCall","src":"19650:23:32"},{"kind":"number","nativeSrc":"19675:2:32","nodeType":"YulLiteral","src":"19675:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19646:3:32","nodeType":"YulIdentifier","src":"19646:3:32"},"nativeSrc":"19646:32:32","nodeType":"YulFunctionCall","src":"19646:32:32"},"nativeSrc":"19643:119:32","nodeType":"YulIf","src":"19643:119:32"},{"nativeSrc":"19772:127:32","nodeType":"YulBlock","src":"19772:127:32","statements":[{"nativeSrc":"19787:15:32","nodeType":"YulVariableDeclaration","src":"19787:15:32","value":{"kind":"number","nativeSrc":"19801:1:32","nodeType":"YulLiteral","src":"19801:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19791:6:32","nodeType":"YulTypedName","src":"19791:6:32","type":""}]},{"nativeSrc":"19816:73:32","nodeType":"YulAssignment","src":"19816:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19861:9:32","nodeType":"YulIdentifier","src":"19861:9:32"},{"name":"offset","nativeSrc":"19872:6:32","nodeType":"YulIdentifier","src":"19872:6:32"}],"functionName":{"name":"add","nativeSrc":"19857:3:32","nodeType":"YulIdentifier","src":"19857:3:32"},"nativeSrc":"19857:22:32","nodeType":"YulFunctionCall","src":"19857:22:32"},{"name":"dataEnd","nativeSrc":"19881:7:32","nodeType":"YulIdentifier","src":"19881:7:32"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"19826:30:32","nodeType":"YulIdentifier","src":"19826:30:32"},"nativeSrc":"19826:63:32","nodeType":"YulFunctionCall","src":"19826:63:32"},"variableNames":[{"name":"value0","nativeSrc":"19816:6:32","nodeType":"YulIdentifier","src":"19816:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"19557:349:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19603:9:32","nodeType":"YulTypedName","src":"19603:9:32","type":""},{"name":"dataEnd","nativeSrc":"19614:7:32","nodeType":"YulTypedName","src":"19614:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19626:6:32","nodeType":"YulTypedName","src":"19626:6:32","type":""}],"src":"19557:349:32"},{"body":{"nativeSrc":"19940:152:32","nodeType":"YulBlock","src":"19940:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19957:1:32","nodeType":"YulLiteral","src":"19957:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"19960:77:32","nodeType":"YulLiteral","src":"19960:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19950:6:32","nodeType":"YulIdentifier","src":"19950:6:32"},"nativeSrc":"19950:88:32","nodeType":"YulFunctionCall","src":"19950:88:32"},"nativeSrc":"19950:88:32","nodeType":"YulExpressionStatement","src":"19950:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20054:1:32","nodeType":"YulLiteral","src":"20054:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"20057:4:32","nodeType":"YulLiteral","src":"20057:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"20047:6:32","nodeType":"YulIdentifier","src":"20047:6:32"},"nativeSrc":"20047:15:32","nodeType":"YulFunctionCall","src":"20047:15:32"},"nativeSrc":"20047:15:32","nodeType":"YulExpressionStatement","src":"20047:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20078:1:32","nodeType":"YulLiteral","src":"20078:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"20081:4:32","nodeType":"YulLiteral","src":"20081:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20071:6:32","nodeType":"YulIdentifier","src":"20071:6:32"},"nativeSrc":"20071:15:32","nodeType":"YulFunctionCall","src":"20071:15:32"},"nativeSrc":"20071:15:32","nodeType":"YulExpressionStatement","src":"20071:15:32"}]},"name":"panic_error_0x12","nativeSrc":"19912:180:32","nodeType":"YulFunctionDefinition","src":"19912:180:32"},{"body":{"nativeSrc":"20224:206:32","nodeType":"YulBlock","src":"20224:206:32","statements":[{"nativeSrc":"20234:26:32","nodeType":"YulAssignment","src":"20234:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"20246:9:32","nodeType":"YulIdentifier","src":"20246:9:32"},{"kind":"number","nativeSrc":"20257:2:32","nodeType":"YulLiteral","src":"20257:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20242:3:32","nodeType":"YulIdentifier","src":"20242:3:32"},"nativeSrc":"20242:18:32","nodeType":"YulFunctionCall","src":"20242:18:32"},"variableNames":[{"name":"tail","nativeSrc":"20234:4:32","nodeType":"YulIdentifier","src":"20234:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20314:6:32","nodeType":"YulIdentifier","src":"20314:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"20327:9:32","nodeType":"YulIdentifier","src":"20327:9:32"},{"kind":"number","nativeSrc":"20338:1:32","nodeType":"YulLiteral","src":"20338:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20323:3:32","nodeType":"YulIdentifier","src":"20323:3:32"},"nativeSrc":"20323:17:32","nodeType":"YulFunctionCall","src":"20323:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20270:43:32","nodeType":"YulIdentifier","src":"20270:43:32"},"nativeSrc":"20270:71:32","nodeType":"YulFunctionCall","src":"20270:71:32"},"nativeSrc":"20270:71:32","nodeType":"YulExpressionStatement","src":"20270:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20395:6:32","nodeType":"YulIdentifier","src":"20395:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"20408:9:32","nodeType":"YulIdentifier","src":"20408:9:32"},{"kind":"number","nativeSrc":"20419:2:32","nodeType":"YulLiteral","src":"20419:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20404:3:32","nodeType":"YulIdentifier","src":"20404:3:32"},"nativeSrc":"20404:18:32","nodeType":"YulFunctionCall","src":"20404:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20351:43:32","nodeType":"YulIdentifier","src":"20351:43:32"},"nativeSrc":"20351:72:32","nodeType":"YulFunctionCall","src":"20351:72:32"},"nativeSrc":"20351:72:32","nodeType":"YulExpressionStatement","src":"20351:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"20098:332:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20188:9:32","nodeType":"YulTypedName","src":"20188:9:32","type":""},{"name":"value1","nativeSrc":"20200:6:32","nodeType":"YulTypedName","src":"20200:6:32","type":""},{"name":"value0","nativeSrc":"20208:6:32","nodeType":"YulTypedName","src":"20208:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20219:4:32","nodeType":"YulTypedName","src":"20219:4:32","type":""}],"src":"20098:332:32"},{"body":{"nativeSrc":"20588:286:32","nodeType":"YulBlock","src":"20588:286:32","statements":[{"nativeSrc":"20598:26:32","nodeType":"YulAssignment","src":"20598:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"20610:9:32","nodeType":"YulIdentifier","src":"20610:9:32"},{"kind":"number","nativeSrc":"20621:2:32","nodeType":"YulLiteral","src":"20621:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20606:3:32","nodeType":"YulIdentifier","src":"20606:3:32"},"nativeSrc":"20606:18:32","nodeType":"YulFunctionCall","src":"20606:18:32"},"variableNames":[{"name":"tail","nativeSrc":"20598:4:32","nodeType":"YulIdentifier","src":"20598:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20678:6:32","nodeType":"YulIdentifier","src":"20678:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"20691:9:32","nodeType":"YulIdentifier","src":"20691:9:32"},{"kind":"number","nativeSrc":"20702:1:32","nodeType":"YulLiteral","src":"20702:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20687:3:32","nodeType":"YulIdentifier","src":"20687:3:32"},"nativeSrc":"20687:17:32","nodeType":"YulFunctionCall","src":"20687:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20634:43:32","nodeType":"YulIdentifier","src":"20634:43:32"},"nativeSrc":"20634:71:32","nodeType":"YulFunctionCall","src":"20634:71:32"},"nativeSrc":"20634:71:32","nodeType":"YulExpressionStatement","src":"20634:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20759:6:32","nodeType":"YulIdentifier","src":"20759:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"20772:9:32","nodeType":"YulIdentifier","src":"20772:9:32"},{"kind":"number","nativeSrc":"20783:2:32","nodeType":"YulLiteral","src":"20783:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20768:3:32","nodeType":"YulIdentifier","src":"20768:3:32"},"nativeSrc":"20768:18:32","nodeType":"YulFunctionCall","src":"20768:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20715:43:32","nodeType":"YulIdentifier","src":"20715:43:32"},"nativeSrc":"20715:72:32","nodeType":"YulFunctionCall","src":"20715:72:32"},"nativeSrc":"20715:72:32","nodeType":"YulExpressionStatement","src":"20715:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"20839:6:32","nodeType":"YulIdentifier","src":"20839:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"20852:9:32","nodeType":"YulIdentifier","src":"20852:9:32"},{"kind":"number","nativeSrc":"20863:2:32","nodeType":"YulLiteral","src":"20863:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20848:3:32","nodeType":"YulIdentifier","src":"20848:3:32"},"nativeSrc":"20848:18:32","nodeType":"YulFunctionCall","src":"20848:18:32"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"20797:41:32","nodeType":"YulIdentifier","src":"20797:41:32"},"nativeSrc":"20797:70:32","nodeType":"YulFunctionCall","src":"20797:70:32"},"nativeSrc":"20797:70:32","nodeType":"YulExpressionStatement","src":"20797:70:32"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed","nativeSrc":"20436:438:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20544:9:32","nodeType":"YulTypedName","src":"20544:9:32","type":""},{"name":"value2","nativeSrc":"20556:6:32","nodeType":"YulTypedName","src":"20556:6:32","type":""},{"name":"value1","nativeSrc":"20564:6:32","nodeType":"YulTypedName","src":"20564:6:32","type":""},{"name":"value0","nativeSrc":"20572:6:32","nodeType":"YulTypedName","src":"20572:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20583:4:32","nodeType":"YulTypedName","src":"20583:4:32","type":""}],"src":"20436:438:32"},{"body":{"nativeSrc":"20993:34:32","nodeType":"YulBlock","src":"20993:34:32","statements":[{"nativeSrc":"21003:18:32","nodeType":"YulAssignment","src":"21003:18:32","value":{"name":"pos","nativeSrc":"21018:3:32","nodeType":"YulIdentifier","src":"21018:3:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"21003:11:32","nodeType":"YulIdentifier","src":"21003:11:32"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"20880:147:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20965:3:32","nodeType":"YulTypedName","src":"20965:3:32","type":""},{"name":"length","nativeSrc":"20970:6:32","nodeType":"YulTypedName","src":"20970:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"20981:11:32","nodeType":"YulTypedName","src":"20981:11:32","type":""}],"src":"20880:147:32"},{"body":{"nativeSrc":"21141:278:32","nodeType":"YulBlock","src":"21141:278:32","statements":[{"nativeSrc":"21151:52:32","nodeType":"YulVariableDeclaration","src":"21151:52:32","value":{"arguments":[{"name":"value","nativeSrc":"21197:5:32","nodeType":"YulIdentifier","src":"21197:5:32"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"21165:31:32","nodeType":"YulIdentifier","src":"21165:31:32"},"nativeSrc":"21165:38:32","nodeType":"YulFunctionCall","src":"21165:38:32"},"variables":[{"name":"length","nativeSrc":"21155:6:32","nodeType":"YulTypedName","src":"21155:6:32","type":""}]},{"nativeSrc":"21212:95:32","nodeType":"YulAssignment","src":"21212:95:32","value":{"arguments":[{"name":"pos","nativeSrc":"21295:3:32","nodeType":"YulIdentifier","src":"21295:3:32"},{"name":"length","nativeSrc":"21300:6:32","nodeType":"YulIdentifier","src":"21300:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"21219:75:32","nodeType":"YulIdentifier","src":"21219:75:32"},"nativeSrc":"21219:88:32","nodeType":"YulFunctionCall","src":"21219:88:32"},"variableNames":[{"name":"pos","nativeSrc":"21212:3:32","nodeType":"YulIdentifier","src":"21212:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"21355:5:32","nodeType":"YulIdentifier","src":"21355:5:32"},{"kind":"number","nativeSrc":"21362:4:32","nodeType":"YulLiteral","src":"21362:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21351:3:32","nodeType":"YulIdentifier","src":"21351:3:32"},"nativeSrc":"21351:16:32","nodeType":"YulFunctionCall","src":"21351:16:32"},{"name":"pos","nativeSrc":"21369:3:32","nodeType":"YulIdentifier","src":"21369:3:32"},{"name":"length","nativeSrc":"21374:6:32","nodeType":"YulIdentifier","src":"21374:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"21316:34:32","nodeType":"YulIdentifier","src":"21316:34:32"},"nativeSrc":"21316:65:32","nodeType":"YulFunctionCall","src":"21316:65:32"},"nativeSrc":"21316:65:32","nodeType":"YulExpressionStatement","src":"21316:65:32"},{"nativeSrc":"21390:23:32","nodeType":"YulAssignment","src":"21390:23:32","value":{"arguments":[{"name":"pos","nativeSrc":"21401:3:32","nodeType":"YulIdentifier","src":"21401:3:32"},{"name":"length","nativeSrc":"21406:6:32","nodeType":"YulIdentifier","src":"21406:6:32"}],"functionName":{"name":"add","nativeSrc":"21397:3:32","nodeType":"YulIdentifier","src":"21397:3:32"},"nativeSrc":"21397:16:32","nodeType":"YulFunctionCall","src":"21397:16:32"},"variableNames":[{"name":"end","nativeSrc":"21390:3:32","nodeType":"YulIdentifier","src":"21390:3:32"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"21033:386:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21122:5:32","nodeType":"YulTypedName","src":"21122:5:32","type":""},{"name":"pos","nativeSrc":"21129:3:32","nodeType":"YulTypedName","src":"21129:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21137:3:32","nodeType":"YulTypedName","src":"21137:3:32","type":""}],"src":"21033:386:32"},{"body":{"nativeSrc":"21559:137:32","nodeType":"YulBlock","src":"21559:137:32","statements":[{"nativeSrc":"21570:100:32","nodeType":"YulAssignment","src":"21570:100:32","value":{"arguments":[{"name":"value0","nativeSrc":"21657:6:32","nodeType":"YulIdentifier","src":"21657:6:32"},{"name":"pos","nativeSrc":"21666:3:32","nodeType":"YulIdentifier","src":"21666:3:32"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"21577:79:32","nodeType":"YulIdentifier","src":"21577:79:32"},"nativeSrc":"21577:93:32","nodeType":"YulFunctionCall","src":"21577:93:32"},"variableNames":[{"name":"pos","nativeSrc":"21570:3:32","nodeType":"YulIdentifier","src":"21570:3:32"}]},{"nativeSrc":"21680:10:32","nodeType":"YulAssignment","src":"21680:10:32","value":{"name":"pos","nativeSrc":"21687:3:32","nodeType":"YulIdentifier","src":"21687:3:32"},"variableNames":[{"name":"end","nativeSrc":"21680:3:32","nodeType":"YulIdentifier","src":"21680:3:32"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"21425:271:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21538:3:32","nodeType":"YulTypedName","src":"21538:3:32","type":""},{"name":"value0","nativeSrc":"21544:6:32","nodeType":"YulTypedName","src":"21544:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21555:3:32","nodeType":"YulTypedName","src":"21555:3:32","type":""}],"src":"21425:271:32"},{"body":{"nativeSrc":"21762:77:32","nodeType":"YulBlock","src":"21762:77:32","statements":[{"nativeSrc":"21772:22:32","nodeType":"YulAssignment","src":"21772:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"21787:6:32","nodeType":"YulIdentifier","src":"21787:6:32"}],"functionName":{"name":"mload","nativeSrc":"21781:5:32","nodeType":"YulIdentifier","src":"21781:5:32"},"nativeSrc":"21781:13:32","nodeType":"YulFunctionCall","src":"21781:13:32"},"variableNames":[{"name":"value","nativeSrc":"21772:5:32","nodeType":"YulIdentifier","src":"21772:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"21827:5:32","nodeType":"YulIdentifier","src":"21827:5:32"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"21803:23:32","nodeType":"YulIdentifier","src":"21803:23:32"},"nativeSrc":"21803:30:32","nodeType":"YulFunctionCall","src":"21803:30:32"},"nativeSrc":"21803:30:32","nodeType":"YulExpressionStatement","src":"21803:30:32"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"21702:137:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"21740:6:32","nodeType":"YulTypedName","src":"21740:6:32","type":""},{"name":"end","nativeSrc":"21748:3:32","nodeType":"YulTypedName","src":"21748:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"21756:5:32","nodeType":"YulTypedName","src":"21756:5:32","type":""}],"src":"21702:137:32"},{"body":{"nativeSrc":"21889:49:32","nodeType":"YulBlock","src":"21889:49:32","statements":[{"nativeSrc":"21899:33:32","nodeType":"YulAssignment","src":"21899:33:32","value":{"arguments":[{"name":"value","nativeSrc":"21914:5:32","nodeType":"YulIdentifier","src":"21914:5:32"},{"kind":"number","nativeSrc":"21921:10:32","nodeType":"YulLiteral","src":"21921:10:32","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"21910:3:32","nodeType":"YulIdentifier","src":"21910:3:32"},"nativeSrc":"21910:22:32","nodeType":"YulFunctionCall","src":"21910:22:32"},"variableNames":[{"name":"cleaned","nativeSrc":"21899:7:32","nodeType":"YulIdentifier","src":"21899:7:32"}]}]},"name":"cleanup_t_uint32","nativeSrc":"21845:93:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21871:5:32","nodeType":"YulTypedName","src":"21871:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"21881:7:32","nodeType":"YulTypedName","src":"21881:7:32","type":""}],"src":"21845:93:32"},{"body":{"nativeSrc":"21986:78:32","nodeType":"YulBlock","src":"21986:78:32","statements":[{"body":{"nativeSrc":"22042:16:32","nodeType":"YulBlock","src":"22042:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22051:1:32","nodeType":"YulLiteral","src":"22051:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"22054:1:32","nodeType":"YulLiteral","src":"22054:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22044:6:32","nodeType":"YulIdentifier","src":"22044:6:32"},"nativeSrc":"22044:12:32","nodeType":"YulFunctionCall","src":"22044:12:32"},"nativeSrc":"22044:12:32","nodeType":"YulExpressionStatement","src":"22044:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22009:5:32","nodeType":"YulIdentifier","src":"22009:5:32"},{"arguments":[{"name":"value","nativeSrc":"22033:5:32","nodeType":"YulIdentifier","src":"22033:5:32"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"22016:16:32","nodeType":"YulIdentifier","src":"22016:16:32"},"nativeSrc":"22016:23:32","nodeType":"YulFunctionCall","src":"22016:23:32"}],"functionName":{"name":"eq","nativeSrc":"22006:2:32","nodeType":"YulIdentifier","src":"22006:2:32"},"nativeSrc":"22006:34:32","nodeType":"YulFunctionCall","src":"22006:34:32"}],"functionName":{"name":"iszero","nativeSrc":"21999:6:32","nodeType":"YulIdentifier","src":"21999:6:32"},"nativeSrc":"21999:42:32","nodeType":"YulFunctionCall","src":"21999:42:32"},"nativeSrc":"21996:62:32","nodeType":"YulIf","src":"21996:62:32"}]},"name":"validator_revert_t_uint32","nativeSrc":"21944:120:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21979:5:32","nodeType":"YulTypedName","src":"21979:5:32","type":""}],"src":"21944:120:32"},{"body":{"nativeSrc":"22132:79:32","nodeType":"YulBlock","src":"22132:79:32","statements":[{"nativeSrc":"22142:22:32","nodeType":"YulAssignment","src":"22142:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"22157:6:32","nodeType":"YulIdentifier","src":"22157:6:32"}],"functionName":{"name":"mload","nativeSrc":"22151:5:32","nodeType":"YulIdentifier","src":"22151:5:32"},"nativeSrc":"22151:13:32","nodeType":"YulFunctionCall","src":"22151:13:32"},"variableNames":[{"name":"value","nativeSrc":"22142:5:32","nodeType":"YulIdentifier","src":"22142:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"22199:5:32","nodeType":"YulIdentifier","src":"22199:5:32"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"22173:25:32","nodeType":"YulIdentifier","src":"22173:25:32"},"nativeSrc":"22173:32:32","nodeType":"YulFunctionCall","src":"22173:32:32"},"nativeSrc":"22173:32:32","nodeType":"YulExpressionStatement","src":"22173:32:32"}]},"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"22070:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"22110:6:32","nodeType":"YulTypedName","src":"22110:6:32","type":""},{"name":"end","nativeSrc":"22118:3:32","nodeType":"YulTypedName","src":"22118:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"22126:5:32","nodeType":"YulTypedName","src":"22126:5:32","type":""}],"src":"22070:141:32"},{"body":{"nativeSrc":"22307:409:32","nodeType":"YulBlock","src":"22307:409:32","statements":[{"body":{"nativeSrc":"22353:83:32","nodeType":"YulBlock","src":"22353:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"22355:77:32","nodeType":"YulIdentifier","src":"22355:77:32"},"nativeSrc":"22355:79:32","nodeType":"YulFunctionCall","src":"22355:79:32"},"nativeSrc":"22355:79:32","nodeType":"YulExpressionStatement","src":"22355:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"22328:7:32","nodeType":"YulIdentifier","src":"22328:7:32"},{"name":"headStart","nativeSrc":"22337:9:32","nodeType":"YulIdentifier","src":"22337:9:32"}],"functionName":{"name":"sub","nativeSrc":"22324:3:32","nodeType":"YulIdentifier","src":"22324:3:32"},"nativeSrc":"22324:23:32","nodeType":"YulFunctionCall","src":"22324:23:32"},{"kind":"number","nativeSrc":"22349:2:32","nodeType":"YulLiteral","src":"22349:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"22320:3:32","nodeType":"YulIdentifier","src":"22320:3:32"},"nativeSrc":"22320:32:32","nodeType":"YulFunctionCall","src":"22320:32:32"},"nativeSrc":"22317:119:32","nodeType":"YulIf","src":"22317:119:32"},{"nativeSrc":"22446:125:32","nodeType":"YulBlock","src":"22446:125:32","statements":[{"nativeSrc":"22461:15:32","nodeType":"YulVariableDeclaration","src":"22461:15:32","value":{"kind":"number","nativeSrc":"22475:1:32","nodeType":"YulLiteral","src":"22475:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"22465:6:32","nodeType":"YulTypedName","src":"22465:6:32","type":""}]},{"nativeSrc":"22490:71:32","nodeType":"YulAssignment","src":"22490:71:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22533:9:32","nodeType":"YulIdentifier","src":"22533:9:32"},{"name":"offset","nativeSrc":"22544:6:32","nodeType":"YulIdentifier","src":"22544:6:32"}],"functionName":{"name":"add","nativeSrc":"22529:3:32","nodeType":"YulIdentifier","src":"22529:3:32"},"nativeSrc":"22529:22:32","nodeType":"YulFunctionCall","src":"22529:22:32"},{"name":"dataEnd","nativeSrc":"22553:7:32","nodeType":"YulIdentifier","src":"22553:7:32"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"22500:28:32","nodeType":"YulIdentifier","src":"22500:28:32"},"nativeSrc":"22500:61:32","nodeType":"YulFunctionCall","src":"22500:61:32"},"variableNames":[{"name":"value0","nativeSrc":"22490:6:32","nodeType":"YulIdentifier","src":"22490:6:32"}]}]},{"nativeSrc":"22581:128:32","nodeType":"YulBlock","src":"22581:128:32","statements":[{"nativeSrc":"22596:16:32","nodeType":"YulVariableDeclaration","src":"22596:16:32","value":{"kind":"number","nativeSrc":"22610:2:32","nodeType":"YulLiteral","src":"22610:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"22600:6:32","nodeType":"YulTypedName","src":"22600:6:32","type":""}]},{"nativeSrc":"22626:73:32","nodeType":"YulAssignment","src":"22626:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22671:9:32","nodeType":"YulIdentifier","src":"22671:9:32"},{"name":"offset","nativeSrc":"22682:6:32","nodeType":"YulIdentifier","src":"22682:6:32"}],"functionName":{"name":"add","nativeSrc":"22667:3:32","nodeType":"YulIdentifier","src":"22667:3:32"},"nativeSrc":"22667:22:32","nodeType":"YulFunctionCall","src":"22667:22:32"},{"name":"dataEnd","nativeSrc":"22691:7:32","nodeType":"YulIdentifier","src":"22691:7:32"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"22636:30:32","nodeType":"YulIdentifier","src":"22636:30:32"},"nativeSrc":"22636:63:32","nodeType":"YulFunctionCall","src":"22636:63:32"},"variableNames":[{"name":"value1","nativeSrc":"22626:6:32","nodeType":"YulIdentifier","src":"22626:6:32"}]}]}]},"name":"abi_decode_tuple_t_boolt_uint32_fromMemory","nativeSrc":"22217:499:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22269:9:32","nodeType":"YulTypedName","src":"22269:9:32","type":""},{"name":"dataEnd","nativeSrc":"22280:7:32","nodeType":"YulTypedName","src":"22280:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"22292:6:32","nodeType":"YulTypedName","src":"22292:6:32","type":""},{"name":"value1","nativeSrc":"22300:6:32","nodeType":"YulTypedName","src":"22300:6:32","type":""}],"src":"22217:499:32"},{"body":{"nativeSrc":"22796:271:32","nodeType":"YulBlock","src":"22796:271:32","statements":[{"body":{"nativeSrc":"22842:83:32","nodeType":"YulBlock","src":"22842:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"22844:77:32","nodeType":"YulIdentifier","src":"22844:77:32"},"nativeSrc":"22844:79:32","nodeType":"YulFunctionCall","src":"22844:79:32"},"nativeSrc":"22844:79:32","nodeType":"YulExpressionStatement","src":"22844:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"22817:7:32","nodeType":"YulIdentifier","src":"22817:7:32"},{"name":"headStart","nativeSrc":"22826:9:32","nodeType":"YulIdentifier","src":"22826:9:32"}],"functionName":{"name":"sub","nativeSrc":"22813:3:32","nodeType":"YulIdentifier","src":"22813:3:32"},"nativeSrc":"22813:23:32","nodeType":"YulFunctionCall","src":"22813:23:32"},{"kind":"number","nativeSrc":"22838:2:32","nodeType":"YulLiteral","src":"22838:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"22809:3:32","nodeType":"YulIdentifier","src":"22809:3:32"},"nativeSrc":"22809:32:32","nodeType":"YulFunctionCall","src":"22809:32:32"},"nativeSrc":"22806:119:32","nodeType":"YulIf","src":"22806:119:32"},{"nativeSrc":"22935:125:32","nodeType":"YulBlock","src":"22935:125:32","statements":[{"nativeSrc":"22950:15:32","nodeType":"YulVariableDeclaration","src":"22950:15:32","value":{"kind":"number","nativeSrc":"22964:1:32","nodeType":"YulLiteral","src":"22964:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"22954:6:32","nodeType":"YulTypedName","src":"22954:6:32","type":""}]},{"nativeSrc":"22979:71:32","nodeType":"YulAssignment","src":"22979:71:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23022:9:32","nodeType":"YulIdentifier","src":"23022:9:32"},{"name":"offset","nativeSrc":"23033:6:32","nodeType":"YulIdentifier","src":"23033:6:32"}],"functionName":{"name":"add","nativeSrc":"23018:3:32","nodeType":"YulIdentifier","src":"23018:3:32"},"nativeSrc":"23018:22:32","nodeType":"YulFunctionCall","src":"23018:22:32"},{"name":"dataEnd","nativeSrc":"23042:7:32","nodeType":"YulIdentifier","src":"23042:7:32"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"22989:28:32","nodeType":"YulIdentifier","src":"22989:28:32"},"nativeSrc":"22989:61:32","nodeType":"YulFunctionCall","src":"22989:61:32"},"variableNames":[{"name":"value0","nativeSrc":"22979:6:32","nodeType":"YulIdentifier","src":"22979:6:32"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"22722:345:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22766:9:32","nodeType":"YulTypedName","src":"22766:9:32","type":""},{"name":"dataEnd","nativeSrc":"22777:7:32","nodeType":"YulTypedName","src":"22777:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"22789:6:32","nodeType":"YulTypedName","src":"22789:6:32","type":""}],"src":"22722:345:32"},{"body":{"nativeSrc":"23127:87:32","nodeType":"YulBlock","src":"23127:87:32","statements":[{"nativeSrc":"23137:11:32","nodeType":"YulAssignment","src":"23137:11:32","value":{"name":"ptr","nativeSrc":"23145:3:32","nodeType":"YulIdentifier","src":"23145:3:32"},"variableNames":[{"name":"data","nativeSrc":"23137:4:32","nodeType":"YulIdentifier","src":"23137:4:32"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23165:1:32","nodeType":"YulLiteral","src":"23165:1:32","type":"","value":"0"},{"name":"ptr","nativeSrc":"23168:3:32","nodeType":"YulIdentifier","src":"23168:3:32"}],"functionName":{"name":"mstore","nativeSrc":"23158:6:32","nodeType":"YulIdentifier","src":"23158:6:32"},"nativeSrc":"23158:14:32","nodeType":"YulFunctionCall","src":"23158:14:32"},"nativeSrc":"23158:14:32","nodeType":"YulExpressionStatement","src":"23158:14:32"},{"nativeSrc":"23181:26:32","nodeType":"YulAssignment","src":"23181:26:32","value":{"arguments":[{"kind":"number","nativeSrc":"23199:1:32","nodeType":"YulLiteral","src":"23199:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"23202:4:32","nodeType":"YulLiteral","src":"23202:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"23189:9:32","nodeType":"YulIdentifier","src":"23189:9:32"},"nativeSrc":"23189:18:32","nodeType":"YulFunctionCall","src":"23189:18:32"},"variableNames":[{"name":"data","nativeSrc":"23181:4:32","nodeType":"YulIdentifier","src":"23181:4:32"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"23073:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"23114:3:32","nodeType":"YulTypedName","src":"23114:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"23122:4:32","nodeType":"YulTypedName","src":"23122:4:32","type":""}],"src":"23073:141:32"},{"body":{"nativeSrc":"23264:49:32","nodeType":"YulBlock","src":"23264:49:32","statements":[{"nativeSrc":"23274:33:32","nodeType":"YulAssignment","src":"23274:33:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23292:5:32","nodeType":"YulIdentifier","src":"23292:5:32"},{"kind":"number","nativeSrc":"23299:2:32","nodeType":"YulLiteral","src":"23299:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"23288:3:32","nodeType":"YulIdentifier","src":"23288:3:32"},"nativeSrc":"23288:14:32","nodeType":"YulFunctionCall","src":"23288:14:32"},{"kind":"number","nativeSrc":"23304:2:32","nodeType":"YulLiteral","src":"23304:2:32","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"23284:3:32","nodeType":"YulIdentifier","src":"23284:3:32"},"nativeSrc":"23284:23:32","nodeType":"YulFunctionCall","src":"23284:23:32"},"variableNames":[{"name":"result","nativeSrc":"23274:6:32","nodeType":"YulIdentifier","src":"23274:6:32"}]}]},"name":"divide_by_32_ceil","nativeSrc":"23220:93:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23247:5:32","nodeType":"YulTypedName","src":"23247:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"23257:6:32","nodeType":"YulTypedName","src":"23257:6:32","type":""}],"src":"23220:93:32"},{"body":{"nativeSrc":"23395:317:32","nodeType":"YulBlock","src":"23395:317:32","statements":[{"nativeSrc":"23405:35:32","nodeType":"YulVariableDeclaration","src":"23405:35:32","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"23426:10:32","nodeType":"YulIdentifier","src":"23426:10:32"},{"kind":"number","nativeSrc":"23438:1:32","nodeType":"YulLiteral","src":"23438:1:32","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"23422:3:32","nodeType":"YulIdentifier","src":"23422:3:32"},"nativeSrc":"23422:18:32","nodeType":"YulFunctionCall","src":"23422:18:32"},"variables":[{"name":"shiftBits","nativeSrc":"23409:9:32","nodeType":"YulTypedName","src":"23409:9:32","type":""}]},{"nativeSrc":"23449:109:32","nodeType":"YulVariableDeclaration","src":"23449:109:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"23480:9:32","nodeType":"YulIdentifier","src":"23480:9:32"},{"kind":"number","nativeSrc":"23491:66:32","nodeType":"YulLiteral","src":"23491:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"23461:18:32","nodeType":"YulIdentifier","src":"23461:18:32"},"nativeSrc":"23461:97:32","nodeType":"YulFunctionCall","src":"23461:97:32"},"variables":[{"name":"mask","nativeSrc":"23453:4:32","nodeType":"YulTypedName","src":"23453:4:32","type":""}]},{"nativeSrc":"23567:51:32","nodeType":"YulAssignment","src":"23567:51:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"23598:9:32","nodeType":"YulIdentifier","src":"23598:9:32"},{"name":"toInsert","nativeSrc":"23609:8:32","nodeType":"YulIdentifier","src":"23609:8:32"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"23579:18:32","nodeType":"YulIdentifier","src":"23579:18:32"},"nativeSrc":"23579:39:32","nodeType":"YulFunctionCall","src":"23579:39:32"},"variableNames":[{"name":"toInsert","nativeSrc":"23567:8:32","nodeType":"YulIdentifier","src":"23567:8:32"}]},{"nativeSrc":"23627:30:32","nodeType":"YulAssignment","src":"23627:30:32","value":{"arguments":[{"name":"value","nativeSrc":"23640:5:32","nodeType":"YulIdentifier","src":"23640:5:32"},{"arguments":[{"name":"mask","nativeSrc":"23651:4:32","nodeType":"YulIdentifier","src":"23651:4:32"}],"functionName":{"name":"not","nativeSrc":"23647:3:32","nodeType":"YulIdentifier","src":"23647:3:32"},"nativeSrc":"23647:9:32","nodeType":"YulFunctionCall","src":"23647:9:32"}],"functionName":{"name":"and","nativeSrc":"23636:3:32","nodeType":"YulIdentifier","src":"23636:3:32"},"nativeSrc":"23636:21:32","nodeType":"YulFunctionCall","src":"23636:21:32"},"variableNames":[{"name":"value","nativeSrc":"23627:5:32","nodeType":"YulIdentifier","src":"23627:5:32"}]},{"nativeSrc":"23666:40:32","nodeType":"YulAssignment","src":"23666:40:32","value":{"arguments":[{"name":"value","nativeSrc":"23679:5:32","nodeType":"YulIdentifier","src":"23679:5:32"},{"arguments":[{"name":"toInsert","nativeSrc":"23690:8:32","nodeType":"YulIdentifier","src":"23690:8:32"},{"name":"mask","nativeSrc":"23700:4:32","nodeType":"YulIdentifier","src":"23700:4:32"}],"functionName":{"name":"and","nativeSrc":"23686:3:32","nodeType":"YulIdentifier","src":"23686:3:32"},"nativeSrc":"23686:19:32","nodeType":"YulFunctionCall","src":"23686:19:32"}],"functionName":{"name":"or","nativeSrc":"23676:2:32","nodeType":"YulIdentifier","src":"23676:2:32"},"nativeSrc":"23676:30:32","nodeType":"YulFunctionCall","src":"23676:30:32"},"variableNames":[{"name":"result","nativeSrc":"23666:6:32","nodeType":"YulIdentifier","src":"23666:6:32"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"23319:393:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23356:5:32","nodeType":"YulTypedName","src":"23356:5:32","type":""},{"name":"shiftBytes","nativeSrc":"23363:10:32","nodeType":"YulTypedName","src":"23363:10:32","type":""},{"name":"toInsert","nativeSrc":"23375:8:32","nodeType":"YulTypedName","src":"23375:8:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"23388:6:32","nodeType":"YulTypedName","src":"23388:6:32","type":""}],"src":"23319:393:32"},{"body":{"nativeSrc":"23778:82:32","nodeType":"YulBlock","src":"23778:82:32","statements":[{"nativeSrc":"23788:66:32","nodeType":"YulAssignment","src":"23788:66:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23846:5:32","nodeType":"YulIdentifier","src":"23846:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23828:17:32","nodeType":"YulIdentifier","src":"23828:17:32"},"nativeSrc":"23828:24:32","nodeType":"YulFunctionCall","src":"23828:24:32"}],"functionName":{"name":"identity","nativeSrc":"23819:8:32","nodeType":"YulIdentifier","src":"23819:8:32"},"nativeSrc":"23819:34:32","nodeType":"YulFunctionCall","src":"23819:34:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23801:17:32","nodeType":"YulIdentifier","src":"23801:17:32"},"nativeSrc":"23801:53:32","nodeType":"YulFunctionCall","src":"23801:53:32"},"variableNames":[{"name":"converted","nativeSrc":"23788:9:32","nodeType":"YulIdentifier","src":"23788:9:32"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"23718:142:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23758:5:32","nodeType":"YulTypedName","src":"23758:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"23768:9:32","nodeType":"YulTypedName","src":"23768:9:32","type":""}],"src":"23718:142:32"},{"body":{"nativeSrc":"23913:28:32","nodeType":"YulBlock","src":"23913:28:32","statements":[{"nativeSrc":"23923:12:32","nodeType":"YulAssignment","src":"23923:12:32","value":{"name":"value","nativeSrc":"23930:5:32","nodeType":"YulIdentifier","src":"23930:5:32"},"variableNames":[{"name":"ret","nativeSrc":"23923:3:32","nodeType":"YulIdentifier","src":"23923:3:32"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"23866:75:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23899:5:32","nodeType":"YulTypedName","src":"23899:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"23909:3:32","nodeType":"YulTypedName","src":"23909:3:32","type":""}],"src":"23866:75:32"},{"body":{"nativeSrc":"24023:193:32","nodeType":"YulBlock","src":"24023:193:32","statements":[{"nativeSrc":"24033:63:32","nodeType":"YulVariableDeclaration","src":"24033:63:32","value":{"arguments":[{"name":"value_0","nativeSrc":"24088:7:32","nodeType":"YulIdentifier","src":"24088:7:32"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"24057:30:32","nodeType":"YulIdentifier","src":"24057:30:32"},"nativeSrc":"24057:39:32","nodeType":"YulFunctionCall","src":"24057:39:32"},"variables":[{"name":"convertedValue_0","nativeSrc":"24037:16:32","nodeType":"YulTypedName","src":"24037:16:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24112:4:32","nodeType":"YulIdentifier","src":"24112:4:32"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"24152:4:32","nodeType":"YulIdentifier","src":"24152:4:32"}],"functionName":{"name":"sload","nativeSrc":"24146:5:32","nodeType":"YulIdentifier","src":"24146:5:32"},"nativeSrc":"24146:11:32","nodeType":"YulFunctionCall","src":"24146:11:32"},{"name":"offset","nativeSrc":"24159:6:32","nodeType":"YulIdentifier","src":"24159:6:32"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"24191:16:32","nodeType":"YulIdentifier","src":"24191:16:32"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"24167:23:32","nodeType":"YulIdentifier","src":"24167:23:32"},"nativeSrc":"24167:41:32","nodeType":"YulFunctionCall","src":"24167:41:32"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"24118:27:32","nodeType":"YulIdentifier","src":"24118:27:32"},"nativeSrc":"24118:91:32","nodeType":"YulFunctionCall","src":"24118:91:32"}],"functionName":{"name":"sstore","nativeSrc":"24105:6:32","nodeType":"YulIdentifier","src":"24105:6:32"},"nativeSrc":"24105:105:32","nodeType":"YulFunctionCall","src":"24105:105:32"},"nativeSrc":"24105:105:32","nodeType":"YulExpressionStatement","src":"24105:105:32"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"23947:269:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"24000:4:32","nodeType":"YulTypedName","src":"24000:4:32","type":""},{"name":"offset","nativeSrc":"24006:6:32","nodeType":"YulTypedName","src":"24006:6:32","type":""},{"name":"value_0","nativeSrc":"24014:7:32","nodeType":"YulTypedName","src":"24014:7:32","type":""}],"src":"23947:269:32"},{"body":{"nativeSrc":"24271:24:32","nodeType":"YulBlock","src":"24271:24:32","statements":[{"nativeSrc":"24281:8:32","nodeType":"YulAssignment","src":"24281:8:32","value":{"kind":"number","nativeSrc":"24288:1:32","nodeType":"YulLiteral","src":"24288:1:32","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"24281:3:32","nodeType":"YulIdentifier","src":"24281:3:32"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"24222:73:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"24267:3:32","nodeType":"YulTypedName","src":"24267:3:32","type":""}],"src":"24222:73:32"},{"body":{"nativeSrc":"24354:136:32","nodeType":"YulBlock","src":"24354:136:32","statements":[{"nativeSrc":"24364:46:32","nodeType":"YulVariableDeclaration","src":"24364:46:32","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"24378:30:32","nodeType":"YulIdentifier","src":"24378:30:32"},"nativeSrc":"24378:32:32","nodeType":"YulFunctionCall","src":"24378:32:32"},"variables":[{"name":"zero_0","nativeSrc":"24368:6:32","nodeType":"YulTypedName","src":"24368:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24463:4:32","nodeType":"YulIdentifier","src":"24463:4:32"},{"name":"offset","nativeSrc":"24469:6:32","nodeType":"YulIdentifier","src":"24469:6:32"},{"name":"zero_0","nativeSrc":"24477:6:32","nodeType":"YulIdentifier","src":"24477:6:32"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"24419:43:32","nodeType":"YulIdentifier","src":"24419:43:32"},"nativeSrc":"24419:65:32","nodeType":"YulFunctionCall","src":"24419:65:32"},"nativeSrc":"24419:65:32","nodeType":"YulExpressionStatement","src":"24419:65:32"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"24301:189:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"24340:4:32","nodeType":"YulTypedName","src":"24340:4:32","type":""},{"name":"offset","nativeSrc":"24346:6:32","nodeType":"YulTypedName","src":"24346:6:32","type":""}],"src":"24301:189:32"},{"body":{"nativeSrc":"24546:136:32","nodeType":"YulBlock","src":"24546:136:32","statements":[{"body":{"nativeSrc":"24613:63:32","nodeType":"YulBlock","src":"24613:63:32","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"24657:5:32","nodeType":"YulIdentifier","src":"24657:5:32"},{"kind":"number","nativeSrc":"24664:1:32","nodeType":"YulLiteral","src":"24664:1:32","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"24627:29:32","nodeType":"YulIdentifier","src":"24627:29:32"},"nativeSrc":"24627:39:32","nodeType":"YulFunctionCall","src":"24627:39:32"},"nativeSrc":"24627:39:32","nodeType":"YulExpressionStatement","src":"24627:39:32"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"24566:5:32","nodeType":"YulIdentifier","src":"24566:5:32"},{"name":"end","nativeSrc":"24573:3:32","nodeType":"YulIdentifier","src":"24573:3:32"}],"functionName":{"name":"lt","nativeSrc":"24563:2:32","nodeType":"YulIdentifier","src":"24563:2:32"},"nativeSrc":"24563:14:32","nodeType":"YulFunctionCall","src":"24563:14:32"},"nativeSrc":"24556:120:32","nodeType":"YulForLoop","post":{"nativeSrc":"24578:26:32","nodeType":"YulBlock","src":"24578:26:32","statements":[{"nativeSrc":"24580:22:32","nodeType":"YulAssignment","src":"24580:22:32","value":{"arguments":[{"name":"start","nativeSrc":"24593:5:32","nodeType":"YulIdentifier","src":"24593:5:32"},{"kind":"number","nativeSrc":"24600:1:32","nodeType":"YulLiteral","src":"24600:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"24589:3:32","nodeType":"YulIdentifier","src":"24589:3:32"},"nativeSrc":"24589:13:32","nodeType":"YulFunctionCall","src":"24589:13:32"},"variableNames":[{"name":"start","nativeSrc":"24580:5:32","nodeType":"YulIdentifier","src":"24580:5:32"}]}]},"pre":{"nativeSrc":"24560:2:32","nodeType":"YulBlock","src":"24560:2:32","statements":[]},"src":"24556:120:32"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"24496:186:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"24534:5:32","nodeType":"YulTypedName","src":"24534:5:32","type":""},{"name":"end","nativeSrc":"24541:3:32","nodeType":"YulTypedName","src":"24541:3:32","type":""}],"src":"24496:186:32"},{"body":{"nativeSrc":"24767:464:32","nodeType":"YulBlock","src":"24767:464:32","statements":[{"body":{"nativeSrc":"24793:431:32","nodeType":"YulBlock","src":"24793:431:32","statements":[{"nativeSrc":"24807:54:32","nodeType":"YulVariableDeclaration","src":"24807:54:32","value":{"arguments":[{"name":"array","nativeSrc":"24855:5:32","nodeType":"YulIdentifier","src":"24855:5:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"24823:31:32","nodeType":"YulIdentifier","src":"24823:31:32"},"nativeSrc":"24823:38:32","nodeType":"YulFunctionCall","src":"24823:38:32"},"variables":[{"name":"dataArea","nativeSrc":"24811:8:32","nodeType":"YulTypedName","src":"24811:8:32","type":""}]},{"nativeSrc":"24874:63:32","nodeType":"YulVariableDeclaration","src":"24874:63:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"24897:8:32","nodeType":"YulIdentifier","src":"24897:8:32"},{"arguments":[{"name":"startIndex","nativeSrc":"24925:10:32","nodeType":"YulIdentifier","src":"24925:10:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"24907:17:32","nodeType":"YulIdentifier","src":"24907:17:32"},"nativeSrc":"24907:29:32","nodeType":"YulFunctionCall","src":"24907:29:32"}],"functionName":{"name":"add","nativeSrc":"24893:3:32","nodeType":"YulIdentifier","src":"24893:3:32"},"nativeSrc":"24893:44:32","nodeType":"YulFunctionCall","src":"24893:44:32"},"variables":[{"name":"deleteStart","nativeSrc":"24878:11:32","nodeType":"YulTypedName","src":"24878:11:32","type":""}]},{"body":{"nativeSrc":"25094:27:32","nodeType":"YulBlock","src":"25094:27:32","statements":[{"nativeSrc":"25096:23:32","nodeType":"YulAssignment","src":"25096:23:32","value":{"name":"dataArea","nativeSrc":"25111:8:32","nodeType":"YulIdentifier","src":"25111:8:32"},"variableNames":[{"name":"deleteStart","nativeSrc":"25096:11:32","nodeType":"YulIdentifier","src":"25096:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"25078:10:32","nodeType":"YulIdentifier","src":"25078:10:32"},{"kind":"number","nativeSrc":"25090:2:32","nodeType":"YulLiteral","src":"25090:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"25075:2:32","nodeType":"YulIdentifier","src":"25075:2:32"},"nativeSrc":"25075:18:32","nodeType":"YulFunctionCall","src":"25075:18:32"},"nativeSrc":"25072:49:32","nodeType":"YulIf","src":"25072:49:32"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"25163:11:32","nodeType":"YulIdentifier","src":"25163:11:32"},{"arguments":[{"name":"dataArea","nativeSrc":"25180:8:32","nodeType":"YulIdentifier","src":"25180:8:32"},{"arguments":[{"name":"len","nativeSrc":"25208:3:32","nodeType":"YulIdentifier","src":"25208:3:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"25190:17:32","nodeType":"YulIdentifier","src":"25190:17:32"},"nativeSrc":"25190:22:32","nodeType":"YulFunctionCall","src":"25190:22:32"}],"functionName":{"name":"add","nativeSrc":"25176:3:32","nodeType":"YulIdentifier","src":"25176:3:32"},"nativeSrc":"25176:37:32","nodeType":"YulFunctionCall","src":"25176:37:32"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"25134:28:32","nodeType":"YulIdentifier","src":"25134:28:32"},"nativeSrc":"25134:80:32","nodeType":"YulFunctionCall","src":"25134:80:32"},"nativeSrc":"25134:80:32","nodeType":"YulExpressionStatement","src":"25134:80:32"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"24784:3:32","nodeType":"YulIdentifier","src":"24784:3:32"},{"kind":"number","nativeSrc":"24789:2:32","nodeType":"YulLiteral","src":"24789:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"24781:2:32","nodeType":"YulIdentifier","src":"24781:2:32"},"nativeSrc":"24781:11:32","nodeType":"YulFunctionCall","src":"24781:11:32"},"nativeSrc":"24778:446:32","nodeType":"YulIf","src":"24778:446:32"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"24688:543:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"24743:5:32","nodeType":"YulTypedName","src":"24743:5:32","type":""},{"name":"len","nativeSrc":"24750:3:32","nodeType":"YulTypedName","src":"24750:3:32","type":""},{"name":"startIndex","nativeSrc":"24755:10:32","nodeType":"YulTypedName","src":"24755:10:32","type":""}],"src":"24688:543:32"},{"body":{"nativeSrc":"25300:54:32","nodeType":"YulBlock","src":"25300:54:32","statements":[{"nativeSrc":"25310:37:32","nodeType":"YulAssignment","src":"25310:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"25335:4:32","nodeType":"YulIdentifier","src":"25335:4:32"},{"name":"value","nativeSrc":"25341:5:32","nodeType":"YulIdentifier","src":"25341:5:32"}],"functionName":{"name":"shr","nativeSrc":"25331:3:32","nodeType":"YulIdentifier","src":"25331:3:32"},"nativeSrc":"25331:16:32","nodeType":"YulFunctionCall","src":"25331:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"25310:8:32","nodeType":"YulIdentifier","src":"25310:8:32"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"25237:117:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"25275:4:32","nodeType":"YulTypedName","src":"25275:4:32","type":""},{"name":"value","nativeSrc":"25281:5:32","nodeType":"YulTypedName","src":"25281:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"25291:8:32","nodeType":"YulTypedName","src":"25291:8:32","type":""}],"src":"25237:117:32"},{"body":{"nativeSrc":"25411:118:32","nodeType":"YulBlock","src":"25411:118:32","statements":[{"nativeSrc":"25421:68:32","nodeType":"YulVariableDeclaration","src":"25421:68:32","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"25470:1:32","nodeType":"YulLiteral","src":"25470:1:32","type":"","value":"8"},{"name":"bytes","nativeSrc":"25473:5:32","nodeType":"YulIdentifier","src":"25473:5:32"}],"functionName":{"name":"mul","nativeSrc":"25466:3:32","nodeType":"YulIdentifier","src":"25466:3:32"},"nativeSrc":"25466:13:32","nodeType":"YulFunctionCall","src":"25466:13:32"},{"arguments":[{"kind":"number","nativeSrc":"25485:1:32","nodeType":"YulLiteral","src":"25485:1:32","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"25481:3:32","nodeType":"YulIdentifier","src":"25481:3:32"},"nativeSrc":"25481:6:32","nodeType":"YulFunctionCall","src":"25481:6:32"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"25437:28:32","nodeType":"YulIdentifier","src":"25437:28:32"},"nativeSrc":"25437:51:32","nodeType":"YulFunctionCall","src":"25437:51:32"}],"functionName":{"name":"not","nativeSrc":"25433:3:32","nodeType":"YulIdentifier","src":"25433:3:32"},"nativeSrc":"25433:56:32","nodeType":"YulFunctionCall","src":"25433:56:32"},"variables":[{"name":"mask","nativeSrc":"25425:4:32","nodeType":"YulTypedName","src":"25425:4:32","type":""}]},{"nativeSrc":"25498:25:32","nodeType":"YulAssignment","src":"25498:25:32","value":{"arguments":[{"name":"data","nativeSrc":"25512:4:32","nodeType":"YulIdentifier","src":"25512:4:32"},{"name":"mask","nativeSrc":"25518:4:32","nodeType":"YulIdentifier","src":"25518:4:32"}],"functionName":{"name":"and","nativeSrc":"25508:3:32","nodeType":"YulIdentifier","src":"25508:3:32"},"nativeSrc":"25508:15:32","nodeType":"YulFunctionCall","src":"25508:15:32"},"variableNames":[{"name":"result","nativeSrc":"25498:6:32","nodeType":"YulIdentifier","src":"25498:6:32"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"25360:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"25388:4:32","nodeType":"YulTypedName","src":"25388:4:32","type":""},{"name":"bytes","nativeSrc":"25394:5:32","nodeType":"YulTypedName","src":"25394:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"25404:6:32","nodeType":"YulTypedName","src":"25404:6:32","type":""}],"src":"25360:169:32"},{"body":{"nativeSrc":"25615:214:32","nodeType":"YulBlock","src":"25615:214:32","statements":[{"nativeSrc":"25748:37:32","nodeType":"YulAssignment","src":"25748:37:32","value":{"arguments":[{"name":"data","nativeSrc":"25775:4:32","nodeType":"YulIdentifier","src":"25775:4:32"},{"name":"len","nativeSrc":"25781:3:32","nodeType":"YulIdentifier","src":"25781:3:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"25756:18:32","nodeType":"YulIdentifier","src":"25756:18:32"},"nativeSrc":"25756:29:32","nodeType":"YulFunctionCall","src":"25756:29:32"},"variableNames":[{"name":"data","nativeSrc":"25748:4:32","nodeType":"YulIdentifier","src":"25748:4:32"}]},{"nativeSrc":"25794:29:32","nodeType":"YulAssignment","src":"25794:29:32","value":{"arguments":[{"name":"data","nativeSrc":"25805:4:32","nodeType":"YulIdentifier","src":"25805:4:32"},{"arguments":[{"kind":"number","nativeSrc":"25815:1:32","nodeType":"YulLiteral","src":"25815:1:32","type":"","value":"2"},{"name":"len","nativeSrc":"25818:3:32","nodeType":"YulIdentifier","src":"25818:3:32"}],"functionName":{"name":"mul","nativeSrc":"25811:3:32","nodeType":"YulIdentifier","src":"25811:3:32"},"nativeSrc":"25811:11:32","nodeType":"YulFunctionCall","src":"25811:11:32"}],"functionName":{"name":"or","nativeSrc":"25802:2:32","nodeType":"YulIdentifier","src":"25802:2:32"},"nativeSrc":"25802:21:32","nodeType":"YulFunctionCall","src":"25802:21:32"},"variableNames":[{"name":"used","nativeSrc":"25794:4:32","nodeType":"YulIdentifier","src":"25794:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"25534:295:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"25596:4:32","nodeType":"YulTypedName","src":"25596:4:32","type":""},{"name":"len","nativeSrc":"25602:3:32","nodeType":"YulTypedName","src":"25602:3:32","type":""}],"returnVariables":[{"name":"used","nativeSrc":"25610:4:32","nodeType":"YulTypedName","src":"25610:4:32","type":""}],"src":"25534:295:32"},{"body":{"nativeSrc":"25926:1303:32","nodeType":"YulBlock","src":"25926:1303:32","statements":[{"nativeSrc":"25937:51:32","nodeType":"YulVariableDeclaration","src":"25937:51:32","value":{"arguments":[{"name":"src","nativeSrc":"25984:3:32","nodeType":"YulIdentifier","src":"25984:3:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"25951:32:32","nodeType":"YulIdentifier","src":"25951:32:32"},"nativeSrc":"25951:37:32","nodeType":"YulFunctionCall","src":"25951:37:32"},"variables":[{"name":"newLen","nativeSrc":"25941:6:32","nodeType":"YulTypedName","src":"25941:6:32","type":""}]},{"body":{"nativeSrc":"26073:22:32","nodeType":"YulBlock","src":"26073:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"26075:16:32","nodeType":"YulIdentifier","src":"26075:16:32"},"nativeSrc":"26075:18:32","nodeType":"YulFunctionCall","src":"26075:18:32"},"nativeSrc":"26075:18:32","nodeType":"YulExpressionStatement","src":"26075:18:32"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"26045:6:32","nodeType":"YulIdentifier","src":"26045:6:32"},{"kind":"number","nativeSrc":"26053:18:32","nodeType":"YulLiteral","src":"26053:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"26042:2:32","nodeType":"YulIdentifier","src":"26042:2:32"},"nativeSrc":"26042:30:32","nodeType":"YulFunctionCall","src":"26042:30:32"},"nativeSrc":"26039:56:32","nodeType":"YulIf","src":"26039:56:32"},{"nativeSrc":"26105:52:32","nodeType":"YulVariableDeclaration","src":"26105:52:32","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"26151:4:32","nodeType":"YulIdentifier","src":"26151:4:32"}],"functionName":{"name":"sload","nativeSrc":"26145:5:32","nodeType":"YulIdentifier","src":"26145:5:32"},"nativeSrc":"26145:11:32","nodeType":"YulFunctionCall","src":"26145:11:32"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"26119:25:32","nodeType":"YulIdentifier","src":"26119:25:32"},"nativeSrc":"26119:38:32","nodeType":"YulFunctionCall","src":"26119:38:32"},"variables":[{"name":"oldLen","nativeSrc":"26109:6:32","nodeType":"YulTypedName","src":"26109:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"26250:4:32","nodeType":"YulIdentifier","src":"26250:4:32"},{"name":"oldLen","nativeSrc":"26256:6:32","nodeType":"YulIdentifier","src":"26256:6:32"},{"name":"newLen","nativeSrc":"26264:6:32","nodeType":"YulIdentifier","src":"26264:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"26204:45:32","nodeType":"YulIdentifier","src":"26204:45:32"},"nativeSrc":"26204:67:32","nodeType":"YulFunctionCall","src":"26204:67:32"},"nativeSrc":"26204:67:32","nodeType":"YulExpressionStatement","src":"26204:67:32"},{"nativeSrc":"26281:18:32","nodeType":"YulVariableDeclaration","src":"26281:18:32","value":{"kind":"number","nativeSrc":"26298:1:32","nodeType":"YulLiteral","src":"26298:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"26285:9:32","nodeType":"YulTypedName","src":"26285:9:32","type":""}]},{"nativeSrc":"26309:17:32","nodeType":"YulAssignment","src":"26309:17:32","value":{"kind":"number","nativeSrc":"26322:4:32","nodeType":"YulLiteral","src":"26322:4:32","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"26309:9:32","nodeType":"YulIdentifier","src":"26309:9:32"}]},{"cases":[{"body":{"nativeSrc":"26373:611:32","nodeType":"YulBlock","src":"26373:611:32","statements":[{"nativeSrc":"26387:37:32","nodeType":"YulVariableDeclaration","src":"26387:37:32","value":{"arguments":[{"name":"newLen","nativeSrc":"26406:6:32","nodeType":"YulIdentifier","src":"26406:6:32"},{"arguments":[{"kind":"number","nativeSrc":"26418:4:32","nodeType":"YulLiteral","src":"26418:4:32","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"26414:3:32","nodeType":"YulIdentifier","src":"26414:3:32"},"nativeSrc":"26414:9:32","nodeType":"YulFunctionCall","src":"26414:9:32"}],"functionName":{"name":"and","nativeSrc":"26402:3:32","nodeType":"YulIdentifier","src":"26402:3:32"},"nativeSrc":"26402:22:32","nodeType":"YulFunctionCall","src":"26402:22:32"},"variables":[{"name":"loopEnd","nativeSrc":"26391:7:32","nodeType":"YulTypedName","src":"26391:7:32","type":""}]},{"nativeSrc":"26438:51:32","nodeType":"YulVariableDeclaration","src":"26438:51:32","value":{"arguments":[{"name":"slot","nativeSrc":"26484:4:32","nodeType":"YulIdentifier","src":"26484:4:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"26452:31:32","nodeType":"YulIdentifier","src":"26452:31:32"},"nativeSrc":"26452:37:32","nodeType":"YulFunctionCall","src":"26452:37:32"},"variables":[{"name":"dstPtr","nativeSrc":"26442:6:32","nodeType":"YulTypedName","src":"26442:6:32","type":""}]},{"nativeSrc":"26502:10:32","nodeType":"YulVariableDeclaration","src":"26502:10:32","value":{"kind":"number","nativeSrc":"26511:1:32","nodeType":"YulLiteral","src":"26511:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"26506:1:32","nodeType":"YulTypedName","src":"26506:1:32","type":""}]},{"body":{"nativeSrc":"26570:163:32","nodeType":"YulBlock","src":"26570:163:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"26595:6:32","nodeType":"YulIdentifier","src":"26595:6:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"26613:3:32","nodeType":"YulIdentifier","src":"26613:3:32"},{"name":"srcOffset","nativeSrc":"26618:9:32","nodeType":"YulIdentifier","src":"26618:9:32"}],"functionName":{"name":"add","nativeSrc":"26609:3:32","nodeType":"YulIdentifier","src":"26609:3:32"},"nativeSrc":"26609:19:32","nodeType":"YulFunctionCall","src":"26609:19:32"}],"functionName":{"name":"mload","nativeSrc":"26603:5:32","nodeType":"YulIdentifier","src":"26603:5:32"},"nativeSrc":"26603:26:32","nodeType":"YulFunctionCall","src":"26603:26:32"}],"functionName":{"name":"sstore","nativeSrc":"26588:6:32","nodeType":"YulIdentifier","src":"26588:6:32"},"nativeSrc":"26588:42:32","nodeType":"YulFunctionCall","src":"26588:42:32"},"nativeSrc":"26588:42:32","nodeType":"YulExpressionStatement","src":"26588:42:32"},{"nativeSrc":"26647:24:32","nodeType":"YulAssignment","src":"26647:24:32","value":{"arguments":[{"name":"dstPtr","nativeSrc":"26661:6:32","nodeType":"YulIdentifier","src":"26661:6:32"},{"kind":"number","nativeSrc":"26669:1:32","nodeType":"YulLiteral","src":"26669:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"26657:3:32","nodeType":"YulIdentifier","src":"26657:3:32"},"nativeSrc":"26657:14:32","nodeType":"YulFunctionCall","src":"26657:14:32"},"variableNames":[{"name":"dstPtr","nativeSrc":"26647:6:32","nodeType":"YulIdentifier","src":"26647:6:32"}]},{"nativeSrc":"26688:31:32","nodeType":"YulAssignment","src":"26688:31:32","value":{"arguments":[{"name":"srcOffset","nativeSrc":"26705:9:32","nodeType":"YulIdentifier","src":"26705:9:32"},{"kind":"number","nativeSrc":"26716:2:32","nodeType":"YulLiteral","src":"26716:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26701:3:32","nodeType":"YulIdentifier","src":"26701:3:32"},"nativeSrc":"26701:18:32","nodeType":"YulFunctionCall","src":"26701:18:32"},"variableNames":[{"name":"srcOffset","nativeSrc":"26688:9:32","nodeType":"YulIdentifier","src":"26688:9:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"26536:1:32","nodeType":"YulIdentifier","src":"26536:1:32"},{"name":"loopEnd","nativeSrc":"26539:7:32","nodeType":"YulIdentifier","src":"26539:7:32"}],"functionName":{"name":"lt","nativeSrc":"26533:2:32","nodeType":"YulIdentifier","src":"26533:2:32"},"nativeSrc":"26533:14:32","nodeType":"YulFunctionCall","src":"26533:14:32"},"nativeSrc":"26525:208:32","nodeType":"YulForLoop","post":{"nativeSrc":"26548:21:32","nodeType":"YulBlock","src":"26548:21:32","statements":[{"nativeSrc":"26550:17:32","nodeType":"YulAssignment","src":"26550:17:32","value":{"arguments":[{"name":"i","nativeSrc":"26559:1:32","nodeType":"YulIdentifier","src":"26559:1:32"},{"kind":"number","nativeSrc":"26562:4:32","nodeType":"YulLiteral","src":"26562:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26555:3:32","nodeType":"YulIdentifier","src":"26555:3:32"},"nativeSrc":"26555:12:32","nodeType":"YulFunctionCall","src":"26555:12:32"},"variableNames":[{"name":"i","nativeSrc":"26550:1:32","nodeType":"YulIdentifier","src":"26550:1:32"}]}]},"pre":{"nativeSrc":"26529:3:32","nodeType":"YulBlock","src":"26529:3:32","statements":[]},"src":"26525:208:32"},{"body":{"nativeSrc":"26769:156:32","nodeType":"YulBlock","src":"26769:156:32","statements":[{"nativeSrc":"26787:43:32","nodeType":"YulVariableDeclaration","src":"26787:43:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"26814:3:32","nodeType":"YulIdentifier","src":"26814:3:32"},{"name":"srcOffset","nativeSrc":"26819:9:32","nodeType":"YulIdentifier","src":"26819:9:32"}],"functionName":{"name":"add","nativeSrc":"26810:3:32","nodeType":"YulIdentifier","src":"26810:3:32"},"nativeSrc":"26810:19:32","nodeType":"YulFunctionCall","src":"26810:19:32"}],"functionName":{"name":"mload","nativeSrc":"26804:5:32","nodeType":"YulIdentifier","src":"26804:5:32"},"nativeSrc":"26804:26:32","nodeType":"YulFunctionCall","src":"26804:26:32"},"variables":[{"name":"lastValue","nativeSrc":"26791:9:32","nodeType":"YulTypedName","src":"26791:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"26854:6:32","nodeType":"YulIdentifier","src":"26854:6:32"},{"arguments":[{"name":"lastValue","nativeSrc":"26881:9:32","nodeType":"YulIdentifier","src":"26881:9:32"},{"arguments":[{"name":"newLen","nativeSrc":"26896:6:32","nodeType":"YulIdentifier","src":"26896:6:32"},{"kind":"number","nativeSrc":"26904:4:32","nodeType":"YulLiteral","src":"26904:4:32","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"26892:3:32","nodeType":"YulIdentifier","src":"26892:3:32"},"nativeSrc":"26892:17:32","nodeType":"YulFunctionCall","src":"26892:17:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"26862:18:32","nodeType":"YulIdentifier","src":"26862:18:32"},"nativeSrc":"26862:48:32","nodeType":"YulFunctionCall","src":"26862:48:32"}],"functionName":{"name":"sstore","nativeSrc":"26847:6:32","nodeType":"YulIdentifier","src":"26847:6:32"},"nativeSrc":"26847:64:32","nodeType":"YulFunctionCall","src":"26847:64:32"},"nativeSrc":"26847:64:32","nodeType":"YulExpressionStatement","src":"26847:64:32"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"26752:7:32","nodeType":"YulIdentifier","src":"26752:7:32"},{"name":"newLen","nativeSrc":"26761:6:32","nodeType":"YulIdentifier","src":"26761:6:32"}],"functionName":{"name":"lt","nativeSrc":"26749:2:32","nodeType":"YulIdentifier","src":"26749:2:32"},"nativeSrc":"26749:19:32","nodeType":"YulFunctionCall","src":"26749:19:32"},"nativeSrc":"26746:179:32","nodeType":"YulIf","src":"26746:179:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"26945:4:32","nodeType":"YulIdentifier","src":"26945:4:32"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"26959:6:32","nodeType":"YulIdentifier","src":"26959:6:32"},{"kind":"number","nativeSrc":"26967:1:32","nodeType":"YulLiteral","src":"26967:1:32","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"26955:3:32","nodeType":"YulIdentifier","src":"26955:3:32"},"nativeSrc":"26955:14:32","nodeType":"YulFunctionCall","src":"26955:14:32"},{"kind":"number","nativeSrc":"26971:1:32","nodeType":"YulLiteral","src":"26971:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"26951:3:32","nodeType":"YulIdentifier","src":"26951:3:32"},"nativeSrc":"26951:22:32","nodeType":"YulFunctionCall","src":"26951:22:32"}],"functionName":{"name":"sstore","nativeSrc":"26938:6:32","nodeType":"YulIdentifier","src":"26938:6:32"},"nativeSrc":"26938:36:32","nodeType":"YulFunctionCall","src":"26938:36:32"},"nativeSrc":"26938:36:32","nodeType":"YulExpressionStatement","src":"26938:36:32"}]},"nativeSrc":"26366:618:32","nodeType":"YulCase","src":"26366:618:32","value":{"kind":"number","nativeSrc":"26371:1:32","nodeType":"YulLiteral","src":"26371:1:32","type":"","value":"1"}},{"body":{"nativeSrc":"27001:222:32","nodeType":"YulBlock","src":"27001:222:32","statements":[{"nativeSrc":"27015:14:32","nodeType":"YulVariableDeclaration","src":"27015:14:32","value":{"kind":"number","nativeSrc":"27028:1:32","nodeType":"YulLiteral","src":"27028:1:32","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"27019:5:32","nodeType":"YulTypedName","src":"27019:5:32","type":""}]},{"body":{"nativeSrc":"27052:67:32","nodeType":"YulBlock","src":"27052:67:32","statements":[{"nativeSrc":"27070:35:32","nodeType":"YulAssignment","src":"27070:35:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"27089:3:32","nodeType":"YulIdentifier","src":"27089:3:32"},{"name":"srcOffset","nativeSrc":"27094:9:32","nodeType":"YulIdentifier","src":"27094:9:32"}],"functionName":{"name":"add","nativeSrc":"27085:3:32","nodeType":"YulIdentifier","src":"27085:3:32"},"nativeSrc":"27085:19:32","nodeType":"YulFunctionCall","src":"27085:19:32"}],"functionName":{"name":"mload","nativeSrc":"27079:5:32","nodeType":"YulIdentifier","src":"27079:5:32"},"nativeSrc":"27079:26:32","nodeType":"YulFunctionCall","src":"27079:26:32"},"variableNames":[{"name":"value","nativeSrc":"27070:5:32","nodeType":"YulIdentifier","src":"27070:5:32"}]}]},"condition":{"name":"newLen","nativeSrc":"27045:6:32","nodeType":"YulIdentifier","src":"27045:6:32"},"nativeSrc":"27042:77:32","nodeType":"YulIf","src":"27042:77:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27139:4:32","nodeType":"YulIdentifier","src":"27139:4:32"},{"arguments":[{"name":"value","nativeSrc":"27198:5:32","nodeType":"YulIdentifier","src":"27198:5:32"},{"name":"newLen","nativeSrc":"27205:6:32","nodeType":"YulIdentifier","src":"27205:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"27145:52:32","nodeType":"YulIdentifier","src":"27145:52:32"},"nativeSrc":"27145:67:32","nodeType":"YulFunctionCall","src":"27145:67:32"}],"functionName":{"name":"sstore","nativeSrc":"27132:6:32","nodeType":"YulIdentifier","src":"27132:6:32"},"nativeSrc":"27132:81:32","nodeType":"YulFunctionCall","src":"27132:81:32"},"nativeSrc":"27132:81:32","nodeType":"YulExpressionStatement","src":"27132:81:32"}]},"nativeSrc":"26993:230:32","nodeType":"YulCase","src":"26993:230:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"26346:6:32","nodeType":"YulIdentifier","src":"26346:6:32"},{"kind":"number","nativeSrc":"26354:2:32","nodeType":"YulLiteral","src":"26354:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"26343:2:32","nodeType":"YulIdentifier","src":"26343:2:32"},"nativeSrc":"26343:14:32","nodeType":"YulFunctionCall","src":"26343:14:32"},"nativeSrc":"26336:887:32","nodeType":"YulSwitch","src":"26336:887:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"25834:1395:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"25915:4:32","nodeType":"YulTypedName","src":"25915:4:32","type":""},{"name":"src","nativeSrc":"25921:3:32","nodeType":"YulTypedName","src":"25921:3:32","type":""}],"src":"25834:1395:32"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes4(calldataload(dataArea))\n\n        if lt(length, 4) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(4, length)),\n                    0xffffffff00000000000000000000000000000000000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint32_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"521":[{"length":32,"start":5193},{"length":32,"start":5278},{"length":32,"start":5737}]},"linkReferences":{},"object":"6080604052600436106101355760003560e01c806370a08231116100ab578063ad3cb1cc1161006f578063ad3cb1cc14610415578063b88d4fde14610440578063bf7e214f14610469578063c4d66de814610494578063c87b56dd146104bd578063e985e9c5146104fa57610135565b806370a08231146103305780637a9e5e4b1461036d5780638fb360371461039657806395d89b41146103c1578063a22cb465146103ec57610135565b806340d097c3116100fd57806340d097c31461023157806342842e0e1461025a57806342966c68146102835780634f1ef286146102ac57806352d1902d146102c85780636352211e146102f357610135565b806301ffc9a71461013a57806306fdde0314610177578063081812fc146101a2578063095ea7b3146101df57806323b872dd14610208575b600080fd5b34801561014657600080fd5b50610161600480360381019061015c91906127a5565b610537565b60405161016e91906127ed565b60405180910390f35b34801561018357600080fd5b5061018c610619565b6040516101999190612898565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906128f0565b6106ba565b6040516101d6919061295e565b60405180910390f35b3480156101eb57600080fd5b50610206600480360381019061020191906129a5565b6106d6565b005b34801561021457600080fd5b5061022f600480360381019061022a91906129e5565b6106ec565b005b34801561023d57600080fd5b5061025860048036038101906102539190612a38565b6107ee565b005b34801561026657600080fd5b50610281600480360381019061027c91906129e5565b61082e565b005b34801561028f57600080fd5b506102aa60048036038101906102a591906128f0565b61084e565b005b6102c660048036038101906102c19190612b9a565b610865565b005b3480156102d457600080fd5b506102dd610884565b6040516102ea9190612c0f565b60405180910390f35b3480156102ff57600080fd5b5061031a600480360381019061031591906128f0565b6108b7565b604051610327919061295e565b60405180910390f35b34801561033c57600080fd5b5061035760048036038101906103529190612a38565b6108c9565b6040516103649190612c39565b60405180910390f35b34801561037957600080fd5b50610394600480360381019061038f9190612a38565b610992565b005b3480156103a257600080fd5b506103ab610a7e565b6040516103b89190612c63565b60405180910390f35b3480156103cd57600080fd5b506103d6610aba565b6040516103e39190612898565b60405180910390f35b3480156103f857600080fd5b50610413600480360381019061040e9190612caa565b610b5b565b005b34801561042157600080fd5b5061042a610b71565b6040516104379190612898565b60405180910390f35b34801561044c57600080fd5b5061046760048036038101906104629190612cea565b610baa565b005b34801561047557600080fd5b5061047e610bc7565b60405161048b919061295e565b60405180910390f35b3480156104a057600080fd5b506104bb60048036038101906104b69190612a38565b610bff565b005b3480156104c957600080fd5b506104e460048036038101906104df91906128f0565b610e12565b6040516104f19190612898565b60405180910390f35b34801561050657600080fd5b50610521600480360381019061051c9190612d6d565b610e7b565b60405161052e91906127ed565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061060257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610612575061061182610f1d565b5b9050919050565b60606000610625610f87565b905080600001805461063690612ddc565b80601f016020809104026020016040519081016040528092919081815260200182805461066290612ddc565b80156106af5780601f10610684576101008083540402835291602001916106af565b820191906000526020600020905b81548152906001019060200180831161069257829003601f168201915b505050505091505090565b60006106c582610faf565b506106cf82611037565b9050919050565b6106e882826106e3611082565b61108a565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075e5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610755919061295e565b60405180910390fd5b6000610772838361076d611082565b61109c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107e8578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107df93929190612e0d565b60405180910390fd5b50505050565b6108066107f9611082565b6108016112c9565b6112d6565b600080600081548092919061081a90612e73565b91905055905061082a8282611429565b5050565b61084983838360405180602001604052806000815250610baa565b505050565b61086160008261085c611082565b61109c565b5050565b61086d611447565b6108768261152d565b6108808282611548565b5050565b600061088e611667565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60006108c282610faf565b9050919050565b6000806108d4610f87565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109485760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161093f919061295e565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b600061099c611082565b90506109a6610bc7565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a1557806040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401610a0c919061295e565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff163b03610a7157816040517fc2f31e5e000000000000000000000000000000000000000000000000000000008152600401610a68919061295e565b60405180910390fd5b610a7a826116ee565b5050565b600080610a89611778565b90508060000160149054906101000a900460ff16610aab57600060e01b610ab4565b638fb3603760e01b5b91505090565b60606000610ac6610f87565b9050806001018054610ad790612ddc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0390612ddc565b8015610b505780601f10610b2557610100808354040283529160200191610b50565b820191906000526020600020905b815481529060010190602001808311610b3357829003601f168201915b505050505091505090565b610b6d610b66611082565b83836117a0565b5050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b610bb58484846106ec565b610bc18484848461191e565b50505050565b600080610bd2611778565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000610c09611ad5565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610c575750825b9050600060018367ffffffffffffffff16148015610c8c575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610c9a575080155b15610cd1576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610d215760018560000160086101000a81548160ff0219169083151502179055505b610d956040518060400160405280600681526020017f4e4654756e6500000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e46550000000000000000000000000000000000000000000000000000000000815250611afd565b610d9d611b13565b610da686611b1d565b610dae611b31565b8315610e0a5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610e019190612f14565b60405180910390a15b505050505050565b6060610e1d82610faf565b506000610e28611b3b565b90506000815111610e485760405180602001604052806000815250610e73565b80610e5284611b52565b604051602001610e63929190612f6b565b6040516020818303038152906040525b915050919050565b600080610e86610f87565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b600080610fbb83611c20565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361102e57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016110259190612c39565b60405180910390fd5b80915050919050565b600080611042610f87565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b6110978383836001611c6b565b505050565b6000806110a7610f87565b905060006110b485611c20565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146110f6576110f5818587611e3f565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461118957611138600086600080611c6b565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461120e5760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b3660008036915091509091565b60006112e0611778565b90506000806113166112f0610bc7565b8730888860009060049261130693929190612f99565b906113119190612fec565b611f03565b91509150816114215760008163ffffffff1611156113e35760018360000160146101000a81548160ff021916908315150217905550611353610bc7565b73ffffffffffffffffffffffffffffffffffffffff166394c7d7ee8787876040518463ffffffff1660e01b815260040161138f93929190613089565b600060405180830381600087803b1580156113a957600080fd5b505af11580156113bd573d6000803e3d6000fd5b5050505060008360000160146101000a81548160ff021916908315150217905550611420565b856040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401611417919061295e565b60405180910390fd5b5b505050505050565b611443828260405180602001604052806000815250612029565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806114f457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114db612045565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561152b576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611545611538611082565b6115406112c9565b6112d6565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156115b057506040513d601f19601f820116820180604052508101906115ad91906130e7565b60015b6115f157816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016115e8919061295e565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461165857806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161164f9190612c0f565b60405180910390fd5b611662838361209c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146116ec576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006116f8611778565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad8260405161176c919061295e565b60405180910390a15050565b60007ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a00905090565b60006117aa610f87565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361181d57826040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611814919061295e565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318460405161191091906127ed565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611acf578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611962611082565b8685856040518563ffffffff1660e01b81526004016119849493929190613158565b6020604051808303816000875af19250505080156119c057506040513d601f19601f820116820180604052508101906119bd91906131b9565b60015b611a44573d80600081146119f0576040519150601f19603f3d011682016040523d82523d6000602084013e6119f5565b606091505b506000815103611a3c57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a33919061295e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611acd57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ac4919061295e565b60405180910390fd5b505b50505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611b0561210f565b611b0f828261214f565b5050565b611b1b61210f565b565b611b2561210f565b611b2e8161218c565b50565b611b3961210f565b565b606060405180602001604052806000815250905090565b606060006001611b61846121a0565b01905060008167ffffffffffffffff811115611b8057611b7f612a6f565b5b6040519080825280601f01601f191660200182016040528015611bb25781602001600182028036833780820191505090505b509050600082602001820190505b600115611c15578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611c0957611c086131e6565b5b04945060008503611bc0575b819350505050919050565b600080611c2b610f87565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6000611c75610f87565b90508180611cb05750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611de4576000611cc085610faf565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015611d2b57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611d3e5750611d3c8185610e7b565b155b15611d8057836040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611d77919061295e565b60405180910390fd5b8215611de257848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b611e4a8383836122f3565b611efe57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ebf57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611eb69190612c39565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611ef5929190613215565b60405180910390fd5b505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff16878787604051602401611f359392919061323e565b60405160208183030381529060405263b700961360e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611f8791906132b1565b600060405180830381855afa9150503d8060008114611fc2576040519150601f19603f3d011682016040523d82523d6000602084013e611fc7565b606091505b5091509150811561201e576040815110611ffc5780806020019051810190611fef9190613319565b809450819550505061201d565b602081511061201c57808060200190518101906120199190613359565b93505b5b5b505094509492505050565b61203383836123b4565b612040600084848461191e565b505050565b60006120737f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6124ad565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6120a5826124b7565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612102576120fc8282612584565b5061210b565b61210a612608565b5b5050565b612117612645565b61214d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61215761210f565b6000612161610f87565b905082816000019081612174919061351b565b5081816001019081612186919061351b565b50505050565b61219461210f565b61219d816116ee565b50565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106121fe577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816121f4576121f36131e6565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061223b576d04ee2d6d415b85acef81000000008381612231576122306131e6565b5b0492506020810190505b662386f26fc10000831061226a57662386f26fc1000083816122605761225f6131e6565b5b0492506010810190505b6305f5e1008310612293576305f5e1008381612289576122886131e6565b5b0492506008810190505b61271083106122b85761271083816122ae576122ad6131e6565b5b0492506004810190505b606483106122db57606483816122d1576122d06131e6565b5b0492506002810190505b600a83106122ea576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156123ab57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061236c575061236b8484610e7b565b5b806123aa57508273ffffffffffffffffffffffffffffffffffffffff1661239283611037565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036124265760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161241d919061295e565b60405180910390fd5b60006124348383600061109c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146124a85760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161249f919061295e565b60405180910390fd5b505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361251357806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161250a919061295e565b60405180910390fd5b806125407f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6124ad565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516125ae91906132b1565b600060405180830381855af49150503d80600081146125e9576040519150601f19603f3d011682016040523d82523d6000602084013e6125ee565b606091505b50915091506125fe858383612665565b9250505092915050565b6000341115612643576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061264f611ad5565b60000160089054906101000a900460ff16905090565b60608261267a57612675826126f4565b6126ec565b600082511480156126a2575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156126e457836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016126db919061295e565b60405180910390fd5b8190506126ed565b5b9392505050565b6000815111156127075780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6127828161274d565b811461278d57600080fd5b50565b60008135905061279f81612779565b92915050565b6000602082840312156127bb576127ba612743565b5b60006127c984828501612790565b91505092915050565b60008115159050919050565b6127e7816127d2565b82525050565b600060208201905061280260008301846127de565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612842578082015181840152602081019050612827565b60008484015250505050565b6000601f19601f8301169050919050565b600061286a82612808565b6128748185612813565b9350612884818560208601612824565b61288d8161284e565b840191505092915050565b600060208201905081810360008301526128b2818461285f565b905092915050565b6000819050919050565b6128cd816128ba565b81146128d857600080fd5b50565b6000813590506128ea816128c4565b92915050565b60006020828403121561290657612905612743565b5b6000612914848285016128db565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129488261291d565b9050919050565b6129588161293d565b82525050565b6000602082019050612973600083018461294f565b92915050565b6129828161293d565b811461298d57600080fd5b50565b60008135905061299f81612979565b92915050565b600080604083850312156129bc576129bb612743565b5b60006129ca85828601612990565b92505060206129db858286016128db565b9150509250929050565b6000806000606084860312156129fe576129fd612743565b5b6000612a0c86828701612990565b9350506020612a1d86828701612990565b9250506040612a2e868287016128db565b9150509250925092565b600060208284031215612a4e57612a4d612743565b5b6000612a5c84828501612990565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612aa78261284e565b810181811067ffffffffffffffff82111715612ac657612ac5612a6f565b5b80604052505050565b6000612ad9612739565b9050612ae58282612a9e565b919050565b600067ffffffffffffffff821115612b0557612b04612a6f565b5b612b0e8261284e565b9050602081019050919050565b82818337600083830152505050565b6000612b3d612b3884612aea565b612acf565b905082815260208101848484011115612b5957612b58612a6a565b5b612b64848285612b1b565b509392505050565b600082601f830112612b8157612b80612a65565b5b8135612b91848260208601612b2a565b91505092915050565b60008060408385031215612bb157612bb0612743565b5b6000612bbf85828601612990565b925050602083013567ffffffffffffffff811115612be057612bdf612748565b5b612bec85828601612b6c565b9150509250929050565b6000819050919050565b612c0981612bf6565b82525050565b6000602082019050612c246000830184612c00565b92915050565b612c33816128ba565b82525050565b6000602082019050612c4e6000830184612c2a565b92915050565b612c5d8161274d565b82525050565b6000602082019050612c786000830184612c54565b92915050565b612c87816127d2565b8114612c9257600080fd5b50565b600081359050612ca481612c7e565b92915050565b60008060408385031215612cc157612cc0612743565b5b6000612ccf85828601612990565b9250506020612ce085828601612c95565b9150509250929050565b60008060008060808587031215612d0457612d03612743565b5b6000612d1287828801612990565b9450506020612d2387828801612990565b9350506040612d34878288016128db565b925050606085013567ffffffffffffffff811115612d5557612d54612748565b5b612d6187828801612b6c565b91505092959194509250565b60008060408385031215612d8457612d83612743565b5b6000612d9285828601612990565b9250506020612da385828601612990565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612df457607f821691505b602082108103612e0757612e06612dad565b5b50919050565b6000606082019050612e22600083018661294f565b612e2f6020830185612c2a565b612e3c604083018461294f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e7e826128ba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612eb057612eaf612e44565b5b600182019050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000612efe612ef9612ef484612ebb565b612ed9565b612ec5565b9050919050565b612f0e81612ee3565b82525050565b6000602082019050612f296000830184612f05565b92915050565b600081905092915050565b6000612f4582612808565b612f4f8185612f2f565b9350612f5f818560208601612824565b80840191505092915050565b6000612f778285612f3a565b9150612f838284612f3a565b91508190509392505050565b600080fd5b600080fd5b60008085851115612fad57612fac612f8f565b5b83861115612fbe57612fbd612f94565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b6000612ff88383612fd4565b82613003813561274d565b925060048210156130435761303e7fffffffff0000000000000000000000000000000000000000000000000000000083600403600802612fdf565b831692505b505092915050565b600082825260208201905092915050565b6000613068838561304b565b9350613075838584612b1b565b61307e8361284e565b840190509392505050565b600060408201905061309e600083018661294f565b81810360208301526130b181848661305c565b9050949350505050565b6130c481612bf6565b81146130cf57600080fd5b50565b6000815190506130e1816130bb565b92915050565b6000602082840312156130fd576130fc612743565b5b600061310b848285016130d2565b91505092915050565b600081519050919050565b600061312a82613114565b613134818561304b565b9350613144818560208601612824565b61314d8161284e565b840191505092915050565b600060808201905061316d600083018761294f565b61317a602083018661294f565b6131876040830185612c2a565b8181036060830152613199818461311f565b905095945050505050565b6000815190506131b381612779565b92915050565b6000602082840312156131cf576131ce612743565b5b60006131dd848285016131a4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060408201905061322a600083018561294f565b6132376020830184612c2a565b9392505050565b6000606082019050613253600083018661294f565b613260602083018561294f565b61326d6040830184612c54565b949350505050565b600081905092915050565b600061328b82613114565b6132958185613275565b93506132a5818560208601612824565b80840191505092915050565b60006132bd8284613280565b915081905092915050565b6000815190506132d781612c7e565b92915050565b600063ffffffff82169050919050565b6132f6816132dd565b811461330157600080fd5b50565b600081519050613313816132ed565b92915050565b600080604083850312156133305761332f612743565b5b600061333e858286016132c8565b925050602061334f85828601613304565b9150509250929050565b60006020828403121561336f5761336e612743565b5b600061337d848285016132c8565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b6000600883026133db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612fdf565b6133e58683612fdf565b95508019841693508086168417925050509392505050565b600061341861341361340e846128ba565b612ed9565b6128ba565b9050919050565b6000819050919050565b613432836133fd565b61344661343e8261341f565b8484546133ab565b825550505050565b600090565b61345b61344e565b613466818484613429565b505050565b5b8181101561348a5761347f600082613453565b60018101905061346c565b5050565b601f8211156134cf576134a081613386565b6134a98461339b565b810160208510156134b8578190505b6134cc6134c48561339b565b83018261346b565b50505b505050565b600082821c905092915050565b60006134f2600019846008026134d4565b1980831691505092915050565b600061350b83836134e1565b9150826002028217905092915050565b61352482612808565b67ffffffffffffffff81111561353d5761353c612a6f565b5b6135478254612ddc565b61355282828561348e565b600060209050601f8311600181146135855760008415613573578287015190505b61357d85826134ff565b8655506135e5565b601f19841661359386613386565b60005b828110156135bb57848901518255600182019150602085019450602081019050613596565b868310156135d857848901516135d4601f8916826134e1565b8355505b6001600288020188555050505b50505050505056fea264697066735822122017f626d20d16d857248a110b31fe39f03d9f747a598270d651523f436bc3889e64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4FA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8FB36037 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3EC JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x40D097C3 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2F3 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x208 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x29A5 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2B9A JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AB PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x2CEA JUMP JUMPDEST PUSH2 0xBAA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47E PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0xBFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x521 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x602 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x612 JUMPI POP PUSH2 0x611 DUP3 PUSH2 0xF1D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x625 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x636 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x662 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x684 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x692 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C5 DUP3 PUSH2 0xFAF JUMP JUMPDEST POP PUSH2 0x6CF DUP3 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E8 DUP3 DUP3 PUSH2 0x6E3 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x108A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP4 DUP4 PUSH2 0x76D PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7E8 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x7F9 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x801 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x81A SWAP1 PUSH2 0x2E73 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x82A DUP3 DUP3 PUSH2 0x1429 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBAA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x861 PUSH1 0x0 DUP3 PUSH2 0x85C PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x86D PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x876 DUP3 PUSH2 0x152D JUMP JUMPDEST PUSH2 0x880 DUP3 DUP3 PUSH2 0x1548 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88E PUSH2 0x1667 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 DUP3 PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D4 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x948 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99C PUSH2 0x1082 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A6 PUSH2 0xBC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA15 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xA71 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xC2F31E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7A DUP3 PUSH2 0x16EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA89 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAAB JUMPI PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0xAB4 JUMP JUMPDEST PUSH4 0x8FB36037 PUSH1 0xE0 SHL JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAC6 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xAD7 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB03 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB50 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB25 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB50 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB33 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xB66 PUSH2 0x1082 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x17A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xBB5 DUP5 DUP5 DUP5 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0xBC1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x191E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBD2 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC09 PUSH2 0x1AD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC57 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC8C JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC9A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xD21 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xD95 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E4654756E650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E46550000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xD9D PUSH2 0x1B13 JUMP JUMPDEST PUSH2 0xDA6 DUP7 PUSH2 0x1B1D JUMP JUMPDEST PUSH2 0xDAE PUSH2 0x1B31 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE0A JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x2F14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE1D DUP3 PUSH2 0xFAF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE28 PUSH2 0x1B3B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE73 JUMP JUMPDEST DUP1 PUSH2 0xE52 DUP5 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE63 SWAP3 SWAP2 SWAP1 PUSH2 0x2F6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE86 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFBB DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x102E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1042 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1097 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C6B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10A7 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10B4 DUP6 PUSH2 0x1C20 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F6 JUMPI PUSH2 0x10F5 DUP2 DUP6 DUP8 PUSH2 0x1E3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1189 JUMPI PUSH2 0x1138 PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x1C6B JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x120E JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E0 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1316 PUSH2 0x12F0 PUSH2 0xBC7 JUMP JUMPDEST DUP8 ADDRESS DUP9 DUP9 PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP3 PUSH2 0x1306 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST SWAP1 PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x1F03 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1421 JUMPI PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x13E3 JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1353 PUSH2 0xBC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94C7D7EE DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3089 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1420 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1417 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1443 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2029 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x14F4 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14DB PUSH2 0x2045 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x152B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1545 PUSH2 0x1538 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x1540 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15B0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AD SWAP2 SWAP1 PUSH2 0x30E7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15F1 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E8 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1658 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164F SWAP2 SWAP1 PUSH2 0x2C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1662 DUP4 DUP4 PUSH2 0x209C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F8 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x176C SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF3177357AB46D8AF007AB3FDB9AF81DA189E1068FEFDC0073DCA88A2CAB40A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AA PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1814 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1910 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1ACF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1962 PUSH2 0x1082 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1984 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19C0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19BD SWAP2 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A44 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A3C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1ACD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC4 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B05 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x1B0F DUP3 DUP3 PUSH2 0x214F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1B1B PUSH2 0x210F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1B25 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x1B2E DUP2 PUSH2 0x218C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B39 PUSH2 0x210F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1B61 DUP5 PUSH2 0x21A0 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B80 JUMPI PUSH2 0x1B7F PUSH2 0x2A6F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BB2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1C15 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1BC0 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C2B PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C75 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x1CB0 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DE4 JUMPI PUSH1 0x0 PUSH2 0x1CC0 DUP6 PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D2B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D3E JUMPI POP PUSH2 0x1D3C DUP2 DUP6 PUSH2 0xE7B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1D80 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x1DE2 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E4A DUP4 DUP4 DUP4 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x1EFE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EBF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB6 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF5 SWAP3 SWAP2 SWAP1 PUSH2 0x3215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F35 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x323E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xB7009613 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1F87 SWAP2 SWAP1 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x201E JUMPI PUSH1 0x40 DUP2 MLOAD LT PUSH2 0x1FFC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1FEF SWAP2 SWAP1 PUSH2 0x3319 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP PUSH2 0x201D JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x201C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2019 SWAP2 SWAP1 PUSH2 0x3359 JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2033 DUP4 DUP4 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x2040 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x191E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2073 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20A5 DUP3 PUSH2 0x24B7 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2102 JUMPI PUSH2 0x20FC DUP3 DUP3 PUSH2 0x2584 JUMP JUMPDEST POP PUSH2 0x210B JUMP JUMPDEST PUSH2 0x210A PUSH2 0x2608 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2117 PUSH2 0x2645 JUMP JUMPDEST PUSH2 0x214D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2157 PUSH2 0x210F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2161 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2174 SWAP2 SWAP1 PUSH2 0x351B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x351B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2194 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x219D DUP2 PUSH2 0x16EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x21FE JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x21F4 JUMPI PUSH2 0x21F3 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x223B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2231 JUMPI PUSH2 0x2230 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x226A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2293 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2289 JUMPI PUSH2 0x2288 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x22B8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x22DB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x31E6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x22EA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x23AB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x236C JUMPI POP PUSH2 0x236B DUP5 DUP5 PUSH2 0xE7B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x23AA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2392 DUP4 PUSH2 0x1037 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2426 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x241D SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2434 DUP4 DUP4 PUSH1 0x0 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24A8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249F SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2513 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250A SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2540 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x25AE SWAP2 SWAP1 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x25FE DUP6 DUP4 DUP4 PUSH2 0x2665 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2643 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x264F PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x267A JUMPI PUSH2 0x2675 DUP3 PUSH2 0x26F4 JUMP JUMPDEST PUSH2 0x26EC JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x26A2 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x26E4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26DB SWAP2 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x26ED JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2707 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2782 DUP2 PUSH2 0x274D JUMP JUMPDEST DUP2 EQ PUSH2 0x278D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x279F DUP2 PUSH2 0x2779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C9 DUP5 DUP3 DUP6 ADD PUSH2 0x2790 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E7 DUP2 PUSH2 0x27D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2802 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2842 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x286A DUP3 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2874 DUP2 DUP6 PUSH2 0x2813 JUMP JUMPDEST SWAP4 POP PUSH2 0x2884 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x288D DUP2 PUSH2 0x284E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28B2 DUP2 DUP5 PUSH2 0x285F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28CD DUP2 PUSH2 0x28BA JUMP JUMPDEST DUP2 EQ PUSH2 0x28D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28EA DUP2 PUSH2 0x28C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2906 JUMPI PUSH2 0x2905 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2914 DUP5 DUP3 DUP6 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2948 DUP3 PUSH2 0x291D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2958 DUP2 PUSH2 0x293D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2973 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x294F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2982 DUP2 PUSH2 0x293D JUMP JUMPDEST DUP2 EQ PUSH2 0x298D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x299F DUP2 PUSH2 0x2979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29BC JUMPI PUSH2 0x29BB PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29CA DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29DB DUP6 DUP3 DUP7 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29FE JUMPI PUSH2 0x29FD PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A0C DUP7 DUP3 DUP8 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A1D DUP7 DUP3 DUP8 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A2E DUP7 DUP3 DUP8 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A4E JUMPI PUSH2 0x2A4D PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A5C DUP5 DUP3 DUP6 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2AA7 DUP3 PUSH2 0x284E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2AC6 JUMPI PUSH2 0x2AC5 PUSH2 0x2A6F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD9 PUSH2 0x2739 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AE5 DUP3 DUP3 PUSH2 0x2A9E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B05 JUMPI PUSH2 0x2B04 PUSH2 0x2A6F JUMP JUMPDEST JUMPDEST PUSH2 0x2B0E DUP3 PUSH2 0x284E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B3D PUSH2 0x2B38 DUP5 PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x2ACF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B59 JUMPI PUSH2 0x2B58 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST PUSH2 0x2B64 DUP5 DUP3 DUP6 PUSH2 0x2B1B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B81 JUMPI PUSH2 0x2B80 PUSH2 0x2A65 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B91 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2B2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BB1 JUMPI PUSH2 0x2BB0 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BBF DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BE0 JUMPI PUSH2 0x2BDF PUSH2 0x2748 JUMP JUMPDEST JUMPDEST PUSH2 0x2BEC DUP6 DUP3 DUP7 ADD PUSH2 0x2B6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C09 DUP2 PUSH2 0x2BF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C33 DUP2 PUSH2 0x28BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C5D DUP2 PUSH2 0x274D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C87 DUP2 PUSH2 0x27D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CA4 DUP2 PUSH2 0x2C7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CC1 JUMPI PUSH2 0x2CC0 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CCF DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CE0 DUP6 DUP3 DUP7 ADD PUSH2 0x2C95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D04 JUMPI PUSH2 0x2D03 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D12 DUP8 DUP3 DUP9 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2D23 DUP8 DUP3 DUP9 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2D34 DUP8 DUP3 DUP9 ADD PUSH2 0x28DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D55 JUMPI PUSH2 0x2D54 PUSH2 0x2748 JUMP JUMPDEST JUMPDEST PUSH2 0x2D61 DUP8 DUP3 DUP9 ADD PUSH2 0x2B6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D84 JUMPI PUSH2 0x2D83 PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D92 DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DA3 DUP6 DUP3 DUP7 ADD PUSH2 0x2990 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2DF4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E07 JUMPI PUSH2 0x2E06 PUSH2 0x2DAD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E22 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x2E2F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C2A JUMP JUMPDEST PUSH2 0x2E3C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x294F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E7E DUP3 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2EB0 JUMPI PUSH2 0x2EAF PUSH2 0x2E44 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EFE PUSH2 0x2EF9 PUSH2 0x2EF4 DUP5 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x2EC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F0E DUP2 PUSH2 0x2EE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F45 DUP3 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2F4F DUP2 DUP6 PUSH2 0x2F2F JUMP JUMPDEST SWAP4 POP PUSH2 0x2F5F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2824 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F77 DUP3 DUP6 PUSH2 0x2F3A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F83 DUP3 DUP5 PUSH2 0x2F3A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x2FAD JUMPI PUSH2 0x2FAC PUSH2 0x2F8F JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x2FBE JUMPI PUSH2 0x2FBD PUSH2 0x2F94 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF8 DUP4 DUP4 PUSH2 0x2FD4 JUMP JUMPDEST DUP3 PUSH2 0x3003 DUP2 CALLDATALOAD PUSH2 0x274D JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x3043 JUMPI PUSH2 0x303E PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x2FDF JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3068 DUP4 DUP6 PUSH2 0x304B JUMP JUMPDEST SWAP4 POP PUSH2 0x3075 DUP4 DUP6 DUP5 PUSH2 0x2B1B JUMP JUMPDEST PUSH2 0x307E DUP4 PUSH2 0x284E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x309E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x294F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x30B1 DUP2 DUP5 DUP7 PUSH2 0x305C JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x30C4 DUP2 PUSH2 0x2BF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x30CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x30E1 DUP2 PUSH2 0x30BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30FD JUMPI PUSH2 0x30FC PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP5 DUP3 DUP6 ADD PUSH2 0x30D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312A DUP3 PUSH2 0x3114 JUMP JUMPDEST PUSH2 0x3134 DUP2 DUP6 PUSH2 0x304B JUMP JUMPDEST SWAP4 POP PUSH2 0x3144 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x314D DUP2 PUSH2 0x284E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x316D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x317A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x3187 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2C2A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3199 DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x31B3 DUP2 PUSH2 0x2779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31CF JUMPI PUSH2 0x31CE PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31DD DUP5 DUP3 DUP6 ADD PUSH2 0x31A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x322A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x3237 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3253 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x3260 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x294F JUMP JUMPDEST PUSH2 0x326D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C54 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328B DUP3 PUSH2 0x3114 JUMP JUMPDEST PUSH2 0x3295 DUP2 DUP6 PUSH2 0x3275 JUMP JUMPDEST SWAP4 POP PUSH2 0x32A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2824 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32BD DUP3 DUP5 PUSH2 0x3280 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32D7 DUP2 PUSH2 0x2C7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F6 DUP2 PUSH2 0x32DD JUMP JUMPDEST DUP2 EQ PUSH2 0x3301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3313 DUP2 PUSH2 0x32ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3330 JUMPI PUSH2 0x332F PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x333E DUP6 DUP3 DUP7 ADD PUSH2 0x32C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x334F DUP6 DUP3 DUP7 ADD PUSH2 0x3304 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x336F JUMPI PUSH2 0x336E PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x337D DUP5 DUP3 DUP6 ADD PUSH2 0x32C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x33DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2FDF JUMP JUMPDEST PUSH2 0x33E5 DUP7 DUP4 PUSH2 0x2FDF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3418 PUSH2 0x3413 PUSH2 0x340E DUP5 PUSH2 0x28BA JUMP JUMPDEST PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x28BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3432 DUP4 PUSH2 0x33FD JUMP JUMPDEST PUSH2 0x3446 PUSH2 0x343E DUP3 PUSH2 0x341F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x33AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x345B PUSH2 0x344E JUMP JUMPDEST PUSH2 0x3466 DUP2 DUP5 DUP5 PUSH2 0x3429 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x348A JUMPI PUSH2 0x347F PUSH1 0x0 DUP3 PUSH2 0x3453 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x346C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x34CF JUMPI PUSH2 0x34A0 DUP2 PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x34A9 DUP5 PUSH2 0x339B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x34B8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x34CC PUSH2 0x34C4 DUP6 PUSH2 0x339B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x346B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34F2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x34D4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x350B DUP4 DUP4 PUSH2 0x34E1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3524 DUP3 PUSH2 0x2808 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x353D JUMPI PUSH2 0x353C PUSH2 0x2A6F JUMP JUMPDEST JUMPDEST PUSH2 0x3547 DUP3 SLOAD PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x3552 DUP3 DUP3 DUP6 PUSH2 0x348E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3585 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3573 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x357D DUP6 DUP3 PUSH2 0x34FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x35E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3593 DUP7 PUSH2 0x3386 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3596 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x35D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x35D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x34E1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xF6 0x26 0xD2 0xD AND 0xD8 JUMPI 0x24 DUP11 GT SIGNEXTEND BALANCE INVALID CODECOPY CREATE RETURNDATASIZE SWAP16 PUSH21 0x7A598270D651523F436BC3889E64736F6C63430008 XOR STOP CALLER ","sourceMap":"533:770:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2674:311:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3546:146;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4792:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5495:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1053:129:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6139:132:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;876:314:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4158:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3366:118:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3044:265;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4145:362:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4548:227;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3756:150:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5013:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6337:208:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3940:164:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;820:227:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3972:255:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5223:210;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2674:311;2787:4;2837:25;2822:40;;;:11;:40;;;;:104;;;;2893:33;2878:48;;;:11;:48;;;;2822:104;:156;;;;2942:36;2966:11;2942:23;:36::i;:::-;2822:156;2803:175;;2674:311;;;:::o;3546:146::-;3591:13;3616:23;3642:19;:17;:19::i;:::-;3616:45;;3678:1;:7;;3671:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3546:146;:::o;4792:154::-;4859:7;4878:22;4892:7;4878:13;:22::i;:::-;;4918:21;4931:7;4918:12;:21::i;:::-;4911:28;;4792:154;;;:::o;4618:113::-;4689:35;4698:2;4702:7;4711:12;:10;:12::i;:::-;4689:8;:35::i;:::-;4618:113;;:::o;5495:578::-;5603:1;5589:16;;:2;:16;;;5585:87;;5658:1;5628:33;;;;;;;;;;;:::i;:::-;;;;;;;;5585:87;5890:21;5914:34;5922:2;5926:7;5935:12;:10;:12::i;:::-;5914:7;:34::i;:::-;5890:58;;5979:4;5962:21;;:13;:21;;;5958:109;;6027:4;6033:7;6042:13;6006:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5958:109;5575:498;5495:578;;;:::o;1053:129:31:-;3842:39:0;3856:12;:10;:12::i;:::-;3870:10;:8;:10::i;:::-;3842:13;:39::i;:::-;1111:15:31::1;1129:12:::0;::::1;:14;;;;;;;;;:::i;:::-;;;;;1111:32;;1153:22;1163:2;1167:7;1153:9;:22::i;:::-;1101:81;1053:129:::0;:::o;6139:132:5:-;6225:39;6242:4;6248:2;6252:7;6225:39;;;;;;;;;;;;:16;:39::i;:::-;6139:132;;;:::o;876:314:6:-;1141:42;1157:1;1161:7;1170:12;:10;:12::i;:::-;1141:7;:42::i;:::-;;876:314;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;1327:66:15::1;3800:32:2;;3793:39;;3705:134:::0;:::o;3366:118:5:-;3429:7;3455:22;3469:7;3455:13;:22::i;:::-;3448:29;;3366:118;;;:::o;3044:265::-;3107:7;3126:23;3152:19;:17;:19::i;:::-;3126:45;;3202:1;3185:19;;:5;:19;;;3181:87;;3254:1;3227:30;;;;;;;;;;;:::i;:::-;;;;;;;;3181:87;3284:1;:11;;:18;3296:5;3284:18;;;;;;;;;;;;;;;;3277:25;;;3044:265;;;:::o;4145:362:0:-;4214:14;4231:12;:10;:12::i;:::-;4214:29;;4267:11;:9;:11::i;:::-;4257:21;;:6;:21;;;4253:92;;4327:6;4301:33;;;;;;;;;;;:::i;:::-;;;;;;;;4253:92;4386:1;4358:12;:24;;;:29;4354:110;;4440:12;4410:43;;;;;;;;;;;:::i;:::-;;;;;;;;4354:110;4473:27;4487:12;4473:13;:27::i;:::-;4204:303;4145:362;:::o;4548:227::-;4603:6;4621:30;4654:26;:24;:26::i;:::-;4621:59;;4697:1;:20;;;;;;;;;;;;:71;;4766:1;4759:9;;4697:71;;;4720:36;;;4697:71;4690:78;;;4548:227;:::o;3756:150:5:-;3803:13;3828:23;3854:19;:17;:19::i;:::-;3828:45;;3890:1;:9;;3883:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3756:150;:::o;5013:144::-;5098:52;5117:12;:10;:12::i;:::-;5131:8;5141;5098:18;:52::i;:::-;5013:144;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;6337:208:5:-;6450:31;6463:4;6469:2;6473:7;6450:12;:31::i;:::-;6491:47;6514:4;6520:2;6524:7;6533:4;6491:22;:47::i;:::-;6337:208;;;;:::o;3940:164:0:-;3990:7;4009:30;4042:26;:24;:26::i;:::-;4009:59;;4085:1;:12;;;;;;;;;;;;4078:19;;;3940:164;:::o;820:227:31:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;895:30:31::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:13:::1;:30::i;:::-;935:23;:21;:23::i;:::-;968:38;989:16;968:20;:38::i;:::-;1016:24;:22;:24::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;820:227:31;:::o;3972:255:5:-;4036:13;4061:22;4075:7;4061:13;:22::i;:::-;;4094:21;4118:10;:8;:10::i;:::-;4094:34;;4169:1;4151:7;4145:21;:25;:75;;;;;;;;;;;;;;;;;4187:7;4196:18;:7;:16;:18::i;:::-;4173:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4145:75;4138:82;;;3972:255;;;:::o;5223:210::-;5311:4;5327:23;5353:19;:17;:19::i;:::-;5327:45;;5389:1;:20;;:27;5410:5;5389:27;;;;;;;;;;;;;;;:37;5417:8;5389:37;;;;;;;;;;;;;;;;;;;;;;;;;5382:44;;;5223:210;;;;:::o;1034:146:8:-;1110:4;1148:25;1133:40;;;:11;:40;;;;1126:47;;1034:146;;;:::o;1958:156:5:-;2009:23;2077:21;2067:31;;1958:156;:::o;17836:241::-;17899:7;17918:13;17934:17;17943:7;17934:8;:17::i;:::-;17918:33;;17982:1;17965:19;;:5;:19;;;17961:88;;18030:7;18007:31;;;;;;;;;;;:::i;:::-;;;;;;;;17961:88;18065:5;18058:12;;;17836:241;;;:::o;7347:184::-;7417:7;7436:23;7462:19;:17;:19::i;:::-;7436:45;;7498:1;:17;;:26;7516:7;7498:26;;;;;;;;;;;;;;;;;;;;;7491:33;;;7347:184;;;:::o;887:96:7:-;940:7;966:10;959:17;;887:96;:::o;16002:120:5:-;16082:33;16091:2;16095:7;16104:4;16110;16082:8;:33::i;:::-;16002:120;;;:::o;10361:856::-;10447:7;10466:23;10492:19;:17;:19::i;:::-;10466:45;;10521:12;10536:17;10545:7;10536:8;:17::i;:::-;10521:32;;10629:1;10613:18;;:4;:18;;;10609:86;;10647:37;10664:4;10670;10676:7;10647:16;:37::i;:::-;10609:86;10755:1;10739:18;;:4;:18;;;10735:258;;10855:48;10872:1;10876:7;10893:1;10897:5;10855:8;:48::i;:::-;10967:1;10946;:11;;:17;10958:4;10946:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;10735:258;11021:1;11007:16;;:2;:16;;;11003:109;;11086:1;11067;:11;;:15;11079:2;11067:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;11003:109;11143:2;11122:1;:9;;:18;11132:7;11122:18;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;11180:7;11176:2;11161:27;;11170:4;11161:27;;;;;;;;;;;;11206:4;11199:11;;;;10361:856;;;;;:::o;989:99:7:-;1040:14;;1073:8;;1066:15;;;;989:99;;:::o;5358:667:0:-;5445:30;5478:26;:24;:26::i;:::-;5445:59;;5515:14;5531:12;5547:144;5592:11;:9;:11::i;:::-;5617:6;5645:4;5671;;5676:1;5671:9;5678:1;5671:9;;;;;;;:::i;:::-;5664:17;;;;;:::i;:::-;5547:31;:144::i;:::-;5514:177;;;;5706:9;5701:318;;5743:1;5735:5;:9;;;5731:278;;;5787:4;5764:1;:20;;;:27;;;;;;;;;;;;;;;;;;5824:11;:9;:11::i;:::-;5809:46;;;5856:6;5864:4;;5809:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5910:5;5887:1;:20;;;:28;;;;;;;;;;;;;;;;;;5731:278;;;5987:6;5961:33;;;;;;;;;;;:::i;:::-;;;;;;;;5731:278;5701:318;5435:590;;;5358:667;;;:::o;12217:100:5:-;12284:26;12294:2;12298:7;12284:26;;;;;;;;;;;;:9;:26::i;:::-;12217:100;;:::o;4599:312:2:-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;1188:113:31:-;3842:39:0;3856:12;:10;:12::i;:::-;3870:10;:8;:10::i;:::-;3842:13;:39::i;:::-;1188:113:31;:::o;6052:538:2:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:15;6253:32:2;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;4963:220:0:-;5035:30;5068:26;:24;:26::i;:::-;5035:59;;5119:12;5104:1;:12;;;:27;;;;;;;;;;;;;;;;;;5146:30;5163:12;5146:30;;;;;;:::i;:::-;;;;;;;;5025:158;4963:220;:::o;1682:177::-;1740:30;1815:28;1805:38;;1682:177;:::o;17232:369:5:-;17335:23;17361:19;:17;:19::i;:::-;17335:45;;17414:1;17394:22;;:8;:22;;;17390:91;;17461:8;17439:31;;;;;;;;;;;:::i;:::-;;;;;;;;17390:91;17530:8;17490:1;:20;;:27;17511:5;17490:27;;;;;;;;;;;;;;;:37;17518:8;17490:37;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;17575:8;17553:41;;17568:5;17553:41;;;17585:8;17553:41;;;;;;:::i;:::-;;;;;;;;17325:276;17232:369;;;:::o;18616:782::-;18749:1;18732:2;:14;;;:18;18728:664;;;18786:2;18770:36;;;18807:12;:10;:12::i;:::-;18821:4;18827:7;18836:4;18770:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;18766:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19096:1;19079:6;:13;:18;19075:293;;19150:2;19128:25;;;;;;;;;;;:::i;:::-;;;;;;;;19075:293;19320:6;19314:13;19305:6;19301:2;19297:15;19290:38;18766:616;18898:41;;;18888:51;;;:6;:51;;;;18884:130;;18992:2;18970:25;;;;;;;;;;;:::i;:::-;;;;;;;;18884:130;18842:186;18728:664;18616:782;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2233:149:5:-;6931:20:1;:18;:20::i;:::-;2336:39:5::1;2360:5;2367:7;2336:23;:39::i;:::-;2233:149:::0;;:::o;556:66:6:-;6931:20:1;:18;:20::i;:::-;556:66:6:o;1953:147:0:-;6931:20:1;:18;:20::i;:::-;2045:48:0::1;2076:16;2045:30;:48::i;:::-;1953:147:::0;:::o;2968:67:2:-;6931:20:1;:18;:20::i;:::-;2968:67:2:o;4469:92:5:-;4520:13;4545:9;;;;;;;;;;;;;;4469:92;:::o;637:698:24:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;7059:172:5:-;7125:7;7144:23;7170:19;:17;:19::i;:::-;7144:45;;7206:1;:9;;:18;7216:7;7206:18;;;;;;;;;;;;;;;;;;;;;7199:25;;;7059:172;;;:::o;16304:719::-;16408:23;16434:19;:17;:19::i;:::-;16408:45;;16519:9;:31;;;;16548:1;16532:18;;:4;:18;;;;16519:31;16515:460;;;16566:13;16582:22;16596:7;16582:13;:22::i;:::-;16566:38;;16748:1;16732:18;;:4;:18;;;;:35;;;;;16763:4;16754:13;;:5;:13;;;;16732:35;:69;;;;;16772:29;16789:5;16796:4;16772:16;:29::i;:::-;16771:30;16732:69;16728:142;;;16850:4;16828:27;;;;;;;;;;;:::i;:::-;;;;;;;;16728:142;16888:9;16884:81;;;16942:7;16938:2;16922:28;;16931:5;16922:28;;;;;;;;;;;;16884:81;16552:423;16515:460;17014:2;16985:1;:17;;:26;17003:7;16985:26;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;16398:625;16304:719;;;;:::o;8548:368::-;8660:38;8674:5;8681:7;8690;8660:13;:38::i;:::-;8655:255;;8735:1;8718:19;;:5;:19;;;8714:186;;8787:7;8764:31;;;;;;;;;;;:::i;:::-;;;;;;;;8714:186;8868:7;8877;8841:44;;;;;;;;;;;;:::i;:::-;;;;;;;;8655:255;8548:368;;;:::o;591:636:9:-;746:14;762:12;787;801:17;822:9;:20;;892:6;900;908:8;856:62;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:106;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:142;;;;942:7;938:248;;;984:4;969;:11;:19;965:211;;1040:4;1029:32;;;;;;;;;;;;:::i;:::-;1008:53;;;;;;;;965:211;;;1101:4;1086;:11;:19;1082:94;;1148:4;1137:24;;;;;;;;;;;;:::i;:::-;1125:36;;1082:94;965:211;938:248;1195:25;;591:636;;;;;;;:::o;12538:182:5:-;12632:18;12638:2;12642:7;12632:5;:18::i;:::-;12660:53;12691:1;12695:2;12699:7;12708:4;12660:22;:53::i;:::-;12538:182;;;:::o;1957:138:15:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2388:219:5:-;6931:20:1;:18;:20::i;:::-;2501:23:5::1;2527:19;:17;:19::i;:::-;2501:45;;2566:5;2556:1;:7;;:15;;;;;;:::i;:::-;;2593:7;2581:1;:9;;:19;;;;;;:::i;:::-;;2491:116;2388:219:::0;;:::o;2106:140:0:-;6931:20:1;:18;:20::i;:::-;2208:31:0::1;2222:16;2208:13;:31::i;:::-;2106:140:::0;:::o;12214:916:26:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7842:272:5:-;7945:4;7999:1;7980:21;;:7;:21;;;;:127;;;;;8027:7;8018:16;;:5;:16;;;:52;;;;8038:32;8055:5;8062:7;8038:16;:32::i;:::-;8018:52;:88;;;;8099:7;8074:32;;:21;8087:7;8074:12;:21::i;:::-;:32;;;8018:88;7980:127;7961:146;;7842:272;;;;;:::o;11539:327::-;11620:1;11606:16;;:2;:16;;;11602:87;;11675:1;11645:33;;;;;;;;;;;:::i;:::-;;;;;;;;11602:87;11698:21;11722:32;11730:2;11734:7;11751:1;11722:7;:32::i;:::-;11698:56;;11793:1;11768:27;;:13;:27;;;11764:96;;11846:1;11818:31;;;;;;;;;;;:::i;:::-;;;;;;;;11764:96;11592:274;11539:327;;:::o;1684:190:23:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:15:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:22:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:15:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4625:582:22:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:32;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:117::-;5959:1;5956;5949:12;5973:117;6082:1;6079;6072:12;6096:180;6144:77;6141:1;6134:88;6241:4;6238:1;6231:15;6265:4;6262:1;6255:15;6282:281;6365:27;6387:4;6365:27;:::i;:::-;6357:6;6353:40;6495:6;6483:10;6480:22;6459:18;6447:10;6444:34;6441:62;6438:88;;;6506:18;;:::i;:::-;6438:88;6546:10;6542:2;6535:22;6325:238;6282:281;;:::o;6569:129::-;6603:6;6630:20;;:::i;:::-;6620:30;;6659:33;6687:4;6679:6;6659:33;:::i;:::-;6569:129;;;:::o;6704:307::-;6765:4;6855:18;6847:6;6844:30;6841:56;;;6877:18;;:::i;:::-;6841:56;6915:29;6937:6;6915:29;:::i;:::-;6907:37;;6999:4;6993;6989:15;6981:23;;6704:307;;;:::o;7017:146::-;7114:6;7109:3;7104;7091:30;7155:1;7146:6;7141:3;7137:16;7130:27;7017:146;;;:::o;7169:423::-;7246:5;7271:65;7287:48;7328:6;7287:48;:::i;:::-;7271:65;:::i;:::-;7262:74;;7359:6;7352:5;7345:21;7397:4;7390:5;7386:16;7435:3;7426:6;7421:3;7417:16;7414:25;7411:112;;;7442:79;;:::i;:::-;7411:112;7532:54;7579:6;7574:3;7569;7532:54;:::i;:::-;7252:340;7169:423;;;;;:::o;7611:338::-;7666:5;7715:3;7708:4;7700:6;7696:17;7692:27;7682:122;;7723:79;;:::i;:::-;7682:122;7840:6;7827:20;7865:78;7939:3;7931:6;7924:4;7916:6;7912:17;7865:78;:::i;:::-;7856:87;;7672:277;7611:338;;;;:::o;7955:652::-;8032:6;8040;8089:2;8077:9;8068:7;8064:23;8060:32;8057:119;;;8095:79;;:::i;:::-;8057:119;8215:1;8240:53;8285:7;8276:6;8265:9;8261:22;8240:53;:::i;:::-;8230:63;;8186:117;8370:2;8359:9;8355:18;8342:32;8401:18;8393:6;8390:30;8387:117;;;8423:79;;:::i;:::-;8387:117;8528:62;8582:7;8573:6;8562:9;8558:22;8528:62;:::i;:::-;8518:72;;8313:287;7955:652;;;;;:::o;8613:77::-;8650:7;8679:5;8668:16;;8613:77;;;:::o;8696:118::-;8783:24;8801:5;8783:24;:::i;:::-;8778:3;8771:37;8696:118;;:::o;8820:222::-;8913:4;8951:2;8940:9;8936:18;8928:26;;8964:71;9032:1;9021:9;9017:17;9008:6;8964:71;:::i;:::-;8820:222;;;;:::o;9048:118::-;9135:24;9153:5;9135:24;:::i;:::-;9130:3;9123:37;9048:118;;:::o;9172:222::-;9265:4;9303:2;9292:9;9288:18;9280:26;;9316:71;9384:1;9373:9;9369:17;9360:6;9316:71;:::i;:::-;9172:222;;;;:::o;9400:115::-;9485:23;9502:5;9485:23;:::i;:::-;9480:3;9473:36;9400:115;;:::o;9521:218::-;9612:4;9650:2;9639:9;9635:18;9627:26;;9663:69;9729:1;9718:9;9714:17;9705:6;9663:69;:::i;:::-;9521:218;;;;:::o;9745:116::-;9815:21;9830:5;9815:21;:::i;:::-;9808:5;9805:32;9795:60;;9851:1;9848;9841:12;9795:60;9745:116;:::o;9867:133::-;9910:5;9948:6;9935:20;9926:29;;9964:30;9988:5;9964:30;:::i;:::-;9867:133;;;;:::o;10006:468::-;10071:6;10079;10128:2;10116:9;10107:7;10103:23;10099:32;10096:119;;;10134:79;;:::i;:::-;10096:119;10254:1;10279:53;10324:7;10315:6;10304:9;10300:22;10279:53;:::i;:::-;10269:63;;10225:117;10381:2;10407:50;10449:7;10440:6;10429:9;10425:22;10407:50;:::i;:::-;10397:60;;10352:115;10006:468;;;;;:::o;10480:943::-;10575:6;10583;10591;10599;10648:3;10636:9;10627:7;10623:23;10619:33;10616:120;;;10655:79;;:::i;:::-;10616:120;10775:1;10800:53;10845:7;10836:6;10825:9;10821:22;10800:53;:::i;:::-;10790:63;;10746:117;10902:2;10928:53;10973:7;10964:6;10953:9;10949:22;10928:53;:::i;:::-;10918:63;;10873:118;11030:2;11056:53;11101:7;11092:6;11081:9;11077:22;11056:53;:::i;:::-;11046:63;;11001:118;11186:2;11175:9;11171:18;11158:32;11217:18;11209:6;11206:30;11203:117;;;11239:79;;:::i;:::-;11203:117;11344:62;11398:7;11389:6;11378:9;11374:22;11344:62;:::i;:::-;11334:72;;11129:287;10480:943;;;;;;;:::o;11429:474::-;11497:6;11505;11554:2;11542:9;11533:7;11529:23;11525:32;11522:119;;;11560:79;;:::i;:::-;11522:119;11680:1;11705:53;11750:7;11741:6;11730:9;11726:22;11705:53;:::i;:::-;11695:63;;11651:117;11807:2;11833:53;11878:7;11869:6;11858:9;11854:22;11833:53;:::i;:::-;11823:63;;11778:118;11429:474;;;;;:::o;11909:180::-;11957:77;11954:1;11947:88;12054:4;12051:1;12044:15;12078:4;12075:1;12068:15;12095:320;12139:6;12176:1;12170:4;12166:12;12156:22;;12223:1;12217:4;12213:12;12244:18;12234:81;;12300:4;12292:6;12288:17;12278:27;;12234:81;12362:2;12354:6;12351:14;12331:18;12328:38;12325:84;;12381:18;;:::i;:::-;12325:84;12146:269;12095:320;;;:::o;12421:442::-;12570:4;12608:2;12597:9;12593:18;12585:26;;12621:71;12689:1;12678:9;12674:17;12665:6;12621:71;:::i;:::-;12702:72;12770:2;12759:9;12755:18;12746:6;12702:72;:::i;:::-;12784;12852:2;12841:9;12837:18;12828:6;12784:72;:::i;:::-;12421:442;;;;;;:::o;12869:180::-;12917:77;12914:1;12907:88;13014:4;13011:1;13004:15;13038:4;13035:1;13028:15;13055:233;13094:3;13117:24;13135:5;13117:24;:::i;:::-;13108:33;;13163:66;13156:5;13153:77;13150:103;;13233:18;;:::i;:::-;13150:103;13280:1;13273:5;13269:13;13262:20;;13055:233;;;:::o;13294:85::-;13339:7;13368:5;13357:16;;13294:85;;;:::o;13385:101::-;13421:7;13461:18;13454:5;13450:30;13439:41;;13385:101;;;:::o;13492:60::-;13520:3;13541:5;13534:12;;13492:60;;;:::o;13558:156::-;13615:9;13648:60;13665:42;13674:32;13700:5;13674:32;:::i;:::-;13665:42;:::i;:::-;13648:60;:::i;:::-;13635:73;;13558:156;;;:::o;13720:145::-;13814:44;13852:5;13814:44;:::i;:::-;13809:3;13802:57;13720:145;;:::o;13871:236::-;13971:4;14009:2;13998:9;13994:18;13986:26;;14022:78;14097:1;14086:9;14082:17;14073:6;14022:78;:::i;:::-;13871:236;;;;:::o;14113:148::-;14215:11;14252:3;14237:18;;14113:148;;;;:::o;14267:390::-;14373:3;14401:39;14434:5;14401:39;:::i;:::-;14456:89;14538:6;14533:3;14456:89;:::i;:::-;14449:96;;14554:65;14612:6;14607:3;14600:4;14593:5;14589:16;14554:65;:::i;:::-;14644:6;14639:3;14635:16;14628:23;;14377:280;14267:390;;;;:::o;14663:435::-;14843:3;14865:95;14956:3;14947:6;14865:95;:::i;:::-;14858:102;;14977:95;15068:3;15059:6;14977:95;:::i;:::-;14970:102;;15089:3;15082:10;;14663:435;;;;;:::o;15104:117::-;15213:1;15210;15203:12;15227:117;15336:1;15333;15326:12;15350:469;15455:9;15466;15504:8;15492:10;15489:24;15486:111;;;15516:79;;:::i;:::-;15486:111;15622:6;15612:8;15609:20;15606:107;;;15632:79;;:::i;:::-;15606:107;15763:1;15751:10;15747:18;15739:6;15735:31;15722:44;;15802:10;15792:8;15788:25;15775:38;;15350:469;;;;;;;:::o;15825:96::-;15883:6;15911:3;15901:13;;15825:96;;;;:::o;16019:107::-;16063:8;16113:5;16107:4;16103:16;16082:37;;16019:107;;;;:::o;16132:548::-;16222:5;16253:45;16294:3;16287:5;16253:45;:::i;:::-;16323:5;16347:40;16377:8;16364:22;16347:40;:::i;:::-;16338:49;;16411:1;16403:6;16400:13;16397:276;;;16481:168;16565:66;16535:6;16532:1;16528:14;16525:1;16521:22;16481:168;:::i;:::-;16458:5;16437:226;16428:235;;16397:276;16228:452;;16132:548;;;;:::o;16686:168::-;16769:11;16803:6;16798:3;16791:19;16843:4;16838:3;16834:14;16819:29;;16686:168;;;;:::o;16882:314::-;16978:3;16999:70;17062:6;17057:3;16999:70;:::i;:::-;16992:77;;17079:56;17128:6;17123:3;17116:5;17079:56;:::i;:::-;17160:29;17182:6;17160:29;:::i;:::-;17155:3;17151:39;17144:46;;16882:314;;;;;:::o;17202:439::-;17351:4;17389:2;17378:9;17374:18;17366:26;;17402:71;17470:1;17459:9;17455:17;17446:6;17402:71;:::i;:::-;17520:9;17514:4;17510:20;17505:2;17494:9;17490:18;17483:48;17548:86;17629:4;17620:6;17612;17548:86;:::i;:::-;17540:94;;17202:439;;;;;;:::o;17647:122::-;17720:24;17738:5;17720:24;:::i;:::-;17713:5;17710:35;17700:63;;17759:1;17756;17749:12;17700:63;17647:122;:::o;17775:143::-;17832:5;17863:6;17857:13;17848:22;;17879:33;17906:5;17879:33;:::i;:::-;17775:143;;;;:::o;17924:351::-;17994:6;18043:2;18031:9;18022:7;18018:23;18014:32;18011:119;;;18049:79;;:::i;:::-;18011:119;18169:1;18194:64;18250:7;18241:6;18230:9;18226:22;18194:64;:::i;:::-;18184:74;;18140:128;17924:351;;;;:::o;18281:98::-;18332:6;18366:5;18360:12;18350:22;;18281:98;;;:::o;18385:373::-;18471:3;18499:38;18531:5;18499:38;:::i;:::-;18553:70;18616:6;18611:3;18553:70;:::i;:::-;18546:77;;18632:65;18690:6;18685:3;18678:4;18671:5;18667:16;18632:65;:::i;:::-;18722:29;18744:6;18722:29;:::i;:::-;18717:3;18713:39;18706:46;;18475:283;18385:373;;;;:::o;18764:640::-;18959:4;18997:3;18986:9;18982:19;18974:27;;19011:71;19079:1;19068:9;19064:17;19055:6;19011:71;:::i;:::-;19092:72;19160:2;19149:9;19145:18;19136:6;19092:72;:::i;:::-;19174;19242:2;19231:9;19227:18;19218:6;19174:72;:::i;:::-;19293:9;19287:4;19283:20;19278:2;19267:9;19263:18;19256:48;19321:76;19392:4;19383:6;19321:76;:::i;:::-;19313:84;;18764:640;;;;;;;:::o;19410:141::-;19466:5;19497:6;19491:13;19482:22;;19513:32;19539:5;19513:32;:::i;:::-;19410:141;;;;:::o;19557:349::-;19626:6;19675:2;19663:9;19654:7;19650:23;19646:32;19643:119;;;19681:79;;:::i;:::-;19643:119;19801:1;19826:63;19881:7;19872:6;19861:9;19857:22;19826:63;:::i;:::-;19816:73;;19772:127;19557:349;;;;:::o;19912:180::-;19960:77;19957:1;19950:88;20057:4;20054:1;20047:15;20081:4;20078:1;20071:15;20098:332;20219:4;20257:2;20246:9;20242:18;20234:26;;20270:71;20338:1;20327:9;20323:17;20314:6;20270:71;:::i;:::-;20351:72;20419:2;20408:9;20404:18;20395:6;20351:72;:::i;:::-;20098:332;;;;;:::o;20436:438::-;20583:4;20621:2;20610:9;20606:18;20598:26;;20634:71;20702:1;20691:9;20687:17;20678:6;20634:71;:::i;:::-;20715:72;20783:2;20772:9;20768:18;20759:6;20715:72;:::i;:::-;20797:70;20863:2;20852:9;20848:18;20839:6;20797:70;:::i;:::-;20436:438;;;;;;:::o;20880:147::-;20981:11;21018:3;21003:18;;20880:147;;;;:::o;21033:386::-;21137:3;21165:38;21197:5;21165:38;:::i;:::-;21219:88;21300:6;21295:3;21219:88;:::i;:::-;21212:95;;21316:65;21374:6;21369:3;21362:4;21355:5;21351:16;21316:65;:::i;:::-;21406:6;21401:3;21397:16;21390:23;;21141:278;21033:386;;;;:::o;21425:271::-;21555:3;21577:93;21666:3;21657:6;21577:93;:::i;:::-;21570:100;;21687:3;21680:10;;21425:271;;;;:::o;21702:137::-;21756:5;21787:6;21781:13;21772:22;;21803:30;21827:5;21803:30;:::i;:::-;21702:137;;;;:::o;21845:93::-;21881:7;21921:10;21914:5;21910:22;21899:33;;21845:93;;;:::o;21944:120::-;22016:23;22033:5;22016:23;:::i;:::-;22009:5;22006:34;21996:62;;22054:1;22051;22044:12;21996:62;21944:120;:::o;22070:141::-;22126:5;22157:6;22151:13;22142:22;;22173:32;22199:5;22173:32;:::i;:::-;22070:141;;;;:::o;22217:499::-;22292:6;22300;22349:2;22337:9;22328:7;22324:23;22320:32;22317:119;;;22355:79;;:::i;:::-;22317:119;22475:1;22500:61;22553:7;22544:6;22533:9;22529:22;22500:61;:::i;:::-;22490:71;;22446:125;22610:2;22636:63;22691:7;22682:6;22671:9;22667:22;22636:63;:::i;:::-;22626:73;;22581:128;22217:499;;;;;:::o;22722:345::-;22789:6;22838:2;22826:9;22817:7;22813:23;22809:32;22806:119;;;22844:79;;:::i;:::-;22806:119;22964:1;22989:61;23042:7;23033:6;23022:9;23018:22;22989:61;:::i;:::-;22979:71;;22935:125;22722:345;;;;:::o;23073:141::-;23122:4;23145:3;23137:11;;23168:3;23165:1;23158:14;23202:4;23199:1;23189:18;23181:26;;23073:141;;;:::o;23220:93::-;23257:6;23304:2;23299;23292:5;23288:14;23284:23;23274:33;;23220:93;;;:::o;23319:393::-;23388:6;23438:1;23426:10;23422:18;23461:97;23491:66;23480:9;23461:97;:::i;:::-;23579:39;23609:8;23598:9;23579:39;:::i;:::-;23567:51;;23651:4;23647:9;23640:5;23636:21;23627:30;;23700:4;23690:8;23686:19;23679:5;23676:30;23666:40;;23395:317;;23319:393;;;;;:::o;23718:142::-;23768:9;23801:53;23819:34;23828:24;23846:5;23828:24;:::i;:::-;23819:34;:::i;:::-;23801:53;:::i;:::-;23788:66;;23718:142;;;:::o;23866:75::-;23909:3;23930:5;23923:12;;23866:75;;;:::o;23947:269::-;24057:39;24088:7;24057:39;:::i;:::-;24118:91;24167:41;24191:16;24167:41;:::i;:::-;24159:6;24152:4;24146:11;24118:91;:::i;:::-;24112:4;24105:105;24023:193;23947:269;;;:::o;24222:73::-;24267:3;24222:73;:::o;24301:189::-;24378:32;;:::i;:::-;24419:65;24477:6;24469;24463:4;24419:65;:::i;:::-;24354:136;24301:189;;:::o;24496:186::-;24556:120;24573:3;24566:5;24563:14;24556:120;;;24627:39;24664:1;24657:5;24627:39;:::i;:::-;24600:1;24593:5;24589:13;24580:22;;24556:120;;;24496:186;;:::o;24688:543::-;24789:2;24784:3;24781:11;24778:446;;;24823:38;24855:5;24823:38;:::i;:::-;24907:29;24925:10;24907:29;:::i;:::-;24897:8;24893:44;25090:2;25078:10;25075:18;25072:49;;;25111:8;25096:23;;25072:49;25134:80;25190:22;25208:3;25190:22;:::i;:::-;25180:8;25176:37;25163:11;25134:80;:::i;:::-;24793:431;;24778:446;24688:543;;;:::o;25237:117::-;25291:8;25341:5;25335:4;25331:16;25310:37;;25237:117;;;;:::o;25360:169::-;25404:6;25437:51;25485:1;25481:6;25473:5;25470:1;25466:13;25437:51;:::i;:::-;25433:56;25518:4;25512;25508:15;25498:25;;25411:118;25360:169;;;;:::o;25534:295::-;25610:4;25756:29;25781:3;25775:4;25756:29;:::i;:::-;25748:37;;25818:3;25815:1;25811:11;25805:4;25802:21;25794:29;;25534:295;;;;:::o;25834:1395::-;25951:37;25984:3;25951:37;:::i;:::-;26053:18;26045:6;26042:30;26039:56;;;26075:18;;:::i;:::-;26039:56;26119:38;26151:4;26145:11;26119:38;:::i;:::-;26204:67;26264:6;26256;26250:4;26204:67;:::i;:::-;26298:1;26322:4;26309:17;;26354:2;26346:6;26343:14;26371:1;26366:618;;;;27028:1;27045:6;27042:77;;;27094:9;27089:3;27085:19;27079:26;27070:35;;27042:77;27145:67;27205:6;27198:5;27145:67;:::i;:::-;27139:4;27132:81;27001:222;26336:887;;26366:618;26418:4;26414:9;26406:6;26402:22;26452:37;26484:4;26452:37;:::i;:::-;26511:1;26525:208;26539:7;26536:1;26533:14;26525:208;;;26618:9;26613:3;26609:19;26603:26;26595:6;26588:42;26669:1;26661:6;26657:14;26647:24;;26716:2;26705:9;26701:18;26688:31;;26562:4;26559:1;26555:12;26550:17;;26525:208;;;26761:6;26752:7;26749:19;26746:179;;;26819:9;26814:3;26810:19;26804:26;26862:48;26904:4;26896:6;26892:17;26881:9;26862:48;:::i;:::-;26854:6;26847:64;26769:156;26746:179;26971:1;26967;26959:6;26955:14;26951:22;26945:4;26938:36;26373:611;;;26336:887;;25926:1303;;;25834:1395;;:::o"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","approve(address,uint256)":"095ea7b3","authority()":"bf7e214f","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","initialize(address)":"c4d66de8","isApprovedForAll(address,address)":"e985e9c5","isConsumingScheduledOp()":"8fb36037","name()":"06fdde03","ownerOf(uint256)":"6352211e","proxiableUUID()":"52d1902d","safeMint(address)":"40d097c3","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setAuthority(address)":"7a9e5e4b","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAuthority\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"authority()\":{\"details\":\"Returns the current authority.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTune.sol\":\"NFTune\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\":{\"keccak256\":\"0xd7e800ed57cb2dc4ce3d38fc310cf6c4918c0a67f9071ef8fb3e0cff24be6446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f85f4baeccce8f93fdc5d4ce54178c900d29f67e3109fe1b31b9d98e3f0a454\",\"dweb:/ipfs/QmWfRZZzkBi3Eo4ub9VRLkBx8w527Qs5ceTNLQ9unx9n7g\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x48efca78ce4e1a9f74d3ca8539bb53d04b116e507c10cd9e0df6105b8a6ae420\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9f5e03898857a187d99bd0766daf725abe87f454db82ac6286544d8cb4532f\",\"dweb:/ipfs/QmXFNXaNuxvGCLNL9xAFbvEgRmXDuxw4Ukf9tddiAHDq59\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x5d1215064b3e114d329b1544cf65d33404f63e7841184e55267f4d8b114608e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1699c6ecb0511cb626f40814463aaf4e5c8c36399689e0f3de7561f227a5b50a\",\"dweb:/ipfs/QmQDxPddEsajUEPDRsfPekEhBRjmBTepYALuTwdM7h6mRz\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0xdabf85e3bab52e7cfade4f77e661bcf7a2f9f95097bfd2ca5ddb193a0c21ee8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402259332090488a587a858ec0113bc7fe55e9dbc6e329927b87ed0f1cce7d08\",\"dweb:/ipfs/QmPJufTJJJifny3JscKTASsPzCrpXRbhtsJnwkCdbaKDTf\"]},\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/NFTune.sol\":{\"keccak256\":\"0x20db392e5563751da7a29534e2c9d109f900877f72f37a644c017fe1ea1b1bdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ffb9c44ede28f6217df55675facdde97b118934a245a0ebfb676afc54036048\",\"dweb:/ipfs/QmddPjmtXYibYrWKPNJnx3sZYTjFvM8XHhzm5Py8WB6qkc\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":7839,"contract":"contracts/NFTune.sol:NFTune","label":"_nextTokenId","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}