{"id":"2d7b0896fc95669a333d718f5b1477c4","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/manager/AccessManaged.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/AccessManaged.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAuthority} from \"./IAuthority.sol\";\nimport {AuthorityUtils} from \"./AuthorityUtils.sol\";\nimport {IAccessManager} from \"./IAccessManager.sol\";\nimport {IAccessManaged} from \"./IAccessManaged.sol\";\nimport {Context} from \"../../utils/Context.sol\";\n\n/**\n * @dev This contract module makes available a {restricted} modifier. Functions decorated with this modifier will be\n * permissioned according to an \"authority\": a contract like {AccessManager} that follows the {IAuthority} interface,\n * implementing a policy that allows certain callers to access certain functions.\n *\n * IMPORTANT: The `restricted` modifier should never be used on `internal` functions, judiciously used in `public`\n * functions, and ideally only used in `external` functions. See {restricted}.\n */\nabstract contract AccessManaged is Context, IAccessManaged {\n    address private _authority;\n\n    bool private _consumingSchedule;\n\n    /**\n     * @dev Initializes the contract connected to an initial authority.\n     */\n    constructor(address initialAuthority) {\n        _setAuthority(initialAuthority);\n    }\n\n    /**\n     * @dev Restricts access to a function as defined by the connected Authority for this contract and the\n     * caller and selector of the function that entered the contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * In general, this modifier should only be used on `external` functions. It is okay to use it on `public`\n     * functions that are used as external entry points and are not called internally. Unless you know what you're\n     * doing, it should never be used on `internal` functions. Failure to follow these rules can have critical security\n     * implications! This is because the permissions are determined by the function that entered the contract, i.e. the\n     * function at the bottom of the call stack, and not the function where the modifier is visible in the source code.\n     * ====\n     *\n     * [WARNING]\n     * ====\n     * Avoid adding this modifier to the https://docs.soliditylang.org/en/v0.8.20/contracts.html#receive-ether-function[`receive()`]\n     * function or the https://docs.soliditylang.org/en/v0.8.20/contracts.html#fallback-function[`fallback()`]. These\n     * functions are the only execution paths where a function selector cannot be unambiguosly determined from the calldata\n     * since the selector defaults to `0x00000000` in the `receive()` function and similarly in the `fallback()` function\n     * if no calldata is provided. (See {_checkCanCall}).\n     *\n     * The `receive()` function will always panic whereas the `fallback()` may panic depending on the calldata length.\n     * ====\n     */\n    modifier restricted() {\n        _checkCanCall(_msgSender(), _msgData());\n        _;\n    }\n\n    /// @inheritdoc IAccessManaged\n    function authority() public view virtual returns (address) {\n        return _authority;\n    }\n\n    /// @inheritdoc IAccessManaged\n    function setAuthority(address newAuthority) public virtual {\n        address caller = _msgSender();\n        if (caller != authority()) {\n            revert AccessManagedUnauthorized(caller);\n        }\n        if (newAuthority.code.length == 0) {\n            revert AccessManagedInvalidAuthority(newAuthority);\n        }\n        _setAuthority(newAuthority);\n    }\n\n    /// @inheritdoc IAccessManaged\n    function isConsumingScheduledOp() public view returns (bytes4) {\n        return _consumingSchedule ? this.isConsumingScheduledOp.selector : bytes4(0);\n    }\n\n    /**\n     * @dev Transfers control to a new authority. Internal function with no access restriction. Allows bypassing the\n     * permissions set by the current authority.\n     */\n    function _setAuthority(address newAuthority) internal virtual {\n        _authority = newAuthority;\n        emit AuthorityUpdated(newAuthority);\n    }\n\n    /**\n     * @dev Reverts if the caller is not allowed to call the function identified by a selector. Panics if the calldata\n     * is less than 4 bytes long.\n     */\n    function _checkCanCall(address caller, bytes calldata data) internal virtual {\n        (bool immediate, uint32 delay) = AuthorityUtils.canCallWithDelay(\n            authority(),\n            caller,\n            address(this),\n            bytes4(data[0:4])\n        );\n        if (!immediate) {\n            if (delay > 0) {\n                _consumingSchedule = true;\n                IAccessManager(authority()).consumeScheduledOp(caller, data);\n                _consumingSchedule = false;\n            } else {\n                revert AccessManagedUnauthorized(caller);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/manager/AuthorityUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/AuthorityUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAuthority} from \"./IAuthority.sol\";\n\nlibrary AuthorityUtils {\n    /**\n     * @dev Since `AccessManager` implements an extended IAuthority interface, invoking `canCall` with backwards compatibility\n     * for the preexisting `IAuthority` interface requires special care to avoid reverting on insufficient return data.\n     * This helper function takes care of invoking `canCall` in a backwards compatible way without reverting.\n     */\n    function canCallWithDelay(\n        address authority,\n        address caller,\n        address target,\n        bytes4 selector\n    ) internal view returns (bool immediate, uint32 delay) {\n        (bool success, bytes memory data) = authority.staticcall(\n            abi.encodeCall(IAuthority.canCall, (caller, target, selector))\n        );\n        if (success) {\n            if (data.length >= 0x40) {\n                (immediate, delay) = abi.decode(data, (bool, uint32));\n            } else if (data.length >= 0x20) {\n                immediate = abi.decode(data, (bool));\n            }\n        }\n        return (immediate, delay);\n    }\n}\n"},"@openzeppelin/contracts/access/manager/IAccessManaged.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/IAccessManaged.sol)\n\npragma solidity ^0.8.20;\n\ninterface IAccessManaged {\n    /**\n     * @dev Authority that manages this contract was updated.\n     */\n    event AuthorityUpdated(address authority);\n\n    error AccessManagedUnauthorized(address caller);\n    error AccessManagedRequiredDelay(address caller, uint32 delay);\n    error AccessManagedInvalidAuthority(address authority);\n\n    /**\n     * @dev Returns the current authority.\n     */\n    function authority() external view returns (address);\n\n    /**\n     * @dev Transfers control to a new authority. The caller must be the current authority.\n     */\n    function setAuthority(address) external;\n\n    /**\n     * @dev Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is\n     * being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs\n     * attacker controlled calls.\n     */\n    function isConsumingScheduledOp() external view returns (bytes4);\n}\n"},"@openzeppelin/contracts/access/manager/IAccessManager.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/IAccessManager.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessManaged} from \"./IAccessManaged.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\ninterface IAccessManager {\n    /**\n     * @dev A delayed operation was scheduled.\n     */\n    event OperationScheduled(\n        bytes32 indexed operationId,\n        uint32 indexed nonce,\n        uint48 schedule,\n        address caller,\n        address target,\n        bytes data\n    );\n\n    /**\n     * @dev A scheduled operation was executed.\n     */\n    event OperationExecuted(bytes32 indexed operationId, uint32 indexed nonce);\n\n    /**\n     * @dev A scheduled operation was canceled.\n     */\n    event OperationCanceled(bytes32 indexed operationId, uint32 indexed nonce);\n\n    /**\n     * @dev Informational labelling for a roleId.\n     */\n    event RoleLabel(uint64 indexed roleId, string label);\n\n    /**\n     * @dev Emitted when `account` is granted `roleId`.\n     *\n     * NOTE: The meaning of the `since` argument depends on the `newMember` argument.\n     * If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role,\n     * otherwise it indicates the execution delay for this account and roleId is updated.\n     */\n    event RoleGranted(uint64 indexed roleId, address indexed account, uint32 delay, uint48 since, bool newMember);\n\n    /**\n     * @dev Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous.\n     */\n    event RoleRevoked(uint64 indexed roleId, address indexed account);\n\n    /**\n     * @dev Role acting as admin over a given `roleId` is updated.\n     */\n    event RoleAdminChanged(uint64 indexed roleId, uint64 indexed admin);\n\n    /**\n     * @dev Role acting as guardian over a given `roleId` is updated.\n     */\n    event RoleGuardianChanged(uint64 indexed roleId, uint64 indexed guardian);\n\n    /**\n     * @dev Grant delay for a given `roleId` will be updated to `delay` when `since` is reached.\n     */\n    event RoleGrantDelayChanged(uint64 indexed roleId, uint32 delay, uint48 since);\n\n    /**\n     * @dev Target mode is updated (true = closed, false = open).\n     */\n    event TargetClosed(address indexed target, bool closed);\n\n    /**\n     * @dev Role required to invoke `selector` on `target` is updated to `roleId`.\n     */\n    event TargetFunctionRoleUpdated(address indexed target, bytes4 selector, uint64 indexed roleId);\n\n    /**\n     * @dev Admin delay for a given `target` will be updated to `delay` when `since` is reached.\n     */\n    event TargetAdminDelayUpdated(address indexed target, uint32 delay, uint48 since);\n\n    error AccessManagerAlreadyScheduled(bytes32 operationId);\n    error AccessManagerNotScheduled(bytes32 operationId);\n    error AccessManagerNotReady(bytes32 operationId);\n    error AccessManagerExpired(bytes32 operationId);\n    error AccessManagerLockedAccount(address account);\n    error AccessManagerLockedRole(uint64 roleId);\n    error AccessManagerBadConfirmation();\n    error AccessManagerUnauthorizedAccount(address msgsender, uint64 roleId);\n    error AccessManagerUnauthorizedCall(address caller, address target, bytes4 selector);\n    error AccessManagerUnauthorizedConsume(address target);\n    error AccessManagerUnauthorizedCancel(address msgsender, address caller, address target, bytes4 selector);\n    error AccessManagerInvalidInitialAdmin(address initialAdmin);\n\n    /**\n     * @dev Check if an address (`caller`) is authorised to call a given function on a given contract directly (with\n     * no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule}\n     * & {execute} workflow.\n     *\n     * This function is usually called by the targeted contract to control immediate execution of restricted functions.\n     * Therefore we only return true if the call can be performed without any delay. If the call is subject to a\n     * previously set delay (not zero), then the function should return false and the caller should schedule the operation\n     * for future execution.\n     *\n     * If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise\n     * the operation can be executed if and only if delay is greater than 0.\n     *\n     * NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that\n     * is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail\n     * to identify the indirect workflow, and will consider calls that require a delay to be forbidden.\n     *\n     * NOTE: This function does not report the permissions of this manager itself. These are defined by the\n     * {_canCallSelf} function instead.\n     */\n    function canCall(\n        address caller,\n        address target,\n        bytes4 selector\n    ) external view returns (bool allowed, uint32 delay);\n\n    /**\n     * @dev Expiration delay for scheduled proposals. Defaults to 1 week.\n     *\n     * IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately,\n     * disabling any scheduling usage.\n     */\n    function expiration() external view returns (uint32);\n\n    /**\n     * @dev Minimum setback for all delay updates, with the exception of execution delays. It\n     * can be increased without setback (and reset via {revokeRole} in the case event of an\n     * accidental increase). Defaults to 5 days.\n     */\n    function minSetback() external view returns (uint32);\n\n    /**\n     * @dev Get whether the contract is closed disabling any access. Otherwise role permissions are applied.\n     */\n    function isTargetClosed(address target) external view returns (bool);\n\n    /**\n     * @dev Get the role required to call a function.\n     */\n    function getTargetFunctionRole(address target, bytes4 selector) external view returns (uint64);\n\n    /**\n     * @dev Get the admin delay for a target contract. Changes to contract configuration are subject to this delay.\n     */\n    function getTargetAdminDelay(address target) external view returns (uint32);\n\n    /**\n     * @dev Get the id of the role that acts as an admin for the given role.\n     *\n     * The admin permission is required to grant the role, revoke the role and update the execution delay to execute\n     * an operation that is restricted to this role.\n     */\n    function getRoleAdmin(uint64 roleId) external view returns (uint64);\n\n    /**\n     * @dev Get the role that acts as a guardian for a given role.\n     *\n     * The guardian permission allows canceling operations that have been scheduled under the role.\n     */\n    function getRoleGuardian(uint64 roleId) external view returns (uint64);\n\n    /**\n     * @dev Get the role current grant delay.\n     *\n     * Its value may change at any point without an event emitted following a call to {setGrantDelay}.\n     * Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event.\n     */\n    function getRoleGrantDelay(uint64 roleId) external view returns (uint32);\n\n    /**\n     * @dev Get the access details for a given account for a given role. These details include the timepoint at which\n     * membership becomes active, and the delay applied to all operation by this user that requires this permission\n     * level.\n     *\n     * Returns:\n     * [0] Timestamp at which the account membership becomes valid. 0 means role is not granted.\n     * [1] Current execution delay for the account.\n     * [2] Pending execution delay for the account.\n     * [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled.\n     */\n    function getAccess(uint64 roleId, address account) external view returns (uint48, uint32, uint32, uint48);\n\n    /**\n     * @dev Check if a given account currently has the permission level corresponding to a given role. Note that this\n     * permission might be associated with an execution delay. {getAccess} can provide more details.\n     */\n    function hasRole(uint64 roleId, address account) external view returns (bool, uint32);\n\n    /**\n     * @dev Give a label to a role, for improved role discoverability by UIs.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleLabel} event.\n     */\n    function labelRole(uint64 roleId, string calldata label) external;\n\n    /**\n     * @dev Add `account` to `roleId`, or change its execution delay.\n     *\n     * This gives the account the authorization to call any function that is restricted to this role. An optional\n     * execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation\n     * that is restricted to members of this role. The user will only be able to execute the operation after the delay has\n     * passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}).\n     *\n     * If the account has already been granted this role, the execution delay will be updated. This update is not\n     * immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is\n     * called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any\n     * operation executed in the 3 hours that follows this update was indeed scheduled before this update.\n     *\n     * Requirements:\n     *\n     * - the caller must be an admin for the role (see {getRoleAdmin})\n     * - granted role must not be the `PUBLIC_ROLE`\n     *\n     * Emits a {RoleGranted} event.\n     */\n    function grantRole(uint64 roleId, address account, uint32 executionDelay) external;\n\n    /**\n     * @dev Remove an account from a role, with immediate effect. If the account does not have the role, this call has\n     * no effect.\n     *\n     * Requirements:\n     *\n     * - the caller must be an admin for the role (see {getRoleAdmin})\n     * - revoked role must not be the `PUBLIC_ROLE`\n     *\n     * Emits a {RoleRevoked} event if the account had the role.\n     */\n    function revokeRole(uint64 roleId, address account) external;\n\n    /**\n     * @dev Renounce role permissions for the calling account with immediate effect. If the sender is not in\n     * the role this call has no effect.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * Emits a {RoleRevoked} event if the account had the role.\n     */\n    function renounceRole(uint64 roleId, address callerConfirmation) external;\n\n    /**\n     * @dev Change admin role for a given role.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleAdminChanged} event\n     */\n    function setRoleAdmin(uint64 roleId, uint64 admin) external;\n\n    /**\n     * @dev Change guardian role for a given role.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleGuardianChanged} event\n     */\n    function setRoleGuardian(uint64 roleId, uint64 guardian) external;\n\n    /**\n     * @dev Update the delay for granting a `roleId`.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleGrantDelayChanged} event.\n     */\n    function setGrantDelay(uint64 roleId, uint32 newDelay) external;\n\n    /**\n     * @dev Set the role required to call functions identified by the `selectors` in the `target` contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {TargetFunctionRoleUpdated} event per selector.\n     */\n    function setTargetFunctionRole(address target, bytes4[] calldata selectors, uint64 roleId) external;\n\n    /**\n     * @dev Set the delay for changing the configuration of a given target contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {TargetAdminDelayUpdated} event.\n     */\n    function setTargetAdminDelay(address target, uint32 newDelay) external;\n\n    /**\n     * @dev Set the closed flag for a contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {TargetClosed} event.\n     */\n    function setTargetClosed(address target, bool closed) external;\n\n    /**\n     * @dev Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the\n     * operation is not yet scheduled, has expired, was executed, or was canceled.\n     */\n    function getSchedule(bytes32 id) external view returns (uint48);\n\n    /**\n     * @dev Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never\n     * been scheduled.\n     */\n    function getNonce(bytes32 id) external view returns (uint32);\n\n    /**\n     * @dev Schedule a delayed operation for future execution, and return the operation identifier. It is possible to\n     * choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays\n     * required for the caller. The special value zero will automatically set the earliest possible time.\n     *\n     * Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when\n     * the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this\n     * scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}.\n     *\n     * Emits a {OperationScheduled} event.\n     *\n     * NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If\n     * this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target\n     * contract if it is using standard Solidity ABI encoding.\n     */\n    function schedule(address target, bytes calldata data, uint48 when) external returns (bytes32, uint32);\n\n    /**\n     * @dev Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the\n     * execution delay is 0.\n     *\n     * Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the\n     * operation wasn't previously scheduled (if the caller doesn't have an execution delay).\n     *\n     * Emits an {OperationExecuted} event only if the call was scheduled and delayed.\n     */\n    function execute(address target, bytes calldata data) external payable returns (uint32);\n\n    /**\n     * @dev Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled\n     * operation that is cancelled.\n     *\n     * Requirements:\n     *\n     * - the caller must be the proposer, a guardian of the targeted function, or a global admin\n     *\n     * Emits a {OperationCanceled} event.\n     */\n    function cancel(address caller, address target, bytes calldata data) external returns (uint32);\n\n    /**\n     * @dev Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed\n     * (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error.\n     *\n     * This is useful for contract that want to enforce that calls targeting them were scheduled on the manager,\n     * with all the verifications that it implies.\n     *\n     * Emit a {OperationExecuted} event.\n     */\n    function consumeScheduledOp(address caller, bytes calldata data) external;\n\n    /**\n     * @dev Hashing function for delayed operations.\n     */\n    function hashOperation(address caller, address target, bytes calldata data) external view returns (bytes32);\n\n    /**\n     * @dev Changes the authority of a target managed by this manager instance.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     */\n    function updateAuthority(address target, address newAuthority) external;\n}\n"},"@openzeppelin/contracts/access/manager/IAuthority.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/IAuthority.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard interface for permissioning originally defined in Dappsys.\n */\ninterface IAuthority {\n    /**\n     * @dev Returns true if the caller can invoke on a target the function identified by a function selector.\n     */\n    function canCall(address caller, address target, bytes4 selector) external view returns (bool allowed);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(Delay self, uint48 timepoint) private pure returns (uint32, uint32, uint48) {\n        (uint32 valueBefore, uint32 valueAfter, uint48 effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32, uint32, uint48) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/NFToken.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/manager/AccessManaged.sol\";\n\ncontract NFToken is ERC20, ERC20Burnable, AccessManaged {\n    constructor(address initialAuthority)\n        ERC20(\"NFToken\", \"NFO\")\n        AccessManaged(initialAuthority)\n    {}\n\n    function mint(address to, uint256 amount) public restricted {\n        _mint(to, amount);\n    }\n}"},"contracts/NFTune.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/access/manager/AccessManaged.sol\";\n\ncontract NFTune is ERC721, ERC721Burnable, AccessManaged {\n    uint256 private _nextTokenId;\n\n    constructor(address initialAuthority)\n        ERC721(\"NFTune\", \"NFU\")\n        AccessManaged(initialAuthority)\n    {}\n\n    function safeMint(address to) public restricted {\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(to, tokenId);\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/manager/AccessManaged.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/manager/AccessManaged.sol","exportedSymbols":{"AccessManaged":[184],"AuthorityUtils":[266],"Context":[2793],"IAccessManaged":[306],"IAccessManager":[744],"IAuthority":[760]},"id":185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:0"},{"absolutePath":"@openzeppelin/contracts/access/manager/IAuthority.sol","file":"./IAuthority.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":185,"sourceUnit":761,"src":"142:44:0","symbolAliases":[{"foreign":{"id":2,"name":"IAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"150:10:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/manager/AuthorityUtils.sol","file":"./AuthorityUtils.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":185,"sourceUnit":267,"src":"187:52:0","symbolAliases":[{"foreign":{"id":4,"name":"AuthorityUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"195:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManager.sol","file":"./IAccessManager.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":185,"sourceUnit":745,"src":"240:52:0","symbolAliases":[{"foreign":{"id":6,"name":"IAccessManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"248:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManaged.sol","file":"./IAccessManaged.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":185,"sourceUnit":307,"src":"293:52:0","symbolAliases":[{"foreign":{"id":8,"name":"IAccessManaged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"301:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":185,"sourceUnit":2794,"src":"346:48:0","symbolAliases":[{"foreign":{"id":10,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"354:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":13,"name":"Context","nameLocations":["953:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"953:7:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"953:7:0"},{"baseName":{"id":15,"name":"IAccessManaged","nameLocations":["962:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"962:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"962:14:0"}],"canonicalName":"AccessManaged","contractDependencies":[],"contractKind":"contract","documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"396:521:0","text":" @dev This contract module makes available a {restricted} modifier. Functions decorated with this modifier will be\n permissioned according to an \"authority\": a contract like {AccessManager} that follows the {IAuthority} interface,\n implementing a policy that allows certain callers to access certain functions.\n IMPORTANT: The `restricted` modifier should never be used on `internal` functions, judiciously used in `public`\n functions, and ideally only used in `external` functions. See {restricted}."},"fullyImplemented":true,"id":184,"linearizedBaseContracts":[184,306,2793],"name":"AccessManaged","nameLocation":"936:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":18,"mutability":"mutable","name":"_authority","nameLocation":"999:10:0","nodeType":"VariableDeclaration","scope":184,"src":"983:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":20,"mutability":"mutable","name":"_consumingSchedule","nameLocation":"1029:18:0","nodeType":"VariableDeclaration","scope":184,"src":"1016:31:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19,"name":"bool","nodeType":"ElementaryTypeName","src":"1016:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":30,"nodeType":"Block","src":"1180:48:0","statements":[{"expression":{"arguments":[{"id":27,"name":"initialAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"1204:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":26,"name":"_setAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"1190:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":28,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1190:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":29,"nodeType":"ExpressionStatement","src":"1190:31:0"}]},"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"1054:83:0","text":" @dev Initializes the contract connected to an initial authority."},"id":31,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"initialAuthority","nameLocation":"1162:16:0","nodeType":"VariableDeclaration","scope":31,"src":"1154:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1153:26:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1180:0:0"},"scope":184,"src":"1142:86:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":42,"nodeType":"Block","src":"2814:67:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":35,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"2838:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2838:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":37,"name":"_msgData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"2852:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":34,"name":"_checkCanCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2824:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (address,bytes calldata)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2824:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":40,"nodeType":"ExpressionStatement","src":"2824:39:0"},{"id":41,"nodeType":"PlaceholderStatement","src":"2873:1:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1234:1553:0","text":" @dev Restricts access to a function as defined by the connected Authority for this contract and the\n caller and selector of the function that entered the contract.\n [IMPORTANT]\n ====\n In general, this modifier should only be used on `external` functions. It is okay to use it on `public`\n functions that are used as external entry points and are not called internally. Unless you know what you're\n doing, it should never be used on `internal` functions. Failure to follow these rules can have critical security\n implications! This is because the permissions are determined by the function that entered the contract, i.e. the\n function at the bottom of the call stack, and not the function where the modifier is visible in the source code.\n ====\n [WARNING]\n ====\n Avoid adding this modifier to the https://docs.soliditylang.org/en/v0.8.20/contracts.html#receive-ether-function[`receive()`]\n function or the https://docs.soliditylang.org/en/v0.8.20/contracts.html#fallback-function[`fallback()`]. These\n functions are the only execution paths where a function selector cannot be unambiguosly determined from the calldata\n since the selector defaults to `0x00000000` in the `receive()` function and similarly in the `fallback()` function\n if no calldata is provided. (See {_checkCanCall}).\n The `receive()` function will always panic whereas the `fallback()` may panic depending on the calldata length.\n ===="},"id":43,"name":"restricted","nameLocation":"2801:10:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"2811:2:0"},"src":"2792:89:0","virtual":false,"visibility":"internal"},{"baseFunctions":[293],"body":{"id":51,"nodeType":"Block","src":"2981:34:0","statements":[{"expression":{"id":49,"name":"_authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2998:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":48,"id":50,"nodeType":"Return","src":"2991:17:0"}]},"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"2887:30:0","text":"@inheritdoc IAccessManaged"},"functionSelector":"bf7e214f","id":52,"implemented":true,"kind":"function","modifiers":[],"name":"authority","nameLocation":"2931:9:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2940:2:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52,"src":"2972:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2971:9:0"},"scope":184,"src":"2922:93:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[299],"body":{"id":88,"nodeType":"Block","src":"3115:303:0","statements":[{"assignments":[59],"declarations":[{"constant":false,"id":59,"mutability":"mutable","name":"caller","nameLocation":"3133:6:0","nodeType":"VariableDeclaration","scope":88,"src":"3125:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3125:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":62,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":60,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"3142:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3142:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3125:29:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":63,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"3168:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":64,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"3178:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3178:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3168:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":72,"nodeType":"IfStatement","src":"3164:92:0","trueBody":{"id":71,"nodeType":"Block","src":"3191:65:0","statements":[{"errorCall":{"arguments":[{"id":68,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"3238:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"AccessManagedUnauthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3212:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":70,"nodeType":"RevertStatement","src":"3205:40:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":73,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3269:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3282:4:0","memberName":"code","nodeType":"MemberAccess","src":"3269:17:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3287:6:0","memberName":"length","nodeType":"MemberAccess","src":"3269:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3269:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":83,"nodeType":"IfStatement","src":"3265:110:0","trueBody":{"id":82,"nodeType":"Block","src":"3300:75:0","statements":[{"errorCall":{"arguments":[{"id":79,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3351:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":78,"name":"AccessManagedInvalidAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3321:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3321:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"RevertStatement","src":"3314:50:0"}]}},{"expression":{"arguments":[{"id":85,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3398:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":84,"name":"_setAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3384:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":87,"nodeType":"ExpressionStatement","src":"3384:27:0"}]},"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"3021:30:0","text":"@inheritdoc IAccessManaged"},"functionSelector":"7a9e5e4b","id":89,"implemented":true,"kind":"function","modifiers":[],"name":"setAuthority","nameLocation":"3065:12:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"newAuthority","nameLocation":"3086:12:0","nodeType":"VariableDeclaration","scope":89,"src":"3078:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"3078:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3077:22:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"3115:0:0"},"scope":184,"src":"3056:362:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[305],"body":{"id":105,"nodeType":"Block","src":"3522:93:0","statements":[{"expression":{"condition":{"id":95,"name":"_consumingSchedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"3539:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3606:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3599:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":99,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3599:6:0","typeDescriptions":{}}},"id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3599:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3539:69:0","trueExpression":{"expression":{"expression":{"id":96,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3560:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AccessManaged_$184","typeString":"contract AccessManaged"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3565:22:0","memberName":"isConsumingScheduledOp","nodeType":"MemberAccess","referencedDeclaration":106,"src":"3560:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes4_$","typeString":"function () view external returns (bytes4)"}},"id":98,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3588:8:0","memberName":"selector","nodeType":"MemberAccess","src":"3560:36:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":94,"id":104,"nodeType":"Return","src":"3532:76:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"3424:30:0","text":"@inheritdoc IAccessManaged"},"functionSelector":"8fb36037","id":106,"implemented":true,"kind":"function","modifiers":[],"name":"isConsumingScheduledOp","nameLocation":"3468:22:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"3490:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":106,"src":"3514:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":92,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3514:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3513:8:0"},"scope":184,"src":"3459:156:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":120,"nodeType":"Block","src":"3865:87:0","statements":[{"expression":{"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":112,"name":"_authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3875:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":113,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"3888:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3875:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":115,"nodeType":"ExpressionStatement","src":"3875:25:0"},{"eventCall":{"arguments":[{"id":117,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"3932:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":116,"name":"AuthorityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3915:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3915:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"EmitStatement","src":"3910:35:0"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"3621:177:0","text":" @dev Transfers control to a new authority. Internal function with no access restriction. Allows bypassing the\n permissions set by the current authority."},"id":121,"implemented":true,"kind":"function","modifiers":[],"name":"_setAuthority","nameLocation":"3812:13:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"newAuthority","nameLocation":"3834:12:0","nodeType":"VariableDeclaration","scope":121,"src":"3826:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"3826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3825:22:0"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"3865:0:0"},"scope":184,"src":"3803:149:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":182,"nodeType":"Block","src":"4204:517:0","statements":[{"assignments":[130,132],"declarations":[{"constant":false,"id":130,"mutability":"mutable","name":"immediate","nameLocation":"4220:9:0","nodeType":"VariableDeclaration","scope":182,"src":"4215:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"4215:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"delay","nameLocation":"4238:5:0","nodeType":"VariableDeclaration","scope":182,"src":"4231:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":131,"name":"uint32","nodeType":"ElementaryTypeName","src":"4231:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":150,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":135,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"4292:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":137,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"4317:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":140,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4345:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AccessManaged_$184","typeString":"contract AccessManaged"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AccessManaged_$184","typeString":"contract AccessManaged"}],"id":139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4337:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"4337:7:0","typeDescriptions":{}}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"baseExpression":{"id":144,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4371:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"34","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4378:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4371:9:0","startExpression":{"hexValue":"30","id":145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4376:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4364:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":142,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4364:6:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4364:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":133,"name":"AuthorityUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4247:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AuthorityUtils_$266_$","typeString":"type(library AuthorityUtils)"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:16:0","memberName":"canCallWithDelay","nodeType":"MemberAccess","referencedDeclaration":265,"src":"4247:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$_t_uint32_$","typeString":"function (address,address,address,bytes4) view returns (bool,uint32)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:144:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$","typeString":"tuple(bool,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"4214:177:0"},{"condition":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4405:10:0","subExpression":{"id":151,"name":"immediate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"4406:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":181,"nodeType":"IfStatement","src":"4401:314:0","trueBody":{"id":180,"nodeType":"Block","src":"4417:298:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":153,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4435:5:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4443:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4435:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":178,"nodeType":"Block","src":"4632:73:0","statements":[{"errorCall":{"arguments":[{"id":175,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"4683:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":174,"name":"AccessManagedUnauthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"4657:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4657:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"RevertStatement","src":"4650:40:0"}]},"id":179,"nodeType":"IfStatement","src":"4431:274:0","trueBody":{"id":173,"nodeType":"Block","src":"4446:180:0","statements":[{"expression":{"id":158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":156,"name":"_consumingSchedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"4464:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4485:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4464:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":159,"nodeType":"ExpressionStatement","src":"4464:25:0"},{"expression":{"arguments":[{"id":165,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"4554:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":166,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4562:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"4522:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4522:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"IAccessManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"4507:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessManager_$744_$","typeString":"type(contract IAccessManager)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAccessManager_$744","typeString":"contract IAccessManager"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4535:18:0","memberName":"consumeScheduledOp","nodeType":"MemberAccess","referencedDeclaration":723,"src":"4507:46:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory) external"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":168,"nodeType":"ExpressionStatement","src":"4507:60:0"},{"expression":{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":169,"name":"_consumingSchedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"4585:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4606:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4585:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":172,"nodeType":"ExpressionStatement","src":"4585:26:0"}]}}]}}]},"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"3958:164:0","text":" @dev Reverts if the caller is not allowed to call the function identified by a selector. Panics if the calldata\n is less than 4 bytes long."},"id":183,"implemented":true,"kind":"function","modifiers":[],"name":"_checkCanCall","nameLocation":"4136:13:0","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"caller","nameLocation":"4158:6:0","nodeType":"VariableDeclaration","scope":183,"src":"4150:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"data","nameLocation":"4181:4:0","nodeType":"VariableDeclaration","scope":183,"src":"4166:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":125,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4149:37:0"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":184,"src":"4127:594:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":185,"src":"918:3805:0","usedErrors":[277,283,287],"usedEvents":[273]}],"src":"116:4608:0"},"id":0},"@openzeppelin/contracts/access/manager/AuthorityUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/manager/AuthorityUtils.sol","exportedSymbols":{"AuthorityUtils":[266],"IAuthority":[760]},"id":267,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":186,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"117:24:1"},{"absolutePath":"@openzeppelin/contracts/access/manager/IAuthority.sol","file":"./IAuthority.sol","id":188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":267,"sourceUnit":761,"src":"143:44:1","symbolAliases":[{"foreign":{"id":187,"name":"IAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"151:10:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AuthorityUtils","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":266,"linearizedBaseContracts":[266],"name":"AuthorityUtils","nameLocation":"197:14:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":264,"nodeType":"Block","src":"776:451:1","statements":[{"assignments":[205,207],"declarations":[{"constant":false,"id":205,"mutability":"mutable","name":"success","nameLocation":"792:7:1","nodeType":"VariableDeclaration","scope":264,"src":"787:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"787:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"data","nameLocation":"814:4:1","nodeType":"VariableDeclaration","scope":264,"src":"801:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":206,"name":"bytes","nodeType":"ElementaryTypeName","src":"801:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":220,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":212,"name":"IAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"871:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAuthority_$760_$","typeString":"type(contract IAuthority)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"882:7:1","memberName":"canCall","nodeType":"MemberAccess","referencedDeclaration":759,"src":"871:18:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function IAuthority.canCall(address,address,bytes4) view returns (bool)"}},{"components":[{"id":214,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"892:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":215,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"900:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":216,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"908:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"id":217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:26:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bytes4_$","typeString":"tuple(address,address,bytes4)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function IAuthority.canCall(address,address,bytes4) view returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bytes4_$","typeString":"tuple(address,address,bytes4)"}],"expression":{"id":210,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"856:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"860:10:1","memberName":"encodeCall","nodeType":"MemberAccess","src":"856:14:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"856:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":208,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"822:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"832:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"822:20:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"822:106:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"786:142:1"},{"condition":{"id":221,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"942:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":259,"nodeType":"IfStatement","src":"938:248:1","trueBody":{"id":258,"nodeType":"Block","src":"951:235:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":222,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"969:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"974:6:1","memberName":"length","nodeType":"MemberAccess","src":"969:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783430","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"984:4:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"969:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":241,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1086:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1091:6:1","memberName":"length","nodeType":"MemberAccess","src":"1086:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1101:4:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"1086:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":256,"nodeType":"IfStatement","src":"1082:94:1","trueBody":{"id":255,"nodeType":"Block","src":"1107:69:1","statements":[{"expression":{"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":245,"name":"immediate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1125:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":248,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1148:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1155:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":249,"name":"bool","nodeType":"ElementaryTypeName","src":"1155:4:1","typeDescriptions":{}}}],"id":251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1154:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":246,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1137:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1141:6:1","memberName":"decode","nodeType":"MemberAccess","src":"1137:10:1","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1137:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1125:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":254,"nodeType":"ExpressionStatement","src":"1125:36:1"}]}},"id":257,"nodeType":"IfStatement","src":"965:211:1","trueBody":{"id":240,"nodeType":"Block","src":"990:86:1","statements":[{"expression":{"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":226,"name":"immediate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1009:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":227,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1020:5:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":228,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1008:18:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$","typeString":"tuple(bool,uint32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":231,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1040:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1047:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":232,"name":"bool","nodeType":"ElementaryTypeName","src":"1047:4:1","typeDescriptions":{}}},{"id":235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1053:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":234,"name":"uint32","nodeType":"ElementaryTypeName","src":"1053:6:1","typeDescriptions":{}}}],"id":236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1046:14:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_uint32_$_$","typeString":"tuple(type(bool),type(uint32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_uint32_$_$","typeString":"tuple(type(bool),type(uint32))"}],"expression":{"id":229,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1029:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1033:6:1","memberName":"decode","nodeType":"MemberAccess","src":"1029:10:1","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1029:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$","typeString":"tuple(bool,uint32)"}},"src":"1008:53:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"ExpressionStatement","src":"1008:53:1"}]}}]}},{"expression":{"components":[{"id":260,"name":"immediate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1203:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":261,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1214:5:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1202:18:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$","typeString":"tuple(bool,uint32)"}},"functionReturnParameters":203,"id":263,"nodeType":"Return","src":"1195:25:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"218:368:1","text":" @dev Since `AccessManager` implements an extended IAuthority interface, invoking `canCall` with backwards compatibility\n for the preexisting `IAuthority` interface requires special care to avoid reverting on insufficient return data.\n This helper function takes care of invoking `canCall` in a backwards compatible way without reverting."},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"canCallWithDelay","nameLocation":"600:16:1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"authority","nameLocation":"634:9:1","nodeType":"VariableDeclaration","scope":265,"src":"626:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"caller","nameLocation":"661:6:1","nodeType":"VariableDeclaration","scope":265,"src":"653:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"target","nameLocation":"685:6:1","nodeType":"VariableDeclaration","scope":265,"src":"677:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"selector","nameLocation":"708:8:1","nodeType":"VariableDeclaration","scope":265,"src":"701:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":196,"name":"bytes4","nodeType":"ElementaryTypeName","src":"701:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"616:106:1"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"immediate","nameLocation":"751:9:1","nodeType":"VariableDeclaration","scope":265,"src":"746:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":199,"name":"bool","nodeType":"ElementaryTypeName","src":"746:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"delay","nameLocation":"769:5:1","nodeType":"VariableDeclaration","scope":265,"src":"762:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":201,"name":"uint32","nodeType":"ElementaryTypeName","src":"762:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"745:30:1"},"scope":266,"src":"591:636:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":267,"src":"189:1040:1","usedErrors":[],"usedEvents":[]}],"src":"117:1113:1"},"id":1},"@openzeppelin/contracts/access/manager/IAccessManaged.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManaged.sol","exportedSymbols":{"IAccessManaged":[306]},"id":307,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":268,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"117:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessManaged","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":306,"linearizedBaseContracts":[306],"name":"IAccessManaged","nameLocation":"153:14:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"174:73:2","text":" @dev Authority that manages this contract was updated."},"eventSelector":"2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad","id":273,"name":"AuthorityUpdated","nameLocation":"258:16:2","nodeType":"EventDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"indexed":false,"mutability":"mutable","name":"authority","nameLocation":"283:9:2","nodeType":"VariableDeclaration","scope":273,"src":"275:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"274:19:2"},"src":"252:42:2"},{"errorSelector":"068ca9d8","id":277,"name":"AccessManagedUnauthorized","nameLocation":"306:25:2","nodeType":"ErrorDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"caller","nameLocation":"340:6:2","nodeType":"VariableDeclaration","scope":277,"src":"332:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"331:16:2"},"src":"300:48:2"},{"errorSelector":"af77169d","id":283,"name":"AccessManagedRequiredDelay","nameLocation":"359:26:2","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"caller","nameLocation":"394:6:2","nodeType":"VariableDeclaration","scope":283,"src":"386:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"delay","nameLocation":"409:5:2","nodeType":"VariableDeclaration","scope":283,"src":"402:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":280,"name":"uint32","nodeType":"ElementaryTypeName","src":"402:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"385:30:2"},"src":"353:63:2"},{"errorSelector":"c2f31e5e","id":287,"name":"AccessManagedInvalidAuthority","nameLocation":"427:29:2","nodeType":"ErrorDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"authority","nameLocation":"465:9:2","nodeType":"VariableDeclaration","scope":287,"src":"457:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"456:19:2"},"src":"421:55:2"},{"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"482:54:2","text":" @dev Returns the current authority."},"functionSelector":"bf7e214f","id":293,"implemented":false,"kind":"function","modifiers":[],"name":"authority","nameLocation":"550:9:2","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"559:2:2"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":293,"src":"585:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"584:9:2"},"scope":306,"src":"541:53:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"600:103:2","text":" @dev Transfers control to a new authority. The caller must be the current authority."},"functionSelector":"7a9e5e4b","id":299,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthority","nameLocation":"717:12:2","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"730:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"729:9:2"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"747:0:2"},"scope":306,"src":"708:40:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"754:284:2","text":" @dev Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is\n being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs\n attacker controlled calls."},"functionSelector":"8fb36037","id":305,"implemented":false,"kind":"function","modifiers":[],"name":"isConsumingScheduledOp","nameLocation":"1052:22:2","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"1074:2:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":305,"src":"1100:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":302,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1100:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1099:8:2"},"scope":306,"src":"1043:65:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":307,"src":"143:967:2","usedErrors":[277,283,287],"usedEvents":[273]}],"src":"117:994:2"},"id":2},"@openzeppelin/contracts/access/manager/IAccessManager.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManager.sol","exportedSymbols":{"IAccessManaged":[306],"IAccessManager":[744],"Time":[6273]},"id":745,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":308,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"117:24:3"},{"absolutePath":"@openzeppelin/contracts/access/manager/IAccessManaged.sol","file":"./IAccessManaged.sol","id":310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":745,"sourceUnit":307,"src":"143:52:3","symbolAliases":[{"foreign":{"id":309,"name":"IAccessManaged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"151:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":745,"sourceUnit":6274,"src":"196:48:3","symbolAliases":[{"foreign":{"id":311,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"204:4:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":744,"linearizedBaseContracts":[744],"name":"IAccessManager","nameLocation":"256:14:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"277:58:3","text":" @dev A delayed operation was scheduled."},"eventSelector":"82a2da5dee54ea8021c6545b4444620291e07ee83be6dd57edb175062715f3b4","id":327,"name":"OperationScheduled","nameLocation":"346:18:3","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"operationId","nameLocation":"390:11:3","nodeType":"VariableDeclaration","scope":327,"src":"374:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":317,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"426:5:3","nodeType":"VariableDeclaration","scope":327,"src":"411:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":316,"name":"uint32","nodeType":"ElementaryTypeName","src":"411:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":319,"indexed":false,"mutability":"mutable","name":"schedule","nameLocation":"448:8:3","nodeType":"VariableDeclaration","scope":327,"src":"441:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":318,"name":"uint48","nodeType":"ElementaryTypeName","src":"441:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":321,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"474:6:3","nodeType":"VariableDeclaration","scope":327,"src":"466:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"466:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":false,"mutability":"mutable","name":"target","nameLocation":"498:6:3","nodeType":"VariableDeclaration","scope":327,"src":"490:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"490:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"520:4:3","nodeType":"VariableDeclaration","scope":327,"src":"514:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":324,"name":"bytes","nodeType":"ElementaryTypeName","src":"514:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"364:166:3"},"src":"340:191:3"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"537:59:3","text":" @dev A scheduled operation was executed."},"eventSelector":"76a2a46953689d4861a5d3f6ed883ad7e6af674a21f8e162707159fc9dde614d","id":334,"name":"OperationExecuted","nameLocation":"607:17:3","nodeType":"EventDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"operationId","nameLocation":"641:11:3","nodeType":"VariableDeclaration","scope":334,"src":"625:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"625:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"669:5:3","nodeType":"VariableDeclaration","scope":334,"src":"654:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":331,"name":"uint32","nodeType":"ElementaryTypeName","src":"654:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"624:51:3"},"src":"601:75:3"},{"anonymous":false,"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"682:59:3","text":" @dev A scheduled operation was canceled."},"eventSelector":"bd9ac67a6e2f6463b80927326310338bcbb4bdb7936ce1365ea3e01067e7b9f7","id":341,"name":"OperationCanceled","nameLocation":"752:17:3","nodeType":"EventDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"indexed":true,"mutability":"mutable","name":"operationId","nameLocation":"786:11:3","nodeType":"VariableDeclaration","scope":341,"src":"770:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"770:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"814:5:3","nodeType":"VariableDeclaration","scope":341,"src":"799:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":338,"name":"uint32","nodeType":"ElementaryTypeName","src":"799:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"769:51:3"},"src":"746:75:3"},{"anonymous":false,"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"827:61:3","text":" @dev Informational labelling for a roleId."},"eventSelector":"1256f5b5ecb89caec12db449738f2fbcd1ba5806cf38f35413f4e5c15bf6a450","id":348,"name":"RoleLabel","nameLocation":"899:9:3","nodeType":"EventDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"924:6:3","nodeType":"VariableDeclaration","scope":348,"src":"909:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":343,"name":"uint64","nodeType":"ElementaryTypeName","src":"909:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":346,"indexed":false,"mutability":"mutable","name":"label","nameLocation":"939:5:3","nodeType":"VariableDeclaration","scope":348,"src":"932:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":345,"name":"string","nodeType":"ElementaryTypeName","src":"932:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"908:37:3"},"src":"893:53:3"},{"anonymous":false,"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"952:375:3","text":" @dev Emitted when `account` is granted `roleId`.\n NOTE: The meaning of the `since` argument depends on the `newMember` argument.\n If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role,\n otherwise it indicates the execution delay for this account and roleId is updated."},"eventSelector":"f98448b987f1428e0e230e1f3c6e2ce15b5693eaf31827fbd0b1ec4b424ae7cf","id":361,"name":"RoleGranted","nameLocation":"1338:11:3","nodeType":"EventDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"1365:6:3","nodeType":"VariableDeclaration","scope":361,"src":"1350:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":350,"name":"uint64","nodeType":"ElementaryTypeName","src":"1350:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":353,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1389:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1373:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":355,"indexed":false,"mutability":"mutable","name":"delay","nameLocation":"1405:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1398:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":354,"name":"uint32","nodeType":"ElementaryTypeName","src":"1398:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":357,"indexed":false,"mutability":"mutable","name":"since","nameLocation":"1419:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1412:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":356,"name":"uint48","nodeType":"ElementaryTypeName","src":"1412:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":359,"indexed":false,"mutability":"mutable","name":"newMember","nameLocation":"1431:9:3","nodeType":"VariableDeclaration","scope":361,"src":"1426:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":358,"name":"bool","nodeType":"ElementaryTypeName","src":"1426:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1349:92:3"},"src":"1332:110:3"},{"anonymous":false,"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1448:125:3","text":" @dev Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous."},"eventSelector":"f229baa593af28c41b1d16b748cd7688f0c83aaf92d4be41c44005defe84c166","id":368,"name":"RoleRevoked","nameLocation":"1584:11:3","nodeType":"EventDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"1611:6:3","nodeType":"VariableDeclaration","scope":368,"src":"1596:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":363,"name":"uint64","nodeType":"ElementaryTypeName","src":"1596:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":366,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1635:7:3","nodeType":"VariableDeclaration","scope":368,"src":"1619:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"1619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1595:48:3"},"src":"1578:66:3"},{"anonymous":false,"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"1650:78:3","text":" @dev Role acting as admin over a given `roleId` is updated."},"eventSelector":"1fd6dd7631312dfac2205b52913f99de03b4d7e381d5d27d3dbfe0713e6e6340","id":375,"name":"RoleAdminChanged","nameLocation":"1739:16:3","nodeType":"EventDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"1771:6:3","nodeType":"VariableDeclaration","scope":375,"src":"1756:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":370,"name":"uint64","nodeType":"ElementaryTypeName","src":"1756:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":373,"indexed":true,"mutability":"mutable","name":"admin","nameLocation":"1794:5:3","nodeType":"VariableDeclaration","scope":375,"src":"1779:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":372,"name":"uint64","nodeType":"ElementaryTypeName","src":"1779:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1755:45:3"},"src":"1733:68:3"},{"anonymous":false,"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1807:81:3","text":" @dev Role acting as guardian over a given `roleId` is updated."},"eventSelector":"7a8059630b897b5de4c08ade69f8b90c3ead1f8596d62d10b6c4d14a0afb4ae2","id":382,"name":"RoleGuardianChanged","nameLocation":"1899:19:3","nodeType":"EventDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"1934:6:3","nodeType":"VariableDeclaration","scope":382,"src":"1919:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":377,"name":"uint64","nodeType":"ElementaryTypeName","src":"1919:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":380,"indexed":true,"mutability":"mutable","name":"guardian","nameLocation":"1957:8:3","nodeType":"VariableDeclaration","scope":382,"src":"1942:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":379,"name":"uint64","nodeType":"ElementaryTypeName","src":"1942:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1918:48:3"},"src":"1893:74:3"},{"anonymous":false,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"1973:108:3","text":" @dev Grant delay for a given `roleId` will be updated to `delay` when `since` is reached."},"eventSelector":"feb69018ee8b8fd50ea86348f1267d07673379f72cffdeccec63853ee8ce8b48","id":391,"name":"RoleGrantDelayChanged","nameLocation":"2092:21:3","nodeType":"EventDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"2129:6:3","nodeType":"VariableDeclaration","scope":391,"src":"2114:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":384,"name":"uint64","nodeType":"ElementaryTypeName","src":"2114:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":387,"indexed":false,"mutability":"mutable","name":"delay","nameLocation":"2144:5:3","nodeType":"VariableDeclaration","scope":391,"src":"2137:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":386,"name":"uint32","nodeType":"ElementaryTypeName","src":"2137:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":389,"indexed":false,"mutability":"mutable","name":"since","nameLocation":"2158:5:3","nodeType":"VariableDeclaration","scope":391,"src":"2151:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":388,"name":"uint48","nodeType":"ElementaryTypeName","src":"2151:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2113:51:3"},"src":"2086:79:3"},{"anonymous":false,"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"2171:77:3","text":" @dev Target mode is updated (true = closed, false = open)."},"eventSelector":"90d4e7bb7e5d933792b3562e1741306f8be94837e1348dacef9b6f1df56eb138","id":398,"name":"TargetClosed","nameLocation":"2259:12:3","nodeType":"EventDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"2288:6:3","nodeType":"VariableDeclaration","scope":398,"src":"2272:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"2272:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":396,"indexed":false,"mutability":"mutable","name":"closed","nameLocation":"2301:6:3","nodeType":"VariableDeclaration","scope":398,"src":"2296:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2271:37:3"},"src":"2253:56:3"},{"anonymous":false,"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"2315:94:3","text":" @dev Role required to invoke `selector` on `target` is updated to `roleId`."},"eventSelector":"9ea6790c7dadfd01c9f8b9762b3682607af2c7e79e05a9f9fdf5580dde949151","id":407,"name":"TargetFunctionRoleUpdated","nameLocation":"2420:25:3","nodeType":"EventDefinition","parameters":{"id":406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"2462:6:3","nodeType":"VariableDeclaration","scope":407,"src":"2446:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2446:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":403,"indexed":false,"mutability":"mutable","name":"selector","nameLocation":"2477:8:3","nodeType":"VariableDeclaration","scope":407,"src":"2470:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":402,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2470:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":405,"indexed":true,"mutability":"mutable","name":"roleId","nameLocation":"2502:6:3","nodeType":"VariableDeclaration","scope":407,"src":"2487:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":404,"name":"uint64","nodeType":"ElementaryTypeName","src":"2487:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2445:64:3"},"src":"2414:96:3"},{"anonymous":false,"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"2516:108:3","text":" @dev Admin delay for a given `target` will be updated to `delay` when `since` is reached."},"eventSelector":"a56b76017453f399ec2327ba00375dbfb1fd070ff854341ad6191e6a2e2de19c","id":416,"name":"TargetAdminDelayUpdated","nameLocation":"2635:23:3","nodeType":"EventDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"2675:6:3","nodeType":"VariableDeclaration","scope":416,"src":"2659:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"2659:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"indexed":false,"mutability":"mutable","name":"delay","nameLocation":"2690:5:3","nodeType":"VariableDeclaration","scope":416,"src":"2683:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":411,"name":"uint32","nodeType":"ElementaryTypeName","src":"2683:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":414,"indexed":false,"mutability":"mutable","name":"since","nameLocation":"2704:5:3","nodeType":"VariableDeclaration","scope":416,"src":"2697:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":413,"name":"uint48","nodeType":"ElementaryTypeName","src":"2697:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2658:52:3"},"src":"2629:82:3"},{"errorSelector":"813e9459","id":420,"name":"AccessManagerAlreadyScheduled","nameLocation":"2723:29:3","nodeType":"ErrorDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"operationId","nameLocation":"2761:11:3","nodeType":"VariableDeclaration","scope":420,"src":"2753:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:21:3"},"src":"2717:57:3"},{"errorSelector":"60a299b0","id":424,"name":"AccessManagerNotScheduled","nameLocation":"2785:25:3","nodeType":"ErrorDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"operationId","nameLocation":"2819:11:3","nodeType":"VariableDeclaration","scope":424,"src":"2811:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2811:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2810:21:3"},"src":"2779:53:3"},{"errorSelector":"18cb6b7a","id":428,"name":"AccessManagerNotReady","nameLocation":"2843:21:3","nodeType":"ErrorDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"operationId","nameLocation":"2873:11:3","nodeType":"VariableDeclaration","scope":428,"src":"2865:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2865:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2864:21:3"},"src":"2837:49:3"},{"errorSelector":"78a5d6e4","id":432,"name":"AccessManagerExpired","nameLocation":"2897:20:3","nodeType":"ErrorDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"operationId","nameLocation":"2926:11:3","nodeType":"VariableDeclaration","scope":432,"src":"2918:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2918:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2917:21:3"},"src":"2891:48:3"},{"errorSelector":"5a068bc8","id":436,"name":"AccessManagerLockedAccount","nameLocation":"2950:26:3","nodeType":"ErrorDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"account","nameLocation":"2985:7:3","nodeType":"VariableDeclaration","scope":436,"src":"2977:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"2977:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2976:17:3"},"src":"2944:50:3"},{"errorSelector":"1871a90c","id":440,"name":"AccessManagerLockedRole","nameLocation":"3005:23:3","nodeType":"ErrorDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"roleId","nameLocation":"3036:6:3","nodeType":"VariableDeclaration","scope":440,"src":"3029:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":437,"name":"uint64","nodeType":"ElementaryTypeName","src":"3029:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3028:15:3"},"src":"2999:45:3"},{"errorSelector":"5f159e63","id":442,"name":"AccessManagerBadConfirmation","nameLocation":"3055:28:3","nodeType":"ErrorDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"3083:2:3"},"src":"3049:37:3"},{"errorSelector":"f07e038f","id":448,"name":"AccessManagerUnauthorizedAccount","nameLocation":"3097:32:3","nodeType":"ErrorDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"msgsender","nameLocation":"3138:9:3","nodeType":"VariableDeclaration","scope":448,"src":"3130:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"roleId","nameLocation":"3156:6:3","nodeType":"VariableDeclaration","scope":448,"src":"3149:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":445,"name":"uint64","nodeType":"ElementaryTypeName","src":"3149:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3129:34:3"},"src":"3091:73:3"},{"errorSelector":"81c6f24b","id":456,"name":"AccessManagerUnauthorizedCall","nameLocation":"3175:29:3","nodeType":"ErrorDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"caller","nameLocation":"3213:6:3","nodeType":"VariableDeclaration","scope":456,"src":"3205:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"3205:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"target","nameLocation":"3229:6:3","nodeType":"VariableDeclaration","scope":456,"src":"3221:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"3221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"selector","nameLocation":"3244:8:3","nodeType":"VariableDeclaration","scope":456,"src":"3237:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":453,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3237:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3204:49:3"},"src":"3169:85:3"},{"errorSelector":"320ff748","id":460,"name":"AccessManagerUnauthorizedConsume","nameLocation":"3265:32:3","nodeType":"ErrorDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"target","nameLocation":"3306:6:3","nodeType":"VariableDeclaration","scope":460,"src":"3298:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3297:16:3"},"src":"3259:55:3"},{"errorSelector":"3fe2751c","id":470,"name":"AccessManagerUnauthorizedCancel","nameLocation":"3325:31:3","nodeType":"ErrorDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"msgsender","nameLocation":"3365:9:3","nodeType":"VariableDeclaration","scope":470,"src":"3357:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"3357:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"caller","nameLocation":"3384:6:3","nodeType":"VariableDeclaration","scope":470,"src":"3376:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"3376:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"target","nameLocation":"3400:6:3","nodeType":"VariableDeclaration","scope":470,"src":"3392:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"3392:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"selector","nameLocation":"3415:8:3","nodeType":"VariableDeclaration","scope":470,"src":"3408:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":467,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3408:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3356:68:3"},"src":"3319:106:3"},{"errorSelector":"0813ada2","id":474,"name":"AccessManagerInvalidInitialAdmin","nameLocation":"3436:32:3","nodeType":"ErrorDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"initialAdmin","nameLocation":"3477:12:3","nodeType":"VariableDeclaration","scope":474,"src":"3469:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"3469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3468:22:3"},"src":"3430:61:3"},{"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3497:1373:3","text":" @dev Check if an address (`caller`) is authorised to call a given function on a given contract directly (with\n no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule}\n & {execute} workflow.\n This function is usually called by the targeted contract to control immediate execution of restricted functions.\n Therefore we only return true if the call can be performed without any delay. If the call is subject to a\n previously set delay (not zero), then the function should return false and the caller should schedule the operation\n for future execution.\n If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise\n the operation can be executed if and only if delay is greater than 0.\n NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that\n is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail\n to identify the indirect workflow, and will consider calls that require a delay to be forbidden.\n NOTE: This function does not report the permissions of this manager itself. These are defined by the\n {_canCallSelf} function instead."},"functionSelector":"b7009613","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"canCall","nameLocation":"4884:7:3","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"caller","nameLocation":"4909:6:3","nodeType":"VariableDeclaration","scope":488,"src":"4901:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"4901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"target","nameLocation":"4933:6:3","nodeType":"VariableDeclaration","scope":488,"src":"4925:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"4925:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"selector","nameLocation":"4956:8:3","nodeType":"VariableDeclaration","scope":488,"src":"4949:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":480,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4949:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4891:79:3"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"allowed","nameLocation":"4999:7:3","nodeType":"VariableDeclaration","scope":488,"src":"4994:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":483,"name":"bool","nodeType":"ElementaryTypeName","src":"4994:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"delay","nameLocation":"5015:5:3","nodeType":"VariableDeclaration","scope":488,"src":"5008:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":485,"name":"uint32","nodeType":"ElementaryTypeName","src":"5008:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4993:28:3"},"scope":744,"src":"4875:147:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"5028:252:3","text":" @dev Expiration delay for scheduled proposals. Defaults to 1 week.\n IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately,\n disabling any scheduling usage."},"functionSelector":"4665096d","id":494,"implemented":false,"kind":"function","modifiers":[],"name":"expiration","nameLocation":"5294:10:3","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"5304:2:3"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":494,"src":"5330:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":491,"name":"uint32","nodeType":"ElementaryTypeName","src":"5330:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5329:8:3"},"scope":744,"src":"5285:53:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"5344:246:3","text":" @dev Minimum setback for all delay updates, with the exception of execution delays. It\n can be increased without setback (and reset via {revokeRole} in the case event of an\n accidental increase). Defaults to 5 days."},"functionSelector":"cc1b6c81","id":500,"implemented":false,"kind":"function","modifiers":[],"name":"minSetback","nameLocation":"5604:10:3","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"5614:2:3"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"5640:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":497,"name":"uint32","nodeType":"ElementaryTypeName","src":"5640:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5639:8:3"},"scope":744,"src":"5595:53:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"5654:120:3","text":" @dev Get whether the contract is closed disabling any access. Otherwise role permissions are applied."},"functionSelector":"a166aa89","id":508,"implemented":false,"kind":"function","modifiers":[],"name":"isTargetClosed","nameLocation":"5788:14:3","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"target","nameLocation":"5811:6:3","nodeType":"VariableDeclaration","scope":508,"src":"5803:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"5803:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5802:16:3"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"5842:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"5842:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5841:6:3"},"scope":744,"src":"5779:69:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"5854:65:3","text":" @dev Get the role required to call a function."},"functionSelector":"6d5115bd","id":518,"implemented":false,"kind":"function","modifiers":[],"name":"getTargetFunctionRole","nameLocation":"5933:21:3","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"target","nameLocation":"5963:6:3","nodeType":"VariableDeclaration","scope":518,"src":"5955:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"5955:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"selector","nameLocation":"5978:8:3","nodeType":"VariableDeclaration","scope":518,"src":"5971:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":512,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5971:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"5954:33:3"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":518,"src":"6011:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":515,"name":"uint64","nodeType":"ElementaryTypeName","src":"6011:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6010:8:3"},"scope":744,"src":"5924:95:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"6025:127:3","text":" @dev Get the admin delay for a target contract. Changes to contract configuration are subject to this delay."},"functionSelector":"4c1da1e2","id":526,"implemented":false,"kind":"function","modifiers":[],"name":"getTargetAdminDelay","nameLocation":"6166:19:3","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"target","nameLocation":"6194:6:3","nodeType":"VariableDeclaration","scope":526,"src":"6186:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6185:16:3"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":526,"src":"6225:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":523,"name":"uint32","nodeType":"ElementaryTypeName","src":"6225:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6224:8:3"},"scope":744,"src":"6157:76:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"6239:265:3","text":" @dev Get the id of the role that acts as an admin for the given role.\n The admin permission is required to grant the role, revoke the role and update the execution delay to execute\n an operation that is restricted to this role."},"functionSelector":"530dd456","id":534,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"6518:12:3","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"roleId","nameLocation":"6538:6:3","nodeType":"VariableDeclaration","scope":534,"src":"6531:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":528,"name":"uint64","nodeType":"ElementaryTypeName","src":"6531:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6530:15:3"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"6569:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":531,"name":"uint64","nodeType":"ElementaryTypeName","src":"6569:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6568:8:3"},"scope":744,"src":"6509:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"6583:185:3","text":" @dev Get the role that acts as a guardian for a given role.\n The guardian permission allows canceling operations that have been scheduled under the role."},"functionSelector":"0b0a93ba","id":542,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleGuardian","nameLocation":"6782:15:3","nodeType":"FunctionDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"roleId","nameLocation":"6805:6:3","nodeType":"VariableDeclaration","scope":542,"src":"6798:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":536,"name":"uint64","nodeType":"ElementaryTypeName","src":"6798:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6797:15:3"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":542,"src":"6836:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":539,"name":"uint64","nodeType":"ElementaryTypeName","src":"6836:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6835:8:3"},"scope":744,"src":"6773:71:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"6850:286:3","text":" @dev Get the role current grant delay.\n Its value may change at any point without an event emitted following a call to {setGrantDelay}.\n Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event."},"functionSelector":"12be8727","id":550,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleGrantDelay","nameLocation":"7150:17:3","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"roleId","nameLocation":"7175:6:3","nodeType":"VariableDeclaration","scope":550,"src":"7168:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":544,"name":"uint64","nodeType":"ElementaryTypeName","src":"7168:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7167:15:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":550,"src":"7206:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":547,"name":"uint32","nodeType":"ElementaryTypeName","src":"7206:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"7205:8:3"},"scope":744,"src":"7141:73:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"7220:599:3","text":" @dev Get the access details for a given account for a given role. These details include the timepoint at which\n membership becomes active, and the delay applied to all operation by this user that requires this permission\n level.\n Returns:\n [0] Timestamp at which the account membership becomes valid. 0 means role is not granted.\n [1] Current execution delay for the account.\n [2] Pending execution delay for the account.\n [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled."},"functionSelector":"3078f114","id":566,"implemented":false,"kind":"function","modifiers":[],"name":"getAccess","nameLocation":"7833:9:3","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"roleId","nameLocation":"7850:6:3","nodeType":"VariableDeclaration","scope":566,"src":"7843:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":552,"name":"uint64","nodeType":"ElementaryTypeName","src":"7843:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"account","nameLocation":"7866:7:3","nodeType":"VariableDeclaration","scope":566,"src":"7858:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"7858:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7842:32:3"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"7898:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":557,"name":"uint48","nodeType":"ElementaryTypeName","src":"7898:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"7906:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":559,"name":"uint32","nodeType":"ElementaryTypeName","src":"7906:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"7914:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":561,"name":"uint32","nodeType":"ElementaryTypeName","src":"7914:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"7922:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":563,"name":"uint48","nodeType":"ElementaryTypeName","src":"7922:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"7897:32:3"},"scope":744,"src":"7824:106:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"7936:230:3","text":" @dev Check if a given account currently has the permission level corresponding to a given role. Note that this\n permission might be associated with an execution delay. {getAccess} can provide more details."},"functionSelector":"d1f856ee","id":578,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"8180:7:3","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"roleId","nameLocation":"8195:6:3","nodeType":"VariableDeclaration","scope":578,"src":"8188:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":568,"name":"uint64","nodeType":"ElementaryTypeName","src":"8188:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"account","nameLocation":"8211:7:3","nodeType":"VariableDeclaration","scope":578,"src":"8203:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"8203:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8187:32:3"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":578,"src":"8243:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":573,"name":"bool","nodeType":"ElementaryTypeName","src":"8243:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":578,"src":"8249:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":575,"name":"uint32","nodeType":"ElementaryTypeName","src":"8249:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8242:14:3"},"scope":744,"src":"8171:86:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"8263:208:3","text":" @dev Give a label to a role, for improved role discoverability by UIs.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleLabel} event."},"functionSelector":"853551b8","id":586,"implemented":false,"kind":"function","modifiers":[],"name":"labelRole","nameLocation":"8485:9:3","nodeType":"FunctionDefinition","parameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"roleId","nameLocation":"8502:6:3","nodeType":"VariableDeclaration","scope":586,"src":"8495:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":580,"name":"uint64","nodeType":"ElementaryTypeName","src":"8495:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"label","nameLocation":"8526:5:3","nodeType":"VariableDeclaration","scope":586,"src":"8510:21:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":582,"name":"string","nodeType":"ElementaryTypeName","src":"8510:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8494:38:3"},"returnParameters":{"id":585,"nodeType":"ParameterList","parameters":[],"src":"8541:0:3"},"scope":744,"src":"8476:66:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"8548:1222:3","text":" @dev Add `account` to `roleId`, or change its execution delay.\n This gives the account the authorization to call any function that is restricted to this role. An optional\n execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation\n that is restricted to members of this role. The user will only be able to execute the operation after the delay has\n passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}).\n If the account has already been granted this role, the execution delay will be updated. This update is not\n immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is\n called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any\n operation executed in the 3 hours that follows this update was indeed scheduled before this update.\n Requirements:\n - the caller must be an admin for the role (see {getRoleAdmin})\n - granted role must not be the `PUBLIC_ROLE`\n Emits a {RoleGranted} event."},"functionSelector":"25c471a0","id":596,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"9784:9:3","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"roleId","nameLocation":"9801:6:3","nodeType":"VariableDeclaration","scope":596,"src":"9794:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":588,"name":"uint64","nodeType":"ElementaryTypeName","src":"9794:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"account","nameLocation":"9817:7:3","nodeType":"VariableDeclaration","scope":596,"src":"9809:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"9809:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"executionDelay","nameLocation":"9833:14:3","nodeType":"VariableDeclaration","scope":596,"src":"9826:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":592,"name":"uint32","nodeType":"ElementaryTypeName","src":"9826:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9793:55:3"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"9857:0:3"},"scope":744,"src":"9775:83:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"9864:377:3","text":" @dev Remove an account from a role, with immediate effect. If the account does not have the role, this call has\n no effect.\n Requirements:\n - the caller must be an admin for the role (see {getRoleAdmin})\n - revoked role must not be the `PUBLIC_ROLE`\n Emits a {RoleRevoked} event if the account had the role."},"functionSelector":"b7d2b162","id":604,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"10255:10:3","nodeType":"FunctionDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"roleId","nameLocation":"10273:6:3","nodeType":"VariableDeclaration","scope":604,"src":"10266:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":598,"name":"uint64","nodeType":"ElementaryTypeName","src":"10266:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"account","nameLocation":"10289:7:3","nodeType":"VariableDeclaration","scope":604,"src":"10281:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"10281:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10265:32:3"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[],"src":"10306:0:3"},"scope":744,"src":"10246:61:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"10313:317:3","text":" @dev Renounce role permissions for the calling account with immediate effect. If the sender is not in\n the role this call has no effect.\n Requirements:\n - the caller must be `callerConfirmation`.\n Emits a {RoleRevoked} event if the account had the role."},"functionSelector":"fe0776f5","id":612,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"10644:12:3","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"roleId","nameLocation":"10664:6:3","nodeType":"VariableDeclaration","scope":612,"src":"10657:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":606,"name":"uint64","nodeType":"ElementaryTypeName","src":"10657:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"callerConfirmation","nameLocation":"10680:18:3","nodeType":"VariableDeclaration","scope":612,"src":"10672:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"10672:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10656:43:3"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10708:0:3"},"scope":744,"src":"10635:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"10715:184:3","text":" @dev Change admin role for a given role.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleAdminChanged} event"},"functionSelector":"30cae187","id":620,"implemented":false,"kind":"function","modifiers":[],"name":"setRoleAdmin","nameLocation":"10913:12:3","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"roleId","nameLocation":"10933:6:3","nodeType":"VariableDeclaration","scope":620,"src":"10926:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":614,"name":"uint64","nodeType":"ElementaryTypeName","src":"10926:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"admin","nameLocation":"10948:5:3","nodeType":"VariableDeclaration","scope":620,"src":"10941:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":616,"name":"uint64","nodeType":"ElementaryTypeName","src":"10941:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"10925:29:3"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"10963:0:3"},"scope":744,"src":"10904:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"10970:190:3","text":" @dev Change guardian role for a given role.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleGuardianChanged} event"},"functionSelector":"52962952","id":628,"implemented":false,"kind":"function","modifiers":[],"name":"setRoleGuardian","nameLocation":"11174:15:3","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"roleId","nameLocation":"11197:6:3","nodeType":"VariableDeclaration","scope":628,"src":"11190:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":622,"name":"uint64","nodeType":"ElementaryTypeName","src":"11190:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"guardian","nameLocation":"11212:8:3","nodeType":"VariableDeclaration","scope":628,"src":"11205:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":624,"name":"uint64","nodeType":"ElementaryTypeName","src":"11205:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11189:32:3"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"11230:0:3"},"scope":744,"src":"11165:66:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"11237:196:3","text":" @dev Update the delay for granting a `roleId`.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleGrantDelayChanged} event."},"functionSelector":"a64d95ce","id":636,"implemented":false,"kind":"function","modifiers":[],"name":"setGrantDelay","nameLocation":"11447:13:3","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"roleId","nameLocation":"11468:6:3","nodeType":"VariableDeclaration","scope":636,"src":"11461:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":630,"name":"uint64","nodeType":"ElementaryTypeName","src":"11461:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"newDelay","nameLocation":"11483:8:3","nodeType":"VariableDeclaration","scope":636,"src":"11476:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":632,"name":"uint32","nodeType":"ElementaryTypeName","src":"11476:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11460:32:3"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"11501:0:3"},"scope":744,"src":"11438:64:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"11508:267:3","text":" @dev Set the role required to call functions identified by the `selectors` in the `target` contract.\n Requirements:\n - the caller must be a global admin\n Emits a {TargetFunctionRoleUpdated} event per selector."},"functionSelector":"08d6122d","id":647,"implemented":false,"kind":"function","modifiers":[],"name":"setTargetFunctionRole","nameLocation":"11789:21:3","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"target","nameLocation":"11819:6:3","nodeType":"VariableDeclaration","scope":647,"src":"11811:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"11811:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"selectors","nameLocation":"11845:9:3","nodeType":"VariableDeclaration","scope":647,"src":"11827:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_calldata_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":640,"name":"bytes4","nodeType":"ElementaryTypeName","src":"11827:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":641,"nodeType":"ArrayTypeName","src":"11827:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"roleId","nameLocation":"11863:6:3","nodeType":"VariableDeclaration","scope":647,"src":"11856:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":643,"name":"uint64","nodeType":"ElementaryTypeName","src":"11856:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11810:60:3"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"11879:0:3"},"scope":744,"src":"11780:100:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":648,"nodeType":"StructuredDocumentation","src":"11886:229:3","text":" @dev Set the delay for changing the configuration of a given target contract.\n Requirements:\n - the caller must be a global admin\n Emits a {TargetAdminDelayUpdated} event."},"functionSelector":"d22b5989","id":655,"implemented":false,"kind":"function","modifiers":[],"name":"setTargetAdminDelay","nameLocation":"12129:19:3","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"target","nameLocation":"12157:6:3","nodeType":"VariableDeclaration","scope":655,"src":"12149:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"12149:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"newDelay","nameLocation":"12172:8:3","nodeType":"VariableDeclaration","scope":655,"src":"12165:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":651,"name":"uint32","nodeType":"ElementaryTypeName","src":"12165:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12148:33:3"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[],"src":"12190:0:3"},"scope":744,"src":"12120:71:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"12197:181:3","text":" @dev Set the closed flag for a contract.\n Requirements:\n - the caller must be a global admin\n Emits a {TargetClosed} event."},"functionSelector":"167bd395","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"setTargetClosed","nameLocation":"12392:15:3","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"target","nameLocation":"12416:6:3","nodeType":"VariableDeclaration","scope":663,"src":"12408:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"12408:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"closed","nameLocation":"12429:6:3","nodeType":"VariableDeclaration","scope":663,"src":"12424:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":659,"name":"bool","nodeType":"ElementaryTypeName","src":"12424:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12407:29:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"12445:0:3"},"scope":744,"src":"12383:63:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"12452:209:3","text":" @dev Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the\n operation is not yet scheduled, has expired, was executed, or was canceled."},"functionSelector":"3adc277a","id":671,"implemented":false,"kind":"function","modifiers":[],"name":"getSchedule","nameLocation":"12675:11:3","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"id","nameLocation":"12695:2:3","nodeType":"VariableDeclaration","scope":671,"src":"12687:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12687:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12686:12:3"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":671,"src":"12722:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":668,"name":"uint48","nodeType":"ElementaryTypeName","src":"12722:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"12721:8:3"},"scope":744,"src":"12666:64:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"12736:152:3","text":" @dev Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never\n been scheduled."},"functionSelector":"4136a33c","id":679,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"12902:8:3","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"id","nameLocation":"12919:2:3","nodeType":"VariableDeclaration","scope":679,"src":"12911:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12911:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12910:12:3"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":679,"src":"12946:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":676,"name":"uint32","nodeType":"ElementaryTypeName","src":"12946:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12945:8:3"},"scope":744,"src":"12893:61:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"12960:1068:3","text":" @dev Schedule a delayed operation for future execution, and return the operation identifier. It is possible to\n choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays\n required for the caller. The special value zero will automatically set the earliest possible time.\n Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when\n the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this\n scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}.\n Emits a {OperationScheduled} event.\n NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If\n this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target\n contract if it is using standard Solidity ABI encoding."},"functionSelector":"f801a698","id":693,"implemented":false,"kind":"function","modifiers":[],"name":"schedule","nameLocation":"14042:8:3","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"target","nameLocation":"14059:6:3","nodeType":"VariableDeclaration","scope":693,"src":"14051:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"14051:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"data","nameLocation":"14082:4:3","nodeType":"VariableDeclaration","scope":693,"src":"14067:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"14067:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"when","nameLocation":"14095:4:3","nodeType":"VariableDeclaration","scope":693,"src":"14088:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":685,"name":"uint48","nodeType":"ElementaryTypeName","src":"14088:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14050:50:3"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"14119:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14119:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"14128:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":690,"name":"uint32","nodeType":"ElementaryTypeName","src":"14128:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14118:17:3"},"scope":744,"src":"14033:103:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"14142:451:3","text":" @dev Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the\n execution delay is 0.\n Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the\n operation wasn't previously scheduled (if the caller doesn't have an execution delay).\n Emits an {OperationExecuted} event only if the call was scheduled and delayed."},"functionSelector":"1cff79cd","id":703,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"14607:7:3","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"target","nameLocation":"14623:6:3","nodeType":"VariableDeclaration","scope":703,"src":"14615:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"14615:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"data","nameLocation":"14646:4:3","nodeType":"VariableDeclaration","scope":703,"src":"14631:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":697,"name":"bytes","nodeType":"ElementaryTypeName","src":"14631:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14614:37:3"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"14678:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":700,"name":"uint32","nodeType":"ElementaryTypeName","src":"14678:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14677:8:3"},"scope":744,"src":"14598:88:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"14692:339:3","text":" @dev Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled\n operation that is cancelled.\n Requirements:\n - the caller must be the proposer, a guardian of the targeted function, or a global admin\n Emits a {OperationCanceled} event."},"functionSelector":"d6bb62c6","id":715,"implemented":false,"kind":"function","modifiers":[],"name":"cancel","nameLocation":"15045:6:3","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"caller","nameLocation":"15060:6:3","nodeType":"VariableDeclaration","scope":715,"src":"15052:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"15052:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"target","nameLocation":"15076:6:3","nodeType":"VariableDeclaration","scope":715,"src":"15068:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"15068:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"data","nameLocation":"15099:4:3","nodeType":"VariableDeclaration","scope":715,"src":"15084:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":709,"name":"bytes","nodeType":"ElementaryTypeName","src":"15084:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15051:53:3"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":715,"src":"15123:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":712,"name":"uint32","nodeType":"ElementaryTypeName","src":"15123:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15122:8:3"},"scope":744,"src":"15036:95:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"15137:434:3","text":" @dev Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed\n (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error.\n This is useful for contract that want to enforce that calls targeting them were scheduled on the manager,\n with all the verifications that it implies.\n Emit a {OperationExecuted} event."},"functionSelector":"94c7d7ee","id":723,"implemented":false,"kind":"function","modifiers":[],"name":"consumeScheduledOp","nameLocation":"15585:18:3","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"caller","nameLocation":"15612:6:3","nodeType":"VariableDeclaration","scope":723,"src":"15604:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"15604:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"data","nameLocation":"15635:4:3","nodeType":"VariableDeclaration","scope":723,"src":"15620:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":719,"name":"bytes","nodeType":"ElementaryTypeName","src":"15620:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15603:37:3"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"15649:0:3"},"scope":744,"src":"15576:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"15656:64:3","text":" @dev Hashing function for delayed operations."},"functionSelector":"abd9bd2a","id":735,"implemented":false,"kind":"function","modifiers":[],"name":"hashOperation","nameLocation":"15734:13:3","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"caller","nameLocation":"15756:6:3","nodeType":"VariableDeclaration","scope":735,"src":"15748:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"15748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"target","nameLocation":"15772:6:3","nodeType":"VariableDeclaration","scope":735,"src":"15764:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"15764:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"data","nameLocation":"15795:4:3","nodeType":"VariableDeclaration","scope":735,"src":"15780:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":729,"name":"bytes","nodeType":"ElementaryTypeName","src":"15780:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15747:53:3"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":735,"src":"15824:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15824:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15823:9:3"},"scope":744,"src":"15725:108:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":736,"nodeType":"StructuredDocumentation","src":"15839:169:3","text":" @dev Changes the authority of a target managed by this manager instance.\n Requirements:\n - the caller must be a global admin"},"functionSelector":"18ff183c","id":743,"implemented":false,"kind":"function","modifiers":[],"name":"updateAuthority","nameLocation":"16022:15:3","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"target","nameLocation":"16046:6:3","nodeType":"VariableDeclaration","scope":743,"src":"16038:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"16038:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"newAuthority","nameLocation":"16062:12:3","nodeType":"VariableDeclaration","scope":743,"src":"16054:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"16054:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16037:38:3"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"16084:0:3"},"scope":744,"src":"16013:72:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":745,"src":"246:15841:3","usedErrors":[420,424,428,432,436,440,442,448,456,460,470,474],"usedEvents":[327,334,341,348,361,368,375,382,391,398,407,416]}],"src":"117:15971:3"},"id":3},"@openzeppelin/contracts/access/manager/IAuthority.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/manager/IAuthority.sol","exportedSymbols":{"IAuthority":[760]},"id":761,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":746,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthority","contractDependencies":[],"contractKind":"interface","documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"139:83:4","text":" @dev Standard interface for permissioning originally defined in Dappsys."},"fullyImplemented":false,"id":760,"linearizedBaseContracts":[760],"name":"IAuthority","nameLocation":"233:10:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"250:121:4","text":" @dev Returns true if the caller can invoke on a target the function identified by a function selector."},"functionSelector":"b7009613","id":759,"implemented":false,"kind":"function","modifiers":[],"name":"canCall","nameLocation":"385:7:4","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"caller","nameLocation":"401:6:4","nodeType":"VariableDeclaration","scope":759,"src":"393:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"target","nameLocation":"417:6:4","nodeType":"VariableDeclaration","scope":759,"src":"409:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"selector","nameLocation":"432:8:4","nodeType":"VariableDeclaration","scope":759,"src":"425:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":753,"name":"bytes4","nodeType":"ElementaryTypeName","src":"425:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"392:49:4"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"allowed","nameLocation":"470:7:4","nodeType":"VariableDeclaration","scope":759,"src":"465:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":756,"name":"bool","nodeType":"ElementaryTypeName","src":"465:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"464:14:4"},"scope":760,"src":"376:103:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":761,"src":"223:258:4","usedErrors":[],"usedEvents":[]}],"src":"113:369:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[897],"IERC20Errors":[802],"IERC721Errors":[850]},"id":898,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":762,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":802,"linearizedBaseContracts":[802],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":772,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":772,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":772,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":772,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":777,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":777,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":782,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":782,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":791,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":791,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":791,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":791,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":796,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":796,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":801,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":801,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":898,"src":"278:1764:5","usedErrors":[772,777,782,791,796,801],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":850,"linearizedBaseContracts":[850],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":808,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":808,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":813,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":813,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":822,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":822,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":822,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":822,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":827,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":827,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":832,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":832,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":839,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":839,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":839,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":844,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":844,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":849,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":849,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":898,"src":"2186:2092:5","usedErrors":[808,813,822,827,832,839,844,849],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":897,"linearizedBaseContracts":[897],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":862,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":862,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":862,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":862,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":862,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":867,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":867,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":872,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":872,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":879,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":879,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":879,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":884,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":884,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":889,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":889,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":896,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":896,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":896,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":898,"src":"4424:2107:5","usedErrors":[862,867,872,879,884,889,896],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2793],"ERC20":[1412],"IERC20":[1490],"IERC20Errors":[802],"IERC20Metadata":[1562]},"id":1413,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":899,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1413,"sourceUnit":1491,"src":"131:36:6","symbolAliases":[{"foreign":{"id":900,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1413,"sourceUnit":1563,"src":"168:63:6","symbolAliases":[{"foreign":{"id":902,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"176:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1413,"sourceUnit":2794,"src":"232:48:6","symbolAliases":[{"foreign":{"id":904,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"240:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":907,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1413,"sourceUnit":898,"src":"281:65:6","symbolAliases":[{"foreign":{"id":906,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"289:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":909,"name":"Context","nameLocations":["1428:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"1428:7:6"},"id":910,"nodeType":"InheritanceSpecifier","src":"1428:7:6"},{"baseName":{"id":911,"name":"IERC20","nameLocations":["1437:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1490,"src":"1437:6:6"},"id":912,"nodeType":"InheritanceSpecifier","src":"1437:6:6"},{"baseName":{"id":913,"name":"IERC20Metadata","nameLocations":["1445:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1562,"src":"1445:14:6"},"id":914,"nodeType":"InheritanceSpecifier","src":"1445:14:6"},{"baseName":{"id":915,"name":"IERC20Errors","nameLocations":["1461:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1461:12:6"},"id":916,"nodeType":"InheritanceSpecifier","src":"1461:12:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"348:1052:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1412,"linearizedBaseContracts":[1412,802,1562,1490,2793],"name":"ERC20","nameLocation":"1419:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":920,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:6","nodeType":"VariableDeclaration","scope":1412,"src":"1480:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":919,"keyName":"account","keyNameLocation":"1496:7:6","keyType":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":926,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:6","nodeType":"VariableDeclaration","scope":1412,"src":"1540:83:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":925,"keyName":"account","keyNameLocation":"1556:7:6","keyType":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":924,"keyName":"spender","keyNameLocation":"1583:7:6","keyType":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":928,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:6","nodeType":"VariableDeclaration","scope":1412,"src":"1630:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":930,"mutability":"mutable","name":"_name","nameLocation":"1680:5:6","nodeType":"VariableDeclaration","scope":1412,"src":"1665:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":929,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":932,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:6","nodeType":"VariableDeclaration","scope":1412,"src":"1691:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":931,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":948,"nodeType":"Block","src":"1952:57:6","statements":[{"expression":{"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":940,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"1962:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":941,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"1970:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":943,"nodeType":"ExpressionStatement","src":"1962:13:6"},{"expression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":944,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"1985:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":945,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"1995:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":947,"nodeType":"ExpressionStatement","src":"1985:17:6"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"1720:171:6","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":949,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"name_","nameLocation":"1922:5:6","nodeType":"VariableDeclaration","scope":949,"src":"1908:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":934,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:6","nodeType":"VariableDeclaration","scope":949,"src":"1929:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":936,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:6"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"1952:0:6"},"scope":1412,"src":"1896:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1549],"body":{"id":957,"nodeType":"Block","src":"2134:29:6","statements":[{"expression":{"id":955,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"2151:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":954,"id":956,"nodeType":"Return","src":"2144:12:6"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"2015:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":958,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"2087:2:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":958,"src":"2119:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":952,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:6"},"scope":1412,"src":"2074:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1555],"body":{"id":966,"nodeType":"Block","src":"2338:31:6","statements":[{"expression":{"id":964,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"2355:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":963,"id":965,"nodeType":"Return","src":"2348:14:6"}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"2169:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":967,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:6","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"2291:2:6"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"2323:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":961,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:6"},"scope":1412,"src":"2276:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1561],"body":{"id":975,"nodeType":"Block","src":"3058:26:6","statements":[{"expression":{"hexValue":"3138","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":972,"id":974,"nodeType":"Return","src":"3068:9:6"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"2375:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":976,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:6","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"3019:2:6"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"3051:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":970,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:6"},"scope":1412,"src":"3002:82:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1439],"body":{"id":984,"nodeType":"Block","src":"3205:36:6","statements":[{"expression":{"id":982,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3222:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":981,"id":983,"nodeType":"Return","src":"3215:19:6"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"3090:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":985,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:6","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[],"src":"3164:2:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":985,"src":"3196:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:6"},"scope":1412,"src":"3144:97:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1447],"body":{"id":997,"nodeType":"Block","src":"3373:42:6","statements":[{"expression":{"baseExpression":{"id":993,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3390:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":995,"indexExpression":{"id":994,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"3400:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":992,"id":996,"nodeType":"Return","src":"3383:25:6"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"3247:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":998,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:6","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"account","nameLocation":"3326:7:6","nodeType":"VariableDeclaration","scope":998,"src":"3318:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:6"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"3364:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:6"},"scope":1412,"src":"3299:116:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1457],"body":{"id":1021,"nodeType":"Block","src":"3685:103:6","statements":[{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"owner","nameLocation":"3703:5:6","nodeType":"VariableDeclaration","scope":1021,"src":"3695:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1012,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1010,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"3711:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:6"},{"expression":{"arguments":[{"id":1014,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"3743:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1015,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"3750:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"3754:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1013,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"3733:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"ExpressionStatement","src":"3733:27:6"},{"expression":{"hexValue":"74727565","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1007,"id":1020,"nodeType":"Return","src":"3770:11:6"}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"3421:184:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:6","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"to","nameLocation":"3636:2:6","nodeType":"VariableDeclaration","scope":1022,"src":"3628:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"value","nameLocation":"3648:5:6","nodeType":"VariableDeclaration","scope":1022,"src":"3640:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:6"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1022,"src":"3679:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1005,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:6"},"scope":1412,"src":"3610:178:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1467],"body":{"id":1038,"nodeType":"Block","src":"3935:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1032,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3952:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1034,"indexExpression":{"id":1033,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"3964:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1036,"indexExpression":{"id":1035,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"3971:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1031,"id":1037,"nodeType":"Return","src":"3945:34:6"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"3794:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:6","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"owner","nameLocation":"3873:5:6","nodeType":"VariableDeclaration","scope":1039,"src":"3865:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"spender","nameLocation":"3888:7:6","nodeType":"VariableDeclaration","scope":1039,"src":"3880:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:6"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"3926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:6"},"scope":1412,"src":"3846:140:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1477],"body":{"id":1062,"nodeType":"Block","src":"4372:107:6","statements":[{"assignments":[1050],"declarations":[{"constant":false,"id":1050,"mutability":"mutable","name":"owner","nameLocation":"4390:5:6","nodeType":"VariableDeclaration","scope":1062,"src":"4382:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1053,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1051,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"4398:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:6"},{"expression":{"arguments":[{"id":1055,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4429:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1056,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"4436:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"4445:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1054,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1303,1363],"referencedDeclaration":1303,"src":"4420:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"ExpressionStatement","src":"4420:31:6"},{"expression":{"hexValue":"74727565","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1048,"id":1061,"nodeType":"Return","src":"4461:11:6"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"3992:296:6","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1063,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:6","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"spender","nameLocation":"4318:7:6","nodeType":"VariableDeclaration","scope":1063,"src":"4310:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"value","nameLocation":"4335:5:6","nodeType":"VariableDeclaration","scope":1063,"src":"4327:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:6"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1063,"src":"4366:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1046,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:6"},"scope":1412,"src":"4293:186:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1489],"body":{"id":1094,"nodeType":"Block","src":"5132:151:6","statements":[{"assignments":[1076],"declarations":[{"constant":false,"id":1076,"mutability":"mutable","name":"spender","nameLocation":"5150:7:6","nodeType":"VariableDeclaration","scope":1094,"src":"5142:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1079,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1077,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"5160:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:6"},{"expression":{"arguments":[{"id":1081,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"5198:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1082,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"5204:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"5213:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1080,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"5182:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"5182:37:6"},{"expression":{"arguments":[{"id":1087,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"5239:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"5245:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"5249:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1086,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5229:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1091,"nodeType":"ExpressionStatement","src":"5229:26:6"},{"expression":{"hexValue":"74727565","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1074,"id":1093,"nodeType":"Return","src":"5265:11:6"}]},"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"4485:549:6","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1095,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:6","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"from","nameLocation":"5069:4:6","nodeType":"VariableDeclaration","scope":1095,"src":"5061:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"to","nameLocation":"5083:2:6","nodeType":"VariableDeclaration","scope":1095,"src":"5075:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"value","nameLocation":"5095:5:6","nodeType":"VariableDeclaration","scope":1095,"src":"5087:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:6"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1095,"src":"5126:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1072,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:6"},"scope":1412,"src":"5039:244:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1141,"nodeType":"Block","src":"5725:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1105,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"5739:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:6","typeDescriptions":{}}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1119,"nodeType":"IfStatement","src":"5735:86:6","trueBody":{"id":1118,"nodeType":"Block","src":"5759:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:6","typeDescriptions":{}}},"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1111,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5780:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"RevertStatement","src":"5773:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"5834:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:6","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1134,"nodeType":"IfStatement","src":"5830:86:6","trueBody":{"id":1133,"nodeType":"Block","src":"5852:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:6","typeDescriptions":{}}},"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1126,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"5873:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"RevertStatement","src":"5866:39:6"}]}},{"expression":{"arguments":[{"id":1136,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"5933:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"5939:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5943:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1135,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"5925:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"ExpressionStatement","src":"5925:24:6"}]},"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"5289:362:6","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:6","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"from","nameLocation":"5683:4:6","nodeType":"VariableDeclaration","scope":1142,"src":"5675:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"to","nameLocation":"5697:2:6","nodeType":"VariableDeclaration","scope":1142,"src":"5689:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"value","nameLocation":"5709:5:6","nodeType":"VariableDeclaration","scope":1142,"src":"5701:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:6"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[],"src":"5725:0:6"},"scope":1412,"src":"5656:300:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1218,"nodeType":"Block","src":"6346:1032:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6360:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:6","typeDescriptions":{}}},"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1189,"nodeType":"Block","src":"6534:362:6","statements":[{"assignments":[1164],"declarations":[{"constant":false,"id":1164,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:6","nodeType":"VariableDeclaration","scope":1189,"src":"6548:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1168,"initialValue":{"baseExpression":{"id":1165,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6570:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1167,"indexExpression":{"id":1166,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6580:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1169,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"6603:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6617:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1179,"nodeType":"IfStatement","src":"6599:115:6","trueBody":{"id":1178,"nodeType":"Block","src":"6624:90:6","statements":[{"errorCall":{"arguments":[{"id":1173,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6674:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1174,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"6680:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6693:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"6649:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1177,"nodeType":"RevertStatement","src":"6642:57:6"}]}},{"id":1188,"nodeType":"UncheckedBlock","src":"6727:159:6","statements":[{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1180,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6834:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1182,"indexExpression":{"id":1181,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6844:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"6852:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6866:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"nodeType":"ExpressionStatement","src":"6834:37:6"}]}]},"id":1190,"nodeType":"IfStatement","src":"6356:540:6","trueBody":{"id":1162,"nodeType":"Block","src":"6380:148:6","statements":[{"expression":{"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1158,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"6496:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6512:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1161,"nodeType":"ExpressionStatement","src":"6496:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1191,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"6910:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:6","typeDescriptions":{}}},"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1210,"nodeType":"Block","src":"7125:206:6","statements":[{"id":1209,"nodeType":"UncheckedBlock","src":"7139:182:6","statements":[{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1203,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"7284:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1205,"indexExpression":{"id":1204,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"7294:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"7301:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"nodeType":"ExpressionStatement","src":"7284:22:6"}]}]},"id":1211,"nodeType":"IfStatement","src":"6906:425:6","trueBody":{"id":1202,"nodeType":"Block","src":"6928:191:6","statements":[{"id":1201,"nodeType":"UncheckedBlock","src":"6942:167:6","statements":[{"expression":{"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1197,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7073:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"7089:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1200,"nodeType":"ExpressionStatement","src":"7073:21:6"}]}]}},{"eventCall":{"arguments":[{"id":1213,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7355:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1214,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"7361:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"7365:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1212,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"7346:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"EmitStatement","src":"7341:30:6"}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"5962:304:6","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1219,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:6","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"from","nameLocation":"6296:4:6","nodeType":"VariableDeclaration","scope":1219,"src":"6288:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"to","nameLocation":"6310:2:6","nodeType":"VariableDeclaration","scope":1219,"src":"6302:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"value","nameLocation":"6322:5:6","nodeType":"VariableDeclaration","scope":1219,"src":"6314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:6"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"6346:0:6"},"scope":1412,"src":"6271:1107:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1251,"nodeType":"Block","src":"7777:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1227,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7791:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:6","typeDescriptions":{}}},"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1241,"nodeType":"IfStatement","src":"7787:91:6","trueBody":{"id":1240,"nodeType":"Block","src":"7814:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:6","typeDescriptions":{}}},"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1233,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"7835:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1239,"nodeType":"RevertStatement","src":"7828:39:6"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:6","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1247,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7907:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"7916:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1242,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"7887:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"ExpressionStatement","src":"7887:35:6"}]},"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"7384:332:6","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:6","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"account","nameLocation":"7744:7:6","nodeType":"VariableDeclaration","scope":1252,"src":"7736:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1224,"mutability":"mutable","name":"value","nameLocation":"7761:5:6","nodeType":"VariableDeclaration","scope":1252,"src":"7753:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:6"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[],"src":"7777:0:6"},"scope":1412,"src":"7721:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1284,"nodeType":"Block","src":"8303:150:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8317:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:6","typeDescriptions":{}}},"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1274,"nodeType":"IfStatement","src":"8313:89:6","trueBody":{"id":1273,"nodeType":"Block","src":"8340:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:6","typeDescriptions":{}}},"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1266,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8361:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1272,"nodeType":"RevertStatement","src":"8354:37:6"}]}},{"expression":{"arguments":[{"id":1276,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8419:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:6","typeDescriptions":{}}},"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8440:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1275,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"8411:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"ExpressionStatement","src":"8411:35:6"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"7935:307:6","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1285,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:6","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"account","nameLocation":"8270:7:6","nodeType":"VariableDeclaration","scope":1285,"src":"8262:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"value","nameLocation":"8287:5:6","nodeType":"VariableDeclaration","scope":1285,"src":"8279:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:6"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"8303:0:6"},"scope":1412,"src":"8247:206:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1302,"nodeType":"Block","src":"9063:54:6","statements":[{"expression":{"arguments":[{"id":1296,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"9082:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1297,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"9089:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"9098:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1295,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1303,1363],"referencedDeclaration":1363,"src":"9073:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1301,"nodeType":"ExpressionStatement","src":"9073:37:6"}]},"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"8459:525:6","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1303,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:6","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"owner","nameLocation":"9015:5:6","nodeType":"VariableDeclaration","scope":1303,"src":"9007:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"spender","nameLocation":"9030:7:6","nodeType":"VariableDeclaration","scope":1303,"src":"9022:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"value","nameLocation":"9047:5:6","nodeType":"VariableDeclaration","scope":1303,"src":"9039:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:6"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[],"src":"9063:0:6"},"scope":1412,"src":"8989:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1362,"nodeType":"Block","src":"10047:334:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"10061:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:6","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1329,"nodeType":"IfStatement","src":"10057:89:6","trueBody":{"id":1328,"nodeType":"Block","src":"10082:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:6","typeDescriptions":{}}},"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1321,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"10103:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1327,"nodeType":"RevertStatement","src":"10096:39:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"10159:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:6","typeDescriptions":{}}},"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1344,"nodeType":"IfStatement","src":"10155:90:6","trueBody":{"id":1343,"nodeType":"Block","src":"10182:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:6","typeDescriptions":{}}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1336,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"10203:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"RevertStatement","src":"10196:38:6"}]}},{"expression":{"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1345,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"10254:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1348,"indexExpression":{"id":1346,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"10266:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1349,"indexExpression":{"id":1347,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"10273:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10284:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1352,"nodeType":"ExpressionStatement","src":"10254:35:6"},{"condition":{"id":1353,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"10303:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1361,"nodeType":"IfStatement","src":"10299:76:6","trueBody":{"id":1360,"nodeType":"Block","src":"10314:61:6","statements":[{"eventCall":{"arguments":[{"id":1355,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"10342:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1356,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"10349:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10358:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1354,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10333:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1359,"nodeType":"EmitStatement","src":"10328:36:6"}]}}]},"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"9123:821:6","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1363,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:6","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"owner","nameLocation":"9975:5:6","nodeType":"VariableDeclaration","scope":1363,"src":"9967:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"spender","nameLocation":"9990:7:6","nodeType":"VariableDeclaration","scope":1363,"src":"9982:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"value","nameLocation":"10007:5:6","nodeType":"VariableDeclaration","scope":1363,"src":"9999:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:6","nodeType":"VariableDeclaration","scope":1363,"src":"10014:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:6"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"10047:0:6"},"scope":1412,"src":"9949:432:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1410,"nodeType":"Block","src":"10752:388:6","statements":[{"assignments":[1374],"declarations":[{"constant":false,"id":1374,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:6","nodeType":"VariableDeclaration","scope":1410,"src":"10762:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1379,"initialValue":{"arguments":[{"id":1376,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"10799:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"10806:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1375,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"10789:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1380,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10828:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1381,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:6","memberName":"max","nodeType":"MemberAccess","src":"10848:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1409,"nodeType":"IfStatement","src":"10824:310:6","trueBody":{"id":1408,"nodeType":"Block","src":"10867:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10885:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"10904:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"nodeType":"IfStatement","src":"10881:130:6","trueBody":{"id":1396,"nodeType":"Block","src":"10911:100:6","statements":[{"errorCall":{"arguments":[{"id":1391,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"10963:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1392,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10972:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"10990:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1390,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"10936:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"RevertStatement","src":"10929:67:6"}]}},{"id":1407,"nodeType":"UncheckedBlock","src":"11024:100:6","statements":[{"expression":{"arguments":[{"id":1399,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"11061:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1400,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11068:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"11077:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"11096:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1398,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1303,1363],"referencedDeclaration":1363,"src":"11052:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1406,"nodeType":"ExpressionStatement","src":"11052:57:6"}]}]}}]},"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"10387:271:6","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:6","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"owner","nameLocation":"10696:5:6","nodeType":"VariableDeclaration","scope":1411,"src":"10688:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"spender","nameLocation":"10711:7:6","nodeType":"VariableDeclaration","scope":1411,"src":"10703:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"value","nameLocation":"10728:5:6","nodeType":"VariableDeclaration","scope":1411,"src":"10720:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:6"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[],"src":"10752:0:6"},"scope":1412,"src":"10663:477:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1413,"src":"1401:9741:6","usedErrors":[772,777,782,791,796,801],"usedEvents":[1424,1433]}],"src":"105:11038:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1490]},"id":1491,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1414,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"132:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1490,"linearizedBaseContracts":[1490],"name":"IERC20","nameLocation":"213:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"226:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1424,"name":"Transfer","nameLocation":"395:8:7","nodeType":"EventDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:7","nodeType":"VariableDeclaration","scope":1424,"src":"404:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:7","nodeType":"VariableDeclaration","scope":1424,"src":"426:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1422,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:7","nodeType":"VariableDeclaration","scope":1424,"src":"446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:7"},"src":"389:72:7"},{"anonymous":false,"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"467:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1433,"name":"Approval","nameLocation":"626:8:7","nodeType":"EventDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:7","nodeType":"VariableDeclaration","scope":1433,"src":"635:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1429,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:7","nodeType":"VariableDeclaration","scope":1433,"src":"658:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:7","nodeType":"VariableDeclaration","scope":1433,"src":"683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:7"},"src":"620:78:7"},{"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"704:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1439,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":1490,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"835:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1447,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:7","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"account","nameLocation":"938:7:7","nodeType":"VariableDeclaration","scope":1447,"src":"930:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:7"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"970:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:7"},"scope":1490,"src":"911:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"985:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1457,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:7","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"to","nameLocation":"1229:2:7","nodeType":"VariableDeclaration","scope":1457,"src":"1221:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"value","nameLocation":"1241:5:7","nodeType":"VariableDeclaration","scope":1457,"src":"1233:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:7"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"1266:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1454,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:7"},"scope":1490,"src":"1203:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"1278:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1467,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:7","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"owner","nameLocation":"1574:5:7","nodeType":"VariableDeclaration","scope":1467,"src":"1566:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"spender","nameLocation":"1589:7:7","nodeType":"VariableDeclaration","scope":1467,"src":"1581:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:7"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1467,"src":"1621:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:7"},"scope":1490,"src":"1547:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"1636:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1477,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:7","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"spender","nameLocation":"2333:7:7","nodeType":"VariableDeclaration","scope":1477,"src":"2325:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"value","nameLocation":"2350:5:7","nodeType":"VariableDeclaration","scope":1477,"src":"2342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:7"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1477,"src":"2375:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1474,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:7"},"scope":1490,"src":"2308:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"2387:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1489,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:7","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"from","nameLocation":"2719:4:7","nodeType":"VariableDeclaration","scope":1489,"src":"2711:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1482,"mutability":"mutable","name":"to","nameLocation":"2733:2:7","nodeType":"VariableDeclaration","scope":1489,"src":"2725:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"value","nameLocation":"2745:5:7","nodeType":"VariableDeclaration","scope":1489,"src":"2737:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1483,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:7"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1489,"src":"2770:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1486,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:7"},"scope":1490,"src":"2689:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1491,"src":"203:2575:7","usedErrors":[],"usedEvents":[1424,1433]}],"src":"106:2673:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2793],"ERC20":[1412],"ERC20Burnable":[1536]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1492,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":1413,"src":"150:35:8","symbolAliases":[{"foreign":{"id":1493,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"158:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":2794,"src":"186:51:8","symbolAliases":[{"foreign":{"id":1495,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"194:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1498,"name":"Context","nameLocations":["483:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"483:7:8"},"id":1499,"nodeType":"InheritanceSpecifier","src":"483:7:8"},{"baseName":{"id":1500,"name":"ERC20","nameLocations":["492:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":1412,"src":"492:5:8"},"id":1501,"nodeType":"InheritanceSpecifier","src":"492:5:8"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"239:208:8","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1536,"linearizedBaseContracts":[1536,1412,802,1562,1490,2793],"name":"ERC20Burnable","nameLocation":"466:13:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1513,"nodeType":"Block","src":"662:43:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1508,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"678:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"692:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1507,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"672:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1512,"nodeType":"ExpressionStatement","src":"672:26:8"}]},"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"504:109:8","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:8","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"value","nameLocation":"640:5:8","nodeType":"VariableDeclaration","scope":1514,"src":"632:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:8"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[],"src":"662:0:8"},"scope":1536,"src":"618:87:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1534,"nodeType":"Block","src":"1086:93:8","statements":[{"expression":{"arguments":[{"id":1523,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1112:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1524,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"1121:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1135:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1522,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1096:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1528,"nodeType":"ExpressionStatement","src":"1096:45:8"},{"expression":{"arguments":[{"id":1530,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1157:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1166:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1529,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"1151:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"1151:21:8"}]},"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"711:305:8","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:8","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"account","nameLocation":"1047:7:8","nodeType":"VariableDeclaration","scope":1535,"src":"1039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"value","nameLocation":"1064:5:8","nodeType":"VariableDeclaration","scope":1535,"src":"1056:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:8"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"1086:0:8"},"scope":1536,"src":"1021:158:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1537,"src":"448:733:8","usedErrors":[772,777,782,791,796,801],"usedEvents":[1424,1433]}],"src":"124:1058:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1490],"IERC20Metadata":[1562]},"id":1563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1563,"sourceUnit":1491,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1539,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1542,"name":"IERC20","nameLocations":["305:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1490,"src":"305:6:9"},"id":1543,"nodeType":"InheritanceSpecifier","src":"305:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"190:86:9","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1562,"linearizedBaseContracts":[1562,1490],"name":"IERC20Metadata","nameLocation":"287:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"318:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1549,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:9","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[],"src":"390:2:9"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"416:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1546,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:9"},"scope":1562,"src":"377:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"437:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1555,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:9","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"513:2:9"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1555,"src":"539:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1552,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:9"},"scope":1562,"src":"498:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"560:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1561,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:9","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[],"src":"647:2:9"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1561,"src":"673:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1558,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:9"},"scope":1562,"src":"630:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1563,"src":"277:405:9","usedErrors":[],"usedEvents":[1424,1433]}],"src":"125:558:9"},"id":9},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2793],"ERC165":[3072],"ERC721":[2571],"IERC165":[3084],"IERC721":[2688],"IERC721Errors":[850],"IERC721Metadata":[2763],"IERC721Receiver":[2706],"Strings":[3048]},"id":2572,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1564,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2572,"sourceUnit":2689,"src":"133:38:10","symbolAliases":[{"foreign":{"id":1565,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"141:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2572,"sourceUnit":2707,"src":"172:54:10","symbolAliases":[{"foreign":{"id":1567,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"180:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1570,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2572,"sourceUnit":2764,"src":"227:65:10","symbolAliases":[{"foreign":{"id":1569,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"235:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2572,"sourceUnit":2794,"src":"293:48:10","symbolAliases":[{"foreign":{"id":1571,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"301:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2572,"sourceUnit":3049,"src":"342:48:10","symbolAliases":[{"foreign":{"id":1573,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"350:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2572,"sourceUnit":3073,"src":"391:69:10","symbolAliases":[{"foreign":{"id":1575,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"399:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1576,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"408:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2572,"sourceUnit":898,"src":"461:66:10","symbolAliases":[{"foreign":{"id":1578,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"469:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1581,"name":"Context","nameLocations":["804:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"804:7:10"},"id":1582,"nodeType":"InheritanceSpecifier","src":"804:7:10"},{"baseName":{"id":1583,"name":"ERC165","nameLocations":["813:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3072,"src":"813:6:10"},"id":1584,"nodeType":"InheritanceSpecifier","src":"813:6:10"},{"baseName":{"id":1585,"name":"IERC721","nameLocations":["821:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2688,"src":"821:7:10"},"id":1586,"nodeType":"InheritanceSpecifier","src":"821:7:10"},{"baseName":{"id":1587,"name":"IERC721Metadata","nameLocations":["830:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":2763,"src":"830:15:10"},"id":1588,"nodeType":"InheritanceSpecifier","src":"830:15:10"},{"baseName":{"id":1589,"name":"IERC721Errors","nameLocations":["847:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":850,"src":"847:13:10"},"id":1590,"nodeType":"InheritanceSpecifier","src":"847:13:10"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"529:246:10","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2571,"linearizedBaseContracts":[2571,850,2763,2688,3072,3084,2793],"name":"ERC721","nameLocation":"794:6:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1593,"libraryName":{"id":1591,"name":"Strings","nameLocations":["873:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3048,"src":"873:7:10"},"nodeType":"UsingForDirective","src":"867:26:10","typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1595,"mutability":"mutable","name":"_name","nameLocation":"932:5:10","nodeType":"VariableDeclaration","scope":2571,"src":"917:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1594,"name":"string","nodeType":"ElementaryTypeName","src":"917:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1597,"mutability":"mutable","name":"_symbol","nameLocation":"979:7:10","nodeType":"VariableDeclaration","scope":2571,"src":"964:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1596,"name":"string","nodeType":"ElementaryTypeName","src":"964:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1601,"mutability":"mutable","name":"_owners","nameLocation":"1037:7:10","nodeType":"VariableDeclaration","scope":2571,"src":"993:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1600,"keyName":"tokenId","keyNameLocation":"1009:7:10","keyType":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"993:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1605,"mutability":"mutable","name":"_balances","nameLocation":"1093:9:10","nodeType":"VariableDeclaration","scope":2571,"src":"1051:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1604,"keyName":"owner","keyNameLocation":"1067:5:10","keyType":{"id":1602,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1051:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1609,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1153:15:10","nodeType":"VariableDeclaration","scope":2571,"src":"1109:59:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1608,"keyName":"tokenId","keyNameLocation":"1125:7:10","keyType":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1109:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1615,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1243:18:10","nodeType":"VariableDeclaration","scope":2571,"src":"1175:86:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1614,"keyName":"owner","keyNameLocation":"1191:5:10","keyType":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1175:59:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1613,"keyName":"operator","keyNameLocation":"1216:8:10","keyType":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1200:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1612,"name":"bool","nodeType":"ElementaryTypeName","src":"1228:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1631,"nodeType":"Block","src":"1437:57:10","statements":[{"expression":{"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1623,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"1447:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1624,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"1455:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1447:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1626,"nodeType":"ExpressionStatement","src":"1447:13:10"},{"expression":{"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1627,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"1470:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1628,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"1480:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1470:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1630,"nodeType":"ExpressionStatement","src":"1470:17:10"}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"1268:108:10","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1632,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"name_","nameLocation":"1407:5:10","nodeType":"VariableDeclaration","scope":1632,"src":"1393:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1617,"name":"string","nodeType":"ElementaryTypeName","src":"1393:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"symbol_","nameLocation":"1428:7:10","nodeType":"VariableDeclaration","scope":1632,"src":"1414:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1619,"name":"string","nodeType":"ElementaryTypeName","src":"1414:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1392:44:10"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[],"src":"1437:0:10"},"scope":2571,"src":"1381:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3071,3083],"body":{"id":1662,"nodeType":"Block","src":"1669:192:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1698:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1645,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"1718:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2688_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2688_$","typeString":"type(contract IERC721)"}],"id":1644,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1713:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2688","typeString":"type(contract IERC721)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1727:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1713:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1698:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1649,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1754:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1651,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"1774:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2763_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2763_$","typeString":"type(contract IERC721Metadata)"}],"id":1650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1769:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2763","typeString":"type(contract IERC721Metadata)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1791:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1769:33:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1754:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:104:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1658,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1842:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1656,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1818:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2571_$","typeString":"type(contract super ERC721)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3071,"src":"1818:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:156:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1642,"id":1661,"nodeType":"Return","src":"1679:175:10"}]},"documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"1500:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1570:17:10","nodeType":"FunctionDefinition","overrides":{"id":1639,"nodeType":"OverrideSpecifier","overrides":[{"id":1637,"name":"ERC165","nameLocations":["1637:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3072,"src":"1637:6:10"},{"id":1638,"name":"IERC165","nameLocations":["1645:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3084,"src":"1645:7:10"}],"src":"1628:25:10"},"parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"interfaceId","nameLocation":"1595:11:10","nodeType":"VariableDeclaration","scope":1663,"src":"1588:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1634,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1588:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1587:20:10"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"1663:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1640,"name":"bool","nodeType":"ElementaryTypeName","src":"1663:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1662:6:10"},"scope":2571,"src":"1561:300:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2613],"body":{"id":1690,"nodeType":"Block","src":"1992:136:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2006:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2015:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:10","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1685,"nodeType":"IfStatement","src":"2002:87:10","trueBody":{"id":1684,"nodeType":"Block","src":"2027:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2067:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:10","typeDescriptions":{}}},"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1677,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2048:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"RevertStatement","src":"2041:37:10"}]}},{"expression":{"baseExpression":{"id":1686,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"2105:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1688,"indexExpression":{"id":1687,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2115:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2105:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1670,"id":1689,"nodeType":"Return","src":"2098:23:10"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"1867:48:10","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1929:9:10","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"owner","nameLocation":"1947:5:10","nodeType":"VariableDeclaration","scope":1691,"src":"1939:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1938:15:10"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"1983:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:9:10"},"scope":2571,"src":"1920:208:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2621],"body":{"id":1703,"nodeType":"Block","src":"2257:46:10","statements":[{"expression":{"arguments":[{"id":1700,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"2288:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1699,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2274:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1698,"id":1702,"nodeType":"Return","src":"2267:29:10"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"2134:46:10","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1704,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2194:7:10","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"tokenId","nameLocation":"2210:7:10","nodeType":"VariableDeclaration","scope":1704,"src":"2202:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:17:10"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1704,"src":"2248:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2247:9:10"},"scope":2571,"src":"2185:118:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2748],"body":{"id":1712,"nodeType":"Block","src":"2425:29:10","statements":[{"expression":{"id":1710,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"2442:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1709,"id":1711,"nodeType":"Return","src":"2435:12:10"}]},"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"2309:51:10","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2374:4:10","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[],"src":"2378:2:10"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"2410:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1707,"name":"string","nodeType":"ElementaryTypeName","src":"2410:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2409:15:10"},"scope":2571,"src":"2365:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2754],"body":{"id":1721,"nodeType":"Block","src":"2580:31:10","statements":[{"expression":{"id":1719,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2597:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1718,"id":1720,"nodeType":"Return","src":"2590:14:10"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"2460:53:10","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1722,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2527:6:10","nodeType":"FunctionDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[],"src":"2533:2:10"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1722,"src":"2565:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1716,"name":"string","nodeType":"ElementaryTypeName","src":"2565:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2564:15:10"},"scope":2571,"src":"2518:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2762],"body":{"id":1757,"nodeType":"Block","src":"2756:176:10","statements":[{"expression":{"arguments":[{"id":1731,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2780:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1730,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2766:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1733,"nodeType":"ExpressionStatement","src":"2766:22:10"},{"assignments":[1735],"declarations":[{"constant":false,"id":1735,"mutability":"mutable","name":"baseURI","nameLocation":"2813:7:10","nodeType":"VariableDeclaration","scope":1757,"src":"2799:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1734,"name":"string","nodeType":"ElementaryTypeName","src":"2799:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1738,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1736,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2823:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2799:34:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1741,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2856:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2850:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"2850:5:10","typeDescriptions":{}}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:6:10","memberName":"length","nodeType":"MemberAccess","src":"2850:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2874:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2850:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2923:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2850:75:10","trueExpression":{"arguments":[{"id":1749,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2892:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1750,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2901:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2909:8:10","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"2901:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2878:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1746,"name":"string","nodeType":"ElementaryTypeName","src":"2878:6:10","typeDescriptions":{}}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2878:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2878:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1729,"id":1756,"nodeType":"Return","src":"2843:82:10"}]},"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"2617:55:10","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1758,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2686:8:10","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"tokenId","nameLocation":"2703:7:10","nodeType":"VariableDeclaration","scope":1758,"src":"2695:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2695:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:17:10"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1758,"src":"2741:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1727,"name":"string","nodeType":"ElementaryTypeName","src":"2741:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2740:15:10"},"scope":2571,"src":"2677:255:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"3240:26:10","statements":[{"expression":{"hexValue":"","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1763,"id":1765,"nodeType":"Return","src":"3250:9:10"}]},"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"2938:231:10","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3183:8:10","nodeType":"FunctionDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[],"src":"3191:2:10"},"returnParameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"3225:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1761,"name":"string","nodeType":"ElementaryTypeName","src":"3225:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3224:15:10"},"scope":2571,"src":"3174:92:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2661],"body":{"id":1782,"nodeType":"Block","src":"3384:52:10","statements":[{"expression":{"arguments":[{"id":1776,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"3403:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1777,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"3407:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1778,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"3416:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1775,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2374,2440],"referencedDeclaration":2374,"src":"3394:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1781,"nodeType":"ExpressionStatement","src":"3394:35:10"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"3272:46:10","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3332:7:10","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"to","nameLocation":"3348:2:10","nodeType":"VariableDeclaration","scope":1783,"src":"3340:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"tokenId","nameLocation":"3360:7:10","nodeType":"VariableDeclaration","scope":1783,"src":"3352:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3339:29:10"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[],"src":"3384:0:10"},"scope":2571,"src":"3323:113:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2677],"body":{"id":1799,"nodeType":"Block","src":"3573:78:10","statements":[{"expression":{"arguments":[{"id":1792,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"3597:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1791,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3583:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1794,"nodeType":"ExpressionStatement","src":"3583:22:10"},{"expression":{"arguments":[{"id":1796,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"3636:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1795,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"3623:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1790,"id":1798,"nodeType":"Return","src":"3616:28:10"}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"3442:50:10","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1800,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3506:11:10","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:10","nodeType":"VariableDeclaration","scope":1800,"src":"3518:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3517:17:10"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1800,"src":"3564:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"3564:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3563:9:10"},"scope":2571,"src":"3497:154:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2669],"body":{"id":1815,"nodeType":"Block","src":"3793:69:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1809,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"3822:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1811,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"3836:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1812,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"3846:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1808,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"3803:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1814,"nodeType":"ExpressionStatement","src":"3803:52:10"}]},"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"3657:56:10","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3727:17:10","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"operator","nameLocation":"3753:8:10","nodeType":"VariableDeclaration","scope":1816,"src":"3745:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"approved","nameLocation":"3768:8:10","nodeType":"VariableDeclaration","scope":1816,"src":"3763:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1804,"name":"bool","nodeType":"ElementaryTypeName","src":"3763:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3744:33:10"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[],"src":"3793:0:10"},"scope":2571,"src":"3718:144:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2687],"body":{"id":1832,"nodeType":"Block","src":"4022:59:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1826,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"4039:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1828,"indexExpression":{"id":1827,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"4058:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1830,"indexExpression":{"id":1829,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"4065:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1825,"id":1831,"nodeType":"Return","src":"4032:42:10"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"3868:55:10","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3937:16:10","nodeType":"FunctionDefinition","parameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"owner","nameLocation":"3962:5:10","nodeType":"VariableDeclaration","scope":1833,"src":"3954:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"3954:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"operator","nameLocation":"3977:8:10","nodeType":"VariableDeclaration","scope":1833,"src":"3969:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3953:33:10"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1833,"src":"4016:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1823,"name":"bool","nodeType":"ElementaryTypeName","src":"4016:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4015:6:10"},"scope":2571,"src":"3928:153:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2653],"body":{"id":1878,"nodeType":"Block","src":"4223:498:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"4237:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:10","typeDescriptions":{}}},"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4237:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"IfStatement","src":"4233:87:10","trueBody":{"id":1856,"nodeType":"Block","src":"4255:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4298:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:10","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1849,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4276:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1855,"nodeType":"RevertStatement","src":"4269:40:10"}]}},{"assignments":[1859],"declarations":[{"constant":false,"id":1859,"mutability":"mutable","name":"previousOwner","nameLocation":"4546:13:10","nodeType":"VariableDeclaration","scope":1878,"src":"4538:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1866,"initialValue":{"arguments":[{"id":1861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"4570:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1862,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"4574:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"4583:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1860,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"4562:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4538:58:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"4610:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1868,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"4627:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4610:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1877,"nodeType":"IfStatement","src":"4606:109:10","trueBody":{"id":1876,"nodeType":"Block","src":"4633:82:10","statements":[{"errorCall":{"arguments":[{"id":1871,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"4675:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"4681:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1873,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"4690:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1870,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"4654:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1875,"nodeType":"RevertStatement","src":"4647:57:10"}]}}]},"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"4087:51:10","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4152:12:10","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"from","nameLocation":"4173:4:10","nodeType":"VariableDeclaration","scope":1879,"src":"4165:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"4165:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"to","nameLocation":"4187:2:10","nodeType":"VariableDeclaration","scope":1879,"src":"4179:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"tokenId","nameLocation":"4199:7:10","nodeType":"VariableDeclaration","scope":1879,"src":"4191:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4164:43:10"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[],"src":"4223:0:10"},"scope":2571,"src":"4143:578:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2643],"body":{"id":1896,"nodeType":"Block","src":"4863:56:10","statements":[{"expression":{"arguments":[{"id":1890,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"4890:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1891,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"4896:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1892,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"4900:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4909:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1889,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1897,1923],"referencedDeclaration":1923,"src":"4873:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1895,"nodeType":"ExpressionStatement","src":"4873:39:10"}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"4727:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4796:16:10","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"from","nameLocation":"4821:4:10","nodeType":"VariableDeclaration","scope":1897,"src":"4813:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"to","nameLocation":"4835:2:10","nodeType":"VariableDeclaration","scope":1897,"src":"4827:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"tokenId","nameLocation":"4847:7:10","nodeType":"VariableDeclaration","scope":1897,"src":"4839:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"4839:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4812:43:10"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"4863:0:10"},"scope":2571,"src":"4787:132:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2633],"body":{"id":1922,"nodeType":"Block","src":"5088:105:10","statements":[{"expression":{"arguments":[{"id":1910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"5111:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1911,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"5117:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1912,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"5121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1909,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"5098:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1914,"nodeType":"ExpressionStatement","src":"5098:31:10"},{"expression":{"arguments":[{"id":1916,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"5162:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1917,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"5168:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"5172:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1919,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5181:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1915,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"5139:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1921,"nodeType":"ExpressionStatement","src":"5139:47:10"}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"4925:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1923,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4994:16:10","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"from","nameLocation":"5019:4:10","nodeType":"VariableDeclaration","scope":1923,"src":"5011:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1899,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"to","nameLocation":"5033:2:10","nodeType":"VariableDeclaration","scope":1923,"src":"5025:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"5025:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"tokenId","nameLocation":"5045:7:10","nodeType":"VariableDeclaration","scope":1923,"src":"5037:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"5037:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"data","nameLocation":"5067:4:10","nodeType":"VariableDeclaration","scope":1923,"src":"5054:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"5054:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5010:62:10"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[],"src":"5088:0:10"},"scope":2571,"src":"4985:208:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1935,"nodeType":"Block","src":"5782:40:10","statements":[{"expression":{"baseExpression":{"id":1931,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"5799:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1933,"indexExpression":{"id":1932,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"5807:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5799:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1930,"id":1934,"nodeType":"Return","src":"5792:23:10"}]},"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"5199:503:10","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1936,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5716:8:10","nodeType":"FunctionDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"tokenId","nameLocation":"5733:7:10","nodeType":"VariableDeclaration","scope":1936,"src":"5725:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"5725:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5724:17:10"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1936,"src":"5773:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5772:9:10"},"scope":2571,"src":"5707:115:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1948,"nodeType":"Block","src":"6017:48:10","statements":[{"expression":{"baseExpression":{"id":1944,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"6034:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1946,"indexExpression":{"id":1945,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"6050:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6034:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1943,"id":1947,"nodeType":"Return","src":"6027:31:10"}]},"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"5828:105:10","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1949,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5947:12:10","nodeType":"FunctionDefinition","parameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"tokenId","nameLocation":"5968:7:10","nodeType":"VariableDeclaration","scope":1949,"src":"5960:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"5960:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5959:17:10"},"returnParameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1949,"src":"6008:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6007:9:10"},"scope":2571,"src":"5938:127:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"6485:163:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"6514:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6533:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6525:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"6525:7:10","typeDescriptions":{}}},"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6525:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6514:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1967,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"6552:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1968,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"6561:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6552:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1971,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"6589:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1972,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"6596:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1970,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"6572:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6572:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"6621:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1975,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6608:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6608:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1978,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"6633:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6608:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6551:90:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6514:127:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1960,"id":1983,"nodeType":"Return","src":"6495:146:10"}]},"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"6071:300:10","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6385:13:10","nodeType":"FunctionDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"owner","nameLocation":"6407:5:10","nodeType":"VariableDeclaration","scope":1985,"src":"6399:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"6399:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"spender","nameLocation":"6422:7:10","nodeType":"VariableDeclaration","scope":1985,"src":"6414:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"6414:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"tokenId","nameLocation":"6439:7:10","nodeType":"VariableDeclaration","scope":1985,"src":"6431:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6398:49:10"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"6479:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1958,"name":"bool","nodeType":"ElementaryTypeName","src":"6479:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6478:6:10"},"scope":2571,"src":"6376:272:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2021,"nodeType":"Block","src":"7179:271:10","statements":[{"condition":{"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7193:39:10","subExpression":{"arguments":[{"id":1996,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"7208:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1997,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"7215:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1998,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"7224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1995,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7194:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7194:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2020,"nodeType":"IfStatement","src":"7189:255:10","trueBody":{"id":2019,"nodeType":"Block","src":"7234:210:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2001,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"7252:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7261:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"7261:7:10","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7261:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7252:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2017,"nodeType":"Block","src":"7350:84:10","statements":[{"errorCall":{"arguments":[{"id":2013,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"7402:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2014,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"7411:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2012,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"7375:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2016,"nodeType":"RevertStatement","src":"7368:51:10"}]},"id":2018,"nodeType":"IfStatement","src":"7248:186:10","trueBody":{"id":2011,"nodeType":"Block","src":"7273:71:10","statements":[{"errorCall":{"arguments":[{"id":2008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2007,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7298:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2010,"nodeType":"RevertStatement","src":"7291:38:10"}]}}]}}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"6654:423:10","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7091:16:10","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"owner","nameLocation":"7116:5:10","nodeType":"VariableDeclaration","scope":2022,"src":"7108:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"spender","nameLocation":"7131:7:10","nodeType":"VariableDeclaration","scope":2022,"src":"7123:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1989,"name":"address","nodeType":"ElementaryTypeName","src":"7123:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"tokenId","nameLocation":"7148:7:10","nodeType":"VariableDeclaration","scope":2022,"src":"7140:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:49:10"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"7179:0:10"},"scope":2571,"src":"7082:368:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2037,"nodeType":"Block","src":"8167:78:10","statements":[{"id":2036,"nodeType":"UncheckedBlock","src":"8177:62:10","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2030,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"8201:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2032,"indexExpression":{"id":2031,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"8211:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8201:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8223:5:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8201:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"8201:27:10"}]}]},"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"7456:631:10","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8101:16:10","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"account","nameLocation":"8126:7:10","nodeType":"VariableDeclaration","scope":2038,"src":"8118:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"8118:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"value","nameLocation":"8143:5:10","nodeType":"VariableDeclaration","scope":2038,"src":"8135:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2026,"name":"uint128","nodeType":"ElementaryTypeName","src":"8135:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8117:32:10"},"returnParameters":{"id":2029,"nodeType":"ParameterList","parameters":[],"src":"8167:0:10"},"scope":2571,"src":"8092:153:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2127,"nodeType":"Block","src":"8933:700:10","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"from","nameLocation":"8951:4:10","nodeType":"VariableDeclaration","scope":2127,"src":"8943:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"8943:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"id":2053,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8967:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2052,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"8958:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8943:32:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9035:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9051:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9043:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"9043:7:10","typeDescriptions":{}}},"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9043:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9035:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2069,"nodeType":"IfStatement","src":"9031:86:10","trueBody":{"id":2068,"nodeType":"Block","src":"9055:62:10","statements":[{"expression":{"arguments":[{"id":2063,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9086:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2064,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9092:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2065,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"9098:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2062,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"9069:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2067,"nodeType":"ExpressionStatement","src":"9069:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2070,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9161:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9177:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9169:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"9169:7:10","typeDescriptions":{}}},"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9169:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9161:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2097,"nodeType":"IfStatement","src":"9157:256:10","trueBody":{"id":2096,"nodeType":"Block","src":"9181:232:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9286:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:10","typeDescriptions":{}}},"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2081,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"9298:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9315:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9307:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"9307:7:10","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9307:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9319:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2076,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2374,2440],"referencedDeclaration":2440,"src":"9277:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2088,"nodeType":"ExpressionStatement","src":"9277:48:10"},{"id":2095,"nodeType":"UncheckedBlock","src":"9340:63:10","statements":[{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2089,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"9368:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2091,"indexExpression":{"id":2090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9378:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9368:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9387:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9368:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"nodeType":"ExpressionStatement","src":"9368:20:10"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9427:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9441:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9433:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"9433:7:10","typeDescriptions":{}}},"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9433:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9427:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2112,"nodeType":"IfStatement","src":"9423:107:10","trueBody":{"id":2111,"nodeType":"Block","src":"9445:85:10","statements":[{"id":2110,"nodeType":"UncheckedBlock","src":"9459:61:10","statements":[{"expression":{"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2104,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"9487:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2106,"indexExpression":{"id":2105,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9497:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9487:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9504:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9487:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2109,"nodeType":"ExpressionStatement","src":"9487:18:10"}]}]}},{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2113,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"9540:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2115,"indexExpression":{"id":2114,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"9548:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9540:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9559:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9540:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2118,"nodeType":"ExpressionStatement","src":"9540:21:10"},{"eventCall":{"arguments":[{"id":2120,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9586:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2121,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9592:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2122,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"9596:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2119,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"9577:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9577:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2124,"nodeType":"EmitStatement","src":"9572:32:10"},{"expression":{"id":2125,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9622:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2049,"id":2126,"nodeType":"Return","src":"9615:11:10"}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"8251:582:10","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2128,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8847:7:10","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"to","nameLocation":"8863:2:10","nodeType":"VariableDeclaration","scope":2128,"src":"8855:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"8855:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"tokenId","nameLocation":"8875:7:10","nodeType":"VariableDeclaration","scope":2128,"src":"8867:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"auth","nameLocation":"8892:4:10","nodeType":"VariableDeclaration","scope":2128,"src":"8884:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2044,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8854:43:10"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2128,"src":"8924:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8923:9:10"},"scope":2571,"src":"8838:795:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2177,"nodeType":"Block","src":"10008:274:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"10022:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10036:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10028:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"10028:7:10","typeDescriptions":{}}},"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10022:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2150,"nodeType":"IfStatement","src":"10018:87:10","trueBody":{"id":2149,"nodeType":"Block","src":"10040:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10091:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10083:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"10083:7:10","typeDescriptions":{}}},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10083:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2142,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"10061:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10061:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2148,"nodeType":"RevertStatement","src":"10054:40:10"}]}},{"assignments":[2152],"declarations":[{"constant":false,"id":2152,"mutability":"mutable","name":"previousOwner","nameLocation":"10122:13:10","nodeType":"VariableDeclaration","scope":2177,"src":"10114:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"10114:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2161,"initialValue":{"arguments":[{"id":2154,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"10146:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2155,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"10150:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10159:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2156,"name":"address","nodeType":"ElementaryTypeName","src":"10159:7:10","typeDescriptions":{}}},"id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10159:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2153,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"10138:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10114:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2162,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"10184:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10209:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10201:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2163,"name":"address","nodeType":"ElementaryTypeName","src":"10201:7:10","typeDescriptions":{}}},"id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10201:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10184:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2176,"nodeType":"IfStatement","src":"10180:96:10","trueBody":{"id":2175,"nodeType":"Block","src":"10213:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10262:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10254:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"10254:7:10","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2168,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"10234:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2174,"nodeType":"RevertStatement","src":"10227:38:10"}]}}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"9639:311:10","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2178,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9964:5:10","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"to","nameLocation":"9978:2:10","nodeType":"VariableDeclaration","scope":2178,"src":"9970:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"9970:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"tokenId","nameLocation":"9990:7:10","nodeType":"VariableDeclaration","scope":2178,"src":"9982:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"9982:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9969:29:10"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[],"src":"10008:0:10"},"scope":2571,"src":"9955:327:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2192,"nodeType":"Block","src":"10690:43:10","statements":[{"expression":{"arguments":[{"id":2187,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"10710:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"10714:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10723:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2186,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2193,2219],"referencedDeclaration":2219,"src":"10700:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2191,"nodeType":"ExpressionStatement","src":"10700:26:10"}]},"documentation":{"id":2179,"nodeType":"StructuredDocumentation","src":"10288:340:10","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2193,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10642:9:10","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"to","nameLocation":"10660:2:10","nodeType":"VariableDeclaration","scope":2193,"src":"10652:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"10652:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"tokenId","nameLocation":"10672:7:10","nodeType":"VariableDeclaration","scope":2193,"src":"10664:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10651:29:10"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[],"src":"10690:0:10"},"scope":2571,"src":"10633:100:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"11038:98:10","statements":[{"expression":{"arguments":[{"id":2204,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"11054:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2205,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"11058:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2203,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"11048:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11048:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2207,"nodeType":"ExpressionStatement","src":"11048:18:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11099:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"11099:7:10","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2213,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"11111:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2214,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"11115:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2215,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"11124:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2208,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"11076:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11076:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2217,"nodeType":"ExpressionStatement","src":"11076:53:10"}]},"documentation":{"id":2194,"nodeType":"StructuredDocumentation","src":"10739:210:10","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10963:9:10","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"to","nameLocation":"10981:2:10","nodeType":"VariableDeclaration","scope":2219,"src":"10973:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"10973:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"tokenId","nameLocation":"10993:7:10","nodeType":"VariableDeclaration","scope":2219,"src":"10985:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"10985:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"data","nameLocation":"11015:4:10","nodeType":"VariableDeclaration","scope":2219,"src":"11002:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2199,"name":"bytes","nodeType":"ElementaryTypeName","src":"11002:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10972:48:10"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[],"src":"11038:0:10"},"scope":2571,"src":"10954:182:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2251,"nodeType":"Block","src":"11503:186:10","statements":[{"assignments":[2226],"declarations":[{"constant":false,"id":2226,"mutability":"mutable","name":"previousOwner","nameLocation":"11521:13:10","nodeType":"VariableDeclaration","scope":2251,"src":"11513:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"11513:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2238,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11545:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"11545:7:10","typeDescriptions":{}}},"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11545:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"11557:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11566:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"11566:7:10","typeDescriptions":{}}},"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11566:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2227,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"11537:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11537:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11513:64:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2239,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"11591:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11608:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"11608:7:10","typeDescriptions":{}}},"id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11608:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11591:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2250,"nodeType":"IfStatement","src":"11587:96:10","trueBody":{"id":2249,"nodeType":"Block","src":"11620:63:10","statements":[{"errorCall":{"arguments":[{"id":2246,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"11664:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2245,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"11641:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11641:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2248,"nodeType":"RevertStatement","src":"11634:38:10"}]}}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"11142:315:10","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11471:5:10","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"tokenId","nameLocation":"11485:7:10","nodeType":"VariableDeclaration","scope":2252,"src":"11477:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"11477:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11476:17:10"},"returnParameters":{"id":2224,"nodeType":"ParameterList","parameters":[],"src":"11503:0:10"},"scope":2571,"src":"11462:227:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"12084:389:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"12098:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12104:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"12104:7:10","typeDescriptions":{}}},"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12104:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12098:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2276,"nodeType":"IfStatement","src":"12094:87:10","trueBody":{"id":2275,"nodeType":"Block","src":"12116:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12167:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12159:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"12159:7:10","typeDescriptions":{}}},"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12159:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2268,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12137:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2274,"nodeType":"RevertStatement","src":"12130:40:10"}]}},{"assignments":[2278],"declarations":[{"constant":false,"id":2278,"mutability":"mutable","name":"previousOwner","nameLocation":"12198:13:10","nodeType":"VariableDeclaration","scope":2311,"src":"12190:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"12190:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2287,"initialValue":{"arguments":[{"id":2280,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"12222:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2281,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"12226:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12235:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"12235:7:10","typeDescriptions":{}}},"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2279,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"12214:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12190:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"12260:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"12277:7:10","typeDescriptions":{}}},"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12277:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12260:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2299,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"12362:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"12379:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12362:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2309,"nodeType":"IfStatement","src":"12358:109:10","trueBody":{"id":2308,"nodeType":"Block","src":"12385:82:10","statements":[{"errorCall":{"arguments":[{"id":2303,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"12427:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2304,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"12433:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2305,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"12442:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2302,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"12406:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2307,"nodeType":"RevertStatement","src":"12399:57:10"}]}},"id":2310,"nodeType":"IfStatement","src":"12256:211:10","trueBody":{"id":2298,"nodeType":"Block","src":"12289:63:10","statements":[{"errorCall":{"arguments":[{"id":2295,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"12333:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2294,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"12310:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12310:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2297,"nodeType":"RevertStatement","src":"12303:38:10"}]}}]},"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"11695:313:10","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12022:9:10","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"from","nameLocation":"12040:4:10","nodeType":"VariableDeclaration","scope":2312,"src":"12032:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"12032:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"to","nameLocation":"12054:2:10","nodeType":"VariableDeclaration","scope":2312,"src":"12046:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"12046:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"tokenId","nameLocation":"12066:7:10","nodeType":"VariableDeclaration","scope":2312,"src":"12058:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"12058:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12031:43:10"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[],"src":"12084:0:10"},"scope":2571,"src":"12013:460:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2329,"nodeType":"Block","src":"13481:53:10","statements":[{"expression":{"arguments":[{"id":2323,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13505:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2324,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"13511:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2325,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"13515:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13524:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2322,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2330,2356],"referencedDeclaration":2356,"src":"13491:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13491:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"ExpressionStatement","src":"13491:36:10"}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"12479:922:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13415:13:10","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"from","nameLocation":"13437:4:10","nodeType":"VariableDeclaration","scope":2330,"src":"13429:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"13429:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"to","nameLocation":"13451:2:10","nodeType":"VariableDeclaration","scope":2330,"src":"13443:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"tokenId","nameLocation":"13463:7:10","nodeType":"VariableDeclaration","scope":2330,"src":"13455:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"13455:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13428:43:10"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[],"src":"13481:0:10"},"scope":2571,"src":"13406:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2355,"nodeType":"Block","src":"13873:102:10","statements":[{"expression":{"arguments":[{"id":2343,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"13893:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"13899:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2345,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"13903:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2342,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"13883:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13883:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2347,"nodeType":"ExpressionStatement","src":"13883:28:10"},{"expression":{"arguments":[{"id":2349,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"13944:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2350,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"13950:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2351,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"13954:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2352,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"13963:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2348,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"13921:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2354,"nodeType":"ExpressionStatement","src":"13921:47:10"}]},"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"13540:226:10","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2356,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13780:13:10","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"from","nameLocation":"13802:4:10","nodeType":"VariableDeclaration","scope":2356,"src":"13794:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"13794:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"to","nameLocation":"13816:2:10","nodeType":"VariableDeclaration","scope":2356,"src":"13808:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"13808:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"tokenId","nameLocation":"13828:7:10","nodeType":"VariableDeclaration","scope":2356,"src":"13820:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"13820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"data","nameLocation":"13850:4:10","nodeType":"VariableDeclaration","scope":2356,"src":"13837:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2338,"name":"bytes","nodeType":"ElementaryTypeName","src":"13837:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13793:62:10"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[],"src":"13873:0:10"},"scope":2571,"src":"13771:204:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2373,"nodeType":"Block","src":"14488:50:10","statements":[{"expression":{"arguments":[{"id":2367,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"14507:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2368,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"14511:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2369,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"14520:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14526:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2366,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2374,2440],"referencedDeclaration":2440,"src":"14498:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14498:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2372,"nodeType":"ExpressionStatement","src":"14498:33:10"}]},"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"13981:432:10","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14427:8:10","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"to","nameLocation":"14444:2:10","nodeType":"VariableDeclaration","scope":2374,"src":"14436:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2358,"name":"address","nodeType":"ElementaryTypeName","src":"14436:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"tokenId","nameLocation":"14456:7:10","nodeType":"VariableDeclaration","scope":2374,"src":"14448:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"14448:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"auth","nameLocation":"14473:4:10","nodeType":"VariableDeclaration","scope":2374,"src":"14465:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"14465:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14435:43:10"},"returnParameters":{"id":2365,"nodeType":"ParameterList","parameters":[],"src":"14488:0:10"},"scope":2571,"src":"14418:120:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2439,"nodeType":"Block","src":"14814:568:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"14880:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"14893:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14909:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14901:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2388,"name":"address","nodeType":"ElementaryTypeName","src":"14901:7:10","typeDescriptions":{}}},"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14901:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14893:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14880:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"IfStatement","src":"14876:460:10","trueBody":{"id":2431,"nodeType":"Block","src":"14913:423:10","statements":[{"assignments":[2395],"declarations":[{"constant":false,"id":2395,"mutability":"mutable","name":"owner","nameLocation":"14935:5:10","nodeType":"VariableDeclaration","scope":2431,"src":"14927:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2394,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2399,"initialValue":{"arguments":[{"id":2397,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"14957:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2396,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"14943:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14943:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14927:38:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2400,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"15093:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15109:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15101:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"15101:7:10","typeDescriptions":{}}},"id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15093:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15115:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2407,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"15124:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15115:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15132:30:10","subExpression":{"arguments":[{"id":2411,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15150:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2412,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"15157:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2410,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"15133:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:69:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2421,"nodeType":"IfStatement","src":"15089:142:10","trueBody":{"id":2420,"nodeType":"Block","src":"15164:67:10","statements":[{"errorCall":{"arguments":[{"id":2417,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"15211:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2416,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"15189:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15189:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2419,"nodeType":"RevertStatement","src":"15182:34:10"}]}},{"condition":{"id":2422,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"15249:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2430,"nodeType":"IfStatement","src":"15245:81:10","trueBody":{"id":2429,"nodeType":"Block","src":"15260:66:10","statements":[{"eventCall":{"arguments":[{"id":2424,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15292:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"15299:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2426,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"15303:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2423,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"15283:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15283:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2428,"nodeType":"EmitStatement","src":"15278:33:10"}]}}]}},{"expression":{"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2433,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"15346:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2435,"indexExpression":{"id":2434,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"15362:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15346:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"15373:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15346:29:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2438,"nodeType":"ExpressionStatement","src":"15346:29:10"}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"14544:171:10","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2440,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14729:8:10","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"to","nameLocation":"14746:2:10","nodeType":"VariableDeclaration","scope":2440,"src":"14738:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"14738:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"tokenId","nameLocation":"14758:7:10","nodeType":"VariableDeclaration","scope":2440,"src":"14750:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"14750:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"auth","nameLocation":"14775:4:10","nodeType":"VariableDeclaration","scope":2440,"src":"14767:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"14767:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"emitEvent","nameLocation":"14786:9:10","nodeType":"VariableDeclaration","scope":2440,"src":"14781:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2382,"name":"bool","nodeType":"ElementaryTypeName","src":"14781:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14737:59:10"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[],"src":"14814:0:10"},"scope":2571,"src":"14720:662:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2476,"nodeType":"Block","src":"15684:219:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"15698:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15718:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"15710:7:10","typeDescriptions":{}}},"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15698:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2461,"nodeType":"IfStatement","src":"15694:91:10","trueBody":{"id":2460,"nodeType":"Block","src":"15722:63:10","statements":[{"errorCall":{"arguments":[{"id":2457,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"15765:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2456,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"15743:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15743:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2459,"nodeType":"RevertStatement","src":"15736:38:10"}]}},{"expression":{"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2462,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"15794:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2465,"indexExpression":{"id":2463,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"15813:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15794:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2466,"indexExpression":{"id":2464,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"15820:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15794:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2467,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"15832:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15794:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"ExpressionStatement","src":"15794:46:10"},{"eventCall":{"arguments":[{"id":2471,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"15870:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2472,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"15877:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2473,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"15887:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2470,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"15855:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15855:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2475,"nodeType":"EmitStatement","src":"15850:46:10"}]},"documentation":{"id":2441,"nodeType":"StructuredDocumentation","src":"15388:198:10","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2477,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15600:18:10","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"owner","nameLocation":"15627:5:10","nodeType":"VariableDeclaration","scope":2477,"src":"15619:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"15619:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"operator","nameLocation":"15642:8:10","nodeType":"VariableDeclaration","scope":2477,"src":"15634:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"15634:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"approved","nameLocation":"15657:8:10","nodeType":"VariableDeclaration","scope":2477,"src":"15652:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2446,"name":"bool","nodeType":"ElementaryTypeName","src":"15652:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15618:48:10"},"returnParameters":{"id":2449,"nodeType":"ParameterList","parameters":[],"src":"15684:0:10"},"scope":2571,"src":"15591:312:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2505,"nodeType":"Block","src":"16210:169:10","statements":[{"assignments":[2486],"declarations":[{"constant":false,"id":2486,"mutability":"mutable","name":"owner","nameLocation":"16228:5:10","nodeType":"VariableDeclaration","scope":2505,"src":"16220:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"16220:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2490,"initialValue":{"arguments":[{"id":2488,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"16245:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2487,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"16236:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16236:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16220:33:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"16267:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16284:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16276:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"16276:7:10","typeDescriptions":{}}},"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16276:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16267:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2502,"nodeType":"IfStatement","src":"16263:88:10","trueBody":{"id":2501,"nodeType":"Block","src":"16288:63:10","statements":[{"errorCall":{"arguments":[{"id":2498,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"16332:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2497,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"16309:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16309:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2500,"nodeType":"RevertStatement","src":"16302:38:10"}]}},{"expression":{"id":2503,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"16367:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2484,"id":2504,"nodeType":"Return","src":"16360:12:10"}]},"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"15909:224:10","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16147:13:10","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"tokenId","nameLocation":"16169:7:10","nodeType":"VariableDeclaration","scope":2506,"src":"16161:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"16161:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16160:17:10"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2506,"src":"16201:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"16201:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16200:9:10"},"scope":2571,"src":"16138:241:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2569,"nodeType":"Block","src":"17020:680:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"17034:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17037:4:10","memberName":"code","nodeType":"MemberAccess","src":"17034:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17042:6:10","memberName":"length","nodeType":"MemberAccess","src":"17034:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17051:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17034:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2568,"nodeType":"IfStatement","src":"17030:664:10","trueBody":{"id":2567,"nodeType":"Block","src":"17054:640:10","statements":[{"clauses":[{"block":{"id":2547,"nodeType":"Block","src":"17168:162:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"17190:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2537,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"17200:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2706_$","typeString":"type(contract IERC721Receiver)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17216:16:10","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"17200:32:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17233:8:10","memberName":"selector","nodeType":"MemberAccess","src":"17200:41:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"17190:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2546,"nodeType":"IfStatement","src":"17186:130:10","trueBody":{"id":2545,"nodeType":"Block","src":"17243:73:10","statements":[{"errorCall":{"arguments":[{"id":2542,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"17294:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2541,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"17272:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17272:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2544,"nodeType":"RevertStatement","src":"17265:32:10"}]}}]},"errorName":"","id":2548,"nodeType":"TryCatchClause","parameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"retval","nameLocation":"17160:6:10","nodeType":"VariableDeclaration","scope":2548,"src":"17153:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2533,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17153:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17152:15:10"},"src":"17144:186:10"},{"block":{"id":2564,"nodeType":"Block","src":"17359:325:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2552,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"17381:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17388:6:10","memberName":"length","nodeType":"MemberAccess","src":"17381:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17398:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17381:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2562,"nodeType":"Block","src":"17480:190:10","statements":[{"AST":{"nativeSrc":"17566:86:10","nodeType":"YulBlock","src":"17566:86:10","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17603:2:10","nodeType":"YulLiteral","src":"17603:2:10","type":"","value":"32"},{"name":"reason","nativeSrc":"17607:6:10","nodeType":"YulIdentifier","src":"17607:6:10"}],"functionName":{"name":"add","nativeSrc":"17599:3:10","nodeType":"YulIdentifier","src":"17599:3:10"},"nativeSrc":"17599:15:10","nodeType":"YulFunctionCall","src":"17599:15:10"},{"arguments":[{"name":"reason","nativeSrc":"17622:6:10","nodeType":"YulIdentifier","src":"17622:6:10"}],"functionName":{"name":"mload","nativeSrc":"17616:5:10","nodeType":"YulIdentifier","src":"17616:5:10"},"nativeSrc":"17616:13:10","nodeType":"YulFunctionCall","src":"17616:13:10"}],"functionName":{"name":"revert","nativeSrc":"17592:6:10","nodeType":"YulIdentifier","src":"17592:6:10"},"nativeSrc":"17592:38:10","nodeType":"YulFunctionCall","src":"17592:38:10"},"nativeSrc":"17592:38:10","nodeType":"YulExpressionStatement","src":"17592:38:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2550,"isOffset":false,"isSlot":false,"src":"17607:6:10","valueSize":1},{"declaration":2550,"isOffset":false,"isSlot":false,"src":"17622:6:10","valueSize":1}],"id":2561,"nodeType":"InlineAssembly","src":"17557:95:10"}]},"id":2563,"nodeType":"IfStatement","src":"17377:293:10","trueBody":{"id":2560,"nodeType":"Block","src":"17401:73:10","statements":[{"errorCall":{"arguments":[{"id":2557,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"17452:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2556,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"17430:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17430:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2559,"nodeType":"RevertStatement","src":"17423:32:10"}]}}]},"errorName":"","id":2565,"nodeType":"TryCatchClause","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"reason","nameLocation":"17351:6:10","nodeType":"VariableDeclaration","scope":2565,"src":"17338:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2549,"name":"bytes","nodeType":"ElementaryTypeName","src":"17338:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17337:21:10"},"src":"17331:353:10"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2527,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"17109:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17109:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2529,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"17123:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2530,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"17129:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2531,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"17138:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"17088:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2523,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"17072:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2706_$","typeString":"type(contract IERC721Receiver)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2706","typeString":"contract IERC721Receiver"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17092:16:10","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"17072:36:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:71:10","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2566,"nodeType":"TryStatement","src":"17068:616:10"}]}}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"16385:528:10","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"16927:22:10","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"from","nameLocation":"16958:4:10","nodeType":"VariableDeclaration","scope":2570,"src":"16950:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"16950:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"to","nameLocation":"16972:2:10","nodeType":"VariableDeclaration","scope":2570,"src":"16964:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"16964:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"tokenId","nameLocation":"16984:7:10","nodeType":"VariableDeclaration","scope":2570,"src":"16976:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"data","nameLocation":"17006:4:10","nodeType":"VariableDeclaration","scope":2570,"src":"16993:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2514,"name":"bytes","nodeType":"ElementaryTypeName","src":"16993:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16949:62:10"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[],"src":"17020:0:10"},"scope":2571,"src":"16918:782:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2572,"src":"776:16926:10","usedErrors":[808,813,822,827,832,839,844,849],"usedEvents":[2587,2596,2605]}],"src":"107:17596:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3084],"IERC721":[2688]},"id":2689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2573,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2689,"sourceUnit":3085,"src":"134:62:11","symbolAliases":[{"foreign":{"id":2574,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"142:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2577,"name":"IERC165","nameLocations":["287:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3084,"src":"287:7:11"},"id":2578,"nodeType":"InheritanceSpecifier","src":"287:7:11"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"198:67:11","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2688,"linearizedBaseContracts":[2688,3084],"name":"IERC721","nameLocation":"276:7:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"301:88:11","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2587,"name":"Transfer","nameLocation":"400:8:11","nodeType":"EventDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:11","nodeType":"VariableDeclaration","scope":2587,"src":"409:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2583,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:11","nodeType":"VariableDeclaration","scope":2587,"src":"431:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2582,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2585,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:11","nodeType":"VariableDeclaration","scope":2587,"src":"451:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:11"},"src":"394:82:11"},{"anonymous":false,"documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"482:94:11","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2596,"name":"Approval","nameLocation":"587:8:11","nodeType":"EventDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:11","nodeType":"VariableDeclaration","scope":2596,"src":"596:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2592,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:11","nodeType":"VariableDeclaration","scope":2596,"src":"619:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2594,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:11","nodeType":"VariableDeclaration","scope":2596,"src":"645:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:11"},"src":"581:89:11"},{"anonymous":false,"documentation":{"id":2597,"nodeType":"StructuredDocumentation","src":"676:117:11","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2605,"name":"ApprovalForAll","nameLocation":"804:14:11","nodeType":"EventDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:11","nodeType":"VariableDeclaration","scope":2605,"src":"819:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2598,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2601,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:11","nodeType":"VariableDeclaration","scope":2605,"src":"842:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2600,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2603,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:11","nodeType":"VariableDeclaration","scope":2605,"src":"868:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2602,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:11"},"src":"798:85:11"},{"documentation":{"id":2606,"nodeType":"StructuredDocumentation","src":"889:76:11","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2613,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:11","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"owner","nameLocation":"997:5:11","nodeType":"VariableDeclaration","scope":2613,"src":"989:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2607,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:11"},"returnParameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"balance","nameLocation":"1035:7:11","nodeType":"VariableDeclaration","scope":2613,"src":"1027:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:11"},"scope":2688,"src":"970:74:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"1050:131:11","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2621,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:11","nodeType":"FunctionDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:11","nodeType":"VariableDeclaration","scope":2621,"src":"1203:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:11"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"owner","nameLocation":"1251:5:11","nodeType":"VariableDeclaration","scope":2621,"src":"1243:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:11"},"scope":2688,"src":"1186:72:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"1264:565:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2633,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:11","nodeType":"FunctionDefinition","parameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"from","nameLocation":"1868:4:11","nodeType":"VariableDeclaration","scope":2633,"src":"1860:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"to","nameLocation":"1882:2:11","nodeType":"VariableDeclaration","scope":2633,"src":"1874:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2625,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2628,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:11","nodeType":"VariableDeclaration","scope":2633,"src":"1886:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"data","nameLocation":"1918:4:11","nodeType":"VariableDeclaration","scope":2633,"src":"1903:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2629,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:11"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[],"src":"1932:0:11"},"scope":2688,"src":"1834:99:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"1939:705:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2643,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:11","nodeType":"FunctionDefinition","parameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"from","nameLocation":"2683:4:11","nodeType":"VariableDeclaration","scope":2643,"src":"2675:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"to","nameLocation":"2697:2:11","nodeType":"VariableDeclaration","scope":2643,"src":"2689:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:11","nodeType":"VariableDeclaration","scope":2643,"src":"2701:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:11"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[],"src":"2726:0:11"},"scope":2688,"src":"2649:78:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2644,"nodeType":"StructuredDocumentation","src":"2733:732:11","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2653,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:11","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"from","nameLocation":"3500:4:11","nodeType":"VariableDeclaration","scope":2653,"src":"3492:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2645,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"to","nameLocation":"3514:2:11","nodeType":"VariableDeclaration","scope":2653,"src":"3506:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:11","nodeType":"VariableDeclaration","scope":2653,"src":"3518:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:11"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[],"src":"3543:0:11"},"scope":2688,"src":"3470:74:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"3550:452:11","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2661,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:11","nodeType":"FunctionDefinition","parameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"to","nameLocation":"4032:2:11","nodeType":"VariableDeclaration","scope":2661,"src":"4024:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2658,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:11","nodeType":"VariableDeclaration","scope":2661,"src":"4036:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:11"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[],"src":"4061:0:11"},"scope":2688,"src":"4007:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"4068:315:11","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2669,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:11","nodeType":"FunctionDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"operator","nameLocation":"4423:8:11","nodeType":"VariableDeclaration","scope":2669,"src":"4415:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"approved","nameLocation":"4438:8:11","nodeType":"VariableDeclaration","scope":2669,"src":"4433:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2665,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:11"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[],"src":"4456:0:11"},"scope":2688,"src":"4388:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"4463:139:11","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2677,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:11","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:11","nodeType":"VariableDeclaration","scope":2677,"src":"4628:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:11"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"operator","nameLocation":"4676:8:11","nodeType":"VariableDeclaration","scope":2677,"src":"4668:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:11"},"scope":2688,"src":"4607:79:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2678,"nodeType":"StructuredDocumentation","src":"4692:138:11","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2687,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:11","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"owner","nameLocation":"4869:5:11","nodeType":"VariableDeclaration","scope":2687,"src":"4861:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2679,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"operator","nameLocation":"4884:8:11","nodeType":"VariableDeclaration","scope":2687,"src":"4876:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:11"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2687,"src":"4917:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2684,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:11"},"scope":2688,"src":"4835:88:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2689,"src":"266:4659:11","usedErrors":[],"usedEvents":[2587,2596,2605]}],"src":"108:4818:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2706]},"id":2707,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2690,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"142:152:12","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2706,"linearizedBaseContracts":[2706],"name":"IERC721Receiver","nameLocation":"305:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"327:500:12","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2705,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"841:16:12","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"operator","nameLocation":"875:8:12","nodeType":"VariableDeclaration","scope":2705,"src":"867:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"from","nameLocation":"901:4:12","nodeType":"VariableDeclaration","scope":2705,"src":"893:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"tokenId","nameLocation":"923:7:12","nodeType":"VariableDeclaration","scope":2705,"src":"915:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"data","nameLocation":"955:4:12","nodeType":"VariableDeclaration","scope":2705,"src":"940:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2699,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"857:108:12"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2705,"src":"984:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2702,"name":"bytes4","nodeType":"ElementaryTypeName","src":"984:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"983:8:12"},"scope":2706,"src":"832:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2707,"src":"295:699:12","usedErrors":[],"usedEvents":[]}],"src":"116:879:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","exportedSymbols":{"Context":[2793],"ERC721":[2571],"ERC721Burnable":[2735]},"id":2736,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2708,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2710,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2736,"sourceUnit":2572,"src":"152:37:13","symbolAliases":[{"foreign":{"id":2709,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"160:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":2712,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2736,"sourceUnit":2794,"src":"190:51:13","symbolAliases":[{"foreign":{"id":2711,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"198:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2714,"name":"Context","nameLocations":["372:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"372:7:13"},"id":2715,"nodeType":"InheritanceSpecifier","src":"372:7:13"},{"baseName":{"id":2716,"name":"ERC721","nameLocations":["381:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2571,"src":"381:6:13"},"id":2717,"nodeType":"InheritanceSpecifier","src":"381:6:13"}],"canonicalName":"ERC721Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2713,"nodeType":"StructuredDocumentation","src":"243:92:13","text":" @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."},"fullyImplemented":true,"id":2735,"linearizedBaseContracts":[2735,2571,850,2763,2688,3072,3084,2793],"name":"ERC721Burnable","nameLocation":"354:14:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2733,"nodeType":"Block","src":"607:268:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"842:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"834:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:13","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"834:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2728,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"846:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2729,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"855:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"855:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2723,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"826:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"826:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2732,"nodeType":"ExpressionStatement","src":"826:42:13"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"394:162:13","text":" @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."},"functionSelector":"42966c68","id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"570:4:13","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"tokenId","nameLocation":"583:7:13","nodeType":"VariableDeclaration","scope":2734,"src":"575:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"574:17:13"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"607:0:13"},"scope":2735,"src":"561:314:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2736,"src":"336:541:13","usedErrors":[808,813,822,827,832,839,844,849],"usedEvents":[2587,2596,2605]}],"src":"126:752:13"},"id":13},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2688],"IERC721Metadata":[2763]},"id":2764,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2737,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2739,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2764,"sourceUnit":2689,"src":"153:39:14","symbolAliases":[{"foreign":{"id":2738,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"161:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2741,"name":"IERC721","nameLocations":["357:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2688,"src":"357:7:14"},"id":2742,"nodeType":"InheritanceSpecifier","src":"357:7:14"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2740,"nodeType":"StructuredDocumentation","src":"194:133:14","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2763,"linearizedBaseContracts":[2763,2688,3084],"name":"IERC721Metadata","nameLocation":"338:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"371:58:14","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2748,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:14","nodeType":"FunctionDefinition","parameters":{"id":2744,"nodeType":"ParameterList","parameters":[],"src":"447:2:14"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2748,"src":"473:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2745,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:14"},"scope":2763,"src":"434:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2749,"nodeType":"StructuredDocumentation","src":"494:60:14","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2754,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:14","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[],"src":"574:2:14"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2754,"src":"600:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2751,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:14"},"scope":2763,"src":"559:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"621:90:14","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2762,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:14","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:14","nodeType":"VariableDeclaration","scope":2762,"src":"734:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:14"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2762,"src":"774:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2759,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:14"},"scope":2763,"src":"716:73:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2764,"src":"328:463:14","usedErrors":[],"usedEvents":[2587,2596,2605]}],"src":"127:665:14"},"id":14},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2793]},"id":2794,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2765,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"127:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2793,"linearizedBaseContracts":[2793],"name":"Context","nameLocation":"642:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2774,"nodeType":"Block","src":"718:34:15","statements":[{"expression":{"expression":{"id":2771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:15","memberName":"sender","nodeType":"MemberAccess","src":"735:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2770,"id":2773,"nodeType":"Return","src":"728:17:15"}]},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:15","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[],"src":"675:2:15"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"709:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:15"},"scope":2793,"src":"656:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2783,"nodeType":"Block","src":"825:32:15","statements":[{"expression":{"expression":{"id":2780,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:15","memberName":"data","nodeType":"MemberAccess","src":"842:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2779,"id":2782,"nodeType":"Return","src":"835:15:15"}]},"id":2784,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:15","nodeType":"FunctionDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[],"src":"775:2:15"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2784,"src":"809:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2777,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:15"},"scope":2793,"src":"758:99:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2791,"nodeType":"Block","src":"935:25:15","statements":[{"expression":{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2788,"id":2790,"nodeType":"Return","src":"945:8:15"}]},"id":2792,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:15","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[],"src":"892:2:15"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2792,"src":"926:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:15"},"scope":2793,"src":"863:97:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2794,"src":"624:338:15","usedErrors":[],"usedEvents":[]}],"src":"101:862:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4138],"SignedMath":[5998],"Strings":[3048]},"id":3049,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2795,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3049,"sourceUnit":4139,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2796,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2799,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3049,"sourceUnit":5999,"src":"165:49:16","symbolAliases":[{"foreign":{"id":2798,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"173:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"216:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3048,"linearizedBaseContracts":[3048],"name":"Strings","nameLocation":"259:7:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2803,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:16","nodeType":"VariableDeclaration","scope":3048,"src":"273:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2801,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2806,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:16","nodeType":"VariableDeclaration","scope":3048,"src":"335:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2804,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"384:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2813,"name":"StringsInsufficientHexLength","nameLocation":"476:28:16","nodeType":"ErrorDefinition","parameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"value","nameLocation":"513:5:16","nodeType":"VariableDeclaration","scope":2813,"src":"505:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2811,"mutability":"mutable","name":"length","nameLocation":"528:6:16","nodeType":"VariableDeclaration","scope":2813,"src":"520:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:16"},"src":"470:66:16"},{"body":{"id":2860,"nodeType":"Block","src":"708:627:16","statements":[{"id":2859,"nodeType":"UncheckedBlock","src":"718:611:16","statements":[{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"length","nameLocation":"750:6:16","nodeType":"VariableDeclaration","scope":2859,"src":"742:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2829,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"770:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2823,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"759:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4138_$","typeString":"type(library Math)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3958,"src":"759:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:16"},{"assignments":[2831],"declarations":[{"constant":false,"id":2831,"mutability":"mutable","name":"buffer","nameLocation":"808:6:16","nodeType":"VariableDeclaration","scope":2859,"src":"794:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2830,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2836,"initialValue":{"arguments":[{"id":2834,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"828:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2832,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:16"},{"assignments":[2838],"declarations":[{"constant":false,"id":2838,"mutability":"mutable","name":"ptr","nameLocation":"857:3:16","nodeType":"VariableDeclaration","scope":2859,"src":"849:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2839,"nodeType":"VariableDeclarationStatement","src":"849:11:16"},{"AST":{"nativeSrc":"930:67:16","nodeType":"YulBlock","src":"930:67:16","statements":[{"nativeSrc":"948:35:16","nodeType":"YulAssignment","src":"948:35:16","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:16","nodeType":"YulIdentifier","src":"959:6:16"},{"arguments":[{"kind":"number","nativeSrc":"971:2:16","nodeType":"YulLiteral","src":"971:2:16","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:16","nodeType":"YulIdentifier","src":"975:6:16"}],"functionName":{"name":"add","nativeSrc":"967:3:16","nodeType":"YulIdentifier","src":"967:3:16"},"nativeSrc":"967:15:16","nodeType":"YulFunctionCall","src":"967:15:16"}],"functionName":{"name":"add","nativeSrc":"955:3:16","nodeType":"YulIdentifier","src":"955:3:16"},"nativeSrc":"955:28:16","nodeType":"YulFunctionCall","src":"955:28:16"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:16","nodeType":"YulIdentifier","src":"948:3:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2831,"isOffset":false,"isSlot":false,"src":"959:6:16","valueSize":1},{"declaration":2822,"isOffset":false,"isSlot":false,"src":"975:6:16","valueSize":1},{"declaration":2838,"isOffset":false,"isSlot":false,"src":"948:3:16","valueSize":1}],"id":2840,"nodeType":"InlineAssembly","src":"921:76:16"},{"body":{"id":2855,"nodeType":"Block","src":"1023:269:16","statements":[{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:16","subExpression":{"id":2842,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"1041:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"1041:5:16"},{"AST":{"nativeSrc":"1124:86:16","nodeType":"YulBlock","src":"1124:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:16","nodeType":"YulIdentifier","src":"1154:3:16"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:16","nodeType":"YulIdentifier","src":"1168:5:16"},{"kind":"number","nativeSrc":"1175:2:16","nodeType":"YulLiteral","src":"1175:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:16","nodeType":"YulIdentifier","src":"1164:3:16"},"nativeSrc":"1164:14:16","nodeType":"YulFunctionCall","src":"1164:14:16"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:16","nodeType":"YulIdentifier","src":"1180:10:16"}],"functionName":{"name":"byte","nativeSrc":"1159:4:16","nodeType":"YulIdentifier","src":"1159:4:16"},"nativeSrc":"1159:32:16","nodeType":"YulFunctionCall","src":"1159:32:16"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:16","nodeType":"YulIdentifier","src":"1146:7:16"},"nativeSrc":"1146:46:16","nodeType":"YulFunctionCall","src":"1146:46:16"},"nativeSrc":"1146:46:16","nodeType":"YulExpressionStatement","src":"1146:46:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2803,"isOffset":false,"isSlot":false,"src":"1180:10:16","valueSize":1},{"declaration":2838,"isOffset":false,"isSlot":false,"src":"1154:3:16","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"1168:5:16","valueSize":1}],"id":2845,"nodeType":"InlineAssembly","src":"1115:95:16"},{"expression":{"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"1227:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2849,"nodeType":"ExpressionStatement","src":"1227:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"1260:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2854,"nodeType":"IfStatement","src":"1256:21:16","trueBody":{"id":2853,"nodeType":"Break","src":"1272:5:16"}}]},"condition":{"hexValue":"74727565","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2856,"nodeType":"WhileStatement","src":"1010:282:16"},{"expression":{"id":2857,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"1312:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2820,"id":2858,"nodeType":"Return","src":"1305:13:16"}]}]},"documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"542:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2861,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:16","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"value","nameLocation":"663:5:16","nodeType":"VariableDeclaration","scope":2861,"src":"655:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:16"},"returnParameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2861,"src":"693:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2818,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:16"},"scope":3048,"src":"637:698:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2886,"nodeType":"Block","src":"1511:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"1542:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:16","trueExpression":{"hexValue":"2d","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"1588:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2879,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"1573:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5998_$","typeString":"type(library SignedMath)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5997,"src":"1573:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2878,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"1564:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2869,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:16","typeDescriptions":{}}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:16","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2868,"id":2885,"nodeType":"Return","src":"1521:75:16"}]},"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"1341:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2887,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:16","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"value","nameLocation":"1466:5:16","nodeType":"VariableDeclaration","scope":2887,"src":"1459:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2863,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:16"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2887,"src":"1496:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2866,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:16"},"scope":3048,"src":"1435:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2906,"nodeType":"Block","src":"1782:100:16","statements":[{"id":2905,"nodeType":"UncheckedBlock","src":"1792:84:16","statements":[{"expression":{"arguments":[{"id":2896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"1835:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"1854:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2897,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"1842:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4138_$","typeString":"type(library Math)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4080,"src":"1842:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2895,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2907,2990,3010],"referencedDeclaration":2990,"src":"1823:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2894,"id":2904,"nodeType":"Return","src":"1816:49:16"}]}]},"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"1609:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2907,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:16","nodeType":"FunctionDefinition","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"value","nameLocation":"1737:5:16","nodeType":"VariableDeclaration","scope":2907,"src":"1729:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:16"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2907,"src":"1767:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2892,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:16"},"scope":3048,"src":"1708:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2989,"nodeType":"Block","src":"2095:435:16","statements":[{"assignments":[2918],"declarations":[{"constant":false,"id":2918,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:16","nodeType":"VariableDeclaration","scope":2989,"src":"2105:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2920,"initialValue":{"id":2919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2126:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:16"},{"assignments":[2922],"declarations":[{"constant":false,"id":2922,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:16","nodeType":"VariableDeclaration","scope":2989,"src":"2141:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2921,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2931,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2926,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2177:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2923,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:16"},{"expression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2932,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2198:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2934,"indexExpression":{"hexValue":"30","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2937,"nodeType":"ExpressionStatement","src":"2198:15:16"},{"expression":{"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2938,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2223:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2940,"indexExpression":{"hexValue":"31","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2943,"nodeType":"ExpressionStatement","src":"2223:15:16"},{"body":{"id":2972,"nodeType":"Block","src":"2293:95:16","statements":[{"expression":{"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2958,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2307:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2960,"indexExpression":{"id":2959,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"2314:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2961,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"2319:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2965,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2330:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2967,"nodeType":"ExpressionStatement","src":"2307:40:16"},{"expression":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2968,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2361:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ExpressionStatement","src":"2361:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2952,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"2281:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2973,"initializationExpression":{"assignments":[2945],"declarations":[{"constant":false,"id":2945,"mutability":"mutable","name":"i","nameLocation":"2261:1:16","nodeType":"VariableDeclaration","scope":2973,"src":"2253:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2951,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2947,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2269:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:16","subExpression":{"id":2955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"2290:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2957,"nodeType":"ExpressionStatement","src":"2288:3:16"},"nodeType":"ForStatement","src":"2248:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2401:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2983,"nodeType":"IfStatement","src":"2397:96:16","trueBody":{"id":2982,"nodeType":"Block","src":"2418:75:16","statements":[{"errorCall":{"arguments":[{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2468:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2979,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2475:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2439:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2981,"nodeType":"RevertStatement","src":"2432:50:16"}]}},{"expression":{"arguments":[{"id":2986,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2516:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2984,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:16","typeDescriptions":{}}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2916,"id":2988,"nodeType":"Return","src":"2502:21:16"}]},"documentation":{"id":2908,"nodeType":"StructuredDocumentation","src":"1888:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:16","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"value","nameLocation":"2034:5:16","nodeType":"VariableDeclaration","scope":2990,"src":"2026:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"length","nameLocation":"2049:6:16","nodeType":"VariableDeclaration","scope":2990,"src":"2041:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:16"},"returnParameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"2080:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2914,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:16"},"scope":3048,"src":"2005:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3009,"nodeType":"Block","src":"2762:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3003,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2807:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3001,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:16","typeDescriptions":{}}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:16","typeDescriptions":{}}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3006,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"2815:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2998,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2907,2990,3010],"referencedDeclaration":2990,"src":"2779:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2997,"id":3008,"nodeType":"Return","src":"2772:58:16"}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"2536:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:16","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"addr","nameLocation":"2718:4:16","nodeType":"VariableDeclaration","scope":3010,"src":"2710:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:16"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3010,"src":"2747:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2995,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:16"},"scope":3048,"src":"2689:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3046,"nodeType":"Block","src":"2992:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3022,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"3015:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3020,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:16","typeDescriptions":{}}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:16","memberName":"length","nodeType":"MemberAccess","src":"3009:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3034:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3025,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:16","typeDescriptions":{}}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:16","memberName":"length","nodeType":"MemberAccess","src":"3028:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"3063:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3032,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:16","typeDescriptions":{}}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3031,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3040,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3086:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3038,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:16","typeDescriptions":{}}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3037,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3019,"id":3045,"nodeType":"Return","src":"3002:87:16"}]},"documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"2843:66:16","text":" @dev Returns true if the two strings are equal."},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:16","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"a","nameLocation":"2943:1:16","nodeType":"VariableDeclaration","scope":3047,"src":"2929:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3012,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"b","nameLocation":"2960:1:16","nodeType":"VariableDeclaration","scope":3047,"src":"2946:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3014,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:16"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"2986:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3017,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:16"},"scope":3048,"src":"2914:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3049,"src":"251:2847:16","usedErrors":[2813],"usedEvents":[]}],"src":"101:2998:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3072],"IERC165":[3084]},"id":3073,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3050,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3052,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3073,"sourceUnit":3085,"src":"140:38:17","symbolAliases":[{"foreign":{"id":3051,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"148:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3054,"name":"IERC165","nameLocations":["687:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3084,"src":"687:7:17"},"id":3055,"nodeType":"InheritanceSpecifier","src":"687:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"180:478:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3072,"linearizedBaseContracts":[3072,3084],"name":"ERC165","nameLocation":"677:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3083],"body":{"id":3070,"nodeType":"Block","src":"844:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"861:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3065,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"881:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3084_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3084_$","typeString":"type(contract IERC165)"}],"id":3064,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3084","typeString":"type(contract IERC165)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:17","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3062,"id":3069,"nodeType":"Return","src":"854:47:17"}]},"documentation":{"id":3056,"nodeType":"StructuredDocumentation","src":"701:56:17","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3071,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:17","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:17","nodeType":"VariableDeclaration","scope":3071,"src":"789:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3057,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:17"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3071,"src":"838:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3060,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:17"},"scope":3072,"src":"762:146:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3073,"src":"659:251:17","usedErrors":[],"usedEvents":[]}],"src":"114:797:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3084]},"id":3085,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3074,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"141:279:18","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3084,"linearizedBaseContracts":[3084],"name":"IERC165","nameLocation":"431:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3076,"nodeType":"StructuredDocumentation","src":"445:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3083,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:18","nodeType":"FunctionDefinition","parameters":{"id":3079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:18","nodeType":"VariableDeclaration","scope":3083,"src":"817:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3077,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:18"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3083,"src":"860:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3080,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:18"},"scope":3084,"src":"790:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3085,"src":"421:447:18","usedErrors":[],"usedEvents":[]}],"src":"115:754:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4138]},"id":4139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3086,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3087,"nodeType":"StructuredDocumentation","src":"129:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4138,"linearizedBaseContracts":[4138],"name":"Math","nameLocation":"211:4:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"222:50:19","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3090,"name":"MathOverflowedMulDiv","nameLocation":"283:20:19","nodeType":"ErrorDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[],"src":"303:2:19"},"src":"277:29:19"},{"canonicalName":"Math.Rounding","id":3095,"members":[{"id":3091,"name":"Floor","nameLocation":"336:5:19","nodeType":"EnumValue","src":"336:5:19"},{"id":3092,"name":"Ceil","nameLocation":"379:4:19","nodeType":"EnumValue","src":"379:4:19"},{"id":3093,"name":"Trunc","nameLocation":"421:5:19","nodeType":"EnumValue","src":"421:5:19"},{"id":3094,"name":"Expand","nameLocation":"451:6:19","nodeType":"EnumValue","src":"451:6:19"}],"name":"Rounding","nameLocation":"317:8:19","nodeType":"EnumDefinition","src":"312:169:19"},{"body":{"id":3126,"nodeType":"Block","src":"661:140:19","statements":[{"id":3125,"nodeType":"UncheckedBlock","src":"671:124:19","statements":[{"assignments":[3108],"declarations":[{"constant":false,"id":3108,"mutability":"mutable","name":"c","nameLocation":"703:1:19","nodeType":"VariableDeclaration","scope":3125,"src":"695:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3112,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"707:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3110,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"711:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3113,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"730:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3114,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"734:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"nodeType":"IfStatement","src":"726:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3106,"id":3119,"nodeType":"Return","src":"737:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3122,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"782:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3106,"id":3124,"nodeType":"Return","src":"768:16:19"}]}]},"documentation":{"id":3096,"nodeType":"StructuredDocumentation","src":"487:93:19","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3127,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:19","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"a","nameLocation":"609:1:19","nodeType":"VariableDeclaration","scope":3127,"src":"601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":3127,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:19"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"646:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3102,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"652:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:19"},"scope":4138,"src":"585:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3154,"nodeType":"Block","src":"984:113:19","statements":[{"id":3153,"nodeType":"UncheckedBlock","src":"994:97:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"1022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"1026:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3146,"nodeType":"IfStatement","src":"1018:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3138,"id":3145,"nodeType":"Return","src":"1029:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"1074:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3149,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"1078:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3138,"id":3152,"nodeType":"Return","src":"1060:20:19"}]}]},"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"807:96:19","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:19","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"a","nameLocation":"932:1:19","nodeType":"VariableDeclaration","scope":3155,"src":"924:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3129,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"b","nameLocation":"943:1:19","nodeType":"VariableDeclaration","scope":3155,"src":"935:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:19"},"returnParameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"969:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3134,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"975:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:19"},"scope":4138,"src":"908:189:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3196,"nodeType":"Block","src":"1283:417:19","statements":[{"id":3195,"nodeType":"UncheckedBlock","src":"1293:401:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"1551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3174,"nodeType":"IfStatement","src":"1547:28:19","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3166,"id":3173,"nodeType":"Return","src":"1559:16:19"}},{"assignments":[3176],"declarations":[{"constant":false,"id":3176,"mutability":"mutable","name":"c","nameLocation":"1597:1:19","nodeType":"VariableDeclaration","scope":3195,"src":"1589:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3180,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"1601:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"1605:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"1624:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3182,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"1628:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3184,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"1633:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3190,"nodeType":"IfStatement","src":"1620:33:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3166,"id":3189,"nodeType":"Return","src":"1636:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3192,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"1681:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3166,"id":3194,"nodeType":"Return","src":"1667:16:19"}]}]},"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"1103:99:19","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3197,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:19","nodeType":"FunctionDefinition","parameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"a","nameLocation":"1231:1:19","nodeType":"VariableDeclaration","scope":3197,"src":"1223:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"b","nameLocation":"1242:1:19","nodeType":"VariableDeclaration","scope":3197,"src":"1234:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:19"},"returnParameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3197,"src":"1268:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3162,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3197,"src":"1274:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:19"},"scope":4138,"src":"1207:493:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3224,"nodeType":"Block","src":"1887:114:19","statements":[{"id":3223,"nodeType":"UncheckedBlock","src":"1897:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1925:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"nodeType":"IfStatement","src":"1921:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3208,"id":3215,"nodeType":"Return","src":"1933:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"1978:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3219,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1982:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3208,"id":3222,"nodeType":"Return","src":"1964:20:19"}]}]},"documentation":{"id":3198,"nodeType":"StructuredDocumentation","src":"1706:100:19","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3225,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:19","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"mutability":"mutable","name":"a","nameLocation":"1835:1:19","nodeType":"VariableDeclaration","scope":3225,"src":"1827:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3202,"mutability":"mutable","name":"b","nameLocation":"1846:1:19","nodeType":"VariableDeclaration","scope":3225,"src":"1838:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:19"},"returnParameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3225,"src":"1872:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3204,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3225,"src":"1878:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:19"},"scope":4138,"src":"1811:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3252,"nodeType":"Block","src":"2198:114:19","statements":[{"id":3251,"nodeType":"UncheckedBlock","src":"2208:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"2236:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3244,"nodeType":"IfStatement","src":"2232:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3236,"id":3243,"nodeType":"Return","src":"2244:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"2289:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"2293:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3236,"id":3250,"nodeType":"Return","src":"2275:20:19"}]}]},"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"2007:110:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3253,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:19","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"a","nameLocation":"2146:1:19","nodeType":"VariableDeclaration","scope":3253,"src":"2138:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"b","nameLocation":"2157:1:19","nodeType":"VariableDeclaration","scope":3253,"src":"2149:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:19"},"returnParameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3253,"src":"2183:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3232,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3253,"src":"2189:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:19"},"scope":4138,"src":"2122:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3270,"nodeType":"Block","src":"2449:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"2466:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"2470:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3267,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"2478:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:19","trueExpression":{"id":3266,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"2474:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3262,"id":3269,"nodeType":"Return","src":"2459:20:19"}]},"documentation":{"id":3254,"nodeType":"StructuredDocumentation","src":"2318:59:19","text":" @dev Returns the largest of two numbers."},"id":3271,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:19","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"a","nameLocation":"2403:1:19","nodeType":"VariableDeclaration","scope":3271,"src":"2395:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"b","nameLocation":"2414:1:19","nodeType":"VariableDeclaration","scope":3271,"src":"2406:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:19"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3271,"src":"2440:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:19"},"scope":4138,"src":"2382:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3288,"nodeType":"Block","src":"2624:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"2641:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"2645:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3285,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"2653:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:19","trueExpression":{"id":3284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"2649:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3280,"id":3287,"nodeType":"Return","src":"2634:20:19"}]},"documentation":{"id":3272,"nodeType":"StructuredDocumentation","src":"2492:60:19","text":" @dev Returns the smallest of two numbers."},"id":3289,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:19","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"a","nameLocation":"2578:1:19","nodeType":"VariableDeclaration","scope":3289,"src":"2570:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"b","nameLocation":"2589:1:19","nodeType":"VariableDeclaration","scope":3289,"src":"2581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:19"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3289,"src":"2615:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:19"},"scope":4138,"src":"2557:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3311,"nodeType":"Block","src":"2845:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"2900:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"2904:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"2910:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3304,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"2914:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3298,"id":3310,"nodeType":"Return","src":"2892:28:19"}]},"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"2667:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3312,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:19","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"a","nameLocation":"2799:1:19","nodeType":"VariableDeclaration","scope":3312,"src":"2791:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"b","nameLocation":"2810:1:19","nodeType":"VariableDeclaration","scope":3312,"src":"2802:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:19"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3312,"src":"2836:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:19"},"scope":4138,"src":"2774:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"3219:260:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"3233:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3330,"nodeType":"IfStatement","src":"3229:127:19","trueBody":{"id":3329,"nodeType":"Block","src":"3241:115:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3325,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"3340:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3326,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"3344:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3321,"id":3328,"nodeType":"Return","src":"3333:12:19"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"3444:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"3458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"3467:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:19","trueExpression":{"hexValue":"30","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3321,"id":3344,"nodeType":"Return","src":"3437:35:19"}]},"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"2933:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:19","nodeType":"FunctionDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"a","nameLocation":"3173:1:19","nodeType":"VariableDeclaration","scope":3346,"src":"3165:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"b","nameLocation":"3184:1:19","nodeType":"VariableDeclaration","scope":3346,"src":"3176:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:19"},"returnParameters":{"id":3321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"3210:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:19"},"scope":4138,"src":"3148:331:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3471,"nodeType":"Block","src":"3901:4018:19","statements":[{"id":3470,"nodeType":"UncheckedBlock","src":"3911:4002:19","statements":[{"assignments":[3359],"declarations":[{"constant":false,"id":3359,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:19","nodeType":"VariableDeclaration","scope":3470,"src":"4232:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3363,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"4248:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3361,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"4252:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:19"},{"assignments":[3365],"declarations":[{"constant":false,"id":3365,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:19","nodeType":"VariableDeclaration","scope":3470,"src":"4312:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3366,"nodeType":"VariableDeclarationStatement","src":"4312:13:19"},{"AST":{"nativeSrc":"4392:122:19","nodeType":"YulBlock","src":"4392:122:19","statements":[{"nativeSrc":"4410:30:19","nodeType":"YulVariableDeclaration","src":"4410:30:19","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:19","nodeType":"YulIdentifier","src":"4427:1:19"},{"name":"y","nativeSrc":"4430:1:19","nodeType":"YulIdentifier","src":"4430:1:19"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:19","nodeType":"YulLiteral","src":"4437:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:19","nodeType":"YulIdentifier","src":"4433:3:19"},"nativeSrc":"4433:6:19","nodeType":"YulFunctionCall","src":"4433:6:19"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:19","nodeType":"YulIdentifier","src":"4420:6:19"},"nativeSrc":"4420:20:19","nodeType":"YulFunctionCall","src":"4420:20:19"},"variables":[{"name":"mm","nativeSrc":"4414:2:19","nodeType":"YulTypedName","src":"4414:2:19","type":""}]},{"nativeSrc":"4457:43:19","nodeType":"YulAssignment","src":"4457:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:19","nodeType":"YulIdentifier","src":"4474:2:19"},{"name":"prod0","nativeSrc":"4478:5:19","nodeType":"YulIdentifier","src":"4478:5:19"}],"functionName":{"name":"sub","nativeSrc":"4470:3:19","nodeType":"YulIdentifier","src":"4470:3:19"},"nativeSrc":"4470:14:19","nodeType":"YulFunctionCall","src":"4470:14:19"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:19","nodeType":"YulIdentifier","src":"4489:2:19"},{"name":"prod0","nativeSrc":"4493:5:19","nodeType":"YulIdentifier","src":"4493:5:19"}],"functionName":{"name":"lt","nativeSrc":"4486:2:19","nodeType":"YulIdentifier","src":"4486:2:19"},"nativeSrc":"4486:13:19","nodeType":"YulFunctionCall","src":"4486:13:19"}],"functionName":{"name":"sub","nativeSrc":"4466:3:19","nodeType":"YulIdentifier","src":"4466:3:19"},"nativeSrc":"4466:34:19","nodeType":"YulFunctionCall","src":"4466:34:19"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:19","nodeType":"YulIdentifier","src":"4457:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3359,"isOffset":false,"isSlot":false,"src":"4478:5:19","valueSize":1},{"declaration":3359,"isOffset":false,"isSlot":false,"src":"4493:5:19","valueSize":1},{"declaration":3365,"isOffset":false,"isSlot":false,"src":"4457:5:19","valueSize":1},{"declaration":3349,"isOffset":false,"isSlot":false,"src":"4427:1:19","valueSize":1},{"declaration":3351,"isOffset":false,"isSlot":false,"src":"4430:1:19","valueSize":1}],"id":3367,"nodeType":"InlineAssembly","src":"4383:131:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"4595:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3376,"nodeType":"IfStatement","src":"4591:368:19","trueBody":{"id":3375,"nodeType":"Block","src":"4607:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"4925:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3372,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"4933:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3357,"id":3374,"nodeType":"Return","src":"4918:26:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3377,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"5065:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3378,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5080:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3384,"nodeType":"IfStatement","src":"5061:88:19","trueBody":{"id":3383,"nodeType":"Block","src":"5087:62:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3380,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5112:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3382,"nodeType":"RevertStatement","src":"5105:29:19"}]}},{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:19","nodeType":"VariableDeclaration","scope":3470,"src":"5404:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3387,"nodeType":"VariableDeclarationStatement","src":"5404:17:19"},{"AST":{"nativeSrc":"5444:291:19","nodeType":"YulBlock","src":"5444:291:19","statements":[{"nativeSrc":"5513:38:19","nodeType":"YulAssignment","src":"5513:38:19","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:19","nodeType":"YulIdentifier","src":"5533:1:19"},{"name":"y","nativeSrc":"5536:1:19","nodeType":"YulIdentifier","src":"5536:1:19"},{"name":"denominator","nativeSrc":"5539:11:19","nodeType":"YulIdentifier","src":"5539:11:19"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:19","nodeType":"YulIdentifier","src":"5526:6:19"},"nativeSrc":"5526:25:19","nodeType":"YulFunctionCall","src":"5526:25:19"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:19","nodeType":"YulIdentifier","src":"5513:9:19"}]},{"nativeSrc":"5633:41:19","nodeType":"YulAssignment","src":"5633:41:19","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:19","nodeType":"YulIdentifier","src":"5646:5:19"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:19","nodeType":"YulIdentifier","src":"5656:9:19"},{"name":"prod0","nativeSrc":"5667:5:19","nodeType":"YulIdentifier","src":"5667:5:19"}],"functionName":{"name":"gt","nativeSrc":"5653:2:19","nodeType":"YulIdentifier","src":"5653:2:19"},"nativeSrc":"5653:20:19","nodeType":"YulFunctionCall","src":"5653:20:19"}],"functionName":{"name":"sub","nativeSrc":"5642:3:19","nodeType":"YulIdentifier","src":"5642:3:19"},"nativeSrc":"5642:32:19","nodeType":"YulFunctionCall","src":"5642:32:19"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:19","nodeType":"YulIdentifier","src":"5633:5:19"}]},{"nativeSrc":"5691:30:19","nodeType":"YulAssignment","src":"5691:30:19","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:19","nodeType":"YulIdentifier","src":"5704:5:19"},{"name":"remainder","nativeSrc":"5711:9:19","nodeType":"YulIdentifier","src":"5711:9:19"}],"functionName":{"name":"sub","nativeSrc":"5700:3:19","nodeType":"YulIdentifier","src":"5700:3:19"},"nativeSrc":"5700:21:19","nodeType":"YulFunctionCall","src":"5700:21:19"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:19","nodeType":"YulIdentifier","src":"5691:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3353,"isOffset":false,"isSlot":false,"src":"5539:11:19","valueSize":1},{"declaration":3359,"isOffset":false,"isSlot":false,"src":"5667:5:19","valueSize":1},{"declaration":3359,"isOffset":false,"isSlot":false,"src":"5691:5:19","valueSize":1},{"declaration":3359,"isOffset":false,"isSlot":false,"src":"5704:5:19","valueSize":1},{"declaration":3365,"isOffset":false,"isSlot":false,"src":"5633:5:19","valueSize":1},{"declaration":3365,"isOffset":false,"isSlot":false,"src":"5646:5:19","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"5513:9:19","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"5656:9:19","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"5711:9:19","valueSize":1},{"declaration":3349,"isOffset":false,"isSlot":false,"src":"5533:1:19","valueSize":1},{"declaration":3351,"isOffset":false,"isSlot":false,"src":"5536:1:19","valueSize":1}],"id":3388,"nodeType":"InlineAssembly","src":"5435:300:19"},{"assignments":[3390],"declarations":[{"constant":false,"id":3390,"mutability":"mutable","name":"twos","nameLocation":"5947:4:19","nodeType":"VariableDeclaration","scope":3470,"src":"5939:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3397,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"5954:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3393,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"5973:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:19"},{"AST":{"nativeSrc":"6008:362:19","nodeType":"YulBlock","src":"6008:362:19","statements":[{"nativeSrc":"6073:37:19","nodeType":"YulAssignment","src":"6073:37:19","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:19","nodeType":"YulIdentifier","src":"6092:11:19"},{"name":"twos","nativeSrc":"6105:4:19","nodeType":"YulIdentifier","src":"6105:4:19"}],"functionName":{"name":"div","nativeSrc":"6088:3:19","nodeType":"YulIdentifier","src":"6088:3:19"},"nativeSrc":"6088:22:19","nodeType":"YulFunctionCall","src":"6088:22:19"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:19","nodeType":"YulIdentifier","src":"6073:11:19"}]},{"nativeSrc":"6177:25:19","nodeType":"YulAssignment","src":"6177:25:19","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:19","nodeType":"YulIdentifier","src":"6190:5:19"},{"name":"twos","nativeSrc":"6197:4:19","nodeType":"YulIdentifier","src":"6197:4:19"}],"functionName":{"name":"div","nativeSrc":"6186:3:19","nodeType":"YulIdentifier","src":"6186:3:19"},"nativeSrc":"6186:16:19","nodeType":"YulFunctionCall","src":"6186:16:19"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:19","nodeType":"YulIdentifier","src":"6177:5:19"}]},{"nativeSrc":"6317:39:19","nodeType":"YulAssignment","src":"6317:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:19","nodeType":"YulLiteral","src":"6337:1:19","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:19","nodeType":"YulIdentifier","src":"6340:4:19"}],"functionName":{"name":"sub","nativeSrc":"6333:3:19","nodeType":"YulIdentifier","src":"6333:3:19"},"nativeSrc":"6333:12:19","nodeType":"YulFunctionCall","src":"6333:12:19"},{"name":"twos","nativeSrc":"6347:4:19","nodeType":"YulIdentifier","src":"6347:4:19"}],"functionName":{"name":"div","nativeSrc":"6329:3:19","nodeType":"YulIdentifier","src":"6329:3:19"},"nativeSrc":"6329:23:19","nodeType":"YulFunctionCall","src":"6329:23:19"},{"kind":"number","nativeSrc":"6354:1:19","nodeType":"YulLiteral","src":"6354:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:19","nodeType":"YulIdentifier","src":"6325:3:19"},"nativeSrc":"6325:31:19","nodeType":"YulFunctionCall","src":"6325:31:19"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:19","nodeType":"YulIdentifier","src":"6317:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3353,"isOffset":false,"isSlot":false,"src":"6073:11:19","valueSize":1},{"declaration":3353,"isOffset":false,"isSlot":false,"src":"6092:11:19","valueSize":1},{"declaration":3359,"isOffset":false,"isSlot":false,"src":"6177:5:19","valueSize":1},{"declaration":3359,"isOffset":false,"isSlot":false,"src":"6190:5:19","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"6105:4:19","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"6197:4:19","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"6317:4:19","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"6340:4:19","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"6347:4:19","valueSize":1}],"id":3398,"nodeType":"InlineAssembly","src":"5999:371:19"},{"expression":{"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3399,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"6436:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"6445:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3401,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"6453:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3404,"nodeType":"ExpressionStatement","src":"6436:21:19"},{"assignments":[3406],"declarations":[{"constant":false,"id":3406,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:19","nodeType":"VariableDeclaration","scope":3470,"src":"6775:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3413,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3408,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"6798:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:19"},{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"7046:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3417,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7060:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"7031:36:19"},{"expression":{"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3422,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7100:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"7115:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3425,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7129:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3429,"nodeType":"ExpressionStatement","src":"7100:36:19"},{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3430,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7170:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"7185:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3433,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3437,"nodeType":"ExpressionStatement","src":"7170:36:19"},{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"7255:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3441,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7269:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"7240:36:19"},{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"7325:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3449,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"nodeType":"ExpressionStatement","src":"7310:36:19"},{"expression":{"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3454,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7381:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"7396:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3457,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7410:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3461,"nodeType":"ExpressionStatement","src":"7381:36:19"},{"expression":{"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7851:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"7860:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3464,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7868:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3467,"nodeType":"ExpressionStatement","src":"7851:24:19"},{"expression":{"id":3468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7896:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3357,"id":3469,"nodeType":"Return","src":"7889:13:19"}]}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"3485:313:19","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:19","nodeType":"FunctionDefinition","parameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"x","nameLocation":"3827:1:19","nodeType":"VariableDeclaration","scope":3472,"src":"3819:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"y","nameLocation":"3838:1:19","nodeType":"VariableDeclaration","scope":3472,"src":"3830:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:19","nodeType":"VariableDeclaration","scope":3472,"src":"3841:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:19"},"returnParameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"result","nameLocation":"3893:6:19","nodeType":"VariableDeclaration","scope":3472,"src":"3885:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:19"},"scope":4138,"src":"3803:4116:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3514,"nodeType":"Block","src":"8161:192:19","statements":[{"assignments":[3488],"declarations":[{"constant":false,"id":3488,"mutability":"mutable","name":"result","nameLocation":"8179:6:19","nodeType":"VariableDeclaration","scope":3514,"src":"8171:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3494,"initialValue":{"arguments":[{"id":3490,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"8195:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3491,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"8198:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3492,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"8201:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3489,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3472,3515],"referencedDeclaration":3472,"src":"8188:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3496,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"8244:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}],"id":3495,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"8227:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3095_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3499,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"8264:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3500,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"8267:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3501,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"8270:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3498,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3511,"nodeType":"IfStatement","src":"8223:101:19","trueBody":{"id":3510,"nodeType":"Block","src":"8288:36:19","statements":[{"expression":{"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3506,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"8302:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3509,"nodeType":"ExpressionStatement","src":"8302:11:19"}]}},{"expression":{"id":3512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"8340:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3486,"id":3513,"nodeType":"Return","src":"8333:13:19"}]},"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"7925:121:19","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3515,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:19","nodeType":"FunctionDefinition","parameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3475,"mutability":"mutable","name":"x","nameLocation":"8075:1:19","nodeType":"VariableDeclaration","scope":3515,"src":"8067:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"y","nameLocation":"8086:1:19","nodeType":"VariableDeclaration","scope":3515,"src":"8078:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:19","nodeType":"VariableDeclaration","scope":3515,"src":"8089:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3482,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:19","nodeType":"VariableDeclaration","scope":3515,"src":"8110:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"},"typeName":{"id":3481,"nodeType":"UserDefinedTypeName","pathNode":{"id":3480,"name":"Rounding","nameLocations":["8110:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3095,"src":"8110:8:19"},"referencedDeclaration":3095,"src":"8110:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:19"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3515,"src":"8152:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:19"},"scope":4138,"src":"8051:302:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3626,"nodeType":"Block","src":"8644:1585:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"8658:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3529,"nodeType":"IfStatement","src":"8654:45:19","trueBody":{"id":3528,"nodeType":"Block","src":"8666:33:19","statements":[{"expression":{"hexValue":"30","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3522,"id":3527,"nodeType":"Return","src":"8680:8:19"}]}},{"assignments":[3531],"declarations":[{"constant":false,"id":3531,"mutability":"mutable","name":"result","nameLocation":"9386:6:19","nodeType":"VariableDeclaration","scope":3626,"src":"9378:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3540,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3534,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"9406:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3533,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3794,3829],"referencedDeclaration":3794,"src":"9401:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:19"},{"id":3625,"nodeType":"UncheckedBlock","src":"9815:408:19","statements":[{"expression":{"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9839:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9849:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"9858:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9862:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3551,"nodeType":"ExpressionStatement","src":"9839:35:19"},{"expression":{"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9888:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9898:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"9907:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9911:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3562,"nodeType":"ExpressionStatement","src":"9888:35:19"},{"expression":{"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9937:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9947:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"9956:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9960:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3573,"nodeType":"ExpressionStatement","src":"9937:35:19"},{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9986:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"9996:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"10005:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10009:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"9986:35:19"},{"expression":{"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10035:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10045:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"10054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10058:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3595,"nodeType":"ExpressionStatement","src":"10035:35:19"},{"expression":{"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10084:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10094:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"10103:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10107:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"nodeType":"ExpressionStatement","src":"10084:35:19"},{"expression":{"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10133:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10143:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"10152:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10156:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3617,"nodeType":"ExpressionStatement","src":"10133:35:19"},{"expression":{"arguments":[{"id":3619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10193:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"10201:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"10205:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3618,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"10189:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3522,"id":3624,"nodeType":"Return","src":"10182:30:19"}]}]},"documentation":{"id":3516,"nodeType":"StructuredDocumentation","src":"8359:223:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3627,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:19","nodeType":"FunctionDefinition","parameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"a","nameLocation":"8609:1:19","nodeType":"VariableDeclaration","scope":3627,"src":"8601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:19"},"returnParameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3627,"src":"8635:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:19"},"scope":4138,"src":"8587:1642:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3661,"nodeType":"Block","src":"10405:164:19","statements":[{"id":3660,"nodeType":"UncheckedBlock","src":"10415:148:19","statements":[{"assignments":[3639],"declarations":[{"constant":false,"id":3639,"mutability":"mutable","name":"result","nameLocation":"10447:6:19","nodeType":"VariableDeclaration","scope":3660,"src":"10439:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3643,"initialValue":{"arguments":[{"id":3641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"10461:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3640,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3627,3662],"referencedDeclaration":3627,"src":"10456:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"10484:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3646,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"10511:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}],"id":3645,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"10494:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3095_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"10524:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"10533:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"10542:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:19","trueExpression":{"hexValue":"31","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3637,"id":3659,"nodeType":"Return","src":"10477:75:19"}]}]},"documentation":{"id":3628,"nodeType":"StructuredDocumentation","src":"10235:89:19","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:19","nodeType":"FunctionDefinition","parameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"a","nameLocation":"10351:1:19","nodeType":"VariableDeclaration","scope":3662,"src":"10343:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:19","nodeType":"VariableDeclaration","scope":3662,"src":"10354:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"},"typeName":{"id":3632,"nodeType":"UserDefinedTypeName","pathNode":{"id":3631,"name":"Rounding","nameLocations":["10354:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3095,"src":"10354:8:19"},"referencedDeclaration":3095,"src":"10354:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:19"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3662,"src":"10396:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:19"},"scope":4138,"src":"10329:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3793,"nodeType":"Block","src":"10760:922:19","statements":[{"assignments":[3671],"declarations":[{"constant":false,"id":3671,"mutability":"mutable","name":"result","nameLocation":"10778:6:19","nodeType":"VariableDeclaration","scope":3793,"src":"10770:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3673,"initialValue":{"hexValue":"30","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:19"},{"id":3790,"nodeType":"UncheckedBlock","src":"10798:855:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"10826:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3688,"nodeType":"IfStatement","src":"10822:99:19","trueBody":{"id":3687,"nodeType":"Block","src":"10844:77:19","statements":[{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"10862:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3682,"nodeType":"ExpressionStatement","src":"10862:13:19"},{"expression":{"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"10893:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3686,"nodeType":"ExpressionStatement","src":"10893:13:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"10938:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3703,"nodeType":"IfStatement","src":"10934:96:19","trueBody":{"id":3702,"nodeType":"Block","src":"10955:75:19","statements":[{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"10973:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3697,"nodeType":"ExpressionStatement","src":"10973:12:19"},{"expression":{"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"11003:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3701,"nodeType":"ExpressionStatement","src":"11003:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11047:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3718,"nodeType":"IfStatement","src":"11043:96:19","trueBody":{"id":3717,"nodeType":"Block","src":"11064:75:19","statements":[{"expression":{"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11082:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3712,"nodeType":"ExpressionStatement","src":"11082:12:19"},{"expression":{"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"11112:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3716,"nodeType":"ExpressionStatement","src":"11112:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11156:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3733,"nodeType":"IfStatement","src":"11152:96:19","trueBody":{"id":3732,"nodeType":"Block","src":"11173:75:19","statements":[{"expression":{"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11191:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3727,"nodeType":"ExpressionStatement","src":"11191:12:19"},{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"11221:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ExpressionStatement","src":"11221:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11265:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3748,"nodeType":"IfStatement","src":"11261:93:19","trueBody":{"id":3747,"nodeType":"Block","src":"11281:73:19","statements":[{"expression":{"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11299:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3742,"nodeType":"ExpressionStatement","src":"11299:11:19"},{"expression":{"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"11328:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3746,"nodeType":"ExpressionStatement","src":"11328:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11371:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3763,"nodeType":"IfStatement","src":"11367:93:19","trueBody":{"id":3762,"nodeType":"Block","src":"11387:73:19","statements":[{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11405:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ExpressionStatement","src":"11405:11:19"},{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"11434:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"nodeType":"ExpressionStatement","src":"11434:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11477:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"IfStatement","src":"11473:93:19","trueBody":{"id":3777,"nodeType":"Block","src":"11493:73:19","statements":[{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11511:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3772,"nodeType":"ExpressionStatement","src":"11511:11:19"},{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"11540:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"nodeType":"ExpressionStatement","src":"11540:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11583:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3789,"nodeType":"IfStatement","src":"11579:64:19","trueBody":{"id":3788,"nodeType":"Block","src":"11599:44:19","statements":[{"expression":{"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3784,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"11617:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3787,"nodeType":"ExpressionStatement","src":"11617:11:19"}]}}]},{"expression":{"id":3791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"11669:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3669,"id":3792,"nodeType":"Return","src":"11662:13:19"}]},"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"10575:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3794,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:19","nodeType":"FunctionDefinition","parameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"value","nameLocation":"10721:5:19","nodeType":"VariableDeclaration","scope":3794,"src":"10713:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:19"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3794,"src":"10751:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:19"},"scope":4138,"src":"10699:983:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3828,"nodeType":"Block","src":"11915:168:19","statements":[{"id":3827,"nodeType":"UncheckedBlock","src":"11925:152:19","statements":[{"assignments":[3806],"declarations":[{"constant":false,"id":3806,"mutability":"mutable","name":"result","nameLocation":"11957:6:19","nodeType":"VariableDeclaration","scope":3827,"src":"11949:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3810,"initialValue":{"arguments":[{"id":3808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"11971:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3807,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3794,3829],"referencedDeclaration":3794,"src":"11966:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"11998:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3813,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"12025:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}],"id":3812,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"12008:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3095_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"12043:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12052:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:19","trueExpression":{"hexValue":"31","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3804,"id":3826,"nodeType":"Return","src":"11991:75:19"}]}]},"documentation":{"id":3795,"nodeType":"StructuredDocumentation","src":"11688:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:19","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"value","nameLocation":"11857:5:19","nodeType":"VariableDeclaration","scope":3829,"src":"11849:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3800,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:19","nodeType":"VariableDeclaration","scope":3829,"src":"11864:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"},"typeName":{"id":3799,"nodeType":"UserDefinedTypeName","pathNode":{"id":3798,"name":"Rounding","nameLocations":["11864:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3095,"src":"11864:8:19"},"referencedDeclaration":3095,"src":"11864:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:19"},"returnParameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"11906:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:19"},"scope":4138,"src":"11835:248:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3957,"nodeType":"Block","src":"12276:854:19","statements":[{"assignments":[3838],"declarations":[{"constant":false,"id":3838,"mutability":"mutable","name":"result","nameLocation":"12294:6:19","nodeType":"VariableDeclaration","scope":3957,"src":"12286:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3840,"initialValue":{"hexValue":"30","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:19"},{"id":3954,"nodeType":"UncheckedBlock","src":"12314:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12342:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3857,"nodeType":"IfStatement","src":"12338:103:19","trueBody":{"id":3856,"nodeType":"Block","src":"12361:80:19","statements":[{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ExpressionStatement","src":"12379:17:19"},{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"12414:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ExpressionStatement","src":"12414:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12458:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3874,"nodeType":"IfStatement","src":"12454:103:19","trueBody":{"id":3873,"nodeType":"Block","src":"12477:80:19","statements":[{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12495:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3868,"nodeType":"ExpressionStatement","src":"12495:17:19"},{"expression":{"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"12530:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3872,"nodeType":"ExpressionStatement","src":"12530:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12574:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3891,"nodeType":"IfStatement","src":"12570:103:19","trueBody":{"id":3890,"nodeType":"Block","src":"12593:80:19","statements":[{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12611:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3885,"nodeType":"ExpressionStatement","src":"12611:17:19"},{"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"12646:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3889,"nodeType":"ExpressionStatement","src":"12646:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12690:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3908,"nodeType":"IfStatement","src":"12686:100:19","trueBody":{"id":3907,"nodeType":"Block","src":"12708:78:19","statements":[{"expression":{"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12726:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3902,"nodeType":"ExpressionStatement","src":"12726:16:19"},{"expression":{"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"12760:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3906,"nodeType":"ExpressionStatement","src":"12760:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12803:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3925,"nodeType":"IfStatement","src":"12799:100:19","trueBody":{"id":3924,"nodeType":"Block","src":"12821:78:19","statements":[{"expression":{"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12839:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3919,"nodeType":"ExpressionStatement","src":"12839:16:19"},{"expression":{"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"12873:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3923,"nodeType":"ExpressionStatement","src":"12873:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12916:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3942,"nodeType":"IfStatement","src":"12912:100:19","trueBody":{"id":3941,"nodeType":"Block","src":"12934:78:19","statements":[{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"12952:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3936,"nodeType":"ExpressionStatement","src":"12952:16:19"},{"expression":{"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"12986:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3940,"nodeType":"ExpressionStatement","src":"12986:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"13029:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3953,"nodeType":"IfStatement","src":"13025:66:19","trueBody":{"id":3952,"nodeType":"Block","src":"13047:44:19","statements":[{"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"13065:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3951,"nodeType":"ExpressionStatement","src":"13065:11:19"}]}}]},{"expression":{"id":3955,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"13117:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3836,"id":3956,"nodeType":"Return","src":"13110:13:19"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"12089:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:19","nodeType":"FunctionDefinition","parameters":{"id":3833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"value","nameLocation":"12237:5:19","nodeType":"VariableDeclaration","scope":3958,"src":"12229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:19"},"returnParameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"12267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:19"},"scope":4138,"src":"12214:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3992,"nodeType":"Block","src":"13365:170:19","statements":[{"id":3991,"nodeType":"UncheckedBlock","src":"13375:154:19","statements":[{"assignments":[3970],"declarations":[{"constant":false,"id":3970,"mutability":"mutable","name":"result","nameLocation":"13407:6:19","nodeType":"VariableDeclaration","scope":3991,"src":"13399:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3974,"initialValue":{"arguments":[{"id":3972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"13422:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3971,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3958,3993],"referencedDeclaration":3958,"src":"13416:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"13449:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3977,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"13476:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}],"id":3976,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"13459:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3095_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"13495:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"13504:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:19","trueExpression":{"hexValue":"31","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3968,"id":3990,"nodeType":"Return","src":"13442:76:19"}]}]},"documentation":{"id":3959,"nodeType":"StructuredDocumentation","src":"13136:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3993,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:19","nodeType":"FunctionDefinition","parameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"value","nameLocation":"13307:5:19","nodeType":"VariableDeclaration","scope":3993,"src":"13299:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3964,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:19","nodeType":"VariableDeclaration","scope":3993,"src":"13314:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"},"typeName":{"id":3963,"nodeType":"UserDefinedTypeName","pathNode":{"id":3962,"name":"Rounding","nameLocations":["13314:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3095,"src":"13314:8:19"},"referencedDeclaration":3095,"src":"13314:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:19"},"returnParameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3993,"src":"13356:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:19"},"scope":4138,"src":"13284:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4079,"nodeType":"Block","src":"13855:600:19","statements":[{"assignments":[4002],"declarations":[{"constant":false,"id":4002,"mutability":"mutable","name":"result","nameLocation":"13873:6:19","nodeType":"VariableDeclaration","scope":4079,"src":"13865:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4004,"initialValue":{"hexValue":"30","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:19"},{"id":4076,"nodeType":"UncheckedBlock","src":"13893:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"13921:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4019,"nodeType":"IfStatement","src":"13917:98:19","trueBody":{"id":4018,"nodeType":"Block","src":"13939:76:19","statements":[{"expression":{"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"13957:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4013,"nodeType":"ExpressionStatement","src":"13957:13:19"},{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4014,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"13988:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4017,"nodeType":"ExpressionStatement","src":"13988:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"14032:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4034,"nodeType":"IfStatement","src":"14028:95:19","trueBody":{"id":4033,"nodeType":"Block","src":"14049:74:19","statements":[{"expression":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"14067:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"nodeType":"ExpressionStatement","src":"14067:12:19"},{"expression":{"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14097:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4032,"nodeType":"ExpressionStatement","src":"14097:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"14140:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4049,"nodeType":"IfStatement","src":"14136:95:19","trueBody":{"id":4048,"nodeType":"Block","src":"14157:74:19","statements":[{"expression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"14175:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4043,"nodeType":"ExpressionStatement","src":"14175:12:19"},{"expression":{"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14205:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4047,"nodeType":"ExpressionStatement","src":"14205:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"14248:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4064,"nodeType":"IfStatement","src":"14244:95:19","trueBody":{"id":4063,"nodeType":"Block","src":"14265:74:19","statements":[{"expression":{"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"14283:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4058,"nodeType":"ExpressionStatement","src":"14283:12:19"},{"expression":{"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4059,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14313:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4062,"nodeType":"ExpressionStatement","src":"14313:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"14356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4075,"nodeType":"IfStatement","src":"14352:64:19","trueBody":{"id":4074,"nodeType":"Block","src":"14372:44:19","statements":[{"expression":{"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14390:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4073,"nodeType":"ExpressionStatement","src":"14390:11:19"}]}}]},{"expression":{"id":4077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14442:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4000,"id":4078,"nodeType":"Return","src":"14435:13:19"}]},"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"13541:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4080,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:19","nodeType":"FunctionDefinition","parameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"value","nameLocation":"13816:5:19","nodeType":"VariableDeclaration","scope":4080,"src":"13808:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:19"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4080,"src":"13846:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:19"},"scope":4138,"src":"13792:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4117,"nodeType":"Block","src":"14692:177:19","statements":[{"id":4116,"nodeType":"UncheckedBlock","src":"14702:161:19","statements":[{"assignments":[4092],"declarations":[{"constant":false,"id":4092,"mutability":"mutable","name":"result","nameLocation":"14734:6:19","nodeType":"VariableDeclaration","scope":4116,"src":"14726:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4096,"initialValue":{"arguments":[{"id":4094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"14750:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4093,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4080,4118],"referencedDeclaration":4080,"src":"14743:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"14777:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4099,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"14804:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}],"id":4098,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"14787:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3095_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"14823:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"14838:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:19","trueExpression":{"hexValue":"31","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4090,"id":4115,"nodeType":"Return","src":"14770:82:19"}]}]},"documentation":{"id":4081,"nodeType":"StructuredDocumentation","src":"14461:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4118,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:19","nodeType":"FunctionDefinition","parameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"value","nameLocation":"14634:5:19","nodeType":"VariableDeclaration","scope":4118,"src":"14626:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4086,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:19","nodeType":"VariableDeclaration","scope":4118,"src":"14641:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"},"typeName":{"id":4085,"nodeType":"UserDefinedTypeName","pathNode":{"id":4084,"name":"Rounding","nameLocations":["14641:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3095,"src":"14641:8:19"},"referencedDeclaration":3095,"src":"14641:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:19"},"returnParameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4118,"src":"14683:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:19"},"scope":4138,"src":"14610:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4136,"nodeType":"Block","src":"15067:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4129,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"15090:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}],"id":4128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4127,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:19","typeDescriptions":{}}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4126,"id":4135,"nodeType":"Return","src":"15077:31:19"}]},"documentation":{"id":4119,"nodeType":"StructuredDocumentation","src":"14875:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4137,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:19","nodeType":"FunctionDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:19","nodeType":"VariableDeclaration","scope":4137,"src":"15019:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"},"typeName":{"id":4121,"nodeType":"UserDefinedTypeName","pathNode":{"id":4120,"name":"Rounding","nameLocations":["15019:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3095,"src":"15019:8:19"},"referencedDeclaration":3095,"src":"15019:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:19"},"returnParameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4137,"src":"15061:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4124,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:19"},"scope":4138,"src":"14993:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4139,"src":"203:14914:19","usedErrors":[3090],"usedEvents":[]}],"src":"103:15015:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5893]},"id":5894,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4140,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"218:545:20","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5893,"linearizedBaseContracts":[5893],"name":"SafeCast","nameLocation":"772:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4142,"nodeType":"StructuredDocumentation","src":"787:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4148,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:20","nodeType":"ErrorDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"bits","nameLocation":"903:4:20","nodeType":"VariableDeclaration","scope":4148,"src":"897:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4143,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"value","nameLocation":"917:5:20","nodeType":"VariableDeclaration","scope":4148,"src":"909:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:20"},"src":"860:64:20"},{"documentation":{"id":4149,"nodeType":"StructuredDocumentation","src":"930:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4153,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:20","nodeType":"ErrorDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"value","nameLocation":"1051:5:20","nodeType":"VariableDeclaration","scope":4153,"src":"1044:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4150,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:20"},"src":"1010:48:20"},{"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"1064:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4160,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:20","nodeType":"ErrorDefinition","parameters":{"id":4159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"bits","nameLocation":"1178:4:20","nodeType":"VariableDeclaration","scope":4160,"src":"1172:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4155,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4158,"mutability":"mutable","name":"value","nameLocation":"1191:5:20","nodeType":"VariableDeclaration","scope":4160,"src":"1184:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4157,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:20"},"src":"1136:62:20"},{"documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"1204:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4165,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:20","nodeType":"ErrorDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"value","nameLocation":"1326:5:20","nodeType":"VariableDeclaration","scope":4165,"src":"1318:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:20"},"src":"1284:49:20"},{"body":{"id":4192,"nodeType":"Block","src":"1690:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"1704:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4175,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:20","memberName":"max","nodeType":"MemberAccess","src":"1712:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4186,"nodeType":"IfStatement","src":"1700:105:20","trueBody":{"id":4185,"nodeType":"Block","src":"1731:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"1788:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4180,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"1752:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4184,"nodeType":"RevertStatement","src":"1745:49:20"}]}},{"expression":{"arguments":[{"id":4189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"1829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4187,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:20","typeDescriptions":{}}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4172,"id":4191,"nodeType":"Return","src":"1814:21:20"}]},"documentation":{"id":4166,"nodeType":"StructuredDocumentation","src":"1339:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4193,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:20","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"value","nameLocation":"1651:5:20","nodeType":"VariableDeclaration","scope":4193,"src":"1643:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:20"},"returnParameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4193,"src":"1681:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4170,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:20"},"scope":5893,"src":"1624:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4220,"nodeType":"Block","src":"2199:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"2213:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4203,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4202,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:20","memberName":"max","nodeType":"MemberAccess","src":"2221:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4214,"nodeType":"IfStatement","src":"2209:105:20","trueBody":{"id":4213,"nodeType":"Block","src":"2240:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"2297:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4208,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"2261:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4212,"nodeType":"RevertStatement","src":"2254:49:20"}]}},{"expression":{"arguments":[{"id":4217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"2338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4215,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:20","typeDescriptions":{}}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4200,"id":4219,"nodeType":"Return","src":"2323:21:20"}]},"documentation":{"id":4194,"nodeType":"StructuredDocumentation","src":"1848:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4221,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:20","nodeType":"FunctionDefinition","parameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"value","nameLocation":"2160:5:20","nodeType":"VariableDeclaration","scope":4221,"src":"2152:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:20"},"returnParameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4221,"src":"2190:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4198,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:20"},"scope":5893,"src":"2133:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4248,"nodeType":"Block","src":"2708:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"2722:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4231,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4230,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:20","memberName":"max","nodeType":"MemberAccess","src":"2730:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4242,"nodeType":"IfStatement","src":"2718:105:20","trueBody":{"id":4241,"nodeType":"Block","src":"2749:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"2806:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4236,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"2770:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4240,"nodeType":"RevertStatement","src":"2763:49:20"}]}},{"expression":{"arguments":[{"id":4245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"2847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4243,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:20","typeDescriptions":{}}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4228,"id":4247,"nodeType":"Return","src":"2832:21:20"}]},"documentation":{"id":4222,"nodeType":"StructuredDocumentation","src":"2357:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4249,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:20","nodeType":"FunctionDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"value","nameLocation":"2669:5:20","nodeType":"VariableDeclaration","scope":4249,"src":"2661:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:20"},"returnParameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4249,"src":"2699:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4226,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:20"},"scope":5893,"src":"2642:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4276,"nodeType":"Block","src":"3217:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"3231:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4259,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:20","memberName":"max","nodeType":"MemberAccess","src":"3239:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4270,"nodeType":"IfStatement","src":"3227:105:20","trueBody":{"id":4269,"nodeType":"Block","src":"3258:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"3315:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4264,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"3279:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4268,"nodeType":"RevertStatement","src":"3272:49:20"}]}},{"expression":{"arguments":[{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"3356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4271,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:20","typeDescriptions":{}}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4256,"id":4275,"nodeType":"Return","src":"3341:21:20"}]},"documentation":{"id":4250,"nodeType":"StructuredDocumentation","src":"2866:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4277,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:20","nodeType":"FunctionDefinition","parameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"value","nameLocation":"3178:5:20","nodeType":"VariableDeclaration","scope":4277,"src":"3170:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:20"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4277,"src":"3208:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4254,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:20"},"scope":5893,"src":"3151:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4304,"nodeType":"Block","src":"3726:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"3740:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4287,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:20","memberName":"max","nodeType":"MemberAccess","src":"3748:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4298,"nodeType":"IfStatement","src":"3736:105:20","trueBody":{"id":4297,"nodeType":"Block","src":"3767:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"3824:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4292,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"3788:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4296,"nodeType":"RevertStatement","src":"3781:49:20"}]}},{"expression":{"arguments":[{"id":4301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"3865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4299,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:20","typeDescriptions":{}}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4284,"id":4303,"nodeType":"Return","src":"3850:21:20"}]},"documentation":{"id":4278,"nodeType":"StructuredDocumentation","src":"3375:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4305,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:20","nodeType":"FunctionDefinition","parameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"value","nameLocation":"3687:5:20","nodeType":"VariableDeclaration","scope":4305,"src":"3679:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:20"},"returnParameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4305,"src":"3717:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4282,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:20"},"scope":5893,"src":"3660:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4332,"nodeType":"Block","src":"4235:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"4249:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4315,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4314,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:20","memberName":"max","nodeType":"MemberAccess","src":"4257:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4326,"nodeType":"IfStatement","src":"4245:105:20","trueBody":{"id":4325,"nodeType":"Block","src":"4276:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"4333:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4320,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"4297:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4324,"nodeType":"RevertStatement","src":"4290:49:20"}]}},{"expression":{"arguments":[{"id":4329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"4374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4327,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:20","typeDescriptions":{}}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4312,"id":4331,"nodeType":"Return","src":"4359:21:20"}]},"documentation":{"id":4306,"nodeType":"StructuredDocumentation","src":"3884:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4333,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:20","nodeType":"FunctionDefinition","parameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"value","nameLocation":"4196:5:20","nodeType":"VariableDeclaration","scope":4333,"src":"4188:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:20"},"returnParameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4333,"src":"4226:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4310,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:20"},"scope":5893,"src":"4169:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4360,"nodeType":"Block","src":"4744:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"4758:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4343,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4342,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:20","memberName":"max","nodeType":"MemberAccess","src":"4766:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4354,"nodeType":"IfStatement","src":"4754:105:20","trueBody":{"id":4353,"nodeType":"Block","src":"4785:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"4842:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4348,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"4806:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4352,"nodeType":"RevertStatement","src":"4799:49:20"}]}},{"expression":{"arguments":[{"id":4357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"4883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4355,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:20","typeDescriptions":{}}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4340,"id":4359,"nodeType":"Return","src":"4868:21:20"}]},"documentation":{"id":4334,"nodeType":"StructuredDocumentation","src":"4393:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4361,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:20","nodeType":"FunctionDefinition","parameters":{"id":4337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4336,"mutability":"mutable","name":"value","nameLocation":"4705:5:20","nodeType":"VariableDeclaration","scope":4361,"src":"4697:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:20"},"returnParameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4361,"src":"4735:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4338,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:20"},"scope":5893,"src":"4678:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4388,"nodeType":"Block","src":"5253:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"5267:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4371,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:20","memberName":"max","nodeType":"MemberAccess","src":"5275:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4382,"nodeType":"IfStatement","src":"5263:105:20","trueBody":{"id":4381,"nodeType":"Block","src":"5294:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"5351:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4376,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"5315:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4380,"nodeType":"RevertStatement","src":"5308:49:20"}]}},{"expression":{"arguments":[{"id":4385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"5392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4383,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:20","typeDescriptions":{}}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4368,"id":4387,"nodeType":"Return","src":"5377:21:20"}]},"documentation":{"id":4362,"nodeType":"StructuredDocumentation","src":"4902:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4389,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:20","nodeType":"FunctionDefinition","parameters":{"id":4365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4364,"mutability":"mutable","name":"value","nameLocation":"5214:5:20","nodeType":"VariableDeclaration","scope":4389,"src":"5206:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4363,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:20"},"returnParameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4389,"src":"5244:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4366,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:20"},"scope":5893,"src":"5187:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"5762:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5776:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4399,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:20","memberName":"max","nodeType":"MemberAccess","src":"5784:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4410,"nodeType":"IfStatement","src":"5772:105:20","trueBody":{"id":4409,"nodeType":"Block","src":"5803:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5860:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4404,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"5824:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4408,"nodeType":"RevertStatement","src":"5817:49:20"}]}},{"expression":{"arguments":[{"id":4413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4411,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:20","typeDescriptions":{}}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4396,"id":4415,"nodeType":"Return","src":"5886:21:20"}]},"documentation":{"id":4390,"nodeType":"StructuredDocumentation","src":"5411:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:20","nodeType":"FunctionDefinition","parameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"value","nameLocation":"5723:5:20","nodeType":"VariableDeclaration","scope":4417,"src":"5715:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:20"},"returnParameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"5753:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4394,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:20"},"scope":5893,"src":"5696:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4444,"nodeType":"Block","src":"6271:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"6285:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4427,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:20","memberName":"max","nodeType":"MemberAccess","src":"6293:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4438,"nodeType":"IfStatement","src":"6281:105:20","trueBody":{"id":4437,"nodeType":"Block","src":"6312:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"6369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4432,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"6333:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4436,"nodeType":"RevertStatement","src":"6326:49:20"}]}},{"expression":{"arguments":[{"id":4441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"6410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4439,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:20","typeDescriptions":{}}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4424,"id":4443,"nodeType":"Return","src":"6395:21:20"}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"5920:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4445,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:20","nodeType":"FunctionDefinition","parameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"value","nameLocation":"6232:5:20","nodeType":"VariableDeclaration","scope":4445,"src":"6224:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:20"},"returnParameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4445,"src":"6262:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4422,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:20"},"scope":5893,"src":"6205:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4472,"nodeType":"Block","src":"6780:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"6794:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4455,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4454,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:20","memberName":"max","nodeType":"MemberAccess","src":"6802:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4466,"nodeType":"IfStatement","src":"6790:105:20","trueBody":{"id":4465,"nodeType":"Block","src":"6821:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"6878:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4460,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"6842:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4464,"nodeType":"RevertStatement","src":"6835:49:20"}]}},{"expression":{"arguments":[{"id":4469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"6919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4467,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:20","typeDescriptions":{}}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4452,"id":4471,"nodeType":"Return","src":"6904:21:20"}]},"documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"6429:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4473,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:20","nodeType":"FunctionDefinition","parameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"value","nameLocation":"6741:5:20","nodeType":"VariableDeclaration","scope":4473,"src":"6733:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:20"},"returnParameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4473,"src":"6771:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4450,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:20"},"scope":5893,"src":"6714:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4500,"nodeType":"Block","src":"7289:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"7303:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4483,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4482,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:20","memberName":"max","nodeType":"MemberAccess","src":"7311:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4494,"nodeType":"IfStatement","src":"7299:105:20","trueBody":{"id":4493,"nodeType":"Block","src":"7330:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"7387:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4488,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"7351:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4492,"nodeType":"RevertStatement","src":"7344:49:20"}]}},{"expression":{"arguments":[{"id":4497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"7428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4495,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:20","typeDescriptions":{}}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4480,"id":4499,"nodeType":"Return","src":"7413:21:20"}]},"documentation":{"id":4474,"nodeType":"StructuredDocumentation","src":"6938:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4501,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:20","nodeType":"FunctionDefinition","parameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"value","nameLocation":"7250:5:20","nodeType":"VariableDeclaration","scope":4501,"src":"7242:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:20"},"returnParameters":{"id":4480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4501,"src":"7280:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4478,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:20"},"scope":5893,"src":"7223:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4528,"nodeType":"Block","src":"7798:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"7812:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4511,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:20","memberName":"max","nodeType":"MemberAccess","src":"7820:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4522,"nodeType":"IfStatement","src":"7808:105:20","trueBody":{"id":4521,"nodeType":"Block","src":"7839:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"7896:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4516,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"7860:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4520,"nodeType":"RevertStatement","src":"7853:49:20"}]}},{"expression":{"arguments":[{"id":4525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"7937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4523,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:20","typeDescriptions":{}}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4508,"id":4527,"nodeType":"Return","src":"7922:21:20"}]},"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"7447:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4529,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:20","nodeType":"FunctionDefinition","parameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"value","nameLocation":"7759:5:20","nodeType":"VariableDeclaration","scope":4529,"src":"7751:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:20"},"returnParameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4529,"src":"7789:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4506,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:20"},"scope":5893,"src":"7732:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4556,"nodeType":"Block","src":"8307:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"8321:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4539,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:20","memberName":"max","nodeType":"MemberAccess","src":"8329:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4550,"nodeType":"IfStatement","src":"8317:105:20","trueBody":{"id":4549,"nodeType":"Block","src":"8348:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"8405:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4544,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"8369:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4548,"nodeType":"RevertStatement","src":"8362:49:20"}]}},{"expression":{"arguments":[{"id":4553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"8446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4551,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:20","typeDescriptions":{}}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4536,"id":4555,"nodeType":"Return","src":"8431:21:20"}]},"documentation":{"id":4530,"nodeType":"StructuredDocumentation","src":"7956:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4557,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:20","nodeType":"FunctionDefinition","parameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"value","nameLocation":"8268:5:20","nodeType":"VariableDeclaration","scope":4557,"src":"8260:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:20"},"returnParameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4557,"src":"8298:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4534,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:20"},"scope":5893,"src":"8241:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4584,"nodeType":"Block","src":"8816:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"8830:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4567,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:20","memberName":"max","nodeType":"MemberAccess","src":"8838:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"IfStatement","src":"8826:105:20","trueBody":{"id":4577,"nodeType":"Block","src":"8857:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"8914:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4572,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"8878:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4576,"nodeType":"RevertStatement","src":"8871:49:20"}]}},{"expression":{"arguments":[{"id":4581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"8955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4579,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:20","typeDescriptions":{}}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4564,"id":4583,"nodeType":"Return","src":"8940:21:20"}]},"documentation":{"id":4558,"nodeType":"StructuredDocumentation","src":"8465:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4585,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:20","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"value","nameLocation":"8777:5:20","nodeType":"VariableDeclaration","scope":4585,"src":"8769:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:20"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4585,"src":"8807:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4562,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:20"},"scope":5893,"src":"8750:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4612,"nodeType":"Block","src":"9325:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"9339:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4595,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4594,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:20","memberName":"max","nodeType":"MemberAccess","src":"9347:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4606,"nodeType":"IfStatement","src":"9335:105:20","trueBody":{"id":4605,"nodeType":"Block","src":"9366:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"9423:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4600,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"9387:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4604,"nodeType":"RevertStatement","src":"9380:49:20"}]}},{"expression":{"arguments":[{"id":4609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"9464:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4607,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:20","typeDescriptions":{}}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4592,"id":4611,"nodeType":"Return","src":"9449:21:20"}]},"documentation":{"id":4586,"nodeType":"StructuredDocumentation","src":"8974:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4613,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:20","nodeType":"FunctionDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"value","nameLocation":"9286:5:20","nodeType":"VariableDeclaration","scope":4613,"src":"9278:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:20"},"returnParameters":{"id":4592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4613,"src":"9316:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4590,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:20"},"scope":5893,"src":"9259:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4640,"nodeType":"Block","src":"9834:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"9848:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4623,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4622,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:20","memberName":"max","nodeType":"MemberAccess","src":"9856:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4634,"nodeType":"IfStatement","src":"9844:105:20","trueBody":{"id":4633,"nodeType":"Block","src":"9875:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"9932:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4628,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"9896:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4632,"nodeType":"RevertStatement","src":"9889:49:20"}]}},{"expression":{"arguments":[{"id":4637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"9973:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4635,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:20","typeDescriptions":{}}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4620,"id":4639,"nodeType":"Return","src":"9958:21:20"}]},"documentation":{"id":4614,"nodeType":"StructuredDocumentation","src":"9483:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4641,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:20","nodeType":"FunctionDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"value","nameLocation":"9795:5:20","nodeType":"VariableDeclaration","scope":4641,"src":"9787:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4615,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:20"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4641,"src":"9825:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4618,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:20"},"scope":5893,"src":"9768:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4668,"nodeType":"Block","src":"10343:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"10357:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4651,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:20","memberName":"max","nodeType":"MemberAccess","src":"10365:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4662,"nodeType":"IfStatement","src":"10353:105:20","trueBody":{"id":4661,"nodeType":"Block","src":"10384:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"10441:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4656,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"10405:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4660,"nodeType":"RevertStatement","src":"10398:49:20"}]}},{"expression":{"arguments":[{"id":4665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"10482:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4663,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:20","typeDescriptions":{}}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4648,"id":4667,"nodeType":"Return","src":"10467:21:20"}]},"documentation":{"id":4642,"nodeType":"StructuredDocumentation","src":"9992:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4669,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:20","nodeType":"FunctionDefinition","parameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"value","nameLocation":"10304:5:20","nodeType":"VariableDeclaration","scope":4669,"src":"10296:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:20"},"returnParameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4669,"src":"10334:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4646,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:20"},"scope":5893,"src":"10277:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"10852:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"10866:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4679,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4678,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:20","memberName":"max","nodeType":"MemberAccess","src":"10874:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4690,"nodeType":"IfStatement","src":"10862:105:20","trueBody":{"id":4689,"nodeType":"Block","src":"10893:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"10950:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4684,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"10914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4688,"nodeType":"RevertStatement","src":"10907:49:20"}]}},{"expression":{"arguments":[{"id":4693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"10991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4691,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:20","typeDescriptions":{}}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4676,"id":4695,"nodeType":"Return","src":"10976:21:20"}]},"documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"10501:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:20","nodeType":"FunctionDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"value","nameLocation":"10813:5:20","nodeType":"VariableDeclaration","scope":4697,"src":"10805:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:20"},"returnParameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4697,"src":"10843:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4674,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:20"},"scope":5893,"src":"10786:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4724,"nodeType":"Block","src":"11355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"11369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4707,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4706,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:20","memberName":"max","nodeType":"MemberAccess","src":"11377:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"11365:103:20","trueBody":{"id":4717,"nodeType":"Block","src":"11395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"11451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4712,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"11416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"RevertStatement","src":"11409:48:20"}]}},{"expression":{"arguments":[{"id":4721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"11491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4719,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:20","typeDescriptions":{}}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4704,"id":4723,"nodeType":"Return","src":"11477:20:20"}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"11010:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4725,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:20","nodeType":"FunctionDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"value","nameLocation":"11317:5:20","nodeType":"VariableDeclaration","scope":4725,"src":"11309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:20"},"returnParameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4725,"src":"11347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4702,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:20"},"scope":5893,"src":"11291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4752,"nodeType":"Block","src":"11855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"11869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4735,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:20","memberName":"max","nodeType":"MemberAccess","src":"11877:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4746,"nodeType":"IfStatement","src":"11865:103:20","trueBody":{"id":4745,"nodeType":"Block","src":"11895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"11951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4740,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"11916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4744,"nodeType":"RevertStatement","src":"11909:48:20"}]}},{"expression":{"arguments":[{"id":4749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"11991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4747,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:20","typeDescriptions":{}}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4732,"id":4751,"nodeType":"Return","src":"11977:20:20"}]},"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"11510:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4753,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:20","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"value","nameLocation":"11817:5:20","nodeType":"VariableDeclaration","scope":4753,"src":"11809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:20"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4753,"src":"11847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4730,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:20"},"scope":5893,"src":"11791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4780,"nodeType":"Block","src":"12355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"12369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4763,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4762,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:20","memberName":"max","nodeType":"MemberAccess","src":"12377:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4774,"nodeType":"IfStatement","src":"12365:103:20","trueBody":{"id":4773,"nodeType":"Block","src":"12395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"12451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4768,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"12416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4772,"nodeType":"RevertStatement","src":"12409:48:20"}]}},{"expression":{"arguments":[{"id":4777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"12491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4775,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:20","typeDescriptions":{}}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4760,"id":4779,"nodeType":"Return","src":"12477:20:20"}]},"documentation":{"id":4754,"nodeType":"StructuredDocumentation","src":"12010:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4781,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:20","nodeType":"FunctionDefinition","parameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"value","nameLocation":"12317:5:20","nodeType":"VariableDeclaration","scope":4781,"src":"12309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:20"},"returnParameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4781,"src":"12347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4758,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:20"},"scope":5893,"src":"12291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4808,"nodeType":"Block","src":"12855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"12869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4791,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4790,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:20","memberName":"max","nodeType":"MemberAccess","src":"12877:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4802,"nodeType":"IfStatement","src":"12865:103:20","trueBody":{"id":4801,"nodeType":"Block","src":"12895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"12951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4796,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"12916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4800,"nodeType":"RevertStatement","src":"12909:48:20"}]}},{"expression":{"arguments":[{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"12991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4803,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:20","typeDescriptions":{}}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4788,"id":4807,"nodeType":"Return","src":"12977:20:20"}]},"documentation":{"id":4782,"nodeType":"StructuredDocumentation","src":"12510:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4809,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:20","nodeType":"FunctionDefinition","parameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"value","nameLocation":"12817:5:20","nodeType":"VariableDeclaration","scope":4809,"src":"12809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:20"},"returnParameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4809,"src":"12847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4786,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:20"},"scope":5893,"src":"12791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4836,"nodeType":"Block","src":"13355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"13369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4819,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4818,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:20","memberName":"max","nodeType":"MemberAccess","src":"13377:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4830,"nodeType":"IfStatement","src":"13365:103:20","trueBody":{"id":4829,"nodeType":"Block","src":"13395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"13451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4824,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"13416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4828,"nodeType":"RevertStatement","src":"13409:48:20"}]}},{"expression":{"arguments":[{"id":4833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"13491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4831,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:20","typeDescriptions":{}}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4816,"id":4835,"nodeType":"Return","src":"13477:20:20"}]},"documentation":{"id":4810,"nodeType":"StructuredDocumentation","src":"13010:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4837,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:20","nodeType":"FunctionDefinition","parameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"value","nameLocation":"13317:5:20","nodeType":"VariableDeclaration","scope":4837,"src":"13309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:20"},"returnParameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4837,"src":"13347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4814,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:20"},"scope":5893,"src":"13291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4864,"nodeType":"Block","src":"13855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"13869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4847,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4846,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:20","memberName":"max","nodeType":"MemberAccess","src":"13877:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"nodeType":"IfStatement","src":"13865:103:20","trueBody":{"id":4857,"nodeType":"Block","src":"13895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"13951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4852,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"13916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4856,"nodeType":"RevertStatement","src":"13909:48:20"}]}},{"expression":{"arguments":[{"id":4861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"13991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4859,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:20","typeDescriptions":{}}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4844,"id":4863,"nodeType":"Return","src":"13977:20:20"}]},"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"13510:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4865,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:20","nodeType":"FunctionDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"value","nameLocation":"13817:5:20","nodeType":"VariableDeclaration","scope":4865,"src":"13809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:20"},"returnParameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4865,"src":"13847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4842,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:20"},"scope":5893,"src":"13791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4892,"nodeType":"Block","src":"14355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"14369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4875,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4874,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:20","memberName":"max","nodeType":"MemberAccess","src":"14377:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4886,"nodeType":"IfStatement","src":"14365:103:20","trueBody":{"id":4885,"nodeType":"Block","src":"14395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"14451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4880,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"14416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4884,"nodeType":"RevertStatement","src":"14409:48:20"}]}},{"expression":{"arguments":[{"id":4889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"14491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4887,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:20","typeDescriptions":{}}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4872,"id":4891,"nodeType":"Return","src":"14477:20:20"}]},"documentation":{"id":4866,"nodeType":"StructuredDocumentation","src":"14010:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4893,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:20","nodeType":"FunctionDefinition","parameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"value","nameLocation":"14317:5:20","nodeType":"VariableDeclaration","scope":4893,"src":"14309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:20"},"returnParameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4893,"src":"14347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4870,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:20"},"scope":5893,"src":"14291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4920,"nodeType":"Block","src":"14855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"14869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4903,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4902,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:20","memberName":"max","nodeType":"MemberAccess","src":"14877:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4914,"nodeType":"IfStatement","src":"14865:103:20","trueBody":{"id":4913,"nodeType":"Block","src":"14895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"14951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4908,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"14916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4912,"nodeType":"RevertStatement","src":"14909:48:20"}]}},{"expression":{"arguments":[{"id":4917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"14991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4915,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:20","typeDescriptions":{}}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4900,"id":4919,"nodeType":"Return","src":"14977:20:20"}]},"documentation":{"id":4894,"nodeType":"StructuredDocumentation","src":"14510:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4921,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:20","nodeType":"FunctionDefinition","parameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"value","nameLocation":"14817:5:20","nodeType":"VariableDeclaration","scope":4921,"src":"14809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4895,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:20"},"returnParameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4921,"src":"14847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4898,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:20"},"scope":5893,"src":"14791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4948,"nodeType":"Block","src":"15355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"15369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4931,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4930,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:20","memberName":"max","nodeType":"MemberAccess","src":"15377:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"nodeType":"IfStatement","src":"15365:103:20","trueBody":{"id":4941,"nodeType":"Block","src":"15395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"15451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4936,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"15416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4940,"nodeType":"RevertStatement","src":"15409:48:20"}]}},{"expression":{"arguments":[{"id":4945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"15491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4943,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:20","typeDescriptions":{}}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4928,"id":4947,"nodeType":"Return","src":"15477:20:20"}]},"documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"15010:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4949,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:20","nodeType":"FunctionDefinition","parameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"value","nameLocation":"15317:5:20","nodeType":"VariableDeclaration","scope":4949,"src":"15309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4923,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:20"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4949,"src":"15347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4926,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:20"},"scope":5893,"src":"15291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4976,"nodeType":"Block","src":"15855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"15869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4959,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4958,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:20","memberName":"max","nodeType":"MemberAccess","src":"15877:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4970,"nodeType":"IfStatement","src":"15865:103:20","trueBody":{"id":4969,"nodeType":"Block","src":"15895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"15951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4964,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"15916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"RevertStatement","src":"15909:48:20"}]}},{"expression":{"arguments":[{"id":4973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"15991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4971,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:20","typeDescriptions":{}}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4956,"id":4975,"nodeType":"Return","src":"15977:20:20"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"15510:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4977,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:20","nodeType":"FunctionDefinition","parameters":{"id":4953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"value","nameLocation":"15817:5:20","nodeType":"VariableDeclaration","scope":4977,"src":"15809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:20"},"returnParameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4977,"src":"15847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4954,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:20"},"scope":5893,"src":"15791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5004,"nodeType":"Block","src":"16355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"16369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4987,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4986,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:20","memberName":"max","nodeType":"MemberAccess","src":"16377:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4998,"nodeType":"IfStatement","src":"16365:103:20","trueBody":{"id":4997,"nodeType":"Block","src":"16395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"16451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4992,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"16416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4996,"nodeType":"RevertStatement","src":"16409:48:20"}]}},{"expression":{"arguments":[{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"16491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4999,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:20","typeDescriptions":{}}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4984,"id":5003,"nodeType":"Return","src":"16477:20:20"}]},"documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"16010:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5005,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:20","nodeType":"FunctionDefinition","parameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"value","nameLocation":"16317:5:20","nodeType":"VariableDeclaration","scope":5005,"src":"16309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:20"},"returnParameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5005,"src":"16347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4982,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:20"},"scope":5893,"src":"16291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5032,"nodeType":"Block","src":"16849:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"16863:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5015,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5014,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:20","memberName":"max","nodeType":"MemberAccess","src":"16871:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5026,"nodeType":"IfStatement","src":"16859:101:20","trueBody":{"id":5025,"nodeType":"Block","src":"16888:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"16943:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5020,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"16909:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5024,"nodeType":"RevertStatement","src":"16902:47:20"}]}},{"expression":{"arguments":[{"id":5029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"16982:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5027,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:20","typeDescriptions":{}}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5012,"id":5031,"nodeType":"Return","src":"16969:19:20"}]},"documentation":{"id":5006,"nodeType":"StructuredDocumentation","src":"16510:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5033,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:20","nodeType":"FunctionDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"value","nameLocation":"16812:5:20","nodeType":"VariableDeclaration","scope":5033,"src":"16804:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:20"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5033,"src":"16842:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5010,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:20"},"scope":5893,"src":"16787:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5055,"nodeType":"Block","src":"17231:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"17245:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5049,"nodeType":"IfStatement","src":"17241:81:20","trueBody":{"id":5048,"nodeType":"Block","src":"17256:66:20","statements":[{"errorCall":{"arguments":[{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"17305:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5044,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"17277:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5047,"nodeType":"RevertStatement","src":"17270:41:20"}]}},{"expression":{"arguments":[{"id":5052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"17346:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5050,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:20","typeDescriptions":{}}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5040,"id":5054,"nodeType":"Return","src":"17331:21:20"}]},"documentation":{"id":5034,"nodeType":"StructuredDocumentation","src":"17001:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5056,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:20","nodeType":"FunctionDefinition","parameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"value","nameLocation":"17192:5:20","nodeType":"VariableDeclaration","scope":5056,"src":"17185:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5035,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:20"},"returnParameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5056,"src":"17222:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:20"},"scope":5893,"src":"17166:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5081,"nodeType":"Block","src":"17756:150:20","statements":[{"expression":{"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"17766:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"17786:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5065,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:20","typeDescriptions":{}}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5070,"nodeType":"ExpressionStatement","src":"17766:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5071,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"17806:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"17820:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5080,"nodeType":"IfStatement","src":"17802:98:20","trueBody":{"id":5079,"nodeType":"Block","src":"17827:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"17883:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5074,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"17848:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5078,"nodeType":"RevertStatement","src":"17841:48:20"}]}}]},"documentation":{"id":5057,"nodeType":"StructuredDocumentation","src":"17365:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5082,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:20","nodeType":"FunctionDefinition","parameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"value","nameLocation":"17707:5:20","nodeType":"VariableDeclaration","scope":5082,"src":"17700:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5058,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:20"},"returnParameters":{"id":5063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5062,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:20","nodeType":"VariableDeclaration","scope":5082,"src":"17737:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5061,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:20"},"scope":5893,"src":"17682:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5107,"nodeType":"Block","src":"18303:150:20","statements":[{"expression":{"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"18313:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"18333:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5091,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:20","typeDescriptions":{}}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5096,"nodeType":"ExpressionStatement","src":"18313:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"18353:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"18367:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5106,"nodeType":"IfStatement","src":"18349:98:20","trueBody":{"id":5105,"nodeType":"Block","src":"18374:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"18430:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5100,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"18395:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5104,"nodeType":"RevertStatement","src":"18388:48:20"}]}}]},"documentation":{"id":5083,"nodeType":"StructuredDocumentation","src":"17912:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5108,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:20","nodeType":"FunctionDefinition","parameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"value","nameLocation":"18254:5:20","nodeType":"VariableDeclaration","scope":5108,"src":"18247:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5084,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:20"},"returnParameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5088,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:20","nodeType":"VariableDeclaration","scope":5108,"src":"18284:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5087,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:20"},"scope":5893,"src":"18229:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5133,"nodeType":"Block","src":"18850:150:20","statements":[{"expression":{"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"18860:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"18880:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5117,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:20","typeDescriptions":{}}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5122,"nodeType":"ExpressionStatement","src":"18860:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5123,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"18900:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"18914:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5132,"nodeType":"IfStatement","src":"18896:98:20","trueBody":{"id":5131,"nodeType":"Block","src":"18921:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"18977:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5126,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"18942:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5130,"nodeType":"RevertStatement","src":"18935:48:20"}]}}]},"documentation":{"id":5109,"nodeType":"StructuredDocumentation","src":"18459:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5134,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:20","nodeType":"FunctionDefinition","parameters":{"id":5112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"value","nameLocation":"18801:5:20","nodeType":"VariableDeclaration","scope":5134,"src":"18794:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5110,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:20"},"returnParameters":{"id":5115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:20","nodeType":"VariableDeclaration","scope":5134,"src":"18831:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5113,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:20"},"scope":5893,"src":"18776:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5159,"nodeType":"Block","src":"19397:150:20","statements":[{"expression":{"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5142,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"19407:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"19427:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5143,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:20","typeDescriptions":{}}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5148,"nodeType":"ExpressionStatement","src":"19407:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"19447:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"19461:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5158,"nodeType":"IfStatement","src":"19443:98:20","trueBody":{"id":5157,"nodeType":"Block","src":"19468:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"19524:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5152,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"19489:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5156,"nodeType":"RevertStatement","src":"19482:48:20"}]}}]},"documentation":{"id":5135,"nodeType":"StructuredDocumentation","src":"19006:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:20","nodeType":"FunctionDefinition","parameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"value","nameLocation":"19348:5:20","nodeType":"VariableDeclaration","scope":5160,"src":"19341:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5136,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:20"},"returnParameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5140,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:20","nodeType":"VariableDeclaration","scope":5160,"src":"19378:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5139,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:20"},"scope":5893,"src":"19323:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5185,"nodeType":"Block","src":"19944:150:20","statements":[{"expression":{"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"19954:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"19974:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5169,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:20","typeDescriptions":{}}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5174,"nodeType":"ExpressionStatement","src":"19954:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"19994:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"20008:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5184,"nodeType":"IfStatement","src":"19990:98:20","trueBody":{"id":5183,"nodeType":"Block","src":"20015:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"20071:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5178,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"20036:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5182,"nodeType":"RevertStatement","src":"20029:48:20"}]}}]},"documentation":{"id":5161,"nodeType":"StructuredDocumentation","src":"19553:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5186,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:20","nodeType":"FunctionDefinition","parameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"value","nameLocation":"19895:5:20","nodeType":"VariableDeclaration","scope":5186,"src":"19888:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5162,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:20"},"returnParameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:20","nodeType":"VariableDeclaration","scope":5186,"src":"19925:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5165,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:20"},"scope":5893,"src":"19870:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5211,"nodeType":"Block","src":"20491:150:20","statements":[{"expression":{"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5194,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"20501:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"20521:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5195,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:20","typeDescriptions":{}}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5200,"nodeType":"ExpressionStatement","src":"20501:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"20541:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"20555:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"nodeType":"IfStatement","src":"20537:98:20","trueBody":{"id":5209,"nodeType":"Block","src":"20562:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"20618:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5204,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"20583:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5208,"nodeType":"RevertStatement","src":"20576:48:20"}]}}]},"documentation":{"id":5187,"nodeType":"StructuredDocumentation","src":"20100:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5212,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:20","nodeType":"FunctionDefinition","parameters":{"id":5190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5189,"mutability":"mutable","name":"value","nameLocation":"20442:5:20","nodeType":"VariableDeclaration","scope":5212,"src":"20435:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5188,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:20"},"returnParameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:20","nodeType":"VariableDeclaration","scope":5212,"src":"20472:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5191,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:20"},"scope":5893,"src":"20417:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5237,"nodeType":"Block","src":"21038:150:20","statements":[{"expression":{"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"21048:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"21068:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5221,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:20","typeDescriptions":{}}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5226,"nodeType":"ExpressionStatement","src":"21048:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"21088:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"21102:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5236,"nodeType":"IfStatement","src":"21084:98:20","trueBody":{"id":5235,"nodeType":"Block","src":"21109:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"21165:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5230,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"21130:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5234,"nodeType":"RevertStatement","src":"21123:48:20"}]}}]},"documentation":{"id":5213,"nodeType":"StructuredDocumentation","src":"20647:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5238,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:20","nodeType":"FunctionDefinition","parameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"value","nameLocation":"20989:5:20","nodeType":"VariableDeclaration","scope":5238,"src":"20982:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5214,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:20"},"returnParameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:20","nodeType":"VariableDeclaration","scope":5238,"src":"21019:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5217,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:20"},"scope":5893,"src":"20964:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5263,"nodeType":"Block","src":"21585:150:20","statements":[{"expression":{"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"21595:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"21615:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5247,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:20","typeDescriptions":{}}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5252,"nodeType":"ExpressionStatement","src":"21595:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"21635:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"21649:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5262,"nodeType":"IfStatement","src":"21631:98:20","trueBody":{"id":5261,"nodeType":"Block","src":"21656:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"21712:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5256,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"21677:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5260,"nodeType":"RevertStatement","src":"21670:48:20"}]}}]},"documentation":{"id":5239,"nodeType":"StructuredDocumentation","src":"21194:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5264,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:20","nodeType":"FunctionDefinition","parameters":{"id":5242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5241,"mutability":"mutable","name":"value","nameLocation":"21536:5:20","nodeType":"VariableDeclaration","scope":5264,"src":"21529:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5240,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:20"},"returnParameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:20","nodeType":"VariableDeclaration","scope":5264,"src":"21566:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5243,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:20"},"scope":5893,"src":"21511:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5289,"nodeType":"Block","src":"22132:150:20","statements":[{"expression":{"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"22142:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22162:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5273,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:20","typeDescriptions":{}}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5278,"nodeType":"ExpressionStatement","src":"22142:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"22182:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22196:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5288,"nodeType":"IfStatement","src":"22178:98:20","trueBody":{"id":5287,"nodeType":"Block","src":"22203:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22259:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5282,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"22224:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5286,"nodeType":"RevertStatement","src":"22217:48:20"}]}}]},"documentation":{"id":5265,"nodeType":"StructuredDocumentation","src":"21741:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5290,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:20","nodeType":"FunctionDefinition","parameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"value","nameLocation":"22083:5:20","nodeType":"VariableDeclaration","scope":5290,"src":"22076:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5266,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:20"},"returnParameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:20","nodeType":"VariableDeclaration","scope":5290,"src":"22113:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5269,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:20"},"scope":5893,"src":"22058:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5315,"nodeType":"Block","src":"22679:150:20","statements":[{"expression":{"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"22689:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"22709:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5299,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:20","typeDescriptions":{}}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5304,"nodeType":"ExpressionStatement","src":"22689:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"22729:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"22743:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5314,"nodeType":"IfStatement","src":"22725:98:20","trueBody":{"id":5313,"nodeType":"Block","src":"22750:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"22806:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5308,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"22771:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5312,"nodeType":"RevertStatement","src":"22764:48:20"}]}}]},"documentation":{"id":5291,"nodeType":"StructuredDocumentation","src":"22288:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5316,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:20","nodeType":"FunctionDefinition","parameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"value","nameLocation":"22630:5:20","nodeType":"VariableDeclaration","scope":5316,"src":"22623:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5292,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:20"},"returnParameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:20","nodeType":"VariableDeclaration","scope":5316,"src":"22660:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5295,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:20"},"scope":5893,"src":"22605:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5341,"nodeType":"Block","src":"23226:150:20","statements":[{"expression":{"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"23236:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"23256:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5325,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:20","typeDescriptions":{}}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5330,"nodeType":"ExpressionStatement","src":"23236:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"23276:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"23290:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5340,"nodeType":"IfStatement","src":"23272:98:20","trueBody":{"id":5339,"nodeType":"Block","src":"23297:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"23353:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5334,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"23318:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5338,"nodeType":"RevertStatement","src":"23311:48:20"}]}}]},"documentation":{"id":5317,"nodeType":"StructuredDocumentation","src":"22835:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5342,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:20","nodeType":"FunctionDefinition","parameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"value","nameLocation":"23177:5:20","nodeType":"VariableDeclaration","scope":5342,"src":"23170:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5318,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:20"},"returnParameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:20","nodeType":"VariableDeclaration","scope":5342,"src":"23207:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5321,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:20"},"scope":5893,"src":"23152:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5367,"nodeType":"Block","src":"23773:150:20","statements":[{"expression":{"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"23783:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"23803:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5351,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:20","typeDescriptions":{}}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5356,"nodeType":"ExpressionStatement","src":"23783:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"23823:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"23837:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5366,"nodeType":"IfStatement","src":"23819:98:20","trueBody":{"id":5365,"nodeType":"Block","src":"23844:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"23900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5360,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"23865:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5364,"nodeType":"RevertStatement","src":"23858:48:20"}]}}]},"documentation":{"id":5343,"nodeType":"StructuredDocumentation","src":"23382:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5368,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:20","nodeType":"FunctionDefinition","parameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"value","nameLocation":"23724:5:20","nodeType":"VariableDeclaration","scope":5368,"src":"23717:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5344,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:20"},"returnParameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:20","nodeType":"VariableDeclaration","scope":5368,"src":"23754:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5347,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:20"},"scope":5893,"src":"23699:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5393,"nodeType":"Block","src":"24320:150:20","statements":[{"expression":{"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"24330:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"24350:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5377,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:20","typeDescriptions":{}}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5382,"nodeType":"ExpressionStatement","src":"24330:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"24370:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"24384:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5392,"nodeType":"IfStatement","src":"24366:98:20","trueBody":{"id":5391,"nodeType":"Block","src":"24391:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"24447:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5386,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"24412:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5390,"nodeType":"RevertStatement","src":"24405:48:20"}]}}]},"documentation":{"id":5369,"nodeType":"StructuredDocumentation","src":"23929:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5394,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:20","nodeType":"FunctionDefinition","parameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"value","nameLocation":"24271:5:20","nodeType":"VariableDeclaration","scope":5394,"src":"24264:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5370,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:20"},"returnParameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:20","nodeType":"VariableDeclaration","scope":5394,"src":"24301:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5373,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:20"},"scope":5893,"src":"24246:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5419,"nodeType":"Block","src":"24867:150:20","statements":[{"expression":{"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"24877:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"24897:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5403,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:20","typeDescriptions":{}}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5408,"nodeType":"ExpressionStatement","src":"24877:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"24917:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"24931:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5418,"nodeType":"IfStatement","src":"24913:98:20","trueBody":{"id":5417,"nodeType":"Block","src":"24938:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"24994:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5412,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"24959:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5416,"nodeType":"RevertStatement","src":"24952:48:20"}]}}]},"documentation":{"id":5395,"nodeType":"StructuredDocumentation","src":"24476:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5420,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:20","nodeType":"FunctionDefinition","parameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"value","nameLocation":"24818:5:20","nodeType":"VariableDeclaration","scope":5420,"src":"24811:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5396,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:20"},"returnParameters":{"id":5401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5400,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:20","nodeType":"VariableDeclaration","scope":5420,"src":"24848:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5399,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:20"},"scope":5893,"src":"24793:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5445,"nodeType":"Block","src":"25414:150:20","statements":[{"expression":{"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"25424:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"25444:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5429,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:20","typeDescriptions":{}}},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5434,"nodeType":"ExpressionStatement","src":"25424:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"25464:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"25478:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5444,"nodeType":"IfStatement","src":"25460:98:20","trueBody":{"id":5443,"nodeType":"Block","src":"25485:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"25541:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5438,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"25506:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5442,"nodeType":"RevertStatement","src":"25499:48:20"}]}}]},"documentation":{"id":5421,"nodeType":"StructuredDocumentation","src":"25023:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5446,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:20","nodeType":"FunctionDefinition","parameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5423,"mutability":"mutable","name":"value","nameLocation":"25365:5:20","nodeType":"VariableDeclaration","scope":5446,"src":"25358:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5422,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:20"},"returnParameters":{"id":5427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5426,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:20","nodeType":"VariableDeclaration","scope":5446,"src":"25395:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5425,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:20"},"scope":5893,"src":"25340:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5471,"nodeType":"Block","src":"25961:150:20","statements":[{"expression":{"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"25971:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"25991:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5455,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:20","typeDescriptions":{}}},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5460,"nodeType":"ExpressionStatement","src":"25971:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5461,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"26011:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"26025:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5470,"nodeType":"IfStatement","src":"26007:98:20","trueBody":{"id":5469,"nodeType":"Block","src":"26032:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"26088:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5464,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"26053:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5468,"nodeType":"RevertStatement","src":"26046:48:20"}]}}]},"documentation":{"id":5447,"nodeType":"StructuredDocumentation","src":"25570:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5472,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:20","nodeType":"FunctionDefinition","parameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"value","nameLocation":"25912:5:20","nodeType":"VariableDeclaration","scope":5472,"src":"25905:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5448,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:20"},"returnParameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:20","nodeType":"VariableDeclaration","scope":5472,"src":"25942:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5451,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:20"},"scope":5893,"src":"25887:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5497,"nodeType":"Block","src":"26508:150:20","statements":[{"expression":{"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"26518:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"26538:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5481,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:20","typeDescriptions":{}}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5486,"nodeType":"ExpressionStatement","src":"26518:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5487,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"26558:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"26572:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5496,"nodeType":"IfStatement","src":"26554:98:20","trueBody":{"id":5495,"nodeType":"Block","src":"26579:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"26635:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5490,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"26600:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5494,"nodeType":"RevertStatement","src":"26593:48:20"}]}}]},"documentation":{"id":5473,"nodeType":"StructuredDocumentation","src":"26117:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5498,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:20","nodeType":"FunctionDefinition","parameters":{"id":5476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"value","nameLocation":"26459:5:20","nodeType":"VariableDeclaration","scope":5498,"src":"26452:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5474,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:20"},"returnParameters":{"id":5479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5478,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:20","nodeType":"VariableDeclaration","scope":5498,"src":"26489:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5477,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:20"},"scope":5893,"src":"26434:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5523,"nodeType":"Block","src":"27055:150:20","statements":[{"expression":{"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"27065:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"27085:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5507,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:20","typeDescriptions":{}}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5512,"nodeType":"ExpressionStatement","src":"27065:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"27105:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"27119:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5522,"nodeType":"IfStatement","src":"27101:98:20","trueBody":{"id":5521,"nodeType":"Block","src":"27126:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"27182:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5516,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"27147:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5520,"nodeType":"RevertStatement","src":"27140:48:20"}]}}]},"documentation":{"id":5499,"nodeType":"StructuredDocumentation","src":"26664:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5524,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:20","nodeType":"FunctionDefinition","parameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"mutability":"mutable","name":"value","nameLocation":"27006:5:20","nodeType":"VariableDeclaration","scope":5524,"src":"26999:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5500,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:20"},"returnParameters":{"id":5505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:20","nodeType":"VariableDeclaration","scope":5524,"src":"27036:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5503,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:20"},"scope":5893,"src":"26981:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5549,"nodeType":"Block","src":"27602:150:20","statements":[{"expression":{"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"27612:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"27632:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5533,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:20","typeDescriptions":{}}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5538,"nodeType":"ExpressionStatement","src":"27612:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"27652:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"27666:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5548,"nodeType":"IfStatement","src":"27648:98:20","trueBody":{"id":5547,"nodeType":"Block","src":"27673:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"27729:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5542,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"27694:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5546,"nodeType":"RevertStatement","src":"27687:48:20"}]}}]},"documentation":{"id":5525,"nodeType":"StructuredDocumentation","src":"27211:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5550,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:20","nodeType":"FunctionDefinition","parameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"value","nameLocation":"27553:5:20","nodeType":"VariableDeclaration","scope":5550,"src":"27546:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5526,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:20"},"returnParameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:20","nodeType":"VariableDeclaration","scope":5550,"src":"27583:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5529,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:20"},"scope":5893,"src":"27528:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5575,"nodeType":"Block","src":"28142:148:20","statements":[{"expression":{"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"28152:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"28171:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5559,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:20","typeDescriptions":{}}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5564,"nodeType":"ExpressionStatement","src":"28152:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"28191:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"28205:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5574,"nodeType":"IfStatement","src":"28187:97:20","trueBody":{"id":5573,"nodeType":"Block","src":"28212:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"28267:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5568,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"28233:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5572,"nodeType":"RevertStatement","src":"28226:47:20"}]}}]},"documentation":{"id":5551,"nodeType":"StructuredDocumentation","src":"27758:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5576,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:20","nodeType":"FunctionDefinition","parameters":{"id":5554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5553,"mutability":"mutable","name":"value","nameLocation":"28094:5:20","nodeType":"VariableDeclaration","scope":5576,"src":"28087:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5552,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:20"},"returnParameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:20","nodeType":"VariableDeclaration","scope":5576,"src":"28124:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5555,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:20"},"scope":5893,"src":"28070:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5601,"nodeType":"Block","src":"28680:148:20","statements":[{"expression":{"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"28690:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"28709:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5585,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:20","typeDescriptions":{}}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5590,"nodeType":"ExpressionStatement","src":"28690:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"28729:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"28743:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5600,"nodeType":"IfStatement","src":"28725:97:20","trueBody":{"id":5599,"nodeType":"Block","src":"28750:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"28805:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5594,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"28771:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5598,"nodeType":"RevertStatement","src":"28764:47:20"}]}}]},"documentation":{"id":5577,"nodeType":"StructuredDocumentation","src":"28296:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5602,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:20","nodeType":"FunctionDefinition","parameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"value","nameLocation":"28632:5:20","nodeType":"VariableDeclaration","scope":5602,"src":"28625:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5578,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:20"},"returnParameters":{"id":5583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:20","nodeType":"VariableDeclaration","scope":5602,"src":"28662:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5581,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:20"},"scope":5893,"src":"28608:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5627,"nodeType":"Block","src":"29218:148:20","statements":[{"expression":{"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"29228:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"29247:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5611,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:20","typeDescriptions":{}}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5616,"nodeType":"ExpressionStatement","src":"29228:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"29267:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"29281:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5626,"nodeType":"IfStatement","src":"29263:97:20","trueBody":{"id":5625,"nodeType":"Block","src":"29288:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"29343:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5620,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"29309:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5624,"nodeType":"RevertStatement","src":"29302:47:20"}]}}]},"documentation":{"id":5603,"nodeType":"StructuredDocumentation","src":"28834:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:20","nodeType":"FunctionDefinition","parameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"value","nameLocation":"29170:5:20","nodeType":"VariableDeclaration","scope":5628,"src":"29163:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5604,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:20"},"returnParameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:20","nodeType":"VariableDeclaration","scope":5628,"src":"29200:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5607,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:20"},"scope":5893,"src":"29146:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5653,"nodeType":"Block","src":"29756:148:20","statements":[{"expression":{"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"29766:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"29785:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5637,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:20","typeDescriptions":{}}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5642,"nodeType":"ExpressionStatement","src":"29766:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"29805:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"29819:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5652,"nodeType":"IfStatement","src":"29801:97:20","trueBody":{"id":5651,"nodeType":"Block","src":"29826:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"29881:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5646,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"29847:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5650,"nodeType":"RevertStatement","src":"29840:47:20"}]}}]},"documentation":{"id":5629,"nodeType":"StructuredDocumentation","src":"29372:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:20","nodeType":"FunctionDefinition","parameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"value","nameLocation":"29708:5:20","nodeType":"VariableDeclaration","scope":5654,"src":"29701:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5630,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:20"},"returnParameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:20","nodeType":"VariableDeclaration","scope":5654,"src":"29738:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5633,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:20"},"scope":5893,"src":"29684:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5679,"nodeType":"Block","src":"30294:148:20","statements":[{"expression":{"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"30304:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"30323:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5663,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:20","typeDescriptions":{}}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5668,"nodeType":"ExpressionStatement","src":"30304:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"30343:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"30357:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5678,"nodeType":"IfStatement","src":"30339:97:20","trueBody":{"id":5677,"nodeType":"Block","src":"30364:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"30419:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5672,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"30385:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5676,"nodeType":"RevertStatement","src":"30378:47:20"}]}}]},"documentation":{"id":5655,"nodeType":"StructuredDocumentation","src":"29910:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5680,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:20","nodeType":"FunctionDefinition","parameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"value","nameLocation":"30246:5:20","nodeType":"VariableDeclaration","scope":5680,"src":"30239:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5656,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:20"},"returnParameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:20","nodeType":"VariableDeclaration","scope":5680,"src":"30276:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5659,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:20"},"scope":5893,"src":"30222:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5705,"nodeType":"Block","src":"30832:148:20","statements":[{"expression":{"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"30842:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"30861:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5689,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:20","typeDescriptions":{}}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5694,"nodeType":"ExpressionStatement","src":"30842:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"30881:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"30895:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5704,"nodeType":"IfStatement","src":"30877:97:20","trueBody":{"id":5703,"nodeType":"Block","src":"30902:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"30957:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5698,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"30923:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5702,"nodeType":"RevertStatement","src":"30916:47:20"}]}}]},"documentation":{"id":5681,"nodeType":"StructuredDocumentation","src":"30448:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5706,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:20","nodeType":"FunctionDefinition","parameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"value","nameLocation":"30784:5:20","nodeType":"VariableDeclaration","scope":5706,"src":"30777:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5682,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:20"},"returnParameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:20","nodeType":"VariableDeclaration","scope":5706,"src":"30814:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5685,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:20"},"scope":5893,"src":"30760:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5731,"nodeType":"Block","src":"31370:148:20","statements":[{"expression":{"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"31380:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"31399:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5715,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:20","typeDescriptions":{}}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5720,"nodeType":"ExpressionStatement","src":"31380:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"31419:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"31433:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5730,"nodeType":"IfStatement","src":"31415:97:20","trueBody":{"id":5729,"nodeType":"Block","src":"31440:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"31495:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5724,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"31461:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5728,"nodeType":"RevertStatement","src":"31454:47:20"}]}}]},"documentation":{"id":5707,"nodeType":"StructuredDocumentation","src":"30986:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5732,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:20","nodeType":"FunctionDefinition","parameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"value","nameLocation":"31322:5:20","nodeType":"VariableDeclaration","scope":5732,"src":"31315:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5708,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:20"},"returnParameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:20","nodeType":"VariableDeclaration","scope":5732,"src":"31352:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5711,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:20"},"scope":5893,"src":"31298:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5757,"nodeType":"Block","src":"31908:148:20","statements":[{"expression":{"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"31918:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"31937:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5741,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:20","typeDescriptions":{}}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5746,"nodeType":"ExpressionStatement","src":"31918:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"31957:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"31971:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5756,"nodeType":"IfStatement","src":"31953:97:20","trueBody":{"id":5755,"nodeType":"Block","src":"31978:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"32033:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5750,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"31999:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5754,"nodeType":"RevertStatement","src":"31992:47:20"}]}}]},"documentation":{"id":5733,"nodeType":"StructuredDocumentation","src":"31524:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5758,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:20","nodeType":"FunctionDefinition","parameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"value","nameLocation":"31860:5:20","nodeType":"VariableDeclaration","scope":5758,"src":"31853:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5734,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:20"},"returnParameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:20","nodeType":"VariableDeclaration","scope":5758,"src":"31890:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5737,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:20"},"scope":5893,"src":"31836:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5783,"nodeType":"Block","src":"32446:148:20","statements":[{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"32456:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"32475:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5767,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:20","typeDescriptions":{}}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5772,"nodeType":"ExpressionStatement","src":"32456:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"32495:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"32509:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5782,"nodeType":"IfStatement","src":"32491:97:20","trueBody":{"id":5781,"nodeType":"Block","src":"32516:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"32571:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5776,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"32537:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5780,"nodeType":"RevertStatement","src":"32530:47:20"}]}}]},"documentation":{"id":5759,"nodeType":"StructuredDocumentation","src":"32062:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5784,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:20","nodeType":"FunctionDefinition","parameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"value","nameLocation":"32398:5:20","nodeType":"VariableDeclaration","scope":5784,"src":"32391:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5760,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:20"},"returnParameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:20","nodeType":"VariableDeclaration","scope":5784,"src":"32428:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5763,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:20"},"scope":5893,"src":"32374:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5809,"nodeType":"Block","src":"32984:148:20","statements":[{"expression":{"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"32994:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"33013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5793,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:20","typeDescriptions":{}}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5798,"nodeType":"ExpressionStatement","src":"32994:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"33033:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"33047:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5808,"nodeType":"IfStatement","src":"33029:97:20","trueBody":{"id":5807,"nodeType":"Block","src":"33054:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"33109:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5802,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"33075:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5806,"nodeType":"RevertStatement","src":"33068:47:20"}]}}]},"documentation":{"id":5785,"nodeType":"StructuredDocumentation","src":"32600:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5810,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:20","nodeType":"FunctionDefinition","parameters":{"id":5788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5787,"mutability":"mutable","name":"value","nameLocation":"32936:5:20","nodeType":"VariableDeclaration","scope":5810,"src":"32929:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5786,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:20"},"returnParameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5790,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:20","nodeType":"VariableDeclaration","scope":5810,"src":"32966:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5789,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:20"},"scope":5893,"src":"32912:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5835,"nodeType":"Block","src":"33522:148:20","statements":[{"expression":{"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"33532:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"33551:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5819,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:20","typeDescriptions":{}}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5824,"nodeType":"ExpressionStatement","src":"33532:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"33571:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"33585:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5834,"nodeType":"IfStatement","src":"33567:97:20","trueBody":{"id":5833,"nodeType":"Block","src":"33592:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"33647:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5828,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"33613:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5832,"nodeType":"RevertStatement","src":"33606:47:20"}]}}]},"documentation":{"id":5811,"nodeType":"StructuredDocumentation","src":"33138:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5836,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:20","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"value","nameLocation":"33474:5:20","nodeType":"VariableDeclaration","scope":5836,"src":"33467:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5812,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:20"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:20","nodeType":"VariableDeclaration","scope":5836,"src":"33504:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5815,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:20"},"scope":5893,"src":"33450:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5861,"nodeType":"Block","src":"34053:146:20","statements":[{"expression":{"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"34063:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"34081:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5845,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:20","typeDescriptions":{}}},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5850,"nodeType":"ExpressionStatement","src":"34063:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"34101:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"34115:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5860,"nodeType":"IfStatement","src":"34097:96:20","trueBody":{"id":5859,"nodeType":"Block","src":"34122:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"34176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5854,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"34143:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5858,"nodeType":"RevertStatement","src":"34136:46:20"}]}}]},"documentation":{"id":5837,"nodeType":"StructuredDocumentation","src":"33676:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5862,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:20","nodeType":"FunctionDefinition","parameters":{"id":5840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"value","nameLocation":"34006:5:20","nodeType":"VariableDeclaration","scope":5862,"src":"33999:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5838,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:20"},"returnParameters":{"id":5843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5842,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:20","nodeType":"VariableDeclaration","scope":5862,"src":"34036:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5841,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:20"},"scope":5893,"src":"33983:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5891,"nodeType":"Block","src":"34439:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"34552:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5874,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5873,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:20","memberName":"max","nodeType":"MemberAccess","src":"34568:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:20","typeDescriptions":{}}},"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5885,"nodeType":"IfStatement","src":"34548:105:20","trueBody":{"id":5884,"nodeType":"Block","src":"34587:66:20","statements":[{"errorCall":{"arguments":[{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"34636:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5880,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"34608:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5883,"nodeType":"RevertStatement","src":"34601:41:20"}]}},{"expression":{"arguments":[{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"34676:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5886,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:20","typeDescriptions":{}}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5869,"id":5890,"nodeType":"Return","src":"34662:20:20"}]},"documentation":{"id":5863,"nodeType":"StructuredDocumentation","src":"34205:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5892,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:20","nodeType":"FunctionDefinition","parameters":{"id":5866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5865,"mutability":"mutable","name":"value","nameLocation":"34401:5:20","nodeType":"VariableDeclaration","scope":5892,"src":"34393:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5864,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:20"},"returnParameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5892,"src":"34431:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5867,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:20"},"scope":5893,"src":"34375:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5894,"src":"764:33927:20","usedErrors":[4148,4153,4160,4165],"usedEvents":[]}],"src":"192:34500:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5998]},"id":5999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5895,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5896,"nodeType":"StructuredDocumentation","src":"135:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5998,"linearizedBaseContracts":[5998],"name":"SignedMath","nameLocation":"224:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":5913,"nodeType":"Block","src":"376:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"393:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"397:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5910,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"405:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:21","trueExpression":{"id":5909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"401:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5905,"id":5912,"nodeType":"Return","src":"386:20:21"}]},"documentation":{"id":5897,"nodeType":"StructuredDocumentation","src":"241:66:21","text":" @dev Returns the largest of two signed numbers."},"id":5914,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:21","nodeType":"FunctionDefinition","parameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5899,"mutability":"mutable","name":"a","nameLocation":"332:1:21","nodeType":"VariableDeclaration","scope":5914,"src":"325:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5898,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5901,"mutability":"mutable","name":"b","nameLocation":"342:1:21","nodeType":"VariableDeclaration","scope":5914,"src":"335:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5900,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:21"},"returnParameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5914,"src":"368:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5903,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:21"},"scope":5998,"src":"312:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5931,"nodeType":"Block","src":"555:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"572:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5928,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"584:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:21","trueExpression":{"id":5927,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"580:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5923,"id":5930,"nodeType":"Return","src":"565:20:21"}]},"documentation":{"id":5915,"nodeType":"StructuredDocumentation","src":"419:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":5932,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:21","nodeType":"FunctionDefinition","parameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"a","nameLocation":"511:1:21","nodeType":"VariableDeclaration","scope":5932,"src":"504:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5916,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5919,"mutability":"mutable","name":"b","nameLocation":"521:1:21","nodeType":"VariableDeclaration","scope":5932,"src":"514:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5918,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:21"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5932,"src":"547:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5921,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:21"},"scope":5998,"src":"491:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5975,"nodeType":"Block","src":"797:162:21","statements":[{"assignments":[5943],"declarations":[{"constant":false,"id":5943,"mutability":"mutable","name":"x","nameLocation":"866:1:21","nodeType":"VariableDeclaration","scope":5975,"src":"859:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5942,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5956,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"871:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5945,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"875:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"882:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5949,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"886:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5957,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"911:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5962,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"931:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:21","typeDescriptions":{}}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5958,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:21","typeDescriptions":{}}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"945:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"949:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5941,"id":5974,"nodeType":"Return","src":"904:48:21"}]},"documentation":{"id":5933,"nodeType":"StructuredDocumentation","src":"598:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5976,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:21","nodeType":"FunctionDefinition","parameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"a","nameLocation":"753:1:21","nodeType":"VariableDeclaration","scope":5976,"src":"746:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5934,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5937,"mutability":"mutable","name":"b","nameLocation":"763:1:21","nodeType":"VariableDeclaration","scope":5976,"src":"756:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5936,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:21"},"returnParameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5976,"src":"789:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5939,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:21"},"scope":5998,"src":"729:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5996,"nodeType":"Block","src":"1103:158:21","statements":[{"id":5995,"nodeType":"UncheckedBlock","src":"1113:142:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5986,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"1228:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:21","subExpression":{"id":5990,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"1242:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:21","trueExpression":{"id":5989,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"1237:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:21","typeDescriptions":{}}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5983,"id":5994,"nodeType":"Return","src":"1213:31:21"}]}]},"documentation":{"id":5977,"nodeType":"StructuredDocumentation","src":"965:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5997,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:21","nodeType":"FunctionDefinition","parameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"n","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":5997,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5978,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:21"},"returnParameters":{"id":5983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5997,"src":"1094:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:21"},"scope":5998,"src":"1048:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5999,"src":"216:1047:21","usedErrors":[],"usedEvents":[]}],"src":"109:1155:21"},"id":21},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[4138],"SafeCast":[5893],"Time":[6273]},"id":6274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6000,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":6002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6274,"sourceUnit":4139,"src":"130:38:22","symbolAliases":[{"foreign":{"id":6001,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"138:4:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":6004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6274,"sourceUnit":5894,"src":"169:46:22","symbolAliases":[{"foreign":{"id":6003,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"177:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":6005,"nodeType":"StructuredDocumentation","src":"217:422:22","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":6273,"linearizedBaseContracts":[6273],"name":"Time","nameLocation":"648:4:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6007,"libraryName":{"id":6006,"name":"Time","nameLocations":["665:4:22"],"nodeType":"IdentifierPath","referencedDeclaration":6273,"src":"665:4:22"},"nodeType":"UsingForDirective","src":"659:17:22"},{"body":{"id":6019,"nodeType":"Block","src":"802:58:22","statements":[{"expression":{"arguments":[{"expression":{"id":6015,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6013,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"819:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5893_$","typeString":"type(library SafeCast)"}},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:22","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":4893,"src":"819:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6012,"id":6018,"nodeType":"Return","src":"812:41:22"}]},"documentation":{"id":6008,"nodeType":"StructuredDocumentation","src":"682:63:22","text":" @dev Get the block timestamp as a Timepoint."},"id":6020,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:22","nodeType":"FunctionDefinition","parameters":{"id":6009,"nodeType":"ParameterList","parameters":[],"src":"768:2:22"},"returnParameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6020,"src":"794:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6010,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:22"},"scope":6273,"src":"750:110:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6032,"nodeType":"Block","src":"985:55:22","statements":[{"expression":{"arguments":[{"expression":{"id":6028,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:22","memberName":"number","nodeType":"MemberAccess","src":"1020:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6026,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"1002:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5893_$","typeString":"type(library SafeCast)"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:22","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":4893,"src":"1002:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6025,"id":6031,"nodeType":"Return","src":"995:38:22"}]},"documentation":{"id":6021,"nodeType":"StructuredDocumentation","src":"866:60:22","text":" @dev Get the block number as a Timepoint."},"id":6033,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:22","nodeType":"FunctionDefinition","parameters":{"id":6022,"nodeType":"ParameterList","parameters":[],"src":"951:2:22"},"returnParameters":{"id":6025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6033,"src":"977:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6023,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:22"},"scope":6273,"src":"931:109:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":6035,"name":"Delay","nameLocation":"2377:5:22","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:22","underlyingType":{"id":6034,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":6049,"nodeType":"Block","src":"2572:44:22","statements":[{"expression":{"arguments":[{"id":6046,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"2600:8:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":6044,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"2589:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$6035_$","typeString":"type(Time.Delay)"}},"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:22","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:22","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$6035_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"functionReturnParameters":6043,"id":6048,"nodeType":"Return","src":"2582:27:22"}]},"documentation":{"id":6036,"nodeType":"StructuredDocumentation","src":"2400:103:22","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":6050,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:22","nodeType":"FunctionDefinition","parameters":{"id":6039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6038,"mutability":"mutable","name":"duration","nameLocation":"2532:8:22","nodeType":"VariableDeclaration","scope":6050,"src":"2525:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6037,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:22"},"returnParameters":{"id":6043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6050,"src":"2565:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"},"typeName":{"id":6041,"nodeType":"UserDefinedTypeName","pathNode":{"id":6040,"name":"Delay","nameLocations":["2565:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":6035,"src":"2565:5:22"},"referencedDeclaration":6035,"src":"2565:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:22"},"scope":6273,"src":"2508:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6088,"nodeType":"Block","src":"2964:180:22","statements":[{"assignments":[6066,6068,6070],"declarations":[{"constant":false,"id":6066,"mutability":"mutable","name":"valueBefore","nameLocation":"2982:11:22","nodeType":"VariableDeclaration","scope":6088,"src":"2975:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6065,"name":"uint32","nodeType":"ElementaryTypeName","src":"2975:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6068,"mutability":"mutable","name":"valueAfter","nameLocation":"3002:10:22","nodeType":"VariableDeclaration","scope":6088,"src":"2995:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6067,"name":"uint32","nodeType":"ElementaryTypeName","src":"2995:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6070,"mutability":"mutable","name":"effect","nameLocation":"3021:6:22","nodeType":"VariableDeclaration","scope":6088,"src":"3014:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6069,"name":"uint48","nodeType":"ElementaryTypeName","src":"3014:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":6074,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6071,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"3031:4:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3036:6:22","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":6234,"src":"3031:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$6035_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$6035_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"2974:70:22"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6075,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"3061:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6076,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"3071:9:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3061:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":6082,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"3105:11:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6083,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"3118:10:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6084,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"3130:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":6085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3104:33:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3061:76:22","trueExpression":{"components":[{"id":6078,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"3084:10:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3083:18:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":6064,"id":6087,"nodeType":"Return","src":"3054:83:22"}]},"documentation":{"id":6051,"nodeType":"StructuredDocumentation","src":"2622:241:22","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":6089,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:22","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6054,"mutability":"mutable","name":"self","nameLocation":"2894:4:22","nodeType":"VariableDeclaration","scope":6089,"src":"2888:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"},"typeName":{"id":6053,"nodeType":"UserDefinedTypeName","pathNode":{"id":6052,"name":"Delay","nameLocations":["2888:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":6035,"src":"2888:5:22"},"referencedDeclaration":6035,"src":"2888:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":6056,"mutability":"mutable","name":"timepoint","nameLocation":"2907:9:22","nodeType":"VariableDeclaration","scope":6089,"src":"2900:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6055,"name":"uint48","nodeType":"ElementaryTypeName","src":"2900:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:30:22"},"returnParameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6089,"src":"2940:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6058,"name":"uint32","nodeType":"ElementaryTypeName","src":"2940:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6089,"src":"2948:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6060,"name":"uint32","nodeType":"ElementaryTypeName","src":"2948:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6089,"src":"2956:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6062,"name":"uint48","nodeType":"ElementaryTypeName","src":"2956:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2939:24:22"},"scope":6273,"src":"2868:276:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6108,"nodeType":"Block","src":"3438:53:22","statements":[{"expression":{"arguments":[{"id":6103,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"3466:4:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6104,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"3472:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":6102,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"3455:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$6035_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":6101,"id":6107,"nodeType":"Return","src":"3448:36:22"}]},"documentation":{"id":6090,"nodeType":"StructuredDocumentation","src":"3150:207:22","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":6109,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3371:7:22","nodeType":"FunctionDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"self","nameLocation":"3385:4:22","nodeType":"VariableDeclaration","scope":6109,"src":"3379:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"},"typeName":{"id":6092,"nodeType":"UserDefinedTypeName","pathNode":{"id":6091,"name":"Delay","nameLocations":["3379:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":6035,"src":"3379:5:22"},"referencedDeclaration":6035,"src":"3379:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3378:12:22"},"returnParameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"3414:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6095,"name":"uint32","nodeType":"ElementaryTypeName","src":"3414:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"3422:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6097,"name":"uint32","nodeType":"ElementaryTypeName","src":"3422:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"3430:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6099,"name":"uint48","nodeType":"ElementaryTypeName","src":"3430:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3413:24:22"},"scope":6273,"src":"3362:129:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6126,"nodeType":"Block","src":"3604:74:22","statements":[{"assignments":[6119,null,null],"declarations":[{"constant":false,"id":6119,"mutability":"mutable","name":"delay","nameLocation":"3622:5:22","nodeType":"VariableDeclaration","scope":6126,"src":"3615:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6118,"name":"uint32","nodeType":"ElementaryTypeName","src":"3615:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":6123,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6120,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"3635:4:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3640:7:22","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":6109,"src":"3635:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$6035_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$6035_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3635:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3614:35:22"},{"expression":{"id":6124,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"3666:5:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6117,"id":6125,"nodeType":"Return","src":"3659:12:22"}]},"documentation":{"id":6110,"nodeType":"StructuredDocumentation","src":"3497:46:22","text":" @dev Get the current value."},"id":6127,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3557:3:22","nodeType":"FunctionDefinition","parameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"self","nameLocation":"3567:4:22","nodeType":"VariableDeclaration","scope":6127,"src":"3561:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"},"typeName":{"id":6112,"nodeType":"UserDefinedTypeName","pathNode":{"id":6111,"name":"Delay","nameLocations":["3561:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":6035,"src":"3561:5:22"},"referencedDeclaration":6035,"src":"3561:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3560:12:22"},"returnParameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6127,"src":"3596:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6115,"name":"uint32","nodeType":"ElementaryTypeName","src":"3596:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3595:8:22"},"scope":6273,"src":"3548:130:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6182,"nodeType":"Block","src":"4128:234:22","statements":[{"assignments":[6144],"declarations":[{"constant":false,"id":6144,"mutability":"mutable","name":"value","nameLocation":"4145:5:22","nodeType":"VariableDeclaration","scope":6182,"src":"4138:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6143,"name":"uint32","nodeType":"ElementaryTypeName","src":"4138:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":6148,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6145,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"4153:4:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4158:3:22","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":6127,"src":"4153:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$6035_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$6035_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4138:25:22"},{"assignments":[6150],"declarations":[{"constant":false,"id":6150,"mutability":"mutable","name":"setback","nameLocation":"4180:7:22","nodeType":"VariableDeclaration","scope":6182,"src":"4173:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6149,"name":"uint32","nodeType":"ElementaryTypeName","src":"4173:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":6166,"initialValue":{"arguments":[{"arguments":[{"id":6155,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"4206:10:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"4218:5:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6157,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"4226:8:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4218:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4218:39:22","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"4237:5:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6160,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"4245:8:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4237:16:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":6153,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"4197:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4138_$","typeString":"type(library Math)"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4202:3:22","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":3271,"src":"4197:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:61:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4190:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6151,"name":"uint32","nodeType":"ElementaryTypeName","src":"4190:6:22","typeDescriptions":{}}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:69:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4173:86:22"},{"expression":{"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6167,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"4269:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6168,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"4278:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6170,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"4292:7:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4278:21:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4269:30:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":6173,"nodeType":"ExpressionStatement","src":"4269:30:22"},{"expression":{"components":[{"arguments":[{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"4322:5:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6176,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"4329:8:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6177,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"4339:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":6174,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"4317:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$6035_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},{"id":6179,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"4348:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":6180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4316:39:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$6035_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":6142,"id":6181,"nodeType":"Return","src":"4309:46:22"}]},"documentation":{"id":6128,"nodeType":"StructuredDocumentation","src":"3684:283:22","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":6183,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"3981:10:22","nodeType":"FunctionDefinition","parameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"self","nameLocation":"4007:4:22","nodeType":"VariableDeclaration","scope":6183,"src":"4001:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"},"typeName":{"id":6130,"nodeType":"UserDefinedTypeName","pathNode":{"id":6129,"name":"Delay","nameLocations":["4001:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":6035,"src":"4001:5:22"},"referencedDeclaration":6035,"src":"4001:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":6133,"mutability":"mutable","name":"newValue","nameLocation":"4028:8:22","nodeType":"VariableDeclaration","scope":6183,"src":"4021:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6132,"name":"uint32","nodeType":"ElementaryTypeName","src":"4021:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"minSetback","nameLocation":"4053:10:22","nodeType":"VariableDeclaration","scope":6183,"src":"4046:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6134,"name":"uint32","nodeType":"ElementaryTypeName","src":"4046:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3991:78:22"},"returnParameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6139,"mutability":"mutable","name":"updatedDelay","nameLocation":"4099:12:22","nodeType":"VariableDeclaration","scope":6183,"src":"4093:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"},"typeName":{"id":6138,"nodeType":"UserDefinedTypeName","pathNode":{"id":6137,"name":"Delay","nameLocations":["4093:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":6035,"src":"4093:5:22"},"referencedDeclaration":6035,"src":"4093:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":6141,"mutability":"mutable","name":"effect","nameLocation":"4120:6:22","nodeType":"VariableDeclaration","scope":6183,"src":"4113:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6140,"name":"uint48","nodeType":"ElementaryTypeName","src":"4113:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4092:35:22"},"scope":6273,"src":"3972:390:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6233,"nodeType":"Block","src":"4595:212:22","statements":[{"assignments":[6197],"declarations":[{"constant":false,"id":6197,"mutability":"mutable","name":"raw","nameLocation":"4613:3:22","nodeType":"VariableDeclaration","scope":6233,"src":"4605:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6196,"name":"uint112","nodeType":"ElementaryTypeName","src":"4605:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":6202,"initialValue":{"arguments":[{"id":6200,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"4632:4:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}],"expression":{"id":6198,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"4619:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$6035_$","typeString":"type(Time.Delay)"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4625:6:22","memberName":"unwrap","nodeType":"MemberAccess","src":"4619:12:22","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$6035_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4605:32:22"},{"expression":{"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6203,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"4648:10:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6206,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"4668:3:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":6205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4661:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6204,"name":"uint32","nodeType":"ElementaryTypeName","src":"4661:6:22","typeDescriptions":{}}},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4648:24:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6209,"nodeType":"ExpressionStatement","src":"4648:24:22"},{"expression":{"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6210,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"4682:11:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6213,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"4703:3:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4703:9:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4696:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6211,"name":"uint32","nodeType":"ElementaryTypeName","src":"4696:6:22","typeDescriptions":{}}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4682:31:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6218,"nodeType":"ExpressionStatement","src":"4682:31:22"},{"expression":{"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6219,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"4723:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"4739:3:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4739:9:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":6221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4732:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6220,"name":"uint48","nodeType":"ElementaryTypeName","src":"4732:6:22","typeDescriptions":{}}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4723:26:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":6227,"nodeType":"ExpressionStatement","src":"4723:26:22"},{"expression":{"components":[{"id":6228,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"4768:11:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6229,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"4781:10:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6230,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"4793:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":6231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4767:33:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":6195,"id":6232,"nodeType":"Return","src":"4760:40:22"}]},"documentation":{"id":6184,"nodeType":"StructuredDocumentation","src":"4368:117:22","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":6234,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4499:6:22","nodeType":"FunctionDefinition","parameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"self","nameLocation":"4512:4:22","nodeType":"VariableDeclaration","scope":6234,"src":"4506:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"},"typeName":{"id":6186,"nodeType":"UserDefinedTypeName","pathNode":{"id":6185,"name":"Delay","nameLocations":["4506:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":6035,"src":"4506:5:22"},"referencedDeclaration":6035,"src":"4506:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4505:12:22"},"returnParameters":{"id":6195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"valueBefore","nameLocation":"4548:11:22","nodeType":"VariableDeclaration","scope":6234,"src":"4541:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6189,"name":"uint32","nodeType":"ElementaryTypeName","src":"4541:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6192,"mutability":"mutable","name":"valueAfter","nameLocation":"4568:10:22","nodeType":"VariableDeclaration","scope":6234,"src":"4561:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6191,"name":"uint32","nodeType":"ElementaryTypeName","src":"4561:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6194,"mutability":"mutable","name":"effect","nameLocation":"4587:6:22","nodeType":"VariableDeclaration","scope":6234,"src":"4580:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6193,"name":"uint48","nodeType":"ElementaryTypeName","src":"4580:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4540:54:22"},"scope":6273,"src":"4490:317:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6271,"nodeType":"Block","src":"4980:112:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6251,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"5017:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5009:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6249,"name":"uint112","nodeType":"ElementaryTypeName","src":"5009:7:22","typeDescriptions":{}}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5009:21:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":6255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5008:23:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6258,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"5043:11:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":6257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6256,"name":"uint112","nodeType":"ElementaryTypeName","src":"5035:7:22","typeDescriptions":{}}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5035:26:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":6262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5034:28:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:54:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":6266,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"5073:10:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":6265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5065:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6264,"name":"uint112","nodeType":"ElementaryTypeName","src":"5065:7:22","typeDescriptions":{}}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:76:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":6247,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"4997:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$6035_$","typeString":"type(Time.Delay)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5003:4:22","memberName":"wrap","nodeType":"MemberAccess","src":"4997:10:22","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$6035_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:88:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"functionReturnParameters":6246,"id":6270,"nodeType":"Return","src":"4990:95:22"}]},"documentation":{"id":6235,"nodeType":"StructuredDocumentation","src":"4813:64:22","text":" @dev pack the components into a Delay object."},"id":6272,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4891:4:22","nodeType":"FunctionDefinition","parameters":{"id":6242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"valueBefore","nameLocation":"4903:11:22","nodeType":"VariableDeclaration","scope":6272,"src":"4896:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6236,"name":"uint32","nodeType":"ElementaryTypeName","src":"4896:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6239,"mutability":"mutable","name":"valueAfter","nameLocation":"4923:10:22","nodeType":"VariableDeclaration","scope":6272,"src":"4916:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6238,"name":"uint32","nodeType":"ElementaryTypeName","src":"4916:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6241,"mutability":"mutable","name":"effect","nameLocation":"4942:6:22","nodeType":"VariableDeclaration","scope":6272,"src":"4935:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6240,"name":"uint48","nodeType":"ElementaryTypeName","src":"4935:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4895:54:22"},"returnParameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6272,"src":"4973:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"},"typeName":{"id":6244,"nodeType":"UserDefinedTypeName","pathNode":{"id":6243,"name":"Delay","nameLocations":["4973:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":6035,"src":"4973:5:22"},"referencedDeclaration":6035,"src":"4973:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$6035","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4972:7:22"},"scope":6273,"src":"4882:210:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6274,"src":"640:4454:22","usedErrors":[],"usedEvents":[]}],"src":"104:4991:22"},"id":22},"contracts/NFToken.sol":{"ast":{"absolutePath":"contracts/NFToken.sol","exportedSymbols":{"AccessManaged":[184],"AuthorityUtils":[266],"Context":[2793],"ERC20":[1412],"ERC20Burnable":[1536],"IAccessManaged":[306],"IAccessManager":[744],"IAuthority":[760],"IERC20":[1490],"IERC20Errors":[802],"IERC20Metadata":[1562],"NFToken":[6313]},"id":6314,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6275,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6314,"sourceUnit":1413,"src":"107:55:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":6277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6314,"sourceUnit":1537,"src":"163:74:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/manager/AccessManaged.sol","file":"@openzeppelin/contracts/access/manager/AccessManaged.sol","id":6278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6314,"sourceUnit":185,"src":"238:66:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6279,"name":"ERC20","nameLocations":["326:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":1412,"src":"326:5:23"},"id":6280,"nodeType":"InheritanceSpecifier","src":"326:5:23"},{"baseName":{"id":6281,"name":"ERC20Burnable","nameLocations":["333:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"333:13:23"},"id":6282,"nodeType":"InheritanceSpecifier","src":"333:13:23"},{"baseName":{"id":6283,"name":"AccessManaged","nameLocations":["348:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"348:13:23"},"id":6284,"nodeType":"InheritanceSpecifier","src":"348:13:23"}],"canonicalName":"NFToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6313,"linearizedBaseContracts":[6313,184,306,1536,1412,802,1562,1490,2793],"name":"NFToken","nameLocation":"315:7:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":6296,"nodeType":"Block","src":"482:2:23","statements":[]},"id":6297,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4e46546f6b656e","id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"420:9:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2a9e4a67d61d770effb7def01ad242e1eac790a9d8485d7c81f8d84acb0bb89","typeString":"literal_string \"NFToken\""},"value":"NFToken"},{"hexValue":"4e464f","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"431:5:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_71e701faa388641ee1d03f26c9c0eebf7eb6d724ae32279105ec504533551d59","typeString":"literal_string \"NFO\""},"value":"NFO"}],"id":6291,"kind":"baseConstructorSpecifier","modifierName":{"id":6288,"name":"ERC20","nameLocations":["414:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":1412,"src":"414:5:23"},"nodeType":"ModifierInvocation","src":"414:23:23"},{"arguments":[{"id":6293,"name":"initialAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"460:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6294,"kind":"baseConstructorSpecifier","modifierName":{"id":6292,"name":"AccessManaged","nameLocations":["446:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"446:13:23"},"nodeType":"ModifierInvocation","src":"446:31:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"initialAuthority","nameLocation":"388:16:23","nodeType":"VariableDeclaration","scope":6297,"src":"380:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6285,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:26:23"},"returnParameters":{"id":6295,"nodeType":"ParameterList","parameters":[],"src":"482:0:23"},"scope":6313,"src":"368:116:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6311,"nodeType":"Block","src":"550:34:23","statements":[{"expression":{"arguments":[{"id":6307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"566:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"570:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6306,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"560:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"560:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"ExpressionStatement","src":"560:17:23"}]},"functionSelector":"40c10f19","id":6312,"implemented":true,"kind":"function","modifiers":[{"id":6304,"kind":"modifierInvocation","modifierName":{"id":6303,"name":"restricted","nameLocations":["539:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":43,"src":"539:10:23"},"nodeType":"ModifierInvocation","src":"539:10:23"}],"name":"mint","nameLocation":"499:4:23","nodeType":"FunctionDefinition","parameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"to","nameLocation":"512:2:23","nodeType":"VariableDeclaration","scope":6312,"src":"504:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6298,"name":"address","nodeType":"ElementaryTypeName","src":"504:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6301,"mutability":"mutable","name":"amount","nameLocation":"524:6:23","nodeType":"VariableDeclaration","scope":6312,"src":"516:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6300,"name":"uint256","nodeType":"ElementaryTypeName","src":"516:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"503:28:23"},"returnParameters":{"id":6305,"nodeType":"ParameterList","parameters":[],"src":"550:0:23"},"scope":6313,"src":"490:94:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6314,"src":"306:280:23","usedErrors":[277,283,287,772,777,782,791,796,801],"usedEvents":[273,1424,1433]}],"src":"81:505:23"},"id":23},"contracts/NFTune.sol":{"ast":{"absolutePath":"contracts/NFTune.sol","exportedSymbols":{"AccessManaged":[184],"AuthorityUtils":[266],"Context":[2793],"ERC165":[3072],"ERC721":[2571],"ERC721Burnable":[2735],"IAccessManaged":[306],"IAccessManager":[744],"IAuthority":[760],"IERC165":[3084],"IERC721":[2688],"IERC721Errors":[850],"IERC721Metadata":[2763],"IERC721Receiver":[2706],"NFTune":[6358],"Strings":[3048]},"id":6359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6315,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6316,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6359,"sourceUnit":2572,"src":"107:57:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","id":6317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6359,"sourceUnit":2736,"src":"165:76:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/manager/AccessManaged.sol","file":"@openzeppelin/contracts/access/manager/AccessManaged.sol","id":6318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6359,"sourceUnit":185,"src":"242:66:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6319,"name":"ERC721","nameLocations":["329:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":2571,"src":"329:6:24"},"id":6320,"nodeType":"InheritanceSpecifier","src":"329:6:24"},{"baseName":{"id":6321,"name":"ERC721Burnable","nameLocations":["337:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"337:14:24"},"id":6322,"nodeType":"InheritanceSpecifier","src":"337:14:24"},{"baseName":{"id":6323,"name":"AccessManaged","nameLocations":["353:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"353:13:24"},"id":6324,"nodeType":"InheritanceSpecifier","src":"353:13:24"}],"canonicalName":"NFTune","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6358,"linearizedBaseContracts":[6358,184,306,2735,2571,850,2763,2688,3072,3084,2793],"name":"NFTune","nameLocation":"319:6:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6326,"mutability":"mutable","name":"_nextTokenId","nameLocation":"389:12:24","nodeType":"VariableDeclaration","scope":6358,"src":"373:28:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"373:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":6338,"nodeType":"Block","src":"522:2:24","statements":[]},"id":6339,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4e4654756e65","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"461:8:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b91cd5cdf35088042302ebd135413710d6914f222a75232d1e3eafe9d98cf1c","typeString":"literal_string \"NFTune\""},"value":"NFTune"},{"hexValue":"4e4655","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"471:5:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a6f1541cd174aed0cbc584ada7803b3cc3e3355a4d34e03ecbac818f2009f39","typeString":"literal_string \"NFU\""},"value":"NFU"}],"id":6333,"kind":"baseConstructorSpecifier","modifierName":{"id":6330,"name":"ERC721","nameLocations":["454:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":2571,"src":"454:6:24"},"nodeType":"ModifierInvocation","src":"454:23:24"},{"arguments":[{"id":6335,"name":"initialAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"500:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6336,"kind":"baseConstructorSpecifier","modifierName":{"id":6334,"name":"AccessManaged","nameLocations":["486:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"486:13:24"},"nodeType":"ModifierInvocation","src":"486:31:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6328,"mutability":"mutable","name":"initialAuthority","nameLocation":"428:16:24","nodeType":"VariableDeclaration","scope":6339,"src":"420:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6327,"name":"address","nodeType":"ElementaryTypeName","src":"420:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"419:26:24"},"returnParameters":{"id":6337,"nodeType":"ParameterList","parameters":[],"src":"522:0:24"},"scope":6358,"src":"408:116:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6356,"nodeType":"Block","src":"578:81:24","statements":[{"assignments":[6347],"declarations":[{"constant":false,"id":6347,"mutability":"mutable","name":"tokenId","nameLocation":"596:7:24","nodeType":"VariableDeclaration","scope":6356,"src":"588:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6346,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6350,"initialValue":{"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"606:14:24","subExpression":{"id":6348,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"606:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"588:32:24"},{"expression":{"arguments":[{"id":6352,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"640:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6353,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"644:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6351,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2193,2219],"referencedDeclaration":2193,"src":"630:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"630:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6355,"nodeType":"ExpressionStatement","src":"630:22:24"}]},"functionSelector":"40d097c3","id":6357,"implemented":true,"kind":"function","modifiers":[{"id":6344,"kind":"modifierInvocation","modifierName":{"id":6343,"name":"restricted","nameLocations":["567:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":43,"src":"567:10:24"},"nodeType":"ModifierInvocation","src":"567:10:24"}],"name":"safeMint","nameLocation":"539:8:24","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"to","nameLocation":"556:2:24","nodeType":"VariableDeclaration","scope":6357,"src":"548:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6340,"name":"address","nodeType":"ElementaryTypeName","src":"548:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"547:12:24"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[],"src":"578:0:24"},"scope":6358,"src":"530:129:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6359,"src":"310:351:24","usedErrors":[277,283,287,808,813,822,827,832,839,844,849],"usedEvents":[273,2587,2596,2605]}],"src":"81:580:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/manager/AccessManaged.sol":{"AccessManaged":{"abi":[{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"AccessManagedInvalidAuthority","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"uint32","name":"delay","type":"uint32"}],"name":"AccessManagedRequiredDelay","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"AccessManagedUnauthorized","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"authority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"inputs":[],"name":"authority","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isConsumingScheduledOp","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authority()":"bf7e214f","isConsumingScheduledOp()":"8fb36037","setAuthority(address)":"7a9e5e4b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract module makes available a {restricted} modifier. Functions decorated with this modifier will be permissioned according to an \\\"authority\\\": a contract like {AccessManager} that follows the {IAuthority} interface, implementing a policy that allows certain callers to access certain functions. IMPORTANT: The `restricted` modifier should never be used on `internal` functions, judiciously used in `public` functions, and ideally only used in `external` functions. See {restricted}.\",\"events\":{\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"}},\"kind\":\"dev\",\"methods\":{\"authority()\":{\"details\":\"Returns the current authority.\"},\"constructor\":{\"details\":\"Initializes the contract connected to an initial authority.\"},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/manager/AccessManaged.sol\":\"AccessManaged\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/AccessManaged.sol\":{\"keccak256\":\"0x137a4c22eb762b1580c632f575868d1f3b764291e58702ebe484fa1cef5447dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef14292067a6f91705f6cafcfa136870e6332de4bd36924a8679b4211531234\",\"dweb:/ipfs/QmWEBkKmdmDzaTEFRTNvguuWbD1Z3L8P7XV8bcTAkzc4fr\"]},\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0xdabf85e3bab52e7cfade4f77e661bcf7a2f9f95097bfd2ca5ddb193a0c21ee8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402259332090488a587a858ec0113bc7fe55e9dbc6e329927b87ed0f1cce7d08\",\"dweb:/ipfs/QmPJufTJJJifny3JscKTASsPzCrpXRbhtsJnwkCdbaKDTf\"]},\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":18,"contract":"@openzeppelin/contracts/access/manager/AccessManaged.sol:AccessManaged","label":"_authority","offset":0,"slot":"0","type":"t_address"},{"astId":20,"contract":"@openzeppelin/contracts/access/manager/AccessManaged.sol:AccessManaged","label":"_consumingSchedule","offset":20,"slot":"0","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}}}},"@openzeppelin/contracts/access/manager/AuthorityUtils.sol":{"AuthorityUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a0ad6acf602ba04835d1010e4a69f2cd4bf2c4eb20eebc536e0da4e9efbfda964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS EXP 0xD6 0xAC 0xF6 MUL 0xBA DIV DUP4 TSTORE LT LT 0xE4 0xA6 SWAP16 0x2C 0xD4 0xBF 0x2C 0x4E 0xB2 0xE 0xEB 0xC5 CALLDATASIZE 0xE0 0xDA 0x4E SWAP15 0xFB REVERT 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"189:1040:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a0ad6acf602ba04835d1010e4a69f2cd4bf2c4eb20eebc536e0da4e9efbfda964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS EXP 0xD6 0xAC 0xF6 MUL 0xBA DIV DUP4 TSTORE LT LT 0xE4 0xA6 SWAP16 0x2C 0xD4 0xBF 0x2C 0x4E 0xB2 0xE 0xEB 0xC5 CALLDATASIZE 0xE0 0xDA 0x4E SWAP15 0xFB REVERT 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"189:1040:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":\"AuthorityUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/manager/IAccessManaged.sol":{"IAccessManaged":{"abi":[{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"AccessManagedInvalidAuthority","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"uint32","name":"delay","type":"uint32"}],"name":"AccessManagedRequiredDelay","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"AccessManagedUnauthorized","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"authority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"inputs":[],"name":"authority","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isConsumingScheduledOp","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authority()":"bf7e214f","isConsumingScheduledOp()":"8fb36037","setAuthority(address)":"7a9e5e4b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"}},\"kind\":\"dev\",\"methods\":{\"authority()\":{\"details\":\"Returns the current authority.\"},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":\"IAccessManaged\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/manager/IAccessManager.sol":{"IAccessManager":{"abi":[{"inputs":[{"internalType":"bytes32","name":"operationId","type":"bytes32"}],"name":"AccessManagerAlreadyScheduled","type":"error"},{"inputs":[],"name":"AccessManagerBadConfirmation","type":"error"},{"inputs":[{"internalType":"bytes32","name":"operationId","type":"bytes32"}],"name":"AccessManagerExpired","type":"error"},{"inputs":[{"internalType":"address","name":"initialAdmin","type":"address"}],"name":"AccessManagerInvalidInitialAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AccessManagerLockedAccount","type":"error"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"AccessManagerLockedRole","type":"error"},{"inputs":[{"internalType":"bytes32","name":"operationId","type":"bytes32"}],"name":"AccessManagerNotReady","type":"error"},{"inputs":[{"internalType":"bytes32","name":"operationId","type":"bytes32"}],"name":"AccessManagerNotScheduled","type":"error"},{"inputs":[{"internalType":"address","name":"msgsender","type":"address"},{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"AccessManagerUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"AccessManagerUnauthorizedCall","type":"error"},{"inputs":[{"internalType":"address","name":"msgsender","type":"address"},{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"AccessManagerUnauthorizedCancel","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AccessManagerUnauthorizedConsume","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"operationId","type":"bytes32"},{"indexed":true,"internalType":"uint32","name":"nonce","type":"uint32"}],"name":"OperationCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"operationId","type":"bytes32"},{"indexed":true,"internalType":"uint32","name":"nonce","type":"uint32"}],"name":"OperationExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"operationId","type":"bytes32"},{"indexed":true,"internalType":"uint32","name":"nonce","type":"uint32"},{"indexed":false,"internalType":"uint48","name":"schedule","type":"uint48"},{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"OperationScheduled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":true,"internalType":"uint64","name":"admin","type":"uint64"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"delay","type":"uint32"},{"indexed":false,"internalType":"uint48","name":"since","type":"uint48"}],"name":"RoleGrantDelayChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint32","name":"delay","type":"uint32"},{"indexed":false,"internalType":"uint48","name":"since","type":"uint48"},{"indexed":false,"internalType":"bool","name":"newMember","type":"bool"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":true,"internalType":"uint64","name":"guardian","type":"uint64"}],"name":"RoleGuardianChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":false,"internalType":"string","name":"label","type":"string"}],"name":"RoleLabel","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"},{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint32","name":"delay","type":"uint32"},{"indexed":false,"internalType":"uint48","name":"since","type":"uint48"}],"name":"TargetAdminDelayUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bool","name":"closed","type":"bool"}],"name":"TargetClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"},{"indexed":true,"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"TargetFunctionRoleUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"allowed","type":"bool"},{"internalType":"uint32","name":"delay","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"cancel","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"consumeScheduledOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"expiration","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"account","type":"address"}],"name":"getAccess","outputs":[{"internalType":"uint48","name":"","type":"uint48"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getNonce","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"getRoleAdmin","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"getRoleGrantDelay","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"getRoleGuardian","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getSchedule","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"getTargetAdminDelay","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getTargetFunctionRole","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"executionDelay","type":"uint32"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"hashOperation","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"isTargetClosed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"string","name":"label","type":"string"}],"name":"labelRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minSetback","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint48","name":"when","type":"uint48"}],"name":"schedule","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"uint32","name":"newDelay","type":"uint32"}],"name":"setGrantDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"uint64","name":"admin","type":"uint64"}],"name":"setRoleAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"roleId","type":"uint64"},{"internalType":"uint64","name":"guardian","type":"uint64"}],"name":"setRoleGuardian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint32","name":"newDelay","type":"uint32"}],"name":"setTargetAdminDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"closed","type":"bool"}],"name":"setTargetClosed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4[]","name":"selectors","type":"bytes4[]"},{"internalType":"uint64","name":"roleId","type":"uint64"}],"name":"setTargetFunctionRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"address","name":"newAuthority","type":"address"}],"name":"updateAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canCall(address,address,bytes4)":"b7009613","cancel(address,address,bytes)":"d6bb62c6","consumeScheduledOp(address,bytes)":"94c7d7ee","execute(address,bytes)":"1cff79cd","expiration()":"4665096d","getAccess(uint64,address)":"3078f114","getNonce(bytes32)":"4136a33c","getRoleAdmin(uint64)":"530dd456","getRoleGrantDelay(uint64)":"12be8727","getRoleGuardian(uint64)":"0b0a93ba","getSchedule(bytes32)":"3adc277a","getTargetAdminDelay(address)":"4c1da1e2","getTargetFunctionRole(address,bytes4)":"6d5115bd","grantRole(uint64,address,uint32)":"25c471a0","hasRole(uint64,address)":"d1f856ee","hashOperation(address,address,bytes)":"abd9bd2a","isTargetClosed(address)":"a166aa89","labelRole(uint64,string)":"853551b8","minSetback()":"cc1b6c81","renounceRole(uint64,address)":"fe0776f5","revokeRole(uint64,address)":"b7d2b162","schedule(address,bytes,uint48)":"f801a698","setGrantDelay(uint64,uint32)":"a64d95ce","setRoleAdmin(uint64,uint64)":"30cae187","setRoleGuardian(uint64,uint64)":"52962952","setTargetAdminDelay(address,uint32)":"d22b5989","setTargetClosed(address,bool)":"167bd395","setTargetFunctionRole(address,bytes4[],uint64)":"08d6122d","updateAuthority(address,address)":"18ff183c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerAlreadyScheduled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccessManagerBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"}],\"name\":\"AccessManagerInvalidInitialAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccessManagerLockedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"AccessManagerLockedRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerNotReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerNotScheduled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgsender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"AccessManagerUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"AccessManagerUnauthorizedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgsender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"AccessManagerUnauthorizedCancel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AccessManagerUnauthorizedConsume\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"OperationCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"OperationExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"OperationScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"admin\",\"type\":\"uint64\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"since\",\"type\":\"uint48\"}],\"name\":\"RoleGrantDelayChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"since\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newMember\",\"type\":\"bool\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"guardian\",\"type\":\"uint64\"}],\"name\":\"RoleGuardianChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"RoleLabel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"since\",\"type\":\"uint48\"}],\"name\":\"TargetAdminDelayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"closed\",\"type\":\"bool\"}],\"name\":\"TargetClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"TargetFunctionRoleUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"consumeScheduledOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccess\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"getRoleGrantDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"getRoleGuardian\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getSchedule\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"getTargetAdminDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getTargetFunctionRole\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"executionDelay\",\"type\":\"uint32\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"hashOperation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isTargetClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"labelRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSetback\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint48\",\"name\":\"when\",\"type\":\"uint48\"}],\"name\":\"schedule\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"newDelay\",\"type\":\"uint32\"}],\"name\":\"setGrantDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"admin\",\"type\":\"uint64\"}],\"name\":\"setRoleAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"guardian\",\"type\":\"uint64\"}],\"name\":\"setRoleGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"newDelay\",\"type\":\"uint32\"}],\"name\":\"setTargetAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"closed\",\"type\":\"bool\"}],\"name\":\"setTargetClosed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"setTargetFunctionRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"updateAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OperationCanceled(bytes32,uint32)\":{\"details\":\"A scheduled operation was canceled.\"},\"OperationExecuted(bytes32,uint32)\":{\"details\":\"A scheduled operation was executed.\"},\"OperationScheduled(bytes32,uint32,uint48,address,address,bytes)\":{\"details\":\"A delayed operation was scheduled.\"},\"RoleAdminChanged(uint64,uint64)\":{\"details\":\"Role acting as admin over a given `roleId` is updated.\"},\"RoleGrantDelayChanged(uint64,uint32,uint48)\":{\"details\":\"Grant delay for a given `roleId` will be updated to `delay` when `since` is reached.\"},\"RoleGranted(uint64,address,uint32,uint48,bool)\":{\"details\":\"Emitted when `account` is granted `roleId`. NOTE: The meaning of the `since` argument depends on the `newMember` argument. If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role, otherwise it indicates the execution delay for this account and roleId is updated.\"},\"RoleGuardianChanged(uint64,uint64)\":{\"details\":\"Role acting as guardian over a given `roleId` is updated.\"},\"RoleLabel(uint64,string)\":{\"details\":\"Informational labelling for a roleId.\"},\"RoleRevoked(uint64,address)\":{\"details\":\"Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous.\"},\"TargetAdminDelayUpdated(address,uint32,uint48)\":{\"details\":\"Admin delay for a given `target` will be updated to `delay` when `since` is reached.\"},\"TargetClosed(address,bool)\":{\"details\":\"Target mode is updated (true = closed, false = open).\"},\"TargetFunctionRoleUpdated(address,bytes4,uint64)\":{\"details\":\"Role required to invoke `selector` on `target` is updated to `roleId`.\"}},\"kind\":\"dev\",\"methods\":{\"canCall(address,address,bytes4)\":{\"details\":\"Check if an address (`caller`) is authorised to call a given function on a given contract directly (with no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule} & {execute} workflow. This function is usually called by the targeted contract to control immediate execution of restricted functions. Therefore we only return true if the call can be performed without any delay. If the call is subject to a previously set delay (not zero), then the function should return false and the caller should schedule the operation for future execution. If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise the operation can be executed if and only if delay is greater than 0. NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail to identify the indirect workflow, and will consider calls that require a delay to be forbidden. NOTE: This function does not report the permissions of this manager itself. These are defined by the {_canCallSelf} function instead.\"},\"cancel(address,address,bytes)\":{\"details\":\"Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled operation that is cancelled. Requirements: - the caller must be the proposer, a guardian of the targeted function, or a global admin Emits a {OperationCanceled} event.\"},\"consumeScheduledOp(address,bytes)\":{\"details\":\"Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error. This is useful for contract that want to enforce that calls targeting them were scheduled on the manager, with all the verifications that it implies. Emit a {OperationExecuted} event.\"},\"execute(address,bytes)\":{\"details\":\"Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the execution delay is 0. Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the operation wasn't previously scheduled (if the caller doesn't have an execution delay). Emits an {OperationExecuted} event only if the call was scheduled and delayed.\"},\"expiration()\":{\"details\":\"Expiration delay for scheduled proposals. Defaults to 1 week. IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately, disabling any scheduling usage.\"},\"getAccess(uint64,address)\":{\"details\":\"Get the access details for a given account for a given role. These details include the timepoint at which membership becomes active, and the delay applied to all operation by this user that requires this permission level. Returns: [0] Timestamp at which the account membership becomes valid. 0 means role is not granted. [1] Current execution delay for the account. [2] Pending execution delay for the account. [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled.\"},\"getNonce(bytes32)\":{\"details\":\"Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never been scheduled.\"},\"getRoleAdmin(uint64)\":{\"details\":\"Get the id of the role that acts as an admin for the given role. The admin permission is required to grant the role, revoke the role and update the execution delay to execute an operation that is restricted to this role.\"},\"getRoleGrantDelay(uint64)\":{\"details\":\"Get the role current grant delay. Its value may change at any point without an event emitted following a call to {setGrantDelay}. Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event.\"},\"getRoleGuardian(uint64)\":{\"details\":\"Get the role that acts as a guardian for a given role. The guardian permission allows canceling operations that have been scheduled under the role.\"},\"getSchedule(bytes32)\":{\"details\":\"Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the operation is not yet scheduled, has expired, was executed, or was canceled.\"},\"getTargetAdminDelay(address)\":{\"details\":\"Get the admin delay for a target contract. Changes to contract configuration are subject to this delay.\"},\"getTargetFunctionRole(address,bytes4)\":{\"details\":\"Get the role required to call a function.\"},\"grantRole(uint64,address,uint32)\":{\"details\":\"Add `account` to `roleId`, or change its execution delay. This gives the account the authorization to call any function that is restricted to this role. An optional execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation that is restricted to members of this role. The user will only be able to execute the operation after the delay has passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}). If the account has already been granted this role, the execution delay will be updated. This update is not immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any operation executed in the 3 hours that follows this update was indeed scheduled before this update. Requirements: - the caller must be an admin for the role (see {getRoleAdmin}) - granted role must not be the `PUBLIC_ROLE` Emits a {RoleGranted} event.\"},\"hasRole(uint64,address)\":{\"details\":\"Check if a given account currently has the permission level corresponding to a given role. Note that this permission might be associated with an execution delay. {getAccess} can provide more details.\"},\"hashOperation(address,address,bytes)\":{\"details\":\"Hashing function for delayed operations.\"},\"isTargetClosed(address)\":{\"details\":\"Get whether the contract is closed disabling any access. Otherwise role permissions are applied.\"},\"labelRole(uint64,string)\":{\"details\":\"Give a label to a role, for improved role discoverability by UIs. Requirements: - the caller must be a global admin Emits a {RoleLabel} event.\"},\"minSetback()\":{\"details\":\"Minimum setback for all delay updates, with the exception of execution delays. It can be increased without setback (and reset via {revokeRole} in the case event of an accidental increase). Defaults to 5 days.\"},\"renounceRole(uint64,address)\":{\"details\":\"Renounce role permissions for the calling account with immediate effect. If the sender is not in the role this call has no effect. Requirements: - the caller must be `callerConfirmation`. Emits a {RoleRevoked} event if the account had the role.\"},\"revokeRole(uint64,address)\":{\"details\":\"Remove an account from a role, with immediate effect. If the account does not have the role, this call has no effect. Requirements: - the caller must be an admin for the role (see {getRoleAdmin}) - revoked role must not be the `PUBLIC_ROLE` Emits a {RoleRevoked} event if the account had the role.\"},\"schedule(address,bytes,uint48)\":{\"details\":\"Schedule a delayed operation for future execution, and return the operation identifier. It is possible to choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays required for the caller. The special value zero will automatically set the earliest possible time. Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}. Emits a {OperationScheduled} event. NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target contract if it is using standard Solidity ABI encoding.\"},\"setGrantDelay(uint64,uint32)\":{\"details\":\"Update the delay for granting a `roleId`. Requirements: - the caller must be a global admin Emits a {RoleGrantDelayChanged} event.\"},\"setRoleAdmin(uint64,uint64)\":{\"details\":\"Change admin role for a given role. Requirements: - the caller must be a global admin Emits a {RoleAdminChanged} event\"},\"setRoleGuardian(uint64,uint64)\":{\"details\":\"Change guardian role for a given role. Requirements: - the caller must be a global admin Emits a {RoleGuardianChanged} event\"},\"setTargetAdminDelay(address,uint32)\":{\"details\":\"Set the delay for changing the configuration of a given target contract. Requirements: - the caller must be a global admin Emits a {TargetAdminDelayUpdated} event.\"},\"setTargetClosed(address,bool)\":{\"details\":\"Set the closed flag for a contract. Requirements: - the caller must be a global admin Emits a {TargetClosed} event.\"},\"setTargetFunctionRole(address,bytes4[],uint64)\":{\"details\":\"Set the role required to call functions identified by the `selectors` in the `target` contract. Requirements: - the caller must be a global admin Emits a {TargetFunctionRoleUpdated} event per selector.\"},\"updateAuthority(address,address)\":{\"details\":\"Changes the authority of a target managed by this manager instance. Requirements: - the caller must be a global admin\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":\"IAccessManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0xdabf85e3bab52e7cfade4f77e661bcf7a2f9f95097bfd2ca5ddb193a0c21ee8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402259332090488a587a858ec0113bc7fe55e9dbc6e329927b87ed0f1cce7d08\",\"dweb:/ipfs/QmPJufTJJJifny3JscKTASsPzCrpXRbhtsJnwkCdbaKDTf\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/manager/IAuthority.sol":{"IAuthority":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"allowed","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canCall(address,address,bytes4)":"b7009613"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Standard interface for permissioning originally defined in Dappsys.\",\"kind\":\"dev\",\"methods\":{\"canCall(address,address,bytes4)\":{\"details\":\"Returns true if the caller can invoke on a target the function identified by a function selector.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/manager/IAuthority.sol\":\"IAuthority\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":920,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":926,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":928,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":930,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":932,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":920,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":926,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":928,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":930,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":932,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1595,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1597,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1601,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1605,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1609,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1615,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ERC721Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1595,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1597,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1601,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1605,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1609,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1615,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220744d9bb72144385edfc7dde59f38ad15d8191ee27bd4410502d0398962e6ebf264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x4D9BB72144385EDFC7DDE59F38AD15D8191EE27BD4 COINBASE SDIV MUL 0xD0 CODECOPY DUP10 PUSH3 0xE6EBF2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"640:4454:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220744d9bb72144385edfc7dde59f38ad15d8191ee27bd4410502d0398962e6ebf264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x4D9BB72144385EDFC7DDE59F38AD15D8191EE27BD4 COINBASE SDIV MUL 0xD0 CODECOPY DUP10 PUSH3 0xE6EBF2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"640:4454:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/NFToken.sol":{"NFToken":{"abi":[{"inputs":[{"internalType":"address","name":"initialAuthority","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"AccessManagedInvalidAuthority","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"uint32","name":"delay","type":"uint32"}],"name":"AccessManagedRequiredDelay","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"AccessManagedUnauthorized","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"authority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"authority","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isConsumingScheduledOp","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_31":{"entryPoint":null,"id":31,"parameterSlots":1,"returnSlots":0},"@_6297":{"entryPoint":null,"id":6297,"parameterSlots":1,"returnSlots":0},"@_949":{"entryPoint":null,"id":949,"parameterSlots":2,"returnSlots":0},"@_setAuthority_121":{"entryPoint":227,"id":121,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1373,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1390,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":666,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":508,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":987,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":389,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":357,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":802,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":948,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":822,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1142,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":687,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":613,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1112,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":812,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1080,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":566,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":519,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":862,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":352,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":703,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1067,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":920,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":716,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":872,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":409,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":915,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:6778:25","nodeType":"YulBlock","src":"0:6778:25","statements":[{"body":{"nativeSrc":"47:35:25","nodeType":"YulBlock","src":"47:35:25","statements":[{"nativeSrc":"57:19:25","nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:25","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:25","nodeType":"YulIdentifier","src":"67:5:25"},"nativeSrc":"67:9:25","nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:25","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:25","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nativeSrc":"177:28:25","nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:25","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:25","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:25","nodeType":"YulIdentifier","src":"187:6:25"},"nativeSrc":"187:12:25","nodeType":"YulFunctionCall","src":"187:12:25"},"nativeSrc":"187:12:25","nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:25","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nativeSrc":"300:28:25","nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:25","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:25","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:25","nodeType":"YulIdentifier","src":"310:6:25"},"nativeSrc":"310:12:25","nodeType":"YulFunctionCall","src":"310:12:25"},"nativeSrc":"310:12:25","nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:25","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nativeSrc":"379:81:25","nodeType":"YulBlock","src":"379:81:25","statements":[{"nativeSrc":"389:65:25","nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nativeSrc":"404:5:25","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nativeSrc":"411:42:25","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:25","nodeType":"YulIdentifier","src":"400:3:25"},"nativeSrc":"400:54:25","nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:25","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:25","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:25","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nativeSrc":"511:51:25","nodeType":"YulBlock","src":"511:51:25","statements":[{"nativeSrc":"521:35:25","nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nativeSrc":"550:5:25","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:25","nodeType":"YulIdentifier","src":"532:17:25"},"nativeSrc":"532:24:25","nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:25","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:25","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:25","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nativeSrc":"611:79:25","nodeType":"YulBlock","src":"611:79:25","statements":[{"body":{"nativeSrc":"668:16:25","nodeType":"YulBlock","src":"668:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:25","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:25","nodeType":"YulLiteral","src":"680:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:25","nodeType":"YulIdentifier","src":"670:6:25"},"nativeSrc":"670:12:25","nodeType":"YulFunctionCall","src":"670:12:25"},"nativeSrc":"670:12:25","nodeType":"YulExpressionStatement","src":"670:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:25","nodeType":"YulIdentifier","src":"634:5:25"},{"arguments":[{"name":"value","nativeSrc":"659:5:25","nodeType":"YulIdentifier","src":"659:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:25","nodeType":"YulIdentifier","src":"641:17:25"},"nativeSrc":"641:24:25","nodeType":"YulFunctionCall","src":"641:24:25"}],"functionName":{"name":"eq","nativeSrc":"631:2:25","nodeType":"YulIdentifier","src":"631:2:25"},"nativeSrc":"631:35:25","nodeType":"YulFunctionCall","src":"631:35:25"}],"functionName":{"name":"iszero","nativeSrc":"624:6:25","nodeType":"YulIdentifier","src":"624:6:25"},"nativeSrc":"624:43:25","nodeType":"YulFunctionCall","src":"624:43:25"},"nativeSrc":"621:63:25","nodeType":"YulIf","src":"621:63:25"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:25","nodeType":"YulTypedName","src":"604:5:25","type":""}],"src":"568:122:25"},{"body":{"nativeSrc":"759:80:25","nodeType":"YulBlock","src":"759:80:25","statements":[{"nativeSrc":"769:22:25","nodeType":"YulAssignment","src":"769:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:25","nodeType":"YulIdentifier","src":"784:6:25"}],"functionName":{"name":"mload","nativeSrc":"778:5:25","nodeType":"YulIdentifier","src":"778:5:25"},"nativeSrc":"778:13:25","nodeType":"YulFunctionCall","src":"778:13:25"},"variableNames":[{"name":"value","nativeSrc":"769:5:25","nodeType":"YulIdentifier","src":"769:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:25","nodeType":"YulIdentifier","src":"827:5:25"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:25","nodeType":"YulIdentifier","src":"800:26:25"},"nativeSrc":"800:33:25","nodeType":"YulFunctionCall","src":"800:33:25"},"nativeSrc":"800:33:25","nodeType":"YulExpressionStatement","src":"800:33:25"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:25","nodeType":"YulTypedName","src":"737:6:25","type":""},{"name":"end","nativeSrc":"745:3:25","nodeType":"YulTypedName","src":"745:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:25","nodeType":"YulTypedName","src":"753:5:25","type":""}],"src":"696:143:25"},{"body":{"nativeSrc":"922:274:25","nodeType":"YulBlock","src":"922:274:25","statements":[{"body":{"nativeSrc":"968:83:25","nodeType":"YulBlock","src":"968:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:25","nodeType":"YulIdentifier","src":"970:77:25"},"nativeSrc":"970:79:25","nodeType":"YulFunctionCall","src":"970:79:25"},"nativeSrc":"970:79:25","nodeType":"YulExpressionStatement","src":"970:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:25","nodeType":"YulIdentifier","src":"943:7:25"},{"name":"headStart","nativeSrc":"952:9:25","nodeType":"YulIdentifier","src":"952:9:25"}],"functionName":{"name":"sub","nativeSrc":"939:3:25","nodeType":"YulIdentifier","src":"939:3:25"},"nativeSrc":"939:23:25","nodeType":"YulFunctionCall","src":"939:23:25"},{"kind":"number","nativeSrc":"964:2:25","nodeType":"YulLiteral","src":"964:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:25","nodeType":"YulIdentifier","src":"935:3:25"},"nativeSrc":"935:32:25","nodeType":"YulFunctionCall","src":"935:32:25"},"nativeSrc":"932:119:25","nodeType":"YulIf","src":"932:119:25"},{"nativeSrc":"1061:128:25","nodeType":"YulBlock","src":"1061:128:25","statements":[{"nativeSrc":"1076:15:25","nodeType":"YulVariableDeclaration","src":"1076:15:25","value":{"kind":"number","nativeSrc":"1090:1:25","nodeType":"YulLiteral","src":"1090:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:25","nodeType":"YulTypedName","src":"1080:6:25","type":""}]},{"nativeSrc":"1105:74:25","nodeType":"YulAssignment","src":"1105:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:25","nodeType":"YulIdentifier","src":"1151:9:25"},{"name":"offset","nativeSrc":"1162:6:25","nodeType":"YulIdentifier","src":"1162:6:25"}],"functionName":{"name":"add","nativeSrc":"1147:3:25","nodeType":"YulIdentifier","src":"1147:3:25"},"nativeSrc":"1147:22:25","nodeType":"YulFunctionCall","src":"1147:22:25"},{"name":"dataEnd","nativeSrc":"1171:7:25","nodeType":"YulIdentifier","src":"1171:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:25","nodeType":"YulIdentifier","src":"1115:31:25"},"nativeSrc":"1115:64:25","nodeType":"YulFunctionCall","src":"1115:64:25"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:25","nodeType":"YulIdentifier","src":"1105:6:25"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:25","nodeType":"YulTypedName","src":"892:9:25","type":""},{"name":"dataEnd","nativeSrc":"903:7:25","nodeType":"YulTypedName","src":"903:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:25","nodeType":"YulTypedName","src":"915:6:25","type":""}],"src":"845:351:25"},{"body":{"nativeSrc":"1261:40:25","nodeType":"YulBlock","src":"1261:40:25","statements":[{"nativeSrc":"1272:22:25","nodeType":"YulAssignment","src":"1272:22:25","value":{"arguments":[{"name":"value","nativeSrc":"1288:5:25","nodeType":"YulIdentifier","src":"1288:5:25"}],"functionName":{"name":"mload","nativeSrc":"1282:5:25","nodeType":"YulIdentifier","src":"1282:5:25"},"nativeSrc":"1282:12:25","nodeType":"YulFunctionCall","src":"1282:12:25"},"variableNames":[{"name":"length","nativeSrc":"1272:6:25","nodeType":"YulIdentifier","src":"1272:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1202:99:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1244:5:25","nodeType":"YulTypedName","src":"1244:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1254:6:25","nodeType":"YulTypedName","src":"1254:6:25","type":""}],"src":"1202:99:25"},{"body":{"nativeSrc":"1335:152:25","nodeType":"YulBlock","src":"1335:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1352:1:25","nodeType":"YulLiteral","src":"1352:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1355:77:25","nodeType":"YulLiteral","src":"1355:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1345:6:25","nodeType":"YulIdentifier","src":"1345:6:25"},"nativeSrc":"1345:88:25","nodeType":"YulFunctionCall","src":"1345:88:25"},"nativeSrc":"1345:88:25","nodeType":"YulExpressionStatement","src":"1345:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1449:1:25","nodeType":"YulLiteral","src":"1449:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"1452:4:25","nodeType":"YulLiteral","src":"1452:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1442:6:25","nodeType":"YulIdentifier","src":"1442:6:25"},"nativeSrc":"1442:15:25","nodeType":"YulFunctionCall","src":"1442:15:25"},"nativeSrc":"1442:15:25","nodeType":"YulExpressionStatement","src":"1442:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:25","nodeType":"YulLiteral","src":"1473:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:4:25","nodeType":"YulLiteral","src":"1476:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1466:6:25","nodeType":"YulIdentifier","src":"1466:6:25"},"nativeSrc":"1466:15:25","nodeType":"YulFunctionCall","src":"1466:15:25"},"nativeSrc":"1466:15:25","nodeType":"YulExpressionStatement","src":"1466:15:25"}]},"name":"panic_error_0x41","nativeSrc":"1307:180:25","nodeType":"YulFunctionDefinition","src":"1307:180:25"},{"body":{"nativeSrc":"1521:152:25","nodeType":"YulBlock","src":"1521:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:25","nodeType":"YulLiteral","src":"1538:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:77:25","nodeType":"YulLiteral","src":"1541:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1531:6:25","nodeType":"YulIdentifier","src":"1531:6:25"},"nativeSrc":"1531:88:25","nodeType":"YulFunctionCall","src":"1531:88:25"},"nativeSrc":"1531:88:25","nodeType":"YulExpressionStatement","src":"1531:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1635:1:25","nodeType":"YulLiteral","src":"1635:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"1638:4:25","nodeType":"YulLiteral","src":"1638:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1628:6:25","nodeType":"YulIdentifier","src":"1628:6:25"},"nativeSrc":"1628:15:25","nodeType":"YulFunctionCall","src":"1628:15:25"},"nativeSrc":"1628:15:25","nodeType":"YulExpressionStatement","src":"1628:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:25","nodeType":"YulLiteral","src":"1659:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:4:25","nodeType":"YulLiteral","src":"1662:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1652:6:25","nodeType":"YulIdentifier","src":"1652:6:25"},"nativeSrc":"1652:15:25","nodeType":"YulFunctionCall","src":"1652:15:25"},"nativeSrc":"1652:15:25","nodeType":"YulExpressionStatement","src":"1652:15:25"}]},"name":"panic_error_0x22","nativeSrc":"1493:180:25","nodeType":"YulFunctionDefinition","src":"1493:180:25"},{"body":{"nativeSrc":"1730:269:25","nodeType":"YulBlock","src":"1730:269:25","statements":[{"nativeSrc":"1740:22:25","nodeType":"YulAssignment","src":"1740:22:25","value":{"arguments":[{"name":"data","nativeSrc":"1754:4:25","nodeType":"YulIdentifier","src":"1754:4:25"},{"kind":"number","nativeSrc":"1760:1:25","nodeType":"YulLiteral","src":"1760:1:25","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1750:3:25","nodeType":"YulIdentifier","src":"1750:3:25"},"nativeSrc":"1750:12:25","nodeType":"YulFunctionCall","src":"1750:12:25"},"variableNames":[{"name":"length","nativeSrc":"1740:6:25","nodeType":"YulIdentifier","src":"1740:6:25"}]},{"nativeSrc":"1771:38:25","nodeType":"YulVariableDeclaration","src":"1771:38:25","value":{"arguments":[{"name":"data","nativeSrc":"1801:4:25","nodeType":"YulIdentifier","src":"1801:4:25"},{"kind":"number","nativeSrc":"1807:1:25","nodeType":"YulLiteral","src":"1807:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1797:3:25","nodeType":"YulIdentifier","src":"1797:3:25"},"nativeSrc":"1797:12:25","nodeType":"YulFunctionCall","src":"1797:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1775:18:25","nodeType":"YulTypedName","src":"1775:18:25","type":""}]},{"body":{"nativeSrc":"1848:51:25","nodeType":"YulBlock","src":"1848:51:25","statements":[{"nativeSrc":"1862:27:25","nodeType":"YulAssignment","src":"1862:27:25","value":{"arguments":[{"name":"length","nativeSrc":"1876:6:25","nodeType":"YulIdentifier","src":"1876:6:25"},{"kind":"number","nativeSrc":"1884:4:25","nodeType":"YulLiteral","src":"1884:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1872:3:25","nodeType":"YulIdentifier","src":"1872:3:25"},"nativeSrc":"1872:17:25","nodeType":"YulFunctionCall","src":"1872:17:25"},"variableNames":[{"name":"length","nativeSrc":"1862:6:25","nodeType":"YulIdentifier","src":"1862:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1828:18:25","nodeType":"YulIdentifier","src":"1828:18:25"}],"functionName":{"name":"iszero","nativeSrc":"1821:6:25","nodeType":"YulIdentifier","src":"1821:6:25"},"nativeSrc":"1821:26:25","nodeType":"YulFunctionCall","src":"1821:26:25"},"nativeSrc":"1818:81:25","nodeType":"YulIf","src":"1818:81:25"},{"body":{"nativeSrc":"1951:42:25","nodeType":"YulBlock","src":"1951:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"1965:16:25","nodeType":"YulIdentifier","src":"1965:16:25"},"nativeSrc":"1965:18:25","nodeType":"YulFunctionCall","src":"1965:18:25"},"nativeSrc":"1965:18:25","nodeType":"YulExpressionStatement","src":"1965:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1915:18:25","nodeType":"YulIdentifier","src":"1915:18:25"},{"arguments":[{"name":"length","nativeSrc":"1938:6:25","nodeType":"YulIdentifier","src":"1938:6:25"},{"kind":"number","nativeSrc":"1946:2:25","nodeType":"YulLiteral","src":"1946:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1935:2:25","nodeType":"YulIdentifier","src":"1935:2:25"},"nativeSrc":"1935:14:25","nodeType":"YulFunctionCall","src":"1935:14:25"}],"functionName":{"name":"eq","nativeSrc":"1912:2:25","nodeType":"YulIdentifier","src":"1912:2:25"},"nativeSrc":"1912:38:25","nodeType":"YulFunctionCall","src":"1912:38:25"},"nativeSrc":"1909:84:25","nodeType":"YulIf","src":"1909:84:25"}]},"name":"extract_byte_array_length","nativeSrc":"1679:320:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1714:4:25","nodeType":"YulTypedName","src":"1714:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1723:6:25","nodeType":"YulTypedName","src":"1723:6:25","type":""}],"src":"1679:320:25"},{"body":{"nativeSrc":"2059:87:25","nodeType":"YulBlock","src":"2059:87:25","statements":[{"nativeSrc":"2069:11:25","nodeType":"YulAssignment","src":"2069:11:25","value":{"name":"ptr","nativeSrc":"2077:3:25","nodeType":"YulIdentifier","src":"2077:3:25"},"variableNames":[{"name":"data","nativeSrc":"2069:4:25","nodeType":"YulIdentifier","src":"2069:4:25"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2097:1:25","nodeType":"YulLiteral","src":"2097:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"2100:3:25","nodeType":"YulIdentifier","src":"2100:3:25"}],"functionName":{"name":"mstore","nativeSrc":"2090:6:25","nodeType":"YulIdentifier","src":"2090:6:25"},"nativeSrc":"2090:14:25","nodeType":"YulFunctionCall","src":"2090:14:25"},"nativeSrc":"2090:14:25","nodeType":"YulExpressionStatement","src":"2090:14:25"},{"nativeSrc":"2113:26:25","nodeType":"YulAssignment","src":"2113:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"2131:1:25","nodeType":"YulLiteral","src":"2131:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2134:4:25","nodeType":"YulLiteral","src":"2134:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2121:9:25","nodeType":"YulIdentifier","src":"2121:9:25"},"nativeSrc":"2121:18:25","nodeType":"YulFunctionCall","src":"2121:18:25"},"variableNames":[{"name":"data","nativeSrc":"2113:4:25","nodeType":"YulIdentifier","src":"2113:4:25"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2005:141:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2046:3:25","nodeType":"YulTypedName","src":"2046:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2054:4:25","nodeType":"YulTypedName","src":"2054:4:25","type":""}],"src":"2005:141:25"},{"body":{"nativeSrc":"2196:49:25","nodeType":"YulBlock","src":"2196:49:25","statements":[{"nativeSrc":"2206:33:25","nodeType":"YulAssignment","src":"2206:33:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2224:5:25","nodeType":"YulIdentifier","src":"2224:5:25"},{"kind":"number","nativeSrc":"2231:2:25","nodeType":"YulLiteral","src":"2231:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2220:3:25","nodeType":"YulIdentifier","src":"2220:3:25"},"nativeSrc":"2220:14:25","nodeType":"YulFunctionCall","src":"2220:14:25"},{"kind":"number","nativeSrc":"2236:2:25","nodeType":"YulLiteral","src":"2236:2:25","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2216:3:25","nodeType":"YulIdentifier","src":"2216:3:25"},"nativeSrc":"2216:23:25","nodeType":"YulFunctionCall","src":"2216:23:25"},"variableNames":[{"name":"result","nativeSrc":"2206:6:25","nodeType":"YulIdentifier","src":"2206:6:25"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2152:93:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2179:5:25","nodeType":"YulTypedName","src":"2179:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2189:6:25","nodeType":"YulTypedName","src":"2189:6:25","type":""}],"src":"2152:93:25"},{"body":{"nativeSrc":"2304:54:25","nodeType":"YulBlock","src":"2304:54:25","statements":[{"nativeSrc":"2314:37:25","nodeType":"YulAssignment","src":"2314:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"2339:4:25","nodeType":"YulIdentifier","src":"2339:4:25"},{"name":"value","nativeSrc":"2345:5:25","nodeType":"YulIdentifier","src":"2345:5:25"}],"functionName":{"name":"shl","nativeSrc":"2335:3:25","nodeType":"YulIdentifier","src":"2335:3:25"},"nativeSrc":"2335:16:25","nodeType":"YulFunctionCall","src":"2335:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"2314:8:25","nodeType":"YulIdentifier","src":"2314:8:25"}]}]},"name":"shift_left_dynamic","nativeSrc":"2251:107:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2279:4:25","nodeType":"YulTypedName","src":"2279:4:25","type":""},{"name":"value","nativeSrc":"2285:5:25","nodeType":"YulTypedName","src":"2285:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2295:8:25","nodeType":"YulTypedName","src":"2295:8:25","type":""}],"src":"2251:107:25"},{"body":{"nativeSrc":"2440:317:25","nodeType":"YulBlock","src":"2440:317:25","statements":[{"nativeSrc":"2450:35:25","nodeType":"YulVariableDeclaration","src":"2450:35:25","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2471:10:25","nodeType":"YulIdentifier","src":"2471:10:25"},{"kind":"number","nativeSrc":"2483:1:25","nodeType":"YulLiteral","src":"2483:1:25","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2467:3:25","nodeType":"YulIdentifier","src":"2467:3:25"},"nativeSrc":"2467:18:25","nodeType":"YulFunctionCall","src":"2467:18:25"},"variables":[{"name":"shiftBits","nativeSrc":"2454:9:25","nodeType":"YulTypedName","src":"2454:9:25","type":""}]},{"nativeSrc":"2494:109:25","nodeType":"YulVariableDeclaration","src":"2494:109:25","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2525:9:25","nodeType":"YulIdentifier","src":"2525:9:25"},{"kind":"number","nativeSrc":"2536:66:25","nodeType":"YulLiteral","src":"2536:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2506:18:25","nodeType":"YulIdentifier","src":"2506:18:25"},"nativeSrc":"2506:97:25","nodeType":"YulFunctionCall","src":"2506:97:25"},"variables":[{"name":"mask","nativeSrc":"2498:4:25","nodeType":"YulTypedName","src":"2498:4:25","type":""}]},{"nativeSrc":"2612:51:25","nodeType":"YulAssignment","src":"2612:51:25","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2643:9:25","nodeType":"YulIdentifier","src":"2643:9:25"},{"name":"toInsert","nativeSrc":"2654:8:25","nodeType":"YulIdentifier","src":"2654:8:25"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2624:18:25","nodeType":"YulIdentifier","src":"2624:18:25"},"nativeSrc":"2624:39:25","nodeType":"YulFunctionCall","src":"2624:39:25"},"variableNames":[{"name":"toInsert","nativeSrc":"2612:8:25","nodeType":"YulIdentifier","src":"2612:8:25"}]},{"nativeSrc":"2672:30:25","nodeType":"YulAssignment","src":"2672:30:25","value":{"arguments":[{"name":"value","nativeSrc":"2685:5:25","nodeType":"YulIdentifier","src":"2685:5:25"},{"arguments":[{"name":"mask","nativeSrc":"2696:4:25","nodeType":"YulIdentifier","src":"2696:4:25"}],"functionName":{"name":"not","nativeSrc":"2692:3:25","nodeType":"YulIdentifier","src":"2692:3:25"},"nativeSrc":"2692:9:25","nodeType":"YulFunctionCall","src":"2692:9:25"}],"functionName":{"name":"and","nativeSrc":"2681:3:25","nodeType":"YulIdentifier","src":"2681:3:25"},"nativeSrc":"2681:21:25","nodeType":"YulFunctionCall","src":"2681:21:25"},"variableNames":[{"name":"value","nativeSrc":"2672:5:25","nodeType":"YulIdentifier","src":"2672:5:25"}]},{"nativeSrc":"2711:40:25","nodeType":"YulAssignment","src":"2711:40:25","value":{"arguments":[{"name":"value","nativeSrc":"2724:5:25","nodeType":"YulIdentifier","src":"2724:5:25"},{"arguments":[{"name":"toInsert","nativeSrc":"2735:8:25","nodeType":"YulIdentifier","src":"2735:8:25"},{"name":"mask","nativeSrc":"2745:4:25","nodeType":"YulIdentifier","src":"2745:4:25"}],"functionName":{"name":"and","nativeSrc":"2731:3:25","nodeType":"YulIdentifier","src":"2731:3:25"},"nativeSrc":"2731:19:25","nodeType":"YulFunctionCall","src":"2731:19:25"}],"functionName":{"name":"or","nativeSrc":"2721:2:25","nodeType":"YulIdentifier","src":"2721:2:25"},"nativeSrc":"2721:30:25","nodeType":"YulFunctionCall","src":"2721:30:25"},"variableNames":[{"name":"result","nativeSrc":"2711:6:25","nodeType":"YulIdentifier","src":"2711:6:25"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2364:393:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2401:5:25","nodeType":"YulTypedName","src":"2401:5:25","type":""},{"name":"shiftBytes","nativeSrc":"2408:10:25","nodeType":"YulTypedName","src":"2408:10:25","type":""},{"name":"toInsert","nativeSrc":"2420:8:25","nodeType":"YulTypedName","src":"2420:8:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2433:6:25","nodeType":"YulTypedName","src":"2433:6:25","type":""}],"src":"2364:393:25"},{"body":{"nativeSrc":"2808:32:25","nodeType":"YulBlock","src":"2808:32:25","statements":[{"nativeSrc":"2818:16:25","nodeType":"YulAssignment","src":"2818:16:25","value":{"name":"value","nativeSrc":"2829:5:25","nodeType":"YulIdentifier","src":"2829:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"2818:7:25","nodeType":"YulIdentifier","src":"2818:7:25"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2763:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2790:5:25","nodeType":"YulTypedName","src":"2790:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2800:7:25","nodeType":"YulTypedName","src":"2800:7:25","type":""}],"src":"2763:77:25"},{"body":{"nativeSrc":"2878:28:25","nodeType":"YulBlock","src":"2878:28:25","statements":[{"nativeSrc":"2888:12:25","nodeType":"YulAssignment","src":"2888:12:25","value":{"name":"value","nativeSrc":"2895:5:25","nodeType":"YulIdentifier","src":"2895:5:25"},"variableNames":[{"name":"ret","nativeSrc":"2888:3:25","nodeType":"YulIdentifier","src":"2888:3:25"}]}]},"name":"identity","nativeSrc":"2846:60:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2864:5:25","nodeType":"YulTypedName","src":"2864:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2874:3:25","nodeType":"YulTypedName","src":"2874:3:25","type":""}],"src":"2846:60:25"},{"body":{"nativeSrc":"2972:82:25","nodeType":"YulBlock","src":"2972:82:25","statements":[{"nativeSrc":"2982:66:25","nodeType":"YulAssignment","src":"2982:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3040:5:25","nodeType":"YulIdentifier","src":"3040:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3022:17:25","nodeType":"YulIdentifier","src":"3022:17:25"},"nativeSrc":"3022:24:25","nodeType":"YulFunctionCall","src":"3022:24:25"}],"functionName":{"name":"identity","nativeSrc":"3013:8:25","nodeType":"YulIdentifier","src":"3013:8:25"},"nativeSrc":"3013:34:25","nodeType":"YulFunctionCall","src":"3013:34:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2995:17:25","nodeType":"YulIdentifier","src":"2995:17:25"},"nativeSrc":"2995:53:25","nodeType":"YulFunctionCall","src":"2995:53:25"},"variableNames":[{"name":"converted","nativeSrc":"2982:9:25","nodeType":"YulIdentifier","src":"2982:9:25"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2912:142:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2952:5:25","nodeType":"YulTypedName","src":"2952:5:25","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2962:9:25","nodeType":"YulTypedName","src":"2962:9:25","type":""}],"src":"2912:142:25"},{"body":{"nativeSrc":"3107:28:25","nodeType":"YulBlock","src":"3107:28:25","statements":[{"nativeSrc":"3117:12:25","nodeType":"YulAssignment","src":"3117:12:25","value":{"name":"value","nativeSrc":"3124:5:25","nodeType":"YulIdentifier","src":"3124:5:25"},"variableNames":[{"name":"ret","nativeSrc":"3117:3:25","nodeType":"YulIdentifier","src":"3117:3:25"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3060:75:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3093:5:25","nodeType":"YulTypedName","src":"3093:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3103:3:25","nodeType":"YulTypedName","src":"3103:3:25","type":""}],"src":"3060:75:25"},{"body":{"nativeSrc":"3217:193:25","nodeType":"YulBlock","src":"3217:193:25","statements":[{"nativeSrc":"3227:63:25","nodeType":"YulVariableDeclaration","src":"3227:63:25","value":{"arguments":[{"name":"value_0","nativeSrc":"3282:7:25","nodeType":"YulIdentifier","src":"3282:7:25"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3251:30:25","nodeType":"YulIdentifier","src":"3251:30:25"},"nativeSrc":"3251:39:25","nodeType":"YulFunctionCall","src":"3251:39:25"},"variables":[{"name":"convertedValue_0","nativeSrc":"3231:16:25","nodeType":"YulTypedName","src":"3231:16:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3306:4:25","nodeType":"YulIdentifier","src":"3306:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3346:4:25","nodeType":"YulIdentifier","src":"3346:4:25"}],"functionName":{"name":"sload","nativeSrc":"3340:5:25","nodeType":"YulIdentifier","src":"3340:5:25"},"nativeSrc":"3340:11:25","nodeType":"YulFunctionCall","src":"3340:11:25"},{"name":"offset","nativeSrc":"3353:6:25","nodeType":"YulIdentifier","src":"3353:6:25"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3385:16:25","nodeType":"YulIdentifier","src":"3385:16:25"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3361:23:25","nodeType":"YulIdentifier","src":"3361:23:25"},"nativeSrc":"3361:41:25","nodeType":"YulFunctionCall","src":"3361:41:25"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3312:27:25","nodeType":"YulIdentifier","src":"3312:27:25"},"nativeSrc":"3312:91:25","nodeType":"YulFunctionCall","src":"3312:91:25"}],"functionName":{"name":"sstore","nativeSrc":"3299:6:25","nodeType":"YulIdentifier","src":"3299:6:25"},"nativeSrc":"3299:105:25","nodeType":"YulFunctionCall","src":"3299:105:25"},"nativeSrc":"3299:105:25","nodeType":"YulExpressionStatement","src":"3299:105:25"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3141:269:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3194:4:25","nodeType":"YulTypedName","src":"3194:4:25","type":""},{"name":"offset","nativeSrc":"3200:6:25","nodeType":"YulTypedName","src":"3200:6:25","type":""},{"name":"value_0","nativeSrc":"3208:7:25","nodeType":"YulTypedName","src":"3208:7:25","type":""}],"src":"3141:269:25"},{"body":{"nativeSrc":"3465:24:25","nodeType":"YulBlock","src":"3465:24:25","statements":[{"nativeSrc":"3475:8:25","nodeType":"YulAssignment","src":"3475:8:25","value":{"kind":"number","nativeSrc":"3482:1:25","nodeType":"YulLiteral","src":"3482:1:25","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3475:3:25","nodeType":"YulIdentifier","src":"3475:3:25"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3416:73:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3461:3:25","nodeType":"YulTypedName","src":"3461:3:25","type":""}],"src":"3416:73:25"},{"body":{"nativeSrc":"3548:136:25","nodeType":"YulBlock","src":"3548:136:25","statements":[{"nativeSrc":"3558:46:25","nodeType":"YulVariableDeclaration","src":"3558:46:25","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:30:25","nodeType":"YulIdentifier","src":"3572:30:25"},"nativeSrc":"3572:32:25","nodeType":"YulFunctionCall","src":"3572:32:25"},"variables":[{"name":"zero_0","nativeSrc":"3562:6:25","nodeType":"YulTypedName","src":"3562:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3657:4:25","nodeType":"YulIdentifier","src":"3657:4:25"},{"name":"offset","nativeSrc":"3663:6:25","nodeType":"YulIdentifier","src":"3663:6:25"},{"name":"zero_0","nativeSrc":"3671:6:25","nodeType":"YulIdentifier","src":"3671:6:25"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3613:43:25","nodeType":"YulIdentifier","src":"3613:43:25"},"nativeSrc":"3613:65:25","nodeType":"YulFunctionCall","src":"3613:65:25"},"nativeSrc":"3613:65:25","nodeType":"YulExpressionStatement","src":"3613:65:25"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3495:189:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3534:4:25","nodeType":"YulTypedName","src":"3534:4:25","type":""},{"name":"offset","nativeSrc":"3540:6:25","nodeType":"YulTypedName","src":"3540:6:25","type":""}],"src":"3495:189:25"},{"body":{"nativeSrc":"3740:136:25","nodeType":"YulBlock","src":"3740:136:25","statements":[{"body":{"nativeSrc":"3807:63:25","nodeType":"YulBlock","src":"3807:63:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3851:5:25","nodeType":"YulIdentifier","src":"3851:5:25"},{"kind":"number","nativeSrc":"3858:1:25","nodeType":"YulLiteral","src":"3858:1:25","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3821:29:25","nodeType":"YulIdentifier","src":"3821:29:25"},"nativeSrc":"3821:39:25","nodeType":"YulFunctionCall","src":"3821:39:25"},"nativeSrc":"3821:39:25","nodeType":"YulExpressionStatement","src":"3821:39:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3760:5:25","nodeType":"YulIdentifier","src":"3760:5:25"},{"name":"end","nativeSrc":"3767:3:25","nodeType":"YulIdentifier","src":"3767:3:25"}],"functionName":{"name":"lt","nativeSrc":"3757:2:25","nodeType":"YulIdentifier","src":"3757:2:25"},"nativeSrc":"3757:14:25","nodeType":"YulFunctionCall","src":"3757:14:25"},"nativeSrc":"3750:120:25","nodeType":"YulForLoop","post":{"nativeSrc":"3772:26:25","nodeType":"YulBlock","src":"3772:26:25","statements":[{"nativeSrc":"3774:22:25","nodeType":"YulAssignment","src":"3774:22:25","value":{"arguments":[{"name":"start","nativeSrc":"3787:5:25","nodeType":"YulIdentifier","src":"3787:5:25"},{"kind":"number","nativeSrc":"3794:1:25","nodeType":"YulLiteral","src":"3794:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3783:3:25","nodeType":"YulIdentifier","src":"3783:3:25"},"nativeSrc":"3783:13:25","nodeType":"YulFunctionCall","src":"3783:13:25"},"variableNames":[{"name":"start","nativeSrc":"3774:5:25","nodeType":"YulIdentifier","src":"3774:5:25"}]}]},"pre":{"nativeSrc":"3754:2:25","nodeType":"YulBlock","src":"3754:2:25","statements":[]},"src":"3750:120:25"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3690:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3728:5:25","nodeType":"YulTypedName","src":"3728:5:25","type":""},{"name":"end","nativeSrc":"3735:3:25","nodeType":"YulTypedName","src":"3735:3:25","type":""}],"src":"3690:186:25"},{"body":{"nativeSrc":"3961:464:25","nodeType":"YulBlock","src":"3961:464:25","statements":[{"body":{"nativeSrc":"3987:431:25","nodeType":"YulBlock","src":"3987:431:25","statements":[{"nativeSrc":"4001:54:25","nodeType":"YulVariableDeclaration","src":"4001:54:25","value":{"arguments":[{"name":"array","nativeSrc":"4049:5:25","nodeType":"YulIdentifier","src":"4049:5:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4017:31:25","nodeType":"YulIdentifier","src":"4017:31:25"},"nativeSrc":"4017:38:25","nodeType":"YulFunctionCall","src":"4017:38:25"},"variables":[{"name":"dataArea","nativeSrc":"4005:8:25","nodeType":"YulTypedName","src":"4005:8:25","type":""}]},{"nativeSrc":"4068:63:25","nodeType":"YulVariableDeclaration","src":"4068:63:25","value":{"arguments":[{"name":"dataArea","nativeSrc":"4091:8:25","nodeType":"YulIdentifier","src":"4091:8:25"},{"arguments":[{"name":"startIndex","nativeSrc":"4119:10:25","nodeType":"YulIdentifier","src":"4119:10:25"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4101:17:25","nodeType":"YulIdentifier","src":"4101:17:25"},"nativeSrc":"4101:29:25","nodeType":"YulFunctionCall","src":"4101:29:25"}],"functionName":{"name":"add","nativeSrc":"4087:3:25","nodeType":"YulIdentifier","src":"4087:3:25"},"nativeSrc":"4087:44:25","nodeType":"YulFunctionCall","src":"4087:44:25"},"variables":[{"name":"deleteStart","nativeSrc":"4072:11:25","nodeType":"YulTypedName","src":"4072:11:25","type":""}]},{"body":{"nativeSrc":"4288:27:25","nodeType":"YulBlock","src":"4288:27:25","statements":[{"nativeSrc":"4290:23:25","nodeType":"YulAssignment","src":"4290:23:25","value":{"name":"dataArea","nativeSrc":"4305:8:25","nodeType":"YulIdentifier","src":"4305:8:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"4290:11:25","nodeType":"YulIdentifier","src":"4290:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4272:10:25","nodeType":"YulIdentifier","src":"4272:10:25"},{"kind":"number","nativeSrc":"4284:2:25","nodeType":"YulLiteral","src":"4284:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4269:2:25","nodeType":"YulIdentifier","src":"4269:2:25"},"nativeSrc":"4269:18:25","nodeType":"YulFunctionCall","src":"4269:18:25"},"nativeSrc":"4266:49:25","nodeType":"YulIf","src":"4266:49:25"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4357:11:25","nodeType":"YulIdentifier","src":"4357:11:25"},{"arguments":[{"name":"dataArea","nativeSrc":"4374:8:25","nodeType":"YulIdentifier","src":"4374:8:25"},{"arguments":[{"name":"len","nativeSrc":"4402:3:25","nodeType":"YulIdentifier","src":"4402:3:25"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4384:17:25","nodeType":"YulIdentifier","src":"4384:17:25"},"nativeSrc":"4384:22:25","nodeType":"YulFunctionCall","src":"4384:22:25"}],"functionName":{"name":"add","nativeSrc":"4370:3:25","nodeType":"YulIdentifier","src":"4370:3:25"},"nativeSrc":"4370:37:25","nodeType":"YulFunctionCall","src":"4370:37:25"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4328:28:25","nodeType":"YulIdentifier","src":"4328:28:25"},"nativeSrc":"4328:80:25","nodeType":"YulFunctionCall","src":"4328:80:25"},"nativeSrc":"4328:80:25","nodeType":"YulExpressionStatement","src":"4328:80:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3978:3:25","nodeType":"YulIdentifier","src":"3978:3:25"},{"kind":"number","nativeSrc":"3983:2:25","nodeType":"YulLiteral","src":"3983:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3975:2:25","nodeType":"YulIdentifier","src":"3975:2:25"},"nativeSrc":"3975:11:25","nodeType":"YulFunctionCall","src":"3975:11:25"},"nativeSrc":"3972:446:25","nodeType":"YulIf","src":"3972:446:25"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"3882:543:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3937:5:25","nodeType":"YulTypedName","src":"3937:5:25","type":""},{"name":"len","nativeSrc":"3944:3:25","nodeType":"YulTypedName","src":"3944:3:25","type":""},{"name":"startIndex","nativeSrc":"3949:10:25","nodeType":"YulTypedName","src":"3949:10:25","type":""}],"src":"3882:543:25"},{"body":{"nativeSrc":"4494:54:25","nodeType":"YulBlock","src":"4494:54:25","statements":[{"nativeSrc":"4504:37:25","nodeType":"YulAssignment","src":"4504:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"4529:4:25","nodeType":"YulIdentifier","src":"4529:4:25"},{"name":"value","nativeSrc":"4535:5:25","nodeType":"YulIdentifier","src":"4535:5:25"}],"functionName":{"name":"shr","nativeSrc":"4525:3:25","nodeType":"YulIdentifier","src":"4525:3:25"},"nativeSrc":"4525:16:25","nodeType":"YulFunctionCall","src":"4525:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"4504:8:25","nodeType":"YulIdentifier","src":"4504:8:25"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4431:117:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4469:4:25","nodeType":"YulTypedName","src":"4469:4:25","type":""},{"name":"value","nativeSrc":"4475:5:25","nodeType":"YulTypedName","src":"4475:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4485:8:25","nodeType":"YulTypedName","src":"4485:8:25","type":""}],"src":"4431:117:25"},{"body":{"nativeSrc":"4605:118:25","nodeType":"YulBlock","src":"4605:118:25","statements":[{"nativeSrc":"4615:68:25","nodeType":"YulVariableDeclaration","src":"4615:68:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4664:1:25","nodeType":"YulLiteral","src":"4664:1:25","type":"","value":"8"},{"name":"bytes","nativeSrc":"4667:5:25","nodeType":"YulIdentifier","src":"4667:5:25"}],"functionName":{"name":"mul","nativeSrc":"4660:3:25","nodeType":"YulIdentifier","src":"4660:3:25"},"nativeSrc":"4660:13:25","nodeType":"YulFunctionCall","src":"4660:13:25"},{"arguments":[{"kind":"number","nativeSrc":"4679:1:25","nodeType":"YulLiteral","src":"4679:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4675:3:25","nodeType":"YulIdentifier","src":"4675:3:25"},"nativeSrc":"4675:6:25","nodeType":"YulFunctionCall","src":"4675:6:25"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4631:28:25","nodeType":"YulIdentifier","src":"4631:28:25"},"nativeSrc":"4631:51:25","nodeType":"YulFunctionCall","src":"4631:51:25"}],"functionName":{"name":"not","nativeSrc":"4627:3:25","nodeType":"YulIdentifier","src":"4627:3:25"},"nativeSrc":"4627:56:25","nodeType":"YulFunctionCall","src":"4627:56:25"},"variables":[{"name":"mask","nativeSrc":"4619:4:25","nodeType":"YulTypedName","src":"4619:4:25","type":""}]},{"nativeSrc":"4692:25:25","nodeType":"YulAssignment","src":"4692:25:25","value":{"arguments":[{"name":"data","nativeSrc":"4706:4:25","nodeType":"YulIdentifier","src":"4706:4:25"},{"name":"mask","nativeSrc":"4712:4:25","nodeType":"YulIdentifier","src":"4712:4:25"}],"functionName":{"name":"and","nativeSrc":"4702:3:25","nodeType":"YulIdentifier","src":"4702:3:25"},"nativeSrc":"4702:15:25","nodeType":"YulFunctionCall","src":"4702:15:25"},"variableNames":[{"name":"result","nativeSrc":"4692:6:25","nodeType":"YulIdentifier","src":"4692:6:25"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4554:169:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4582:4:25","nodeType":"YulTypedName","src":"4582:4:25","type":""},{"name":"bytes","nativeSrc":"4588:5:25","nodeType":"YulTypedName","src":"4588:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4598:6:25","nodeType":"YulTypedName","src":"4598:6:25","type":""}],"src":"4554:169:25"},{"body":{"nativeSrc":"4809:214:25","nodeType":"YulBlock","src":"4809:214:25","statements":[{"nativeSrc":"4942:37:25","nodeType":"YulAssignment","src":"4942:37:25","value":{"arguments":[{"name":"data","nativeSrc":"4969:4:25","nodeType":"YulIdentifier","src":"4969:4:25"},{"name":"len","nativeSrc":"4975:3:25","nodeType":"YulIdentifier","src":"4975:3:25"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4950:18:25","nodeType":"YulIdentifier","src":"4950:18:25"},"nativeSrc":"4950:29:25","nodeType":"YulFunctionCall","src":"4950:29:25"},"variableNames":[{"name":"data","nativeSrc":"4942:4:25","nodeType":"YulIdentifier","src":"4942:4:25"}]},{"nativeSrc":"4988:29:25","nodeType":"YulAssignment","src":"4988:29:25","value":{"arguments":[{"name":"data","nativeSrc":"4999:4:25","nodeType":"YulIdentifier","src":"4999:4:25"},{"arguments":[{"kind":"number","nativeSrc":"5009:1:25","nodeType":"YulLiteral","src":"5009:1:25","type":"","value":"2"},{"name":"len","nativeSrc":"5012:3:25","nodeType":"YulIdentifier","src":"5012:3:25"}],"functionName":{"name":"mul","nativeSrc":"5005:3:25","nodeType":"YulIdentifier","src":"5005:3:25"},"nativeSrc":"5005:11:25","nodeType":"YulFunctionCall","src":"5005:11:25"}],"functionName":{"name":"or","nativeSrc":"4996:2:25","nodeType":"YulIdentifier","src":"4996:2:25"},"nativeSrc":"4996:21:25","nodeType":"YulFunctionCall","src":"4996:21:25"},"variableNames":[{"name":"used","nativeSrc":"4988:4:25","nodeType":"YulIdentifier","src":"4988:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4728:295:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4790:4:25","nodeType":"YulTypedName","src":"4790:4:25","type":""},{"name":"len","nativeSrc":"4796:3:25","nodeType":"YulTypedName","src":"4796:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4804:4:25","nodeType":"YulTypedName","src":"4804:4:25","type":""}],"src":"4728:295:25"},{"body":{"nativeSrc":"5120:1303:25","nodeType":"YulBlock","src":"5120:1303:25","statements":[{"nativeSrc":"5131:51:25","nodeType":"YulVariableDeclaration","src":"5131:51:25","value":{"arguments":[{"name":"src","nativeSrc":"5178:3:25","nodeType":"YulIdentifier","src":"5178:3:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5145:32:25","nodeType":"YulIdentifier","src":"5145:32:25"},"nativeSrc":"5145:37:25","nodeType":"YulFunctionCall","src":"5145:37:25"},"variables":[{"name":"newLen","nativeSrc":"5135:6:25","nodeType":"YulTypedName","src":"5135:6:25","type":""}]},{"body":{"nativeSrc":"5267:22:25","nodeType":"YulBlock","src":"5267:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5269:16:25","nodeType":"YulIdentifier","src":"5269:16:25"},"nativeSrc":"5269:18:25","nodeType":"YulFunctionCall","src":"5269:18:25"},"nativeSrc":"5269:18:25","nodeType":"YulExpressionStatement","src":"5269:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5239:6:25","nodeType":"YulIdentifier","src":"5239:6:25"},{"kind":"number","nativeSrc":"5247:18:25","nodeType":"YulLiteral","src":"5247:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5236:2:25","nodeType":"YulIdentifier","src":"5236:2:25"},"nativeSrc":"5236:30:25","nodeType":"YulFunctionCall","src":"5236:30:25"},"nativeSrc":"5233:56:25","nodeType":"YulIf","src":"5233:56:25"},{"nativeSrc":"5299:52:25","nodeType":"YulVariableDeclaration","src":"5299:52:25","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5345:4:25","nodeType":"YulIdentifier","src":"5345:4:25"}],"functionName":{"name":"sload","nativeSrc":"5339:5:25","nodeType":"YulIdentifier","src":"5339:5:25"},"nativeSrc":"5339:11:25","nodeType":"YulFunctionCall","src":"5339:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5313:25:25","nodeType":"YulIdentifier","src":"5313:25:25"},"nativeSrc":"5313:38:25","nodeType":"YulFunctionCall","src":"5313:38:25"},"variables":[{"name":"oldLen","nativeSrc":"5303:6:25","nodeType":"YulTypedName","src":"5303:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5444:4:25","nodeType":"YulIdentifier","src":"5444:4:25"},{"name":"oldLen","nativeSrc":"5450:6:25","nodeType":"YulIdentifier","src":"5450:6:25"},{"name":"newLen","nativeSrc":"5458:6:25","nodeType":"YulIdentifier","src":"5458:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5398:45:25","nodeType":"YulIdentifier","src":"5398:45:25"},"nativeSrc":"5398:67:25","nodeType":"YulFunctionCall","src":"5398:67:25"},"nativeSrc":"5398:67:25","nodeType":"YulExpressionStatement","src":"5398:67:25"},{"nativeSrc":"5475:18:25","nodeType":"YulVariableDeclaration","src":"5475:18:25","value":{"kind":"number","nativeSrc":"5492:1:25","nodeType":"YulLiteral","src":"5492:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5479:9:25","nodeType":"YulTypedName","src":"5479:9:25","type":""}]},{"nativeSrc":"5503:17:25","nodeType":"YulAssignment","src":"5503:17:25","value":{"kind":"number","nativeSrc":"5516:4:25","nodeType":"YulLiteral","src":"5516:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5503:9:25","nodeType":"YulIdentifier","src":"5503:9:25"}]},{"cases":[{"body":{"nativeSrc":"5567:611:25","nodeType":"YulBlock","src":"5567:611:25","statements":[{"nativeSrc":"5581:37:25","nodeType":"YulVariableDeclaration","src":"5581:37:25","value":{"arguments":[{"name":"newLen","nativeSrc":"5600:6:25","nodeType":"YulIdentifier","src":"5600:6:25"},{"arguments":[{"kind":"number","nativeSrc":"5612:4:25","nodeType":"YulLiteral","src":"5612:4:25","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5608:3:25","nodeType":"YulIdentifier","src":"5608:3:25"},"nativeSrc":"5608:9:25","nodeType":"YulFunctionCall","src":"5608:9:25"}],"functionName":{"name":"and","nativeSrc":"5596:3:25","nodeType":"YulIdentifier","src":"5596:3:25"},"nativeSrc":"5596:22:25","nodeType":"YulFunctionCall","src":"5596:22:25"},"variables":[{"name":"loopEnd","nativeSrc":"5585:7:25","nodeType":"YulTypedName","src":"5585:7:25","type":""}]},{"nativeSrc":"5632:51:25","nodeType":"YulVariableDeclaration","src":"5632:51:25","value":{"arguments":[{"name":"slot","nativeSrc":"5678:4:25","nodeType":"YulIdentifier","src":"5678:4:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5646:31:25","nodeType":"YulIdentifier","src":"5646:31:25"},"nativeSrc":"5646:37:25","nodeType":"YulFunctionCall","src":"5646:37:25"},"variables":[{"name":"dstPtr","nativeSrc":"5636:6:25","nodeType":"YulTypedName","src":"5636:6:25","type":""}]},{"nativeSrc":"5696:10:25","nodeType":"YulVariableDeclaration","src":"5696:10:25","value":{"kind":"number","nativeSrc":"5705:1:25","nodeType":"YulLiteral","src":"5705:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5700:1:25","nodeType":"YulTypedName","src":"5700:1:25","type":""}]},{"body":{"nativeSrc":"5764:163:25","nodeType":"YulBlock","src":"5764:163:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5789:6:25","nodeType":"YulIdentifier","src":"5789:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5807:3:25","nodeType":"YulIdentifier","src":"5807:3:25"},{"name":"srcOffset","nativeSrc":"5812:9:25","nodeType":"YulIdentifier","src":"5812:9:25"}],"functionName":{"name":"add","nativeSrc":"5803:3:25","nodeType":"YulIdentifier","src":"5803:3:25"},"nativeSrc":"5803:19:25","nodeType":"YulFunctionCall","src":"5803:19:25"}],"functionName":{"name":"mload","nativeSrc":"5797:5:25","nodeType":"YulIdentifier","src":"5797:5:25"},"nativeSrc":"5797:26:25","nodeType":"YulFunctionCall","src":"5797:26:25"}],"functionName":{"name":"sstore","nativeSrc":"5782:6:25","nodeType":"YulIdentifier","src":"5782:6:25"},"nativeSrc":"5782:42:25","nodeType":"YulFunctionCall","src":"5782:42:25"},"nativeSrc":"5782:42:25","nodeType":"YulExpressionStatement","src":"5782:42:25"},{"nativeSrc":"5841:24:25","nodeType":"YulAssignment","src":"5841:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"5855:6:25","nodeType":"YulIdentifier","src":"5855:6:25"},{"kind":"number","nativeSrc":"5863:1:25","nodeType":"YulLiteral","src":"5863:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5851:3:25","nodeType":"YulIdentifier","src":"5851:3:25"},"nativeSrc":"5851:14:25","nodeType":"YulFunctionCall","src":"5851:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"5841:6:25","nodeType":"YulIdentifier","src":"5841:6:25"}]},{"nativeSrc":"5882:31:25","nodeType":"YulAssignment","src":"5882:31:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"5899:9:25","nodeType":"YulIdentifier","src":"5899:9:25"},{"kind":"number","nativeSrc":"5910:2:25","nodeType":"YulLiteral","src":"5910:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5895:3:25","nodeType":"YulIdentifier","src":"5895:3:25"},"nativeSrc":"5895:18:25","nodeType":"YulFunctionCall","src":"5895:18:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"5882:9:25","nodeType":"YulIdentifier","src":"5882:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5730:1:25","nodeType":"YulIdentifier","src":"5730:1:25"},{"name":"loopEnd","nativeSrc":"5733:7:25","nodeType":"YulIdentifier","src":"5733:7:25"}],"functionName":{"name":"lt","nativeSrc":"5727:2:25","nodeType":"YulIdentifier","src":"5727:2:25"},"nativeSrc":"5727:14:25","nodeType":"YulFunctionCall","src":"5727:14:25"},"nativeSrc":"5719:208:25","nodeType":"YulForLoop","post":{"nativeSrc":"5742:21:25","nodeType":"YulBlock","src":"5742:21:25","statements":[{"nativeSrc":"5744:17:25","nodeType":"YulAssignment","src":"5744:17:25","value":{"arguments":[{"name":"i","nativeSrc":"5753:1:25","nodeType":"YulIdentifier","src":"5753:1:25"},{"kind":"number","nativeSrc":"5756:4:25","nodeType":"YulLiteral","src":"5756:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5749:3:25","nodeType":"YulIdentifier","src":"5749:3:25"},"nativeSrc":"5749:12:25","nodeType":"YulFunctionCall","src":"5749:12:25"},"variableNames":[{"name":"i","nativeSrc":"5744:1:25","nodeType":"YulIdentifier","src":"5744:1:25"}]}]},"pre":{"nativeSrc":"5723:3:25","nodeType":"YulBlock","src":"5723:3:25","statements":[]},"src":"5719:208:25"},{"body":{"nativeSrc":"5963:156:25","nodeType":"YulBlock","src":"5963:156:25","statements":[{"nativeSrc":"5981:43:25","nodeType":"YulVariableDeclaration","src":"5981:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6008:3:25","nodeType":"YulIdentifier","src":"6008:3:25"},{"name":"srcOffset","nativeSrc":"6013:9:25","nodeType":"YulIdentifier","src":"6013:9:25"}],"functionName":{"name":"add","nativeSrc":"6004:3:25","nodeType":"YulIdentifier","src":"6004:3:25"},"nativeSrc":"6004:19:25","nodeType":"YulFunctionCall","src":"6004:19:25"}],"functionName":{"name":"mload","nativeSrc":"5998:5:25","nodeType":"YulIdentifier","src":"5998:5:25"},"nativeSrc":"5998:26:25","nodeType":"YulFunctionCall","src":"5998:26:25"},"variables":[{"name":"lastValue","nativeSrc":"5985:9:25","nodeType":"YulTypedName","src":"5985:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6048:6:25","nodeType":"YulIdentifier","src":"6048:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"6075:9:25","nodeType":"YulIdentifier","src":"6075:9:25"},{"arguments":[{"name":"newLen","nativeSrc":"6090:6:25","nodeType":"YulIdentifier","src":"6090:6:25"},{"kind":"number","nativeSrc":"6098:4:25","nodeType":"YulLiteral","src":"6098:4:25","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6086:3:25","nodeType":"YulIdentifier","src":"6086:3:25"},"nativeSrc":"6086:17:25","nodeType":"YulFunctionCall","src":"6086:17:25"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6056:18:25","nodeType":"YulIdentifier","src":"6056:18:25"},"nativeSrc":"6056:48:25","nodeType":"YulFunctionCall","src":"6056:48:25"}],"functionName":{"name":"sstore","nativeSrc":"6041:6:25","nodeType":"YulIdentifier","src":"6041:6:25"},"nativeSrc":"6041:64:25","nodeType":"YulFunctionCall","src":"6041:64:25"},"nativeSrc":"6041:64:25","nodeType":"YulExpressionStatement","src":"6041:64:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"5946:7:25","nodeType":"YulIdentifier","src":"5946:7:25"},{"name":"newLen","nativeSrc":"5955:6:25","nodeType":"YulIdentifier","src":"5955:6:25"}],"functionName":{"name":"lt","nativeSrc":"5943:2:25","nodeType":"YulIdentifier","src":"5943:2:25"},"nativeSrc":"5943:19:25","nodeType":"YulFunctionCall","src":"5943:19:25"},"nativeSrc":"5940:179:25","nodeType":"YulIf","src":"5940:179:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6139:4:25","nodeType":"YulIdentifier","src":"6139:4:25"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6153:6:25","nodeType":"YulIdentifier","src":"6153:6:25"},{"kind":"number","nativeSrc":"6161:1:25","nodeType":"YulLiteral","src":"6161:1:25","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6149:3:25","nodeType":"YulIdentifier","src":"6149:3:25"},"nativeSrc":"6149:14:25","nodeType":"YulFunctionCall","src":"6149:14:25"},{"kind":"number","nativeSrc":"6165:1:25","nodeType":"YulLiteral","src":"6165:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6145:3:25","nodeType":"YulIdentifier","src":"6145:3:25"},"nativeSrc":"6145:22:25","nodeType":"YulFunctionCall","src":"6145:22:25"}],"functionName":{"name":"sstore","nativeSrc":"6132:6:25","nodeType":"YulIdentifier","src":"6132:6:25"},"nativeSrc":"6132:36:25","nodeType":"YulFunctionCall","src":"6132:36:25"},"nativeSrc":"6132:36:25","nodeType":"YulExpressionStatement","src":"6132:36:25"}]},"nativeSrc":"5560:618:25","nodeType":"YulCase","src":"5560:618:25","value":{"kind":"number","nativeSrc":"5565:1:25","nodeType":"YulLiteral","src":"5565:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"6195:222:25","nodeType":"YulBlock","src":"6195:222:25","statements":[{"nativeSrc":"6209:14:25","nodeType":"YulVariableDeclaration","src":"6209:14:25","value":{"kind":"number","nativeSrc":"6222:1:25","nodeType":"YulLiteral","src":"6222:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6213:5:25","nodeType":"YulTypedName","src":"6213:5:25","type":""}]},{"body":{"nativeSrc":"6246:67:25","nodeType":"YulBlock","src":"6246:67:25","statements":[{"nativeSrc":"6264:35:25","nodeType":"YulAssignment","src":"6264:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6283:3:25","nodeType":"YulIdentifier","src":"6283:3:25"},{"name":"srcOffset","nativeSrc":"6288:9:25","nodeType":"YulIdentifier","src":"6288:9:25"}],"functionName":{"name":"add","nativeSrc":"6279:3:25","nodeType":"YulIdentifier","src":"6279:3:25"},"nativeSrc":"6279:19:25","nodeType":"YulFunctionCall","src":"6279:19:25"}],"functionName":{"name":"mload","nativeSrc":"6273:5:25","nodeType":"YulIdentifier","src":"6273:5:25"},"nativeSrc":"6273:26:25","nodeType":"YulFunctionCall","src":"6273:26:25"},"variableNames":[{"name":"value","nativeSrc":"6264:5:25","nodeType":"YulIdentifier","src":"6264:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"6239:6:25","nodeType":"YulIdentifier","src":"6239:6:25"},"nativeSrc":"6236:77:25","nodeType":"YulIf","src":"6236:77:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6333:4:25","nodeType":"YulIdentifier","src":"6333:4:25"},{"arguments":[{"name":"value","nativeSrc":"6392:5:25","nodeType":"YulIdentifier","src":"6392:5:25"},{"name":"newLen","nativeSrc":"6399:6:25","nodeType":"YulIdentifier","src":"6399:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6339:52:25","nodeType":"YulIdentifier","src":"6339:52:25"},"nativeSrc":"6339:67:25","nodeType":"YulFunctionCall","src":"6339:67:25"}],"functionName":{"name":"sstore","nativeSrc":"6326:6:25","nodeType":"YulIdentifier","src":"6326:6:25"},"nativeSrc":"6326:81:25","nodeType":"YulFunctionCall","src":"6326:81:25"},"nativeSrc":"6326:81:25","nodeType":"YulExpressionStatement","src":"6326:81:25"}]},"nativeSrc":"6187:230:25","nodeType":"YulCase","src":"6187:230:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5540:6:25","nodeType":"YulIdentifier","src":"5540:6:25"},{"kind":"number","nativeSrc":"5548:2:25","nodeType":"YulLiteral","src":"5548:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5537:2:25","nodeType":"YulIdentifier","src":"5537:2:25"},"nativeSrc":"5537:14:25","nodeType":"YulFunctionCall","src":"5537:14:25"},"nativeSrc":"5530:887:25","nodeType":"YulSwitch","src":"5530:887:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5028:1395:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5109:4:25","nodeType":"YulTypedName","src":"5109:4:25","type":""},{"name":"src","nativeSrc":"5115:3:25","nodeType":"YulTypedName","src":"5115:3:25","type":""}],"src":"5028:1395:25"},{"body":{"nativeSrc":"6494:53:25","nodeType":"YulBlock","src":"6494:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6511:3:25","nodeType":"YulIdentifier","src":"6511:3:25"},{"arguments":[{"name":"value","nativeSrc":"6534:5:25","nodeType":"YulIdentifier","src":"6534:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6516:17:25","nodeType":"YulIdentifier","src":"6516:17:25"},"nativeSrc":"6516:24:25","nodeType":"YulFunctionCall","src":"6516:24:25"}],"functionName":{"name":"mstore","nativeSrc":"6504:6:25","nodeType":"YulIdentifier","src":"6504:6:25"},"nativeSrc":"6504:37:25","nodeType":"YulFunctionCall","src":"6504:37:25"},"nativeSrc":"6504:37:25","nodeType":"YulExpressionStatement","src":"6504:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6429:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6482:5:25","nodeType":"YulTypedName","src":"6482:5:25","type":""},{"name":"pos","nativeSrc":"6489:3:25","nodeType":"YulTypedName","src":"6489:3:25","type":""}],"src":"6429:118:25"},{"body":{"nativeSrc":"6651:124:25","nodeType":"YulBlock","src":"6651:124:25","statements":[{"nativeSrc":"6661:26:25","nodeType":"YulAssignment","src":"6661:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6673:9:25","nodeType":"YulIdentifier","src":"6673:9:25"},{"kind":"number","nativeSrc":"6684:2:25","nodeType":"YulLiteral","src":"6684:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6669:3:25","nodeType":"YulIdentifier","src":"6669:3:25"},"nativeSrc":"6669:18:25","nodeType":"YulFunctionCall","src":"6669:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6661:4:25","nodeType":"YulIdentifier","src":"6661:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6741:6:25","nodeType":"YulIdentifier","src":"6741:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6754:9:25","nodeType":"YulIdentifier","src":"6754:9:25"},{"kind":"number","nativeSrc":"6765:1:25","nodeType":"YulLiteral","src":"6765:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6750:3:25","nodeType":"YulIdentifier","src":"6750:3:25"},"nativeSrc":"6750:17:25","nodeType":"YulFunctionCall","src":"6750:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6697:43:25","nodeType":"YulIdentifier","src":"6697:43:25"},"nativeSrc":"6697:71:25","nodeType":"YulFunctionCall","src":"6697:71:25"},"nativeSrc":"6697:71:25","nodeType":"YulExpressionStatement","src":"6697:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6553:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6623:9:25","nodeType":"YulTypedName","src":"6623:9:25","type":""},{"name":"value0","nativeSrc":"6635:6:25","nodeType":"YulTypedName","src":"6635:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6646:4:25","nodeType":"YulTypedName","src":"6646:4:25","type":""}],"src":"6553:222:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001db838038062001db88339818101604052810190620000379190620001ca565b806040518060400160405280600781526020017f4e46546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e464f00000000000000000000000000000000000000000000000000000000008152508160039081620000b5919062000476565b508060049081620000c7919062000476565b505050620000db81620000e360201b60201c565b50506200058b565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad816040516200015591906200056e565b60405180910390a150565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001928262000165565b9050919050565b620001a48162000185565b8114620001b057600080fd5b50565b600081519050620001c48162000199565b92915050565b600060208284031215620001e357620001e262000160565b5b6000620001f384828501620001b3565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027e57607f821691505b60208210810362000294576200029362000236565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002bf565b6200030a8683620002bf565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000357620003516200034b8462000322565b6200032c565b62000322565b9050919050565b6000819050919050565b620003738362000336565b6200038b62000382826200035e565b848454620002cc565b825550505050565b600090565b620003a262000393565b620003af81848462000368565b505050565b5b81811015620003d757620003cb60008262000398565b600181019050620003b5565b5050565b601f8211156200042657620003f0816200029a565b620003fb84620002af565b810160208510156200040b578190505b620004236200041a85620002af565b830182620003b4565b50505b505050565b600082821c905092915050565b60006200044b600019846008026200042b565b1980831691505092915050565b600062000466838362000438565b9150826002028217905092915050565b6200048182620001fc565b67ffffffffffffffff8111156200049d576200049c62000207565b5b620004a9825462000265565b620004b6828285620003db565b600060209050601f831160018114620004ee5760008415620004d9578287015190505b620004e5858262000458565b86555062000555565b601f198416620004fe866200029a565b60005b82811015620005285784890151825560018201915060208501945060208101905062000501565b8683101562000548578489015162000544601f89168262000438565b8355505b6001600288020188555050505b505050505050565b620005688162000185565b82525050565b60006020820190506200058560008301846200055d565b92915050565b61181d806200059b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a082311161009757806395d89b411161006657806395d89b4114610272578063a9059cbb14610290578063bf7e214f146102c0578063dd62ed3e146102de576100f5565b806370a08231146101ec57806379cc67901461021c5780637a9e5e4b146102385780638fb3603714610254576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806340c10f19146101b457806342966c68146101d0576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b61010261030e565b60405161010f9190611149565b60405180910390f35b610132600480360381019061012d9190611204565b6103a0565b60405161013f919061125f565b60405180910390f35b6101506103c3565b60405161015d9190611289565b60405180910390f35b610180600480360381019061017b91906112a4565b6103cd565b60405161018d919061125f565b60405180910390f35b61019e6103fc565b6040516101ab9190611313565b60405180910390f35b6101ce60048036038101906101c99190611204565b610405565b005b6101ea60048036038101906101e5919061132e565b61042b565b005b6102066004803603810190610201919061135b565b61043f565b6040516102139190611289565b60405180910390f35b61023660048036038101906102319190611204565b610487565b005b610252600480360381019061024d919061135b565b6104a7565b005b61025c610593565b60405161026991906113c3565b60405180910390f35b61027a6105c1565b6040516102879190611149565b60405180910390f35b6102aa60048036038101906102a59190611204565b610653565b6040516102b7919061125f565b60405180910390f35b6102c8610676565b6040516102d591906113ed565b60405180910390f35b6102f860048036038101906102f39190611408565b6106a0565b6040516103059190611289565b60405180910390f35b60606003805461031d90611477565b80601f016020809104026020016040519081016040528092919081815260200182805461034990611477565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b5050505050905090565b6000806103ab610727565b90506103b881858561072f565b600191505092915050565b6000600254905090565b6000806103d8610727565b90506103e5858285610741565b6103f08585856107d5565b60019150509392505050565b60006012905090565b61041d610410610727565b6104186108c9565b6108d6565b6104278282610a18565b5050565b61043c610436610727565b82610a9a565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61049982610493610727565b83610741565b6104a38282610a9a565b5050565b60006104b1610727565b90506104bb610676565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461052a57806040517f068ca9d800000000000000000000000000000000000000000000000000000000815260040161052191906113ed565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff163b0361058657816040517fc2f31e5e00000000000000000000000000000000000000000000000000000000815260040161057d91906113ed565b60405180910390fd5b61058f82610b1c565b5050565b6000600560149054906101000a900460ff166105b357600060e01b6105bc565b638fb3603760e01b5b905090565b6060600480546105d090611477565b80601f01602080910402602001604051908101604052809291908181526020018280546105fc90611477565b80156106495780601f1061061e57610100808354040283529160200191610649565b820191906000526020600020905b81548152906001019060200180831161062c57829003601f168201915b5050505050905090565b60008061065e610727565b905061066b8185856107d5565b600191505092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61073c8383836001610b97565b505050565b600061074d84846106a0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107cf57818110156107bf578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107b6939291906114a8565b60405180910390fd5b6107ce84848484036000610b97565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108475760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161083e91906113ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b95760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108b091906113ed565b60405180910390fd5b6108c4838383610d6e565b505050565b3660008036915091509091565b60008061090a6108e4610676565b863087876000906004926108fa939291906114e9565b90610905919061153c565b610f93565b9150915081610a115760008163ffffffff1611156109d3576001600560146101000a81548160ff021916908315150217905550610945610676565b73ffffffffffffffffffffffffffffffffffffffff166394c7d7ee8686866040518463ffffffff1660e01b8152600401610981939291906115e8565b600060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b505050506000600560146101000a81548160ff021916908315150217905550610a10565b846040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401610a0791906113ed565b60405180910390fd5b5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a8a5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a8191906113ed565b60405180910390fd5b610a9660008383610d6e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b0c5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b0391906113ed565b60405180910390fd5b610b1882600083610d6e565b5050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad81604051610b8c91906113ed565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c095760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c0091906113ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c7b5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c7291906113ed565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d68578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d5f9190611289565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dc0578060026000828254610db49190611649565b92505081905550610e93565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e4c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e43939291906114a8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610edc5780600260008282540392505081905550610f29565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f869190611289565b60405180910390a3505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff16878787604051602401610fc59392919061167d565b60405160208183030381529060405263b700961360e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161101791906116fb565b600060405180830381855afa9150503d8060008114611052576040519150601f19603f3d011682016040523d82523d6000602084013e611057565b606091505b509150915081156110ae57604081511061108c578080602001905181019061107f919061177a565b80945081955050506110ad565b60208151106110ac57808060200190518101906110a991906117ba565b93505b5b5b505094509492505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110f35780820151818401526020810190506110d8565b60008484015250505050565b6000601f19601f8301169050919050565b600061111b826110b9565b61112581856110c4565b93506111358185602086016110d5565b61113e816110ff565b840191505092915050565b600060208201905081810360008301526111638184611110565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061119b82611170565b9050919050565b6111ab81611190565b81146111b657600080fd5b50565b6000813590506111c8816111a2565b92915050565b6000819050919050565b6111e1816111ce565b81146111ec57600080fd5b50565b6000813590506111fe816111d8565b92915050565b6000806040838503121561121b5761121a61116b565b5b6000611229858286016111b9565b925050602061123a858286016111ef565b9150509250929050565b60008115159050919050565b61125981611244565b82525050565b60006020820190506112746000830184611250565b92915050565b611283816111ce565b82525050565b600060208201905061129e600083018461127a565b92915050565b6000806000606084860312156112bd576112bc61116b565b5b60006112cb868287016111b9565b93505060206112dc868287016111b9565b92505060406112ed868287016111ef565b9150509250925092565b600060ff82169050919050565b61130d816112f7565b82525050565b60006020820190506113286000830184611304565b92915050565b6000602082840312156113445761134361116b565b5b6000611352848285016111ef565b91505092915050565b6000602082840312156113715761137061116b565b5b600061137f848285016111b9565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113bd81611388565b82525050565b60006020820190506113d860008301846113b4565b92915050565b6113e781611190565b82525050565b600060208201905061140260008301846113de565b92915050565b6000806040838503121561141f5761141e61116b565b5b600061142d858286016111b9565b925050602061143e858286016111b9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061148f57607f821691505b6020821081036114a2576114a1611448565b5b50919050565b60006060820190506114bd60008301866113de565b6114ca602083018561127a565b6114d7604083018461127a565b949350505050565b600080fd5b600080fd5b600080858511156114fd576114fc6114df565b5b8386111561150e5761150d6114e4565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b60006115488383611524565b826115538135611388565b925060048210156115935761158e7fffffffff000000000000000000000000000000000000000000000000000000008360040360080261152f565b831692505b505092915050565b600082825260208201905092915050565b82818337600083830152505050565b60006115c7838561159b565b93506115d48385846115ac565b6115dd836110ff565b840190509392505050565b60006040820190506115fd60008301866113de565b81810360208301526116108184866115bb565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611654826111ce565b915061165f836111ce565b92508282019050808211156116775761167661161a565b5b92915050565b600060608201905061169260008301866113de565b61169f60208301856113de565b6116ac60408301846113b4565b949350505050565b600081519050919050565b600081905092915050565b60006116d5826116b4565b6116df81856116bf565b93506116ef8185602086016110d5565b80840191505092915050565b600061170782846116ca565b915081905092915050565b61171b81611244565b811461172657600080fd5b50565b60008151905061173881611712565b92915050565b600063ffffffff82169050919050565b6117578161173e565b811461176257600080fd5b50565b6000815190506117748161174e565b92915050565b600080604083850312156117915761179061116b565b5b600061179f85828601611729565b92505060206117b085828601611765565b9150509250929050565b6000602082840312156117d0576117cf61116b565b5b60006117de84828501611729565b9150509291505056fea264697066735822122069f591c9ab53dc4fe35ed9ab1668e298671a8e922cc1ce5d37f5e0f100897b1e64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DB8 CODESIZE SUB DUP1 PUSH3 0x1DB8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1CA JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E46546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E464F0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x476 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x476 JUMP JUMPDEST POP POP POP PUSH3 0xDB DUP2 PUSH3 0xE3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x58B JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP2 PUSH1 0x40 MLOAD PUSH3 0x155 SWAP2 SWAP1 PUSH3 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x192 DUP3 PUSH3 0x165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A4 DUP2 PUSH3 0x185 JUMP JUMPDEST DUP2 EQ PUSH3 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1C4 DUP2 PUSH3 0x199 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1E3 JUMPI PUSH3 0x1E2 PUSH3 0x160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1F3 DUP5 DUP3 DUP6 ADD PUSH3 0x1B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x27E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x294 JUMPI PUSH3 0x293 PUSH3 0x236 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2FE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2BF JUMP JUMPDEST PUSH3 0x30A DUP7 DUP4 PUSH3 0x2BF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x357 PUSH3 0x351 PUSH3 0x34B DUP5 PUSH3 0x322 JUMP JUMPDEST PUSH3 0x32C JUMP JUMPDEST PUSH3 0x322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x373 DUP4 PUSH3 0x336 JUMP JUMPDEST PUSH3 0x38B PUSH3 0x382 DUP3 PUSH3 0x35E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2CC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3A2 PUSH3 0x393 JUMP JUMPDEST PUSH3 0x3AF DUP2 DUP5 DUP5 PUSH3 0x368 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D7 JUMPI PUSH3 0x3CB PUSH1 0x0 DUP3 PUSH3 0x398 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x426 JUMPI PUSH3 0x3F0 DUP2 PUSH3 0x29A JUMP JUMPDEST PUSH3 0x3FB DUP5 PUSH3 0x2AF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x40B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x423 PUSH3 0x41A DUP6 PUSH3 0x2AF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x44B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x42B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x466 DUP4 DUP4 PUSH3 0x438 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x481 DUP3 PUSH3 0x1FC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x49D JUMPI PUSH3 0x49C PUSH3 0x207 JUMP JUMPDEST JUMPDEST PUSH3 0x4A9 DUP3 SLOAD PUSH3 0x265 JUMP JUMPDEST PUSH3 0x4B6 DUP3 DUP3 DUP6 PUSH3 0x3DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4EE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4D9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E5 DUP6 DUP3 PUSH3 0x458 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x555 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4FE DUP7 PUSH3 0x29A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x528 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x501 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x548 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x544 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x438 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x568 DUP2 PUSH3 0x185 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x585 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x55D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x181D DUP1 PUSH3 0x59B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x8FB36037 EQ PUSH2 0x254 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x487 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31D SWAP1 PUSH2 0x1477 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x349 SWAP1 PUSH2 0x1477 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3AB PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B8 DUP2 DUP6 DUP6 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D8 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E5 DUP6 DUP3 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x3F0 DUP6 DUP6 DUP6 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x41D PUSH2 0x410 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x418 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST PUSH2 0x427 DUP3 DUP3 PUSH2 0xA18 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x43C PUSH2 0x436 PUSH2 0x727 JUMP JUMPDEST DUP3 PUSH2 0xA9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x499 DUP3 PUSH2 0x493 PUSH2 0x727 JUMP JUMPDEST DUP4 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4A3 DUP3 DUP3 PUSH2 0xA9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BB PUSH2 0x676 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x586 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xC2F31E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58F DUP3 PUSH2 0xB1C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5B3 JUMPI PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0x5BC JUMP JUMPDEST PUSH4 0x8FB36037 PUSH1 0xE0 SHL JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5D0 SWAP1 PUSH2 0x1477 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5FC SWAP1 PUSH2 0x1477 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x649 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x61E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x649 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x65E PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x66B DUP2 DUP6 DUP6 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x73C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB97 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D DUP5 DUP5 PUSH2 0x6A0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7CF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7BF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CE DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xB97 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C4 DUP4 DUP4 DUP4 PUSH2 0xD6E JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x90A PUSH2 0x8E4 PUSH2 0x676 JUMP JUMPDEST DUP7 ADDRESS DUP8 DUP8 PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP3 PUSH2 0x8FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xA11 JUMPI PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x945 PUSH2 0x676 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94C7D7EE DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA10 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA96 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD6E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB18 DUP3 PUSH1 0x0 DUP4 PUSH2 0xD6E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP2 PUSH1 0x40 MLOAD PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC09 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD68 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE4C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF29 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xFC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xB7009613 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1017 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x10AE JUMPI PUSH1 0x40 DUP2 MLOAD LT PUSH2 0x108C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x10AC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10A9 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x111B DUP3 PUSH2 0x10B9 JUMP JUMPDEST PUSH2 0x1125 DUP2 DUP6 PUSH2 0x10C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1135 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x113E DUP2 PUSH2 0x10FF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1163 DUP2 DUP5 PUSH2 0x1110 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119B DUP3 PUSH2 0x1170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP2 EQ PUSH2 0x11B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11C8 DUP2 PUSH2 0x11A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E1 DUP2 PUSH2 0x11CE JUMP JUMPDEST DUP2 EQ PUSH2 0x11EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FE DUP2 PUSH2 0x11D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x121B JUMPI PUSH2 0x121A PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1229 DUP6 DUP3 DUP7 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x123A DUP6 DUP3 DUP7 ADD PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1259 DUP2 PUSH2 0x1244 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1274 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1250 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1283 DUP2 PUSH2 0x11CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12BD JUMPI PUSH2 0x12BC PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12CB DUP7 DUP3 DUP8 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12DC DUP7 DUP3 DUP8 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12ED DUP7 DUP3 DUP8 ADD PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130D DUP2 PUSH2 0x12F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1328 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1343 PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1352 DUP5 DUP3 DUP6 ADD PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1371 JUMPI PUSH2 0x1370 PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137F DUP5 DUP3 DUP6 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BD DUP2 PUSH2 0x1388 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13E7 DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1402 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141F JUMPI PUSH2 0x141E PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142D DUP6 DUP3 DUP7 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143E DUP6 DUP3 DUP7 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x148F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14A2 JUMPI PUSH2 0x14A1 PUSH2 0x1448 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14BD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x14CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x14D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x14FD JUMPI PUSH2 0x14FC PUSH2 0x14DF JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x150E JUMPI PUSH2 0x150D PUSH2 0x14E4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1548 DUP4 DUP4 PUSH2 0x1524 JUMP JUMPDEST DUP3 PUSH2 0x1553 DUP2 CALLDATALOAD PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x1593 JUMPI PUSH2 0x158E PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x152F JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C7 DUP4 DUP6 PUSH2 0x159B JUMP JUMPDEST SWAP4 POP PUSH2 0x15D4 DUP4 DUP6 DUP5 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x15DD DUP4 PUSH2 0x10FF JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13DE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1610 DUP2 DUP5 DUP7 PUSH2 0x15BB JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1654 DUP3 PUSH2 0x11CE JUMP JUMPDEST SWAP2 POP PUSH2 0x165F DUP4 PUSH2 0x11CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x161A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1692 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x169F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x16AC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13B4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D5 DUP3 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x16DF DUP2 DUP6 PUSH2 0x16BF JUMP JUMPDEST SWAP4 POP PUSH2 0x16EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10D5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1707 DUP3 DUP5 PUSH2 0x16CA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x171B DUP2 PUSH2 0x1244 JUMP JUMPDEST DUP2 EQ PUSH2 0x1726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1738 DUP2 PUSH2 0x1712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1757 DUP2 PUSH2 0x173E JUMP JUMPDEST DUP2 EQ PUSH2 0x1762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1774 DUP2 PUSH2 0x174E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1791 JUMPI PUSH2 0x1790 PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x179F DUP6 DUP3 DUP7 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DE DUP5 DUP3 DUP6 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xF591C9AB53DC4FE35ED9 0xAB AND PUSH9 0xE298671A8E922CC1CE TSTORE CALLDATACOPY CREATE2 0xE0 CALL STOP DUP10 PUSH28 0x1E64736F6C6343000818003300000000000000000000000000000000 ","sourceMap":"306:280:23:-:0;;;368:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;460:16;1896:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1190:31:0;1204:16;1190:13;;;:31;;:::i;:::-;1142:86;368:116:23;306:280;;3803:149:0;3888:12;3875:10;;:25;;;;;;;;;;;;;;;;;;3915:30;3932:12;3915:30;;;;;;:::i;:::-;;;;;;;;3803:149;:::o;88:117:25:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;306:280:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1303":{"entryPoint":1839,"id":1303,"parameterSlots":3,"returnSlots":0},"@_approve_1363":{"entryPoint":2967,"id":1363,"parameterSlots":4,"returnSlots":0},"@_burn_1285":{"entryPoint":2714,"id":1285,"parameterSlots":2,"returnSlots":0},"@_checkCanCall_183":{"entryPoint":2262,"id":183,"parameterSlots":3,"returnSlots":0},"@_mint_1252":{"entryPoint":2584,"id":1252,"parameterSlots":2,"returnSlots":0},"@_msgData_2784":{"entryPoint":2249,"id":2784,"parameterSlots":0,"returnSlots":2},"@_msgSender_2775":{"entryPoint":1831,"id":2775,"parameterSlots":0,"returnSlots":1},"@_setAuthority_121":{"entryPoint":2844,"id":121,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1411":{"entryPoint":1857,"id":1411,"parameterSlots":3,"returnSlots":0},"@_transfer_1142":{"entryPoint":2005,"id":1142,"parameterSlots":3,"returnSlots":0},"@_update_1219":{"entryPoint":3438,"id":1219,"parameterSlots":3,"returnSlots":0},"@allowance_1039":{"entryPoint":1696,"id":1039,"parameterSlots":2,"returnSlots":1},"@approve_1063":{"entryPoint":928,"id":1063,"parameterSlots":2,"returnSlots":1},"@authority_52":{"entryPoint":1654,"id":52,"parameterSlots":0,"returnSlots":1},"@balanceOf_998":{"entryPoint":1087,"id":998,"parameterSlots":1,"returnSlots":1},"@burnFrom_1535":{"entryPoint":1159,"id":1535,"parameterSlots":2,"returnSlots":0},"@burn_1514":{"entryPoint":1067,"id":1514,"parameterSlots":1,"returnSlots":0},"@canCallWithDelay_265":{"entryPoint":3987,"id":265,"parameterSlots":4,"returnSlots":2},"@decimals_976":{"entryPoint":1020,"id":976,"parameterSlots":0,"returnSlots":1},"@isConsumingScheduledOp_106":{"entryPoint":1427,"id":106,"parameterSlots":0,"returnSlots":1},"@mint_6312":{"entryPoint":1029,"id":6312,"parameterSlots":2,"returnSlots":0},"@name_958":{"entryPoint":782,"id":958,"parameterSlots":0,"returnSlots":1},"@setAuthority_89":{"entryPoint":1191,"id":89,"parameterSlots":1,"returnSlots":0},"@symbol_967":{"entryPoint":1473,"id":967,"parameterSlots":0,"returnSlots":1},"@totalSupply_985":{"entryPoint":963,"id":985,"parameterSlots":0,"returnSlots":1},"@transferFrom_1095":{"entryPoint":973,"id":1095,"parameterSlots":3,"returnSlots":1},"@transfer_1022":{"entryPoint":1619,"id":1022,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4537,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":5929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4591,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":5989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5128,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4772,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4612,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_boolt_uint32_fromMemory":{"entryPoint":6010,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4910,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5086,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4688,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":5044,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5563,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5834,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4368,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4730,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4868,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed":{"entryPoint":5757,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5608,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5288,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":5059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4425,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4745,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4883,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":5412,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5812,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4281,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5531,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5823,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4292,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":5353,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":5705,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4496,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4676,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5000,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4464,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4558,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":5950,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4855,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4":{"entryPoint":5436,"id":null,"parameterSlots":2,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5548,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4309,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5239,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5658,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5192,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":5348,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":5343,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4459,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4351,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":5423,"id":null,"parameterSlots":2,"returnSlots":1},"validator_revert_t_address":{"entryPoint":4514,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5906,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4568,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":5966,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:13753:25","nodeType":"YulBlock","src":"0:13753:25","statements":[{"body":{"nativeSrc":"66:40:25","nodeType":"YulBlock","src":"66:40:25","statements":[{"nativeSrc":"77:22:25","nodeType":"YulAssignment","src":"77:22:25","value":{"arguments":[{"name":"value","nativeSrc":"93:5:25","nodeType":"YulIdentifier","src":"93:5:25"}],"functionName":{"name":"mload","nativeSrc":"87:5:25","nodeType":"YulIdentifier","src":"87:5:25"},"nativeSrc":"87:12:25","nodeType":"YulFunctionCall","src":"87:12:25"},"variableNames":[{"name":"length","nativeSrc":"77:6:25","nodeType":"YulIdentifier","src":"77:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:25","nodeType":"YulTypedName","src":"49:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:25","nodeType":"YulTypedName","src":"59:6:25","type":""}],"src":"7:99:25"},{"body":{"nativeSrc":"208:73:25","nodeType":"YulBlock","src":"208:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:25","nodeType":"YulIdentifier","src":"225:3:25"},{"name":"length","nativeSrc":"230:6:25","nodeType":"YulIdentifier","src":"230:6:25"}],"functionName":{"name":"mstore","nativeSrc":"218:6:25","nodeType":"YulIdentifier","src":"218:6:25"},"nativeSrc":"218:19:25","nodeType":"YulFunctionCall","src":"218:19:25"},"nativeSrc":"218:19:25","nodeType":"YulExpressionStatement","src":"218:19:25"},{"nativeSrc":"246:29:25","nodeType":"YulAssignment","src":"246:29:25","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:25","nodeType":"YulIdentifier","src":"265:3:25"},{"kind":"number","nativeSrc":"270:4:25","nodeType":"YulLiteral","src":"270:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:25","nodeType":"YulIdentifier","src":"261:3:25"},"nativeSrc":"261:14:25","nodeType":"YulFunctionCall","src":"261:14:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:25","nodeType":"YulIdentifier","src":"246:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:25","nodeType":"YulTypedName","src":"180:3:25","type":""},{"name":"length","nativeSrc":"185:6:25","nodeType":"YulTypedName","src":"185:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:25","nodeType":"YulTypedName","src":"196:11:25","type":""}],"src":"112:169:25"},{"body":{"nativeSrc":"349:184:25","nodeType":"YulBlock","src":"349:184:25","statements":[{"nativeSrc":"359:10:25","nodeType":"YulVariableDeclaration","src":"359:10:25","value":{"kind":"number","nativeSrc":"368:1:25","nodeType":"YulLiteral","src":"368:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:25","nodeType":"YulTypedName","src":"363:1:25","type":""}]},{"body":{"nativeSrc":"428:63:25","nodeType":"YulBlock","src":"428:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:25","nodeType":"YulIdentifier","src":"453:3:25"},{"name":"i","nativeSrc":"458:1:25","nodeType":"YulIdentifier","src":"458:1:25"}],"functionName":{"name":"add","nativeSrc":"449:3:25","nodeType":"YulIdentifier","src":"449:3:25"},"nativeSrc":"449:11:25","nodeType":"YulFunctionCall","src":"449:11:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:25","nodeType":"YulIdentifier","src":"472:3:25"},{"name":"i","nativeSrc":"477:1:25","nodeType":"YulIdentifier","src":"477:1:25"}],"functionName":{"name":"add","nativeSrc":"468:3:25","nodeType":"YulIdentifier","src":"468:3:25"},"nativeSrc":"468:11:25","nodeType":"YulFunctionCall","src":"468:11:25"}],"functionName":{"name":"mload","nativeSrc":"462:5:25","nodeType":"YulIdentifier","src":"462:5:25"},"nativeSrc":"462:18:25","nodeType":"YulFunctionCall","src":"462:18:25"}],"functionName":{"name":"mstore","nativeSrc":"442:6:25","nodeType":"YulIdentifier","src":"442:6:25"},"nativeSrc":"442:39:25","nodeType":"YulFunctionCall","src":"442:39:25"},"nativeSrc":"442:39:25","nodeType":"YulExpressionStatement","src":"442:39:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:25","nodeType":"YulIdentifier","src":"389:1:25"},{"name":"length","nativeSrc":"392:6:25","nodeType":"YulIdentifier","src":"392:6:25"}],"functionName":{"name":"lt","nativeSrc":"386:2:25","nodeType":"YulIdentifier","src":"386:2:25"},"nativeSrc":"386:13:25","nodeType":"YulFunctionCall","src":"386:13:25"},"nativeSrc":"378:113:25","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:25","nodeType":"YulBlock","src":"400:19:25","statements":[{"nativeSrc":"402:15:25","nodeType":"YulAssignment","src":"402:15:25","value":{"arguments":[{"name":"i","nativeSrc":"411:1:25","nodeType":"YulIdentifier","src":"411:1:25"},{"kind":"number","nativeSrc":"414:2:25","nodeType":"YulLiteral","src":"414:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:25","nodeType":"YulIdentifier","src":"407:3:25"},"nativeSrc":"407:10:25","nodeType":"YulFunctionCall","src":"407:10:25"},"variableNames":[{"name":"i","nativeSrc":"402:1:25","nodeType":"YulIdentifier","src":"402:1:25"}]}]},"pre":{"nativeSrc":"382:3:25","nodeType":"YulBlock","src":"382:3:25","statements":[]},"src":"378:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:25","nodeType":"YulIdentifier","src":"511:3:25"},{"name":"length","nativeSrc":"516:6:25","nodeType":"YulIdentifier","src":"516:6:25"}],"functionName":{"name":"add","nativeSrc":"507:3:25","nodeType":"YulIdentifier","src":"507:3:25"},"nativeSrc":"507:16:25","nodeType":"YulFunctionCall","src":"507:16:25"},{"kind":"number","nativeSrc":"525:1:25","nodeType":"YulLiteral","src":"525:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:25","nodeType":"YulIdentifier","src":"500:6:25"},"nativeSrc":"500:27:25","nodeType":"YulFunctionCall","src":"500:27:25"},"nativeSrc":"500:27:25","nodeType":"YulExpressionStatement","src":"500:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:25","nodeType":"YulTypedName","src":"331:3:25","type":""},{"name":"dst","nativeSrc":"336:3:25","nodeType":"YulTypedName","src":"336:3:25","type":""},{"name":"length","nativeSrc":"341:6:25","nodeType":"YulTypedName","src":"341:6:25","type":""}],"src":"287:246:25"},{"body":{"nativeSrc":"587:54:25","nodeType":"YulBlock","src":"587:54:25","statements":[{"nativeSrc":"597:38:25","nodeType":"YulAssignment","src":"597:38:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:25","nodeType":"YulIdentifier","src":"615:5:25"},{"kind":"number","nativeSrc":"622:2:25","nodeType":"YulLiteral","src":"622:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:25","nodeType":"YulIdentifier","src":"611:3:25"},"nativeSrc":"611:14:25","nodeType":"YulFunctionCall","src":"611:14:25"},{"arguments":[{"kind":"number","nativeSrc":"631:2:25","nodeType":"YulLiteral","src":"631:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:25","nodeType":"YulIdentifier","src":"627:3:25"},"nativeSrc":"627:7:25","nodeType":"YulFunctionCall","src":"627:7:25"}],"functionName":{"name":"and","nativeSrc":"607:3:25","nodeType":"YulIdentifier","src":"607:3:25"},"nativeSrc":"607:28:25","nodeType":"YulFunctionCall","src":"607:28:25"},"variableNames":[{"name":"result","nativeSrc":"597:6:25","nodeType":"YulIdentifier","src":"597:6:25"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:25","nodeType":"YulTypedName","src":"570:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:25","nodeType":"YulTypedName","src":"580:6:25","type":""}],"src":"539:102:25"},{"body":{"nativeSrc":"739:285:25","nodeType":"YulBlock","src":"739:285:25","statements":[{"nativeSrc":"749:53:25","nodeType":"YulVariableDeclaration","src":"749:53:25","value":{"arguments":[{"name":"value","nativeSrc":"796:5:25","nodeType":"YulIdentifier","src":"796:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:25","nodeType":"YulIdentifier","src":"763:32:25"},"nativeSrc":"763:39:25","nodeType":"YulFunctionCall","src":"763:39:25"},"variables":[{"name":"length","nativeSrc":"753:6:25","nodeType":"YulTypedName","src":"753:6:25","type":""}]},{"nativeSrc":"811:78:25","nodeType":"YulAssignment","src":"811:78:25","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:25","nodeType":"YulIdentifier","src":"877:3:25"},{"name":"length","nativeSrc":"882:6:25","nodeType":"YulIdentifier","src":"882:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:25","nodeType":"YulIdentifier","src":"818:58:25"},"nativeSrc":"818:71:25","nodeType":"YulFunctionCall","src":"818:71:25"},"variableNames":[{"name":"pos","nativeSrc":"811:3:25","nodeType":"YulIdentifier","src":"811:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:25","nodeType":"YulIdentifier","src":"937:5:25"},{"kind":"number","nativeSrc":"944:4:25","nodeType":"YulLiteral","src":"944:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:25","nodeType":"YulIdentifier","src":"933:3:25"},"nativeSrc":"933:16:25","nodeType":"YulFunctionCall","src":"933:16:25"},{"name":"pos","nativeSrc":"951:3:25","nodeType":"YulIdentifier","src":"951:3:25"},{"name":"length","nativeSrc":"956:6:25","nodeType":"YulIdentifier","src":"956:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:25","nodeType":"YulIdentifier","src":"898:34:25"},"nativeSrc":"898:65:25","nodeType":"YulFunctionCall","src":"898:65:25"},"nativeSrc":"898:65:25","nodeType":"YulExpressionStatement","src":"898:65:25"},{"nativeSrc":"972:46:25","nodeType":"YulAssignment","src":"972:46:25","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:25","nodeType":"YulIdentifier","src":"983:3:25"},{"arguments":[{"name":"length","nativeSrc":"1010:6:25","nodeType":"YulIdentifier","src":"1010:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:25","nodeType":"YulIdentifier","src":"988:21:25"},"nativeSrc":"988:29:25","nodeType":"YulFunctionCall","src":"988:29:25"}],"functionName":{"name":"add","nativeSrc":"979:3:25","nodeType":"YulIdentifier","src":"979:3:25"},"nativeSrc":"979:39:25","nodeType":"YulFunctionCall","src":"979:39:25"},"variableNames":[{"name":"end","nativeSrc":"972:3:25","nodeType":"YulIdentifier","src":"972:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:25","nodeType":"YulTypedName","src":"720:5:25","type":""},{"name":"pos","nativeSrc":"727:3:25","nodeType":"YulTypedName","src":"727:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:25","nodeType":"YulTypedName","src":"735:3:25","type":""}],"src":"647:377:25"},{"body":{"nativeSrc":"1148:195:25","nodeType":"YulBlock","src":"1148:195:25","statements":[{"nativeSrc":"1158:26:25","nodeType":"YulAssignment","src":"1158:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:25","nodeType":"YulIdentifier","src":"1170:9:25"},{"kind":"number","nativeSrc":"1181:2:25","nodeType":"YulLiteral","src":"1181:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:25","nodeType":"YulIdentifier","src":"1166:3:25"},"nativeSrc":"1166:18:25","nodeType":"YulFunctionCall","src":"1166:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:25","nodeType":"YulIdentifier","src":"1158:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:25","nodeType":"YulIdentifier","src":"1205:9:25"},{"kind":"number","nativeSrc":"1216:1:25","nodeType":"YulLiteral","src":"1216:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:25","nodeType":"YulIdentifier","src":"1201:3:25"},"nativeSrc":"1201:17:25","nodeType":"YulFunctionCall","src":"1201:17:25"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:25","nodeType":"YulIdentifier","src":"1224:4:25"},{"name":"headStart","nativeSrc":"1230:9:25","nodeType":"YulIdentifier","src":"1230:9:25"}],"functionName":{"name":"sub","nativeSrc":"1220:3:25","nodeType":"YulIdentifier","src":"1220:3:25"},"nativeSrc":"1220:20:25","nodeType":"YulFunctionCall","src":"1220:20:25"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:25","nodeType":"YulIdentifier","src":"1194:6:25"},"nativeSrc":"1194:47:25","nodeType":"YulFunctionCall","src":"1194:47:25"},"nativeSrc":"1194:47:25","nodeType":"YulExpressionStatement","src":"1194:47:25"},{"nativeSrc":"1250:86:25","nodeType":"YulAssignment","src":"1250:86:25","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:25","nodeType":"YulIdentifier","src":"1322:6:25"},{"name":"tail","nativeSrc":"1331:4:25","nodeType":"YulIdentifier","src":"1331:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:25","nodeType":"YulIdentifier","src":"1258:63:25"},"nativeSrc":"1258:78:25","nodeType":"YulFunctionCall","src":"1258:78:25"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:25","nodeType":"YulIdentifier","src":"1250:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:25","nodeType":"YulTypedName","src":"1120:9:25","type":""},{"name":"value0","nativeSrc":"1132:6:25","nodeType":"YulTypedName","src":"1132:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:25","nodeType":"YulTypedName","src":"1143:4:25","type":""}],"src":"1030:313:25"},{"body":{"nativeSrc":"1389:35:25","nodeType":"YulBlock","src":"1389:35:25","statements":[{"nativeSrc":"1399:19:25","nodeType":"YulAssignment","src":"1399:19:25","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:25","nodeType":"YulLiteral","src":"1415:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:25","nodeType":"YulIdentifier","src":"1409:5:25"},"nativeSrc":"1409:9:25","nodeType":"YulFunctionCall","src":"1409:9:25"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:25","nodeType":"YulIdentifier","src":"1399:6:25"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:25","nodeType":"YulTypedName","src":"1382:6:25","type":""}],"src":"1349:75:25"},{"body":{"nativeSrc":"1519:28:25","nodeType":"YulBlock","src":"1519:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:25","nodeType":"YulLiteral","src":"1536:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:25","nodeType":"YulLiteral","src":"1539:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:25","nodeType":"YulIdentifier","src":"1529:6:25"},"nativeSrc":"1529:12:25","nodeType":"YulFunctionCall","src":"1529:12:25"},"nativeSrc":"1529:12:25","nodeType":"YulExpressionStatement","src":"1529:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:25","nodeType":"YulFunctionDefinition","src":"1430:117:25"},{"body":{"nativeSrc":"1642:28:25","nodeType":"YulBlock","src":"1642:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:25","nodeType":"YulLiteral","src":"1659:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:25","nodeType":"YulLiteral","src":"1662:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:25","nodeType":"YulIdentifier","src":"1652:6:25"},"nativeSrc":"1652:12:25","nodeType":"YulFunctionCall","src":"1652:12:25"},"nativeSrc":"1652:12:25","nodeType":"YulExpressionStatement","src":"1652:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:25","nodeType":"YulFunctionDefinition","src":"1553:117:25"},{"body":{"nativeSrc":"1721:81:25","nodeType":"YulBlock","src":"1721:81:25","statements":[{"nativeSrc":"1731:65:25","nodeType":"YulAssignment","src":"1731:65:25","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:25","nodeType":"YulIdentifier","src":"1746:5:25"},{"kind":"number","nativeSrc":"1753:42:25","nodeType":"YulLiteral","src":"1753:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:25","nodeType":"YulIdentifier","src":"1742:3:25"},"nativeSrc":"1742:54:25","nodeType":"YulFunctionCall","src":"1742:54:25"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:25","nodeType":"YulIdentifier","src":"1731:7:25"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:25","nodeType":"YulTypedName","src":"1703:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:25","nodeType":"YulTypedName","src":"1713:7:25","type":""}],"src":"1676:126:25"},{"body":{"nativeSrc":"1853:51:25","nodeType":"YulBlock","src":"1853:51:25","statements":[{"nativeSrc":"1863:35:25","nodeType":"YulAssignment","src":"1863:35:25","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:25","nodeType":"YulIdentifier","src":"1892:5:25"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:25","nodeType":"YulIdentifier","src":"1874:17:25"},"nativeSrc":"1874:24:25","nodeType":"YulFunctionCall","src":"1874:24:25"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:25","nodeType":"YulIdentifier","src":"1863:7:25"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:25","nodeType":"YulTypedName","src":"1835:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:25","nodeType":"YulTypedName","src":"1845:7:25","type":""}],"src":"1808:96:25"},{"body":{"nativeSrc":"1953:79:25","nodeType":"YulBlock","src":"1953:79:25","statements":[{"body":{"nativeSrc":"2010:16:25","nodeType":"YulBlock","src":"2010:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:25","nodeType":"YulLiteral","src":"2019:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:25","nodeType":"YulLiteral","src":"2022:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:25","nodeType":"YulIdentifier","src":"2012:6:25"},"nativeSrc":"2012:12:25","nodeType":"YulFunctionCall","src":"2012:12:25"},"nativeSrc":"2012:12:25","nodeType":"YulExpressionStatement","src":"2012:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:25","nodeType":"YulIdentifier","src":"1976:5:25"},{"arguments":[{"name":"value","nativeSrc":"2001:5:25","nodeType":"YulIdentifier","src":"2001:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:25","nodeType":"YulIdentifier","src":"1983:17:25"},"nativeSrc":"1983:24:25","nodeType":"YulFunctionCall","src":"1983:24:25"}],"functionName":{"name":"eq","nativeSrc":"1973:2:25","nodeType":"YulIdentifier","src":"1973:2:25"},"nativeSrc":"1973:35:25","nodeType":"YulFunctionCall","src":"1973:35:25"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:25","nodeType":"YulIdentifier","src":"1966:6:25"},"nativeSrc":"1966:43:25","nodeType":"YulFunctionCall","src":"1966:43:25"},"nativeSrc":"1963:63:25","nodeType":"YulIf","src":"1963:63:25"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:25","nodeType":"YulTypedName","src":"1946:5:25","type":""}],"src":"1910:122:25"},{"body":{"nativeSrc":"2090:87:25","nodeType":"YulBlock","src":"2090:87:25","statements":[{"nativeSrc":"2100:29:25","nodeType":"YulAssignment","src":"2100:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:25","nodeType":"YulIdentifier","src":"2122:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:25","nodeType":"YulIdentifier","src":"2109:12:25"},"nativeSrc":"2109:20:25","nodeType":"YulFunctionCall","src":"2109:20:25"},"variableNames":[{"name":"value","nativeSrc":"2100:5:25","nodeType":"YulIdentifier","src":"2100:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:25","nodeType":"YulIdentifier","src":"2165:5:25"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:25","nodeType":"YulIdentifier","src":"2138:26:25"},"nativeSrc":"2138:33:25","nodeType":"YulFunctionCall","src":"2138:33:25"},"nativeSrc":"2138:33:25","nodeType":"YulExpressionStatement","src":"2138:33:25"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:25","nodeType":"YulTypedName","src":"2068:6:25","type":""},{"name":"end","nativeSrc":"2076:3:25","nodeType":"YulTypedName","src":"2076:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:25","nodeType":"YulTypedName","src":"2084:5:25","type":""}],"src":"2038:139:25"},{"body":{"nativeSrc":"2228:32:25","nodeType":"YulBlock","src":"2228:32:25","statements":[{"nativeSrc":"2238:16:25","nodeType":"YulAssignment","src":"2238:16:25","value":{"name":"value","nativeSrc":"2249:5:25","nodeType":"YulIdentifier","src":"2249:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:25","nodeType":"YulIdentifier","src":"2238:7:25"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:25","nodeType":"YulTypedName","src":"2210:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:25","nodeType":"YulTypedName","src":"2220:7:25","type":""}],"src":"2183:77:25"},{"body":{"nativeSrc":"2309:79:25","nodeType":"YulBlock","src":"2309:79:25","statements":[{"body":{"nativeSrc":"2366:16:25","nodeType":"YulBlock","src":"2366:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:25","nodeType":"YulLiteral","src":"2375:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:25","nodeType":"YulLiteral","src":"2378:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:25","nodeType":"YulIdentifier","src":"2368:6:25"},"nativeSrc":"2368:12:25","nodeType":"YulFunctionCall","src":"2368:12:25"},"nativeSrc":"2368:12:25","nodeType":"YulExpressionStatement","src":"2368:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:25","nodeType":"YulIdentifier","src":"2332:5:25"},{"arguments":[{"name":"value","nativeSrc":"2357:5:25","nodeType":"YulIdentifier","src":"2357:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:25","nodeType":"YulIdentifier","src":"2339:17:25"},"nativeSrc":"2339:24:25","nodeType":"YulFunctionCall","src":"2339:24:25"}],"functionName":{"name":"eq","nativeSrc":"2329:2:25","nodeType":"YulIdentifier","src":"2329:2:25"},"nativeSrc":"2329:35:25","nodeType":"YulFunctionCall","src":"2329:35:25"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:25","nodeType":"YulIdentifier","src":"2322:6:25"},"nativeSrc":"2322:43:25","nodeType":"YulFunctionCall","src":"2322:43:25"},"nativeSrc":"2319:63:25","nodeType":"YulIf","src":"2319:63:25"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:25","nodeType":"YulTypedName","src":"2302:5:25","type":""}],"src":"2266:122:25"},{"body":{"nativeSrc":"2446:87:25","nodeType":"YulBlock","src":"2446:87:25","statements":[{"nativeSrc":"2456:29:25","nodeType":"YulAssignment","src":"2456:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:25","nodeType":"YulIdentifier","src":"2478:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:25","nodeType":"YulIdentifier","src":"2465:12:25"},"nativeSrc":"2465:20:25","nodeType":"YulFunctionCall","src":"2465:20:25"},"variableNames":[{"name":"value","nativeSrc":"2456:5:25","nodeType":"YulIdentifier","src":"2456:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:25","nodeType":"YulIdentifier","src":"2521:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:25","nodeType":"YulIdentifier","src":"2494:26:25"},"nativeSrc":"2494:33:25","nodeType":"YulFunctionCall","src":"2494:33:25"},"nativeSrc":"2494:33:25","nodeType":"YulExpressionStatement","src":"2494:33:25"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:25","nodeType":"YulTypedName","src":"2424:6:25","type":""},{"name":"end","nativeSrc":"2432:3:25","nodeType":"YulTypedName","src":"2432:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:25","nodeType":"YulTypedName","src":"2440:5:25","type":""}],"src":"2394:139:25"},{"body":{"nativeSrc":"2622:391:25","nodeType":"YulBlock","src":"2622:391:25","statements":[{"body":{"nativeSrc":"2668:83:25","nodeType":"YulBlock","src":"2668:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:25","nodeType":"YulIdentifier","src":"2670:77:25"},"nativeSrc":"2670:79:25","nodeType":"YulFunctionCall","src":"2670:79:25"},"nativeSrc":"2670:79:25","nodeType":"YulExpressionStatement","src":"2670:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:25","nodeType":"YulIdentifier","src":"2643:7:25"},{"name":"headStart","nativeSrc":"2652:9:25","nodeType":"YulIdentifier","src":"2652:9:25"}],"functionName":{"name":"sub","nativeSrc":"2639:3:25","nodeType":"YulIdentifier","src":"2639:3:25"},"nativeSrc":"2639:23:25","nodeType":"YulFunctionCall","src":"2639:23:25"},{"kind":"number","nativeSrc":"2664:2:25","nodeType":"YulLiteral","src":"2664:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:25","nodeType":"YulIdentifier","src":"2635:3:25"},"nativeSrc":"2635:32:25","nodeType":"YulFunctionCall","src":"2635:32:25"},"nativeSrc":"2632:119:25","nodeType":"YulIf","src":"2632:119:25"},{"nativeSrc":"2761:117:25","nodeType":"YulBlock","src":"2761:117:25","statements":[{"nativeSrc":"2776:15:25","nodeType":"YulVariableDeclaration","src":"2776:15:25","value":{"kind":"number","nativeSrc":"2790:1:25","nodeType":"YulLiteral","src":"2790:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:25","nodeType":"YulTypedName","src":"2780:6:25","type":""}]},{"nativeSrc":"2805:63:25","nodeType":"YulAssignment","src":"2805:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:25","nodeType":"YulIdentifier","src":"2840:9:25"},{"name":"offset","nativeSrc":"2851:6:25","nodeType":"YulIdentifier","src":"2851:6:25"}],"functionName":{"name":"add","nativeSrc":"2836:3:25","nodeType":"YulIdentifier","src":"2836:3:25"},"nativeSrc":"2836:22:25","nodeType":"YulFunctionCall","src":"2836:22:25"},{"name":"dataEnd","nativeSrc":"2860:7:25","nodeType":"YulIdentifier","src":"2860:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:25","nodeType":"YulIdentifier","src":"2815:20:25"},"nativeSrc":"2815:53:25","nodeType":"YulFunctionCall","src":"2815:53:25"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:25","nodeType":"YulIdentifier","src":"2805:6:25"}]}]},{"nativeSrc":"2888:118:25","nodeType":"YulBlock","src":"2888:118:25","statements":[{"nativeSrc":"2903:16:25","nodeType":"YulVariableDeclaration","src":"2903:16:25","value":{"kind":"number","nativeSrc":"2917:2:25","nodeType":"YulLiteral","src":"2917:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:25","nodeType":"YulTypedName","src":"2907:6:25","type":""}]},{"nativeSrc":"2933:63:25","nodeType":"YulAssignment","src":"2933:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:25","nodeType":"YulIdentifier","src":"2968:9:25"},{"name":"offset","nativeSrc":"2979:6:25","nodeType":"YulIdentifier","src":"2979:6:25"}],"functionName":{"name":"add","nativeSrc":"2964:3:25","nodeType":"YulIdentifier","src":"2964:3:25"},"nativeSrc":"2964:22:25","nodeType":"YulFunctionCall","src":"2964:22:25"},{"name":"dataEnd","nativeSrc":"2988:7:25","nodeType":"YulIdentifier","src":"2988:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:25","nodeType":"YulIdentifier","src":"2943:20:25"},"nativeSrc":"2943:53:25","nodeType":"YulFunctionCall","src":"2943:53:25"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:25","nodeType":"YulIdentifier","src":"2933:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:25","nodeType":"YulTypedName","src":"2584:9:25","type":""},{"name":"dataEnd","nativeSrc":"2595:7:25","nodeType":"YulTypedName","src":"2595:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:25","nodeType":"YulTypedName","src":"2607:6:25","type":""},{"name":"value1","nativeSrc":"2615:6:25","nodeType":"YulTypedName","src":"2615:6:25","type":""}],"src":"2539:474:25"},{"body":{"nativeSrc":"3061:48:25","nodeType":"YulBlock","src":"3061:48:25","statements":[{"nativeSrc":"3071:32:25","nodeType":"YulAssignment","src":"3071:32:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:25","nodeType":"YulIdentifier","src":"3096:5:25"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:25","nodeType":"YulIdentifier","src":"3089:6:25"},"nativeSrc":"3089:13:25","nodeType":"YulFunctionCall","src":"3089:13:25"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:25","nodeType":"YulIdentifier","src":"3082:6:25"},"nativeSrc":"3082:21:25","nodeType":"YulFunctionCall","src":"3082:21:25"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:25","nodeType":"YulIdentifier","src":"3071:7:25"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:25","nodeType":"YulTypedName","src":"3043:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:25","nodeType":"YulTypedName","src":"3053:7:25","type":""}],"src":"3019:90:25"},{"body":{"nativeSrc":"3174:50:25","nodeType":"YulBlock","src":"3174:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:25","nodeType":"YulIdentifier","src":"3191:3:25"},{"arguments":[{"name":"value","nativeSrc":"3211:5:25","nodeType":"YulIdentifier","src":"3211:5:25"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:25","nodeType":"YulIdentifier","src":"3196:14:25"},"nativeSrc":"3196:21:25","nodeType":"YulFunctionCall","src":"3196:21:25"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:25","nodeType":"YulIdentifier","src":"3184:6:25"},"nativeSrc":"3184:34:25","nodeType":"YulFunctionCall","src":"3184:34:25"},"nativeSrc":"3184:34:25","nodeType":"YulExpressionStatement","src":"3184:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:25","nodeType":"YulTypedName","src":"3162:5:25","type":""},{"name":"pos","nativeSrc":"3169:3:25","nodeType":"YulTypedName","src":"3169:3:25","type":""}],"src":"3115:109:25"},{"body":{"nativeSrc":"3322:118:25","nodeType":"YulBlock","src":"3322:118:25","statements":[{"nativeSrc":"3332:26:25","nodeType":"YulAssignment","src":"3332:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:25","nodeType":"YulIdentifier","src":"3344:9:25"},{"kind":"number","nativeSrc":"3355:2:25","nodeType":"YulLiteral","src":"3355:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:25","nodeType":"YulIdentifier","src":"3340:3:25"},"nativeSrc":"3340:18:25","nodeType":"YulFunctionCall","src":"3340:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:25","nodeType":"YulIdentifier","src":"3332:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:25","nodeType":"YulIdentifier","src":"3406:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:25","nodeType":"YulIdentifier","src":"3419:9:25"},{"kind":"number","nativeSrc":"3430:1:25","nodeType":"YulLiteral","src":"3430:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:25","nodeType":"YulIdentifier","src":"3415:3:25"},"nativeSrc":"3415:17:25","nodeType":"YulFunctionCall","src":"3415:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:25","nodeType":"YulIdentifier","src":"3368:37:25"},"nativeSrc":"3368:65:25","nodeType":"YulFunctionCall","src":"3368:65:25"},"nativeSrc":"3368:65:25","nodeType":"YulExpressionStatement","src":"3368:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:25","nodeType":"YulTypedName","src":"3294:9:25","type":""},{"name":"value0","nativeSrc":"3306:6:25","nodeType":"YulTypedName","src":"3306:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:25","nodeType":"YulTypedName","src":"3317:4:25","type":""}],"src":"3230:210:25"},{"body":{"nativeSrc":"3511:53:25","nodeType":"YulBlock","src":"3511:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:25","nodeType":"YulIdentifier","src":"3528:3:25"},{"arguments":[{"name":"value","nativeSrc":"3551:5:25","nodeType":"YulIdentifier","src":"3551:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:25","nodeType":"YulIdentifier","src":"3533:17:25"},"nativeSrc":"3533:24:25","nodeType":"YulFunctionCall","src":"3533:24:25"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:25","nodeType":"YulIdentifier","src":"3521:6:25"},"nativeSrc":"3521:37:25","nodeType":"YulFunctionCall","src":"3521:37:25"},"nativeSrc":"3521:37:25","nodeType":"YulExpressionStatement","src":"3521:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:25","nodeType":"YulTypedName","src":"3499:5:25","type":""},{"name":"pos","nativeSrc":"3506:3:25","nodeType":"YulTypedName","src":"3506:3:25","type":""}],"src":"3446:118:25"},{"body":{"nativeSrc":"3668:124:25","nodeType":"YulBlock","src":"3668:124:25","statements":[{"nativeSrc":"3678:26:25","nodeType":"YulAssignment","src":"3678:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:25","nodeType":"YulIdentifier","src":"3690:9:25"},{"kind":"number","nativeSrc":"3701:2:25","nodeType":"YulLiteral","src":"3701:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:25","nodeType":"YulIdentifier","src":"3686:3:25"},"nativeSrc":"3686:18:25","nodeType":"YulFunctionCall","src":"3686:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:25","nodeType":"YulIdentifier","src":"3678:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:25","nodeType":"YulIdentifier","src":"3758:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:25","nodeType":"YulIdentifier","src":"3771:9:25"},{"kind":"number","nativeSrc":"3782:1:25","nodeType":"YulLiteral","src":"3782:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:25","nodeType":"YulIdentifier","src":"3767:3:25"},"nativeSrc":"3767:17:25","nodeType":"YulFunctionCall","src":"3767:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:25","nodeType":"YulIdentifier","src":"3714:43:25"},"nativeSrc":"3714:71:25","nodeType":"YulFunctionCall","src":"3714:71:25"},"nativeSrc":"3714:71:25","nodeType":"YulExpressionStatement","src":"3714:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:25","nodeType":"YulTypedName","src":"3640:9:25","type":""},{"name":"value0","nativeSrc":"3652:6:25","nodeType":"YulTypedName","src":"3652:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:25","nodeType":"YulTypedName","src":"3663:4:25","type":""}],"src":"3570:222:25"},{"body":{"nativeSrc":"3898:519:25","nodeType":"YulBlock","src":"3898:519:25","statements":[{"body":{"nativeSrc":"3944:83:25","nodeType":"YulBlock","src":"3944:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:25","nodeType":"YulIdentifier","src":"3946:77:25"},"nativeSrc":"3946:79:25","nodeType":"YulFunctionCall","src":"3946:79:25"},"nativeSrc":"3946:79:25","nodeType":"YulExpressionStatement","src":"3946:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:25","nodeType":"YulIdentifier","src":"3919:7:25"},{"name":"headStart","nativeSrc":"3928:9:25","nodeType":"YulIdentifier","src":"3928:9:25"}],"functionName":{"name":"sub","nativeSrc":"3915:3:25","nodeType":"YulIdentifier","src":"3915:3:25"},"nativeSrc":"3915:23:25","nodeType":"YulFunctionCall","src":"3915:23:25"},{"kind":"number","nativeSrc":"3940:2:25","nodeType":"YulLiteral","src":"3940:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:25","nodeType":"YulIdentifier","src":"3911:3:25"},"nativeSrc":"3911:32:25","nodeType":"YulFunctionCall","src":"3911:32:25"},"nativeSrc":"3908:119:25","nodeType":"YulIf","src":"3908:119:25"},{"nativeSrc":"4037:117:25","nodeType":"YulBlock","src":"4037:117:25","statements":[{"nativeSrc":"4052:15:25","nodeType":"YulVariableDeclaration","src":"4052:15:25","value":{"kind":"number","nativeSrc":"4066:1:25","nodeType":"YulLiteral","src":"4066:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:25","nodeType":"YulTypedName","src":"4056:6:25","type":""}]},{"nativeSrc":"4081:63:25","nodeType":"YulAssignment","src":"4081:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:25","nodeType":"YulIdentifier","src":"4116:9:25"},{"name":"offset","nativeSrc":"4127:6:25","nodeType":"YulIdentifier","src":"4127:6:25"}],"functionName":{"name":"add","nativeSrc":"4112:3:25","nodeType":"YulIdentifier","src":"4112:3:25"},"nativeSrc":"4112:22:25","nodeType":"YulFunctionCall","src":"4112:22:25"},{"name":"dataEnd","nativeSrc":"4136:7:25","nodeType":"YulIdentifier","src":"4136:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:25","nodeType":"YulIdentifier","src":"4091:20:25"},"nativeSrc":"4091:53:25","nodeType":"YulFunctionCall","src":"4091:53:25"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:25","nodeType":"YulIdentifier","src":"4081:6:25"}]}]},{"nativeSrc":"4164:118:25","nodeType":"YulBlock","src":"4164:118:25","statements":[{"nativeSrc":"4179:16:25","nodeType":"YulVariableDeclaration","src":"4179:16:25","value":{"kind":"number","nativeSrc":"4193:2:25","nodeType":"YulLiteral","src":"4193:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:25","nodeType":"YulTypedName","src":"4183:6:25","type":""}]},{"nativeSrc":"4209:63:25","nodeType":"YulAssignment","src":"4209:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:25","nodeType":"YulIdentifier","src":"4244:9:25"},{"name":"offset","nativeSrc":"4255:6:25","nodeType":"YulIdentifier","src":"4255:6:25"}],"functionName":{"name":"add","nativeSrc":"4240:3:25","nodeType":"YulIdentifier","src":"4240:3:25"},"nativeSrc":"4240:22:25","nodeType":"YulFunctionCall","src":"4240:22:25"},{"name":"dataEnd","nativeSrc":"4264:7:25","nodeType":"YulIdentifier","src":"4264:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:25","nodeType":"YulIdentifier","src":"4219:20:25"},"nativeSrc":"4219:53:25","nodeType":"YulFunctionCall","src":"4219:53:25"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:25","nodeType":"YulIdentifier","src":"4209:6:25"}]}]},{"nativeSrc":"4292:118:25","nodeType":"YulBlock","src":"4292:118:25","statements":[{"nativeSrc":"4307:16:25","nodeType":"YulVariableDeclaration","src":"4307:16:25","value":{"kind":"number","nativeSrc":"4321:2:25","nodeType":"YulLiteral","src":"4321:2:25","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:25","nodeType":"YulTypedName","src":"4311:6:25","type":""}]},{"nativeSrc":"4337:63:25","nodeType":"YulAssignment","src":"4337:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:25","nodeType":"YulIdentifier","src":"4372:9:25"},{"name":"offset","nativeSrc":"4383:6:25","nodeType":"YulIdentifier","src":"4383:6:25"}],"functionName":{"name":"add","nativeSrc":"4368:3:25","nodeType":"YulIdentifier","src":"4368:3:25"},"nativeSrc":"4368:22:25","nodeType":"YulFunctionCall","src":"4368:22:25"},{"name":"dataEnd","nativeSrc":"4392:7:25","nodeType":"YulIdentifier","src":"4392:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:25","nodeType":"YulIdentifier","src":"4347:20:25"},"nativeSrc":"4347:53:25","nodeType":"YulFunctionCall","src":"4347:53:25"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:25","nodeType":"YulIdentifier","src":"4337:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:25","nodeType":"YulTypedName","src":"3852:9:25","type":""},{"name":"dataEnd","nativeSrc":"3863:7:25","nodeType":"YulTypedName","src":"3863:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:25","nodeType":"YulTypedName","src":"3875:6:25","type":""},{"name":"value1","nativeSrc":"3883:6:25","nodeType":"YulTypedName","src":"3883:6:25","type":""},{"name":"value2","nativeSrc":"3891:6:25","nodeType":"YulTypedName","src":"3891:6:25","type":""}],"src":"3798:619:25"},{"body":{"nativeSrc":"4466:43:25","nodeType":"YulBlock","src":"4466:43:25","statements":[{"nativeSrc":"4476:27:25","nodeType":"YulAssignment","src":"4476:27:25","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:25","nodeType":"YulIdentifier","src":"4491:5:25"},{"kind":"number","nativeSrc":"4498:4:25","nodeType":"YulLiteral","src":"4498:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:25","nodeType":"YulIdentifier","src":"4487:3:25"},"nativeSrc":"4487:16:25","nodeType":"YulFunctionCall","src":"4487:16:25"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:25","nodeType":"YulIdentifier","src":"4476:7:25"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:25","nodeType":"YulTypedName","src":"4448:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:25","nodeType":"YulTypedName","src":"4458:7:25","type":""}],"src":"4423:86:25"},{"body":{"nativeSrc":"4576:51:25","nodeType":"YulBlock","src":"4576:51:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:25","nodeType":"YulIdentifier","src":"4593:3:25"},{"arguments":[{"name":"value","nativeSrc":"4614:5:25","nodeType":"YulIdentifier","src":"4614:5:25"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:25","nodeType":"YulIdentifier","src":"4598:15:25"},"nativeSrc":"4598:22:25","nodeType":"YulFunctionCall","src":"4598:22:25"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:25","nodeType":"YulIdentifier","src":"4586:6:25"},"nativeSrc":"4586:35:25","nodeType":"YulFunctionCall","src":"4586:35:25"},"nativeSrc":"4586:35:25","nodeType":"YulExpressionStatement","src":"4586:35:25"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:25","nodeType":"YulTypedName","src":"4564:5:25","type":""},{"name":"pos","nativeSrc":"4571:3:25","nodeType":"YulTypedName","src":"4571:3:25","type":""}],"src":"4515:112:25"},{"body":{"nativeSrc":"4727:120:25","nodeType":"YulBlock","src":"4727:120:25","statements":[{"nativeSrc":"4737:26:25","nodeType":"YulAssignment","src":"4737:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:25","nodeType":"YulIdentifier","src":"4749:9:25"},{"kind":"number","nativeSrc":"4760:2:25","nodeType":"YulLiteral","src":"4760:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:25","nodeType":"YulIdentifier","src":"4745:3:25"},"nativeSrc":"4745:18:25","nodeType":"YulFunctionCall","src":"4745:18:25"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:25","nodeType":"YulIdentifier","src":"4737:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:25","nodeType":"YulIdentifier","src":"4813:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:25","nodeType":"YulIdentifier","src":"4826:9:25"},{"kind":"number","nativeSrc":"4837:1:25","nodeType":"YulLiteral","src":"4837:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:25","nodeType":"YulIdentifier","src":"4822:3:25"},"nativeSrc":"4822:17:25","nodeType":"YulFunctionCall","src":"4822:17:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:25","nodeType":"YulIdentifier","src":"4773:39:25"},"nativeSrc":"4773:67:25","nodeType":"YulFunctionCall","src":"4773:67:25"},"nativeSrc":"4773:67:25","nodeType":"YulExpressionStatement","src":"4773:67:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:25","nodeType":"YulTypedName","src":"4699:9:25","type":""},{"name":"value0","nativeSrc":"4711:6:25","nodeType":"YulTypedName","src":"4711:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:25","nodeType":"YulTypedName","src":"4722:4:25","type":""}],"src":"4633:214:25"},{"body":{"nativeSrc":"4919:263:25","nodeType":"YulBlock","src":"4919:263:25","statements":[{"body":{"nativeSrc":"4965:83:25","nodeType":"YulBlock","src":"4965:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4967:77:25","nodeType":"YulIdentifier","src":"4967:77:25"},"nativeSrc":"4967:79:25","nodeType":"YulFunctionCall","src":"4967:79:25"},"nativeSrc":"4967:79:25","nodeType":"YulExpressionStatement","src":"4967:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4940:7:25","nodeType":"YulIdentifier","src":"4940:7:25"},{"name":"headStart","nativeSrc":"4949:9:25","nodeType":"YulIdentifier","src":"4949:9:25"}],"functionName":{"name":"sub","nativeSrc":"4936:3:25","nodeType":"YulIdentifier","src":"4936:3:25"},"nativeSrc":"4936:23:25","nodeType":"YulFunctionCall","src":"4936:23:25"},{"kind":"number","nativeSrc":"4961:2:25","nodeType":"YulLiteral","src":"4961:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4932:3:25","nodeType":"YulIdentifier","src":"4932:3:25"},"nativeSrc":"4932:32:25","nodeType":"YulFunctionCall","src":"4932:32:25"},"nativeSrc":"4929:119:25","nodeType":"YulIf","src":"4929:119:25"},{"nativeSrc":"5058:117:25","nodeType":"YulBlock","src":"5058:117:25","statements":[{"nativeSrc":"5073:15:25","nodeType":"YulVariableDeclaration","src":"5073:15:25","value":{"kind":"number","nativeSrc":"5087:1:25","nodeType":"YulLiteral","src":"5087:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5077:6:25","nodeType":"YulTypedName","src":"5077:6:25","type":""}]},{"nativeSrc":"5102:63:25","nodeType":"YulAssignment","src":"5102:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5137:9:25","nodeType":"YulIdentifier","src":"5137:9:25"},{"name":"offset","nativeSrc":"5148:6:25","nodeType":"YulIdentifier","src":"5148:6:25"}],"functionName":{"name":"add","nativeSrc":"5133:3:25","nodeType":"YulIdentifier","src":"5133:3:25"},"nativeSrc":"5133:22:25","nodeType":"YulFunctionCall","src":"5133:22:25"},{"name":"dataEnd","nativeSrc":"5157:7:25","nodeType":"YulIdentifier","src":"5157:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5112:20:25","nodeType":"YulIdentifier","src":"5112:20:25"},"nativeSrc":"5112:53:25","nodeType":"YulFunctionCall","src":"5112:53:25"},"variableNames":[{"name":"value0","nativeSrc":"5102:6:25","nodeType":"YulIdentifier","src":"5102:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4853:329:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4889:9:25","nodeType":"YulTypedName","src":"4889:9:25","type":""},{"name":"dataEnd","nativeSrc":"4900:7:25","nodeType":"YulTypedName","src":"4900:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4912:6:25","nodeType":"YulTypedName","src":"4912:6:25","type":""}],"src":"4853:329:25"},{"body":{"nativeSrc":"5254:263:25","nodeType":"YulBlock","src":"5254:263:25","statements":[{"body":{"nativeSrc":"5300:83:25","nodeType":"YulBlock","src":"5300:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5302:77:25","nodeType":"YulIdentifier","src":"5302:77:25"},"nativeSrc":"5302:79:25","nodeType":"YulFunctionCall","src":"5302:79:25"},"nativeSrc":"5302:79:25","nodeType":"YulExpressionStatement","src":"5302:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5275:7:25","nodeType":"YulIdentifier","src":"5275:7:25"},{"name":"headStart","nativeSrc":"5284:9:25","nodeType":"YulIdentifier","src":"5284:9:25"}],"functionName":{"name":"sub","nativeSrc":"5271:3:25","nodeType":"YulIdentifier","src":"5271:3:25"},"nativeSrc":"5271:23:25","nodeType":"YulFunctionCall","src":"5271:23:25"},{"kind":"number","nativeSrc":"5296:2:25","nodeType":"YulLiteral","src":"5296:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5267:3:25","nodeType":"YulIdentifier","src":"5267:3:25"},"nativeSrc":"5267:32:25","nodeType":"YulFunctionCall","src":"5267:32:25"},"nativeSrc":"5264:119:25","nodeType":"YulIf","src":"5264:119:25"},{"nativeSrc":"5393:117:25","nodeType":"YulBlock","src":"5393:117:25","statements":[{"nativeSrc":"5408:15:25","nodeType":"YulVariableDeclaration","src":"5408:15:25","value":{"kind":"number","nativeSrc":"5422:1:25","nodeType":"YulLiteral","src":"5422:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5412:6:25","nodeType":"YulTypedName","src":"5412:6:25","type":""}]},{"nativeSrc":"5437:63:25","nodeType":"YulAssignment","src":"5437:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5472:9:25","nodeType":"YulIdentifier","src":"5472:9:25"},{"name":"offset","nativeSrc":"5483:6:25","nodeType":"YulIdentifier","src":"5483:6:25"}],"functionName":{"name":"add","nativeSrc":"5468:3:25","nodeType":"YulIdentifier","src":"5468:3:25"},"nativeSrc":"5468:22:25","nodeType":"YulFunctionCall","src":"5468:22:25"},{"name":"dataEnd","nativeSrc":"5492:7:25","nodeType":"YulIdentifier","src":"5492:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5447:20:25","nodeType":"YulIdentifier","src":"5447:20:25"},"nativeSrc":"5447:53:25","nodeType":"YulFunctionCall","src":"5447:53:25"},"variableNames":[{"name":"value0","nativeSrc":"5437:6:25","nodeType":"YulIdentifier","src":"5437:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5188:329:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5224:9:25","nodeType":"YulTypedName","src":"5224:9:25","type":""},{"name":"dataEnd","nativeSrc":"5235:7:25","nodeType":"YulTypedName","src":"5235:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5247:6:25","nodeType":"YulTypedName","src":"5247:6:25","type":""}],"src":"5188:329:25"},{"body":{"nativeSrc":"5567:105:25","nodeType":"YulBlock","src":"5567:105:25","statements":[{"nativeSrc":"5577:89:25","nodeType":"YulAssignment","src":"5577:89:25","value":{"arguments":[{"name":"value","nativeSrc":"5592:5:25","nodeType":"YulIdentifier","src":"5592:5:25"},{"kind":"number","nativeSrc":"5599:66:25","nodeType":"YulLiteral","src":"5599:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"5588:3:25","nodeType":"YulIdentifier","src":"5588:3:25"},"nativeSrc":"5588:78:25","nodeType":"YulFunctionCall","src":"5588:78:25"},"variableNames":[{"name":"cleaned","nativeSrc":"5577:7:25","nodeType":"YulIdentifier","src":"5577:7:25"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"5523:149:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5549:5:25","nodeType":"YulTypedName","src":"5549:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5559:7:25","nodeType":"YulTypedName","src":"5559:7:25","type":""}],"src":"5523:149:25"},{"body":{"nativeSrc":"5741:52:25","nodeType":"YulBlock","src":"5741:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5758:3:25","nodeType":"YulIdentifier","src":"5758:3:25"},{"arguments":[{"name":"value","nativeSrc":"5780:5:25","nodeType":"YulIdentifier","src":"5780:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"5763:16:25","nodeType":"YulIdentifier","src":"5763:16:25"},"nativeSrc":"5763:23:25","nodeType":"YulFunctionCall","src":"5763:23:25"}],"functionName":{"name":"mstore","nativeSrc":"5751:6:25","nodeType":"YulIdentifier","src":"5751:6:25"},"nativeSrc":"5751:36:25","nodeType":"YulFunctionCall","src":"5751:36:25"},"nativeSrc":"5751:36:25","nodeType":"YulExpressionStatement","src":"5751:36:25"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"5678:115:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5729:5:25","nodeType":"YulTypedName","src":"5729:5:25","type":""},{"name":"pos","nativeSrc":"5736:3:25","nodeType":"YulTypedName","src":"5736:3:25","type":""}],"src":"5678:115:25"},{"body":{"nativeSrc":"5895:122:25","nodeType":"YulBlock","src":"5895:122:25","statements":[{"nativeSrc":"5905:26:25","nodeType":"YulAssignment","src":"5905:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5917:9:25","nodeType":"YulIdentifier","src":"5917:9:25"},{"kind":"number","nativeSrc":"5928:2:25","nodeType":"YulLiteral","src":"5928:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5913:3:25","nodeType":"YulIdentifier","src":"5913:3:25"},"nativeSrc":"5913:18:25","nodeType":"YulFunctionCall","src":"5913:18:25"},"variableNames":[{"name":"tail","nativeSrc":"5905:4:25","nodeType":"YulIdentifier","src":"5905:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5983:6:25","nodeType":"YulIdentifier","src":"5983:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"5996:9:25","nodeType":"YulIdentifier","src":"5996:9:25"},{"kind":"number","nativeSrc":"6007:1:25","nodeType":"YulLiteral","src":"6007:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5992:3:25","nodeType":"YulIdentifier","src":"5992:3:25"},"nativeSrc":"5992:17:25","nodeType":"YulFunctionCall","src":"5992:17:25"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"5941:41:25","nodeType":"YulIdentifier","src":"5941:41:25"},"nativeSrc":"5941:69:25","nodeType":"YulFunctionCall","src":"5941:69:25"},"nativeSrc":"5941:69:25","nodeType":"YulExpressionStatement","src":"5941:69:25"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"5799:218:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5867:9:25","nodeType":"YulTypedName","src":"5867:9:25","type":""},{"name":"value0","nativeSrc":"5879:6:25","nodeType":"YulTypedName","src":"5879:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5890:4:25","nodeType":"YulTypedName","src":"5890:4:25","type":""}],"src":"5799:218:25"},{"body":{"nativeSrc":"6088:53:25","nodeType":"YulBlock","src":"6088:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6105:3:25","nodeType":"YulIdentifier","src":"6105:3:25"},{"arguments":[{"name":"value","nativeSrc":"6128:5:25","nodeType":"YulIdentifier","src":"6128:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6110:17:25","nodeType":"YulIdentifier","src":"6110:17:25"},"nativeSrc":"6110:24:25","nodeType":"YulFunctionCall","src":"6110:24:25"}],"functionName":{"name":"mstore","nativeSrc":"6098:6:25","nodeType":"YulIdentifier","src":"6098:6:25"},"nativeSrc":"6098:37:25","nodeType":"YulFunctionCall","src":"6098:37:25"},"nativeSrc":"6098:37:25","nodeType":"YulExpressionStatement","src":"6098:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6023:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6076:5:25","nodeType":"YulTypedName","src":"6076:5:25","type":""},{"name":"pos","nativeSrc":"6083:3:25","nodeType":"YulTypedName","src":"6083:3:25","type":""}],"src":"6023:118:25"},{"body":{"nativeSrc":"6245:124:25","nodeType":"YulBlock","src":"6245:124:25","statements":[{"nativeSrc":"6255:26:25","nodeType":"YulAssignment","src":"6255:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6267:9:25","nodeType":"YulIdentifier","src":"6267:9:25"},{"kind":"number","nativeSrc":"6278:2:25","nodeType":"YulLiteral","src":"6278:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6263:3:25","nodeType":"YulIdentifier","src":"6263:3:25"},"nativeSrc":"6263:18:25","nodeType":"YulFunctionCall","src":"6263:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6255:4:25","nodeType":"YulIdentifier","src":"6255:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6335:6:25","nodeType":"YulIdentifier","src":"6335:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6348:9:25","nodeType":"YulIdentifier","src":"6348:9:25"},{"kind":"number","nativeSrc":"6359:1:25","nodeType":"YulLiteral","src":"6359:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6344:3:25","nodeType":"YulIdentifier","src":"6344:3:25"},"nativeSrc":"6344:17:25","nodeType":"YulFunctionCall","src":"6344:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6291:43:25","nodeType":"YulIdentifier","src":"6291:43:25"},"nativeSrc":"6291:71:25","nodeType":"YulFunctionCall","src":"6291:71:25"},"nativeSrc":"6291:71:25","nodeType":"YulExpressionStatement","src":"6291:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6147:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6217:9:25","nodeType":"YulTypedName","src":"6217:9:25","type":""},{"name":"value0","nativeSrc":"6229:6:25","nodeType":"YulTypedName","src":"6229:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6240:4:25","nodeType":"YulTypedName","src":"6240:4:25","type":""}],"src":"6147:222:25"},{"body":{"nativeSrc":"6458:391:25","nodeType":"YulBlock","src":"6458:391:25","statements":[{"body":{"nativeSrc":"6504:83:25","nodeType":"YulBlock","src":"6504:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6506:77:25","nodeType":"YulIdentifier","src":"6506:77:25"},"nativeSrc":"6506:79:25","nodeType":"YulFunctionCall","src":"6506:79:25"},"nativeSrc":"6506:79:25","nodeType":"YulExpressionStatement","src":"6506:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6479:7:25","nodeType":"YulIdentifier","src":"6479:7:25"},{"name":"headStart","nativeSrc":"6488:9:25","nodeType":"YulIdentifier","src":"6488:9:25"}],"functionName":{"name":"sub","nativeSrc":"6475:3:25","nodeType":"YulIdentifier","src":"6475:3:25"},"nativeSrc":"6475:23:25","nodeType":"YulFunctionCall","src":"6475:23:25"},{"kind":"number","nativeSrc":"6500:2:25","nodeType":"YulLiteral","src":"6500:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6471:3:25","nodeType":"YulIdentifier","src":"6471:3:25"},"nativeSrc":"6471:32:25","nodeType":"YulFunctionCall","src":"6471:32:25"},"nativeSrc":"6468:119:25","nodeType":"YulIf","src":"6468:119:25"},{"nativeSrc":"6597:117:25","nodeType":"YulBlock","src":"6597:117:25","statements":[{"nativeSrc":"6612:15:25","nodeType":"YulVariableDeclaration","src":"6612:15:25","value":{"kind":"number","nativeSrc":"6626:1:25","nodeType":"YulLiteral","src":"6626:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6616:6:25","nodeType":"YulTypedName","src":"6616:6:25","type":""}]},{"nativeSrc":"6641:63:25","nodeType":"YulAssignment","src":"6641:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6676:9:25","nodeType":"YulIdentifier","src":"6676:9:25"},{"name":"offset","nativeSrc":"6687:6:25","nodeType":"YulIdentifier","src":"6687:6:25"}],"functionName":{"name":"add","nativeSrc":"6672:3:25","nodeType":"YulIdentifier","src":"6672:3:25"},"nativeSrc":"6672:22:25","nodeType":"YulFunctionCall","src":"6672:22:25"},{"name":"dataEnd","nativeSrc":"6696:7:25","nodeType":"YulIdentifier","src":"6696:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6651:20:25","nodeType":"YulIdentifier","src":"6651:20:25"},"nativeSrc":"6651:53:25","nodeType":"YulFunctionCall","src":"6651:53:25"},"variableNames":[{"name":"value0","nativeSrc":"6641:6:25","nodeType":"YulIdentifier","src":"6641:6:25"}]}]},{"nativeSrc":"6724:118:25","nodeType":"YulBlock","src":"6724:118:25","statements":[{"nativeSrc":"6739:16:25","nodeType":"YulVariableDeclaration","src":"6739:16:25","value":{"kind":"number","nativeSrc":"6753:2:25","nodeType":"YulLiteral","src":"6753:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6743:6:25","nodeType":"YulTypedName","src":"6743:6:25","type":""}]},{"nativeSrc":"6769:63:25","nodeType":"YulAssignment","src":"6769:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6804:9:25","nodeType":"YulIdentifier","src":"6804:9:25"},{"name":"offset","nativeSrc":"6815:6:25","nodeType":"YulIdentifier","src":"6815:6:25"}],"functionName":{"name":"add","nativeSrc":"6800:3:25","nodeType":"YulIdentifier","src":"6800:3:25"},"nativeSrc":"6800:22:25","nodeType":"YulFunctionCall","src":"6800:22:25"},{"name":"dataEnd","nativeSrc":"6824:7:25","nodeType":"YulIdentifier","src":"6824:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6779:20:25","nodeType":"YulIdentifier","src":"6779:20:25"},"nativeSrc":"6779:53:25","nodeType":"YulFunctionCall","src":"6779:53:25"},"variableNames":[{"name":"value1","nativeSrc":"6769:6:25","nodeType":"YulIdentifier","src":"6769:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"6375:474:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6420:9:25","nodeType":"YulTypedName","src":"6420:9:25","type":""},{"name":"dataEnd","nativeSrc":"6431:7:25","nodeType":"YulTypedName","src":"6431:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6443:6:25","nodeType":"YulTypedName","src":"6443:6:25","type":""},{"name":"value1","nativeSrc":"6451:6:25","nodeType":"YulTypedName","src":"6451:6:25","type":""}],"src":"6375:474:25"},{"body":{"nativeSrc":"6883:152:25","nodeType":"YulBlock","src":"6883:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6900:1:25","nodeType":"YulLiteral","src":"6900:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6903:77:25","nodeType":"YulLiteral","src":"6903:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6893:6:25","nodeType":"YulIdentifier","src":"6893:6:25"},"nativeSrc":"6893:88:25","nodeType":"YulFunctionCall","src":"6893:88:25"},"nativeSrc":"6893:88:25","nodeType":"YulExpressionStatement","src":"6893:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6997:1:25","nodeType":"YulLiteral","src":"6997:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"7000:4:25","nodeType":"YulLiteral","src":"7000:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6990:6:25","nodeType":"YulIdentifier","src":"6990:6:25"},"nativeSrc":"6990:15:25","nodeType":"YulFunctionCall","src":"6990:15:25"},"nativeSrc":"6990:15:25","nodeType":"YulExpressionStatement","src":"6990:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7021:1:25","nodeType":"YulLiteral","src":"7021:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7024:4:25","nodeType":"YulLiteral","src":"7024:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7014:6:25","nodeType":"YulIdentifier","src":"7014:6:25"},"nativeSrc":"7014:15:25","nodeType":"YulFunctionCall","src":"7014:15:25"},"nativeSrc":"7014:15:25","nodeType":"YulExpressionStatement","src":"7014:15:25"}]},"name":"panic_error_0x22","nativeSrc":"6855:180:25","nodeType":"YulFunctionDefinition","src":"6855:180:25"},{"body":{"nativeSrc":"7092:269:25","nodeType":"YulBlock","src":"7092:269:25","statements":[{"nativeSrc":"7102:22:25","nodeType":"YulAssignment","src":"7102:22:25","value":{"arguments":[{"name":"data","nativeSrc":"7116:4:25","nodeType":"YulIdentifier","src":"7116:4:25"},{"kind":"number","nativeSrc":"7122:1:25","nodeType":"YulLiteral","src":"7122:1:25","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"7112:3:25","nodeType":"YulIdentifier","src":"7112:3:25"},"nativeSrc":"7112:12:25","nodeType":"YulFunctionCall","src":"7112:12:25"},"variableNames":[{"name":"length","nativeSrc":"7102:6:25","nodeType":"YulIdentifier","src":"7102:6:25"}]},{"nativeSrc":"7133:38:25","nodeType":"YulVariableDeclaration","src":"7133:38:25","value":{"arguments":[{"name":"data","nativeSrc":"7163:4:25","nodeType":"YulIdentifier","src":"7163:4:25"},{"kind":"number","nativeSrc":"7169:1:25","nodeType":"YulLiteral","src":"7169:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7159:3:25","nodeType":"YulIdentifier","src":"7159:3:25"},"nativeSrc":"7159:12:25","nodeType":"YulFunctionCall","src":"7159:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"7137:18:25","nodeType":"YulTypedName","src":"7137:18:25","type":""}]},{"body":{"nativeSrc":"7210:51:25","nodeType":"YulBlock","src":"7210:51:25","statements":[{"nativeSrc":"7224:27:25","nodeType":"YulAssignment","src":"7224:27:25","value":{"arguments":[{"name":"length","nativeSrc":"7238:6:25","nodeType":"YulIdentifier","src":"7238:6:25"},{"kind":"number","nativeSrc":"7246:4:25","nodeType":"YulLiteral","src":"7246:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"7234:3:25","nodeType":"YulIdentifier","src":"7234:3:25"},"nativeSrc":"7234:17:25","nodeType":"YulFunctionCall","src":"7234:17:25"},"variableNames":[{"name":"length","nativeSrc":"7224:6:25","nodeType":"YulIdentifier","src":"7224:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7190:18:25","nodeType":"YulIdentifier","src":"7190:18:25"}],"functionName":{"name":"iszero","nativeSrc":"7183:6:25","nodeType":"YulIdentifier","src":"7183:6:25"},"nativeSrc":"7183:26:25","nodeType":"YulFunctionCall","src":"7183:26:25"},"nativeSrc":"7180:81:25","nodeType":"YulIf","src":"7180:81:25"},{"body":{"nativeSrc":"7313:42:25","nodeType":"YulBlock","src":"7313:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"7327:16:25","nodeType":"YulIdentifier","src":"7327:16:25"},"nativeSrc":"7327:18:25","nodeType":"YulFunctionCall","src":"7327:18:25"},"nativeSrc":"7327:18:25","nodeType":"YulExpressionStatement","src":"7327:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7277:18:25","nodeType":"YulIdentifier","src":"7277:18:25"},{"arguments":[{"name":"length","nativeSrc":"7300:6:25","nodeType":"YulIdentifier","src":"7300:6:25"},{"kind":"number","nativeSrc":"7308:2:25","nodeType":"YulLiteral","src":"7308:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7297:2:25","nodeType":"YulIdentifier","src":"7297:2:25"},"nativeSrc":"7297:14:25","nodeType":"YulFunctionCall","src":"7297:14:25"}],"functionName":{"name":"eq","nativeSrc":"7274:2:25","nodeType":"YulIdentifier","src":"7274:2:25"},"nativeSrc":"7274:38:25","nodeType":"YulFunctionCall","src":"7274:38:25"},"nativeSrc":"7271:84:25","nodeType":"YulIf","src":"7271:84:25"}]},"name":"extract_byte_array_length","nativeSrc":"7041:320:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7076:4:25","nodeType":"YulTypedName","src":"7076:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7085:6:25","nodeType":"YulTypedName","src":"7085:6:25","type":""}],"src":"7041:320:25"},{"body":{"nativeSrc":"7521:288:25","nodeType":"YulBlock","src":"7521:288:25","statements":[{"nativeSrc":"7531:26:25","nodeType":"YulAssignment","src":"7531:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7543:9:25","nodeType":"YulIdentifier","src":"7543:9:25"},{"kind":"number","nativeSrc":"7554:2:25","nodeType":"YulLiteral","src":"7554:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7539:3:25","nodeType":"YulIdentifier","src":"7539:3:25"},"nativeSrc":"7539:18:25","nodeType":"YulFunctionCall","src":"7539:18:25"},"variableNames":[{"name":"tail","nativeSrc":"7531:4:25","nodeType":"YulIdentifier","src":"7531:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7611:6:25","nodeType":"YulIdentifier","src":"7611:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"7624:9:25","nodeType":"YulIdentifier","src":"7624:9:25"},{"kind":"number","nativeSrc":"7635:1:25","nodeType":"YulLiteral","src":"7635:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7620:3:25","nodeType":"YulIdentifier","src":"7620:3:25"},"nativeSrc":"7620:17:25","nodeType":"YulFunctionCall","src":"7620:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7567:43:25","nodeType":"YulIdentifier","src":"7567:43:25"},"nativeSrc":"7567:71:25","nodeType":"YulFunctionCall","src":"7567:71:25"},"nativeSrc":"7567:71:25","nodeType":"YulExpressionStatement","src":"7567:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7692:6:25","nodeType":"YulIdentifier","src":"7692:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"7705:9:25","nodeType":"YulIdentifier","src":"7705:9:25"},{"kind":"number","nativeSrc":"7716:2:25","nodeType":"YulLiteral","src":"7716:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7701:3:25","nodeType":"YulIdentifier","src":"7701:3:25"},"nativeSrc":"7701:18:25","nodeType":"YulFunctionCall","src":"7701:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7648:43:25","nodeType":"YulIdentifier","src":"7648:43:25"},"nativeSrc":"7648:72:25","nodeType":"YulFunctionCall","src":"7648:72:25"},"nativeSrc":"7648:72:25","nodeType":"YulExpressionStatement","src":"7648:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7774:6:25","nodeType":"YulIdentifier","src":"7774:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"7787:9:25","nodeType":"YulIdentifier","src":"7787:9:25"},{"kind":"number","nativeSrc":"7798:2:25","nodeType":"YulLiteral","src":"7798:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7783:3:25","nodeType":"YulIdentifier","src":"7783:3:25"},"nativeSrc":"7783:18:25","nodeType":"YulFunctionCall","src":"7783:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7730:43:25","nodeType":"YulIdentifier","src":"7730:43:25"},"nativeSrc":"7730:72:25","nodeType":"YulFunctionCall","src":"7730:72:25"},"nativeSrc":"7730:72:25","nodeType":"YulExpressionStatement","src":"7730:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7367:442:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7477:9:25","nodeType":"YulTypedName","src":"7477:9:25","type":""},{"name":"value2","nativeSrc":"7489:6:25","nodeType":"YulTypedName","src":"7489:6:25","type":""},{"name":"value1","nativeSrc":"7497:6:25","nodeType":"YulTypedName","src":"7497:6:25","type":""},{"name":"value0","nativeSrc":"7505:6:25","nodeType":"YulTypedName","src":"7505:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7516:4:25","nodeType":"YulTypedName","src":"7516:4:25","type":""}],"src":"7367:442:25"},{"body":{"nativeSrc":"7904:28:25","nodeType":"YulBlock","src":"7904:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7921:1:25","nodeType":"YulLiteral","src":"7921:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7924:1:25","nodeType":"YulLiteral","src":"7924:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7914:6:25","nodeType":"YulIdentifier","src":"7914:6:25"},"nativeSrc":"7914:12:25","nodeType":"YulFunctionCall","src":"7914:12:25"},"nativeSrc":"7914:12:25","nodeType":"YulExpressionStatement","src":"7914:12:25"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nativeSrc":"7815:117:25","nodeType":"YulFunctionDefinition","src":"7815:117:25"},{"body":{"nativeSrc":"8027:28:25","nodeType":"YulBlock","src":"8027:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8044:1:25","nodeType":"YulLiteral","src":"8044:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"8047:1:25","nodeType":"YulLiteral","src":"8047:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8037:6:25","nodeType":"YulIdentifier","src":"8037:6:25"},"nativeSrc":"8037:12:25","nodeType":"YulFunctionCall","src":"8037:12:25"},"nativeSrc":"8037:12:25","nodeType":"YulExpressionStatement","src":"8037:12:25"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nativeSrc":"7938:117:25","nodeType":"YulFunctionDefinition","src":"7938:117:25"},{"body":{"nativeSrc":"8187:343:25","nodeType":"YulBlock","src":"8187:343:25","statements":[{"body":{"nativeSrc":"8225:83:25","nodeType":"YulBlock","src":"8225:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nativeSrc":"8227:77:25","nodeType":"YulIdentifier","src":"8227:77:25"},"nativeSrc":"8227:79:25","nodeType":"YulFunctionCall","src":"8227:79:25"},"nativeSrc":"8227:79:25","nodeType":"YulExpressionStatement","src":"8227:79:25"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"8203:10:25","nodeType":"YulIdentifier","src":"8203:10:25"},{"name":"endIndex","nativeSrc":"8215:8:25","nodeType":"YulIdentifier","src":"8215:8:25"}],"functionName":{"name":"gt","nativeSrc":"8200:2:25","nodeType":"YulIdentifier","src":"8200:2:25"},"nativeSrc":"8200:24:25","nodeType":"YulFunctionCall","src":"8200:24:25"},"nativeSrc":"8197:111:25","nodeType":"YulIf","src":"8197:111:25"},{"body":{"nativeSrc":"8341:83:25","nodeType":"YulBlock","src":"8341:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nativeSrc":"8343:77:25","nodeType":"YulIdentifier","src":"8343:77:25"},"nativeSrc":"8343:79:25","nodeType":"YulFunctionCall","src":"8343:79:25"},"nativeSrc":"8343:79:25","nodeType":"YulExpressionStatement","src":"8343:79:25"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"8323:8:25","nodeType":"YulIdentifier","src":"8323:8:25"},{"name":"length","nativeSrc":"8333:6:25","nodeType":"YulIdentifier","src":"8333:6:25"}],"functionName":{"name":"gt","nativeSrc":"8320:2:25","nodeType":"YulIdentifier","src":"8320:2:25"},"nativeSrc":"8320:20:25","nodeType":"YulFunctionCall","src":"8320:20:25"},"nativeSrc":"8317:107:25","nodeType":"YulIf","src":"8317:107:25"},{"nativeSrc":"8433:44:25","nodeType":"YulAssignment","src":"8433:44:25","value":{"arguments":[{"name":"offset","nativeSrc":"8450:6:25","nodeType":"YulIdentifier","src":"8450:6:25"},{"arguments":[{"name":"startIndex","nativeSrc":"8462:10:25","nodeType":"YulIdentifier","src":"8462:10:25"},{"kind":"number","nativeSrc":"8474:1:25","nodeType":"YulLiteral","src":"8474:1:25","type":"","value":"1"}],"functionName":{"name":"mul","nativeSrc":"8458:3:25","nodeType":"YulIdentifier","src":"8458:3:25"},"nativeSrc":"8458:18:25","nodeType":"YulFunctionCall","src":"8458:18:25"}],"functionName":{"name":"add","nativeSrc":"8446:3:25","nodeType":"YulIdentifier","src":"8446:3:25"},"nativeSrc":"8446:31:25","nodeType":"YulFunctionCall","src":"8446:31:25"},"variableNames":[{"name":"offsetOut","nativeSrc":"8433:9:25","nodeType":"YulIdentifier","src":"8433:9:25"}]},{"nativeSrc":"8486:38:25","nodeType":"YulAssignment","src":"8486:38:25","value":{"arguments":[{"name":"endIndex","nativeSrc":"8503:8:25","nodeType":"YulIdentifier","src":"8503:8:25"},{"name":"startIndex","nativeSrc":"8513:10:25","nodeType":"YulIdentifier","src":"8513:10:25"}],"functionName":{"name":"sub","nativeSrc":"8499:3:25","nodeType":"YulIdentifier","src":"8499:3:25"},"nativeSrc":"8499:25:25","nodeType":"YulFunctionCall","src":"8499:25:25"},"variableNames":[{"name":"lengthOut","nativeSrc":"8486:9:25","nodeType":"YulIdentifier","src":"8486:9:25"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"8061:469:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8125:6:25","nodeType":"YulTypedName","src":"8125:6:25","type":""},{"name":"length","nativeSrc":"8133:6:25","nodeType":"YulTypedName","src":"8133:6:25","type":""},{"name":"startIndex","nativeSrc":"8141:10:25","nodeType":"YulTypedName","src":"8141:10:25","type":""},{"name":"endIndex","nativeSrc":"8153:8:25","nodeType":"YulTypedName","src":"8153:8:25","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"8166:9:25","nodeType":"YulTypedName","src":"8166:9:25","type":""},{"name":"lengthOut","nativeSrc":"8177:9:25","nodeType":"YulTypedName","src":"8177:9:25","type":""}],"src":"8061:469:25"},{"body":{"nativeSrc":"8601:31:25","nodeType":"YulBlock","src":"8601:31:25","statements":[{"nativeSrc":"8612:13:25","nodeType":"YulAssignment","src":"8612:13:25","value":{"name":"len","nativeSrc":"8622:3:25","nodeType":"YulIdentifier","src":"8622:3:25"},"variableNames":[{"name":"length","nativeSrc":"8612:6:25","nodeType":"YulIdentifier","src":"8612:6:25"}]}]},"name":"array_length_t_bytes_calldata_ptr","nativeSrc":"8536:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8579:5:25","nodeType":"YulTypedName","src":"8579:5:25","type":""},{"name":"len","nativeSrc":"8586:3:25","nodeType":"YulTypedName","src":"8586:3:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8594:6:25","nodeType":"YulTypedName","src":"8594:6:25","type":""}],"src":"8536:96:25"},{"body":{"nativeSrc":"8696:28:25","nodeType":"YulBlock","src":"8696:28:25","statements":[{"nativeSrc":"8706:11:25","nodeType":"YulAssignment","src":"8706:11:25","value":{"name":"ptr","nativeSrc":"8714:3:25","nodeType":"YulIdentifier","src":"8714:3:25"},"variableNames":[{"name":"data","nativeSrc":"8706:4:25","nodeType":"YulIdentifier","src":"8706:4:25"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nativeSrc":"8638:86:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8683:3:25","nodeType":"YulTypedName","src":"8683:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"8691:4:25","nodeType":"YulTypedName","src":"8691:4:25","type":""}],"src":"8638:86:25"},{"body":{"nativeSrc":"8783:54:25","nodeType":"YulBlock","src":"8783:54:25","statements":[{"nativeSrc":"8793:37:25","nodeType":"YulAssignment","src":"8793:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"8818:4:25","nodeType":"YulIdentifier","src":"8818:4:25"},{"name":"value","nativeSrc":"8824:5:25","nodeType":"YulIdentifier","src":"8824:5:25"}],"functionName":{"name":"shl","nativeSrc":"8814:3:25","nodeType":"YulIdentifier","src":"8814:3:25"},"nativeSrc":"8814:16:25","nodeType":"YulFunctionCall","src":"8814:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"8793:8:25","nodeType":"YulIdentifier","src":"8793:8:25"}]}]},"name":"shift_left_dynamic","nativeSrc":"8730:107:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"8758:4:25","nodeType":"YulTypedName","src":"8758:4:25","type":""},{"name":"value","nativeSrc":"8764:5:25","nodeType":"YulTypedName","src":"8764:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"8774:8:25","nodeType":"YulTypedName","src":"8774:8:25","type":""}],"src":"8730:107:25"},{"body":{"nativeSrc":"8939:452:25","nodeType":"YulBlock","src":"8939:452:25","statements":[{"nativeSrc":"8950:59:25","nodeType":"YulVariableDeclaration","src":"8950:59:25","value":{"arguments":[{"name":"array","nativeSrc":"8998:5:25","nodeType":"YulIdentifier","src":"8998:5:25"},{"name":"len","nativeSrc":"9005:3:25","nodeType":"YulIdentifier","src":"9005:3:25"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nativeSrc":"8964:33:25","nodeType":"YulIdentifier","src":"8964:33:25"},"nativeSrc":"8964:45:25","nodeType":"YulFunctionCall","src":"8964:45:25"},"variables":[{"name":"length","nativeSrc":"8954:6:25","nodeType":"YulTypedName","src":"8954:6:25","type":""}]},{"nativeSrc":"9018:21:25","nodeType":"YulVariableDeclaration","src":"9018:21:25","value":{"name":"array","nativeSrc":"9034:5:25","nodeType":"YulIdentifier","src":"9034:5:25"},"variables":[{"name":"dataArea","nativeSrc":"9022:8:25","nodeType":"YulTypedName","src":"9022:8:25","type":""}]},{"nativeSrc":"9049:49:25","nodeType":"YulAssignment","src":"9049:49:25","value":{"arguments":[{"arguments":[{"name":"dataArea","nativeSrc":"9088:8:25","nodeType":"YulIdentifier","src":"9088:8:25"}],"functionName":{"name":"calldataload","nativeSrc":"9075:12:25","nodeType":"YulIdentifier","src":"9075:12:25"},"nativeSrc":"9075:22:25","nodeType":"YulFunctionCall","src":"9075:22:25"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"9058:16:25","nodeType":"YulIdentifier","src":"9058:16:25"},"nativeSrc":"9058:40:25","nodeType":"YulFunctionCall","src":"9058:40:25"},"variableNames":[{"name":"value","nativeSrc":"9049:5:25","nodeType":"YulIdentifier","src":"9049:5:25"}]},{"body":{"nativeSrc":"9125:259:25","nodeType":"YulBlock","src":"9125:259:25","statements":[{"nativeSrc":"9139:235:25","nodeType":"YulAssignment","src":"9139:235:25","value":{"arguments":[{"name":"value","nativeSrc":"9169:5:25","nodeType":"YulIdentifier","src":"9169:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9236:1:25","nodeType":"YulLiteral","src":"9236:1:25","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"9243:1:25","nodeType":"YulLiteral","src":"9243:1:25","type":"","value":"4"},{"name":"length","nativeSrc":"9246:6:25","nodeType":"YulIdentifier","src":"9246:6:25"}],"functionName":{"name":"sub","nativeSrc":"9239:3:25","nodeType":"YulIdentifier","src":"9239:3:25"},"nativeSrc":"9239:14:25","nodeType":"YulFunctionCall","src":"9239:14:25"}],"functionName":{"name":"mul","nativeSrc":"9232:3:25","nodeType":"YulIdentifier","src":"9232:3:25"},"nativeSrc":"9232:22:25","nodeType":"YulFunctionCall","src":"9232:22:25"},{"kind":"number","nativeSrc":"9276:66:25","nodeType":"YulLiteral","src":"9276:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"9192:18:25","nodeType":"YulIdentifier","src":"9192:18:25"},"nativeSrc":"9192:168:25","nodeType":"YulFunctionCall","src":"9192:168:25"}],"functionName":{"name":"and","nativeSrc":"9148:3:25","nodeType":"YulIdentifier","src":"9148:3:25"},"nativeSrc":"9148:226:25","nodeType":"YulFunctionCall","src":"9148:226:25"},"variableNames":[{"name":"value","nativeSrc":"9139:5:25","nodeType":"YulIdentifier","src":"9139:5:25"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9114:6:25","nodeType":"YulIdentifier","src":"9114:6:25"},{"kind":"number","nativeSrc":"9122:1:25","nodeType":"YulLiteral","src":"9122:1:25","type":"","value":"4"}],"functionName":{"name":"lt","nativeSrc":"9111:2:25","nodeType":"YulIdentifier","src":"9111:2:25"},"nativeSrc":"9111:13:25","nodeType":"YulFunctionCall","src":"9111:13:25"},"nativeSrc":"9108:276:25","nodeType":"YulIf","src":"9108:276:25"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4","nativeSrc":"8843:548:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"8918:5:25","nodeType":"YulTypedName","src":"8918:5:25","type":""},{"name":"len","nativeSrc":"8925:3:25","nodeType":"YulTypedName","src":"8925:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8933:5:25","nodeType":"YulTypedName","src":"8933:5:25","type":""}],"src":"8843:548:25"},{"body":{"nativeSrc":"9492:73:25","nodeType":"YulBlock","src":"9492:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9509:3:25","nodeType":"YulIdentifier","src":"9509:3:25"},{"name":"length","nativeSrc":"9514:6:25","nodeType":"YulIdentifier","src":"9514:6:25"}],"functionName":{"name":"mstore","nativeSrc":"9502:6:25","nodeType":"YulIdentifier","src":"9502:6:25"},"nativeSrc":"9502:19:25","nodeType":"YulFunctionCall","src":"9502:19:25"},"nativeSrc":"9502:19:25","nodeType":"YulExpressionStatement","src":"9502:19:25"},{"nativeSrc":"9530:29:25","nodeType":"YulAssignment","src":"9530:29:25","value":{"arguments":[{"name":"pos","nativeSrc":"9549:3:25","nodeType":"YulIdentifier","src":"9549:3:25"},{"kind":"number","nativeSrc":"9554:4:25","nodeType":"YulLiteral","src":"9554:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9545:3:25","nodeType":"YulIdentifier","src":"9545:3:25"},"nativeSrc":"9545:14:25","nodeType":"YulFunctionCall","src":"9545:14:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"9530:11:25","nodeType":"YulIdentifier","src":"9530:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"9397:168:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9464:3:25","nodeType":"YulTypedName","src":"9464:3:25","type":""},{"name":"length","nativeSrc":"9469:6:25","nodeType":"YulTypedName","src":"9469:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9480:11:25","nodeType":"YulTypedName","src":"9480:11:25","type":""}],"src":"9397:168:25"},{"body":{"nativeSrc":"9635:82:25","nodeType":"YulBlock","src":"9635:82:25","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"9658:3:25","nodeType":"YulIdentifier","src":"9658:3:25"},{"name":"src","nativeSrc":"9663:3:25","nodeType":"YulIdentifier","src":"9663:3:25"},{"name":"length","nativeSrc":"9668:6:25","nodeType":"YulIdentifier","src":"9668:6:25"}],"functionName":{"name":"calldatacopy","nativeSrc":"9645:12:25","nodeType":"YulIdentifier","src":"9645:12:25"},"nativeSrc":"9645:30:25","nodeType":"YulFunctionCall","src":"9645:30:25"},"nativeSrc":"9645:30:25","nodeType":"YulExpressionStatement","src":"9645:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9695:3:25","nodeType":"YulIdentifier","src":"9695:3:25"},{"name":"length","nativeSrc":"9700:6:25","nodeType":"YulIdentifier","src":"9700:6:25"}],"functionName":{"name":"add","nativeSrc":"9691:3:25","nodeType":"YulIdentifier","src":"9691:3:25"},"nativeSrc":"9691:16:25","nodeType":"YulFunctionCall","src":"9691:16:25"},{"kind":"number","nativeSrc":"9709:1:25","nodeType":"YulLiteral","src":"9709:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9684:6:25","nodeType":"YulIdentifier","src":"9684:6:25"},"nativeSrc":"9684:27:25","nodeType":"YulFunctionCall","src":"9684:27:25"},"nativeSrc":"9684:27:25","nodeType":"YulExpressionStatement","src":"9684:27:25"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"9571:146:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9617:3:25","nodeType":"YulTypedName","src":"9617:3:25","type":""},{"name":"dst","nativeSrc":"9622:3:25","nodeType":"YulTypedName","src":"9622:3:25","type":""},{"name":"length","nativeSrc":"9627:6:25","nodeType":"YulTypedName","src":"9627:6:25","type":""}],"src":"9571:146:25"},{"body":{"nativeSrc":"9845:214:25","nodeType":"YulBlock","src":"9845:214:25","statements":[{"nativeSrc":"9855:77:25","nodeType":"YulAssignment","src":"9855:77:25","value":{"arguments":[{"name":"pos","nativeSrc":"9920:3:25","nodeType":"YulIdentifier","src":"9920:3:25"},{"name":"length","nativeSrc":"9925:6:25","nodeType":"YulIdentifier","src":"9925:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"9862:57:25","nodeType":"YulIdentifier","src":"9862:57:25"},"nativeSrc":"9862:70:25","nodeType":"YulFunctionCall","src":"9862:70:25"},"variableNames":[{"name":"pos","nativeSrc":"9855:3:25","nodeType":"YulIdentifier","src":"9855:3:25"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"9979:5:25","nodeType":"YulIdentifier","src":"9979:5:25"},{"name":"pos","nativeSrc":"9986:3:25","nodeType":"YulIdentifier","src":"9986:3:25"},{"name":"length","nativeSrc":"9991:6:25","nodeType":"YulIdentifier","src":"9991:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"9942:36:25","nodeType":"YulIdentifier","src":"9942:36:25"},"nativeSrc":"9942:56:25","nodeType":"YulFunctionCall","src":"9942:56:25"},"nativeSrc":"9942:56:25","nodeType":"YulExpressionStatement","src":"9942:56:25"},{"nativeSrc":"10007:46:25","nodeType":"YulAssignment","src":"10007:46:25","value":{"arguments":[{"name":"pos","nativeSrc":"10018:3:25","nodeType":"YulIdentifier","src":"10018:3:25"},{"arguments":[{"name":"length","nativeSrc":"10045:6:25","nodeType":"YulIdentifier","src":"10045:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10023:21:25","nodeType":"YulIdentifier","src":"10023:21:25"},"nativeSrc":"10023:29:25","nodeType":"YulFunctionCall","src":"10023:29:25"}],"functionName":{"name":"add","nativeSrc":"10014:3:25","nodeType":"YulIdentifier","src":"10014:3:25"},"nativeSrc":"10014:39:25","nodeType":"YulFunctionCall","src":"10014:39:25"},"variableNames":[{"name":"end","nativeSrc":"10007:3:25","nodeType":"YulIdentifier","src":"10007:3:25"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"9745:314:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"9818:5:25","nodeType":"YulTypedName","src":"9818:5:25","type":""},{"name":"length","nativeSrc":"9825:6:25","nodeType":"YulTypedName","src":"9825:6:25","type":""},{"name":"pos","nativeSrc":"9833:3:25","nodeType":"YulTypedName","src":"9833:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9841:3:25","nodeType":"YulTypedName","src":"9841:3:25","type":""}],"src":"9745:314:25"},{"body":{"nativeSrc":"10219:285:25","nodeType":"YulBlock","src":"10219:285:25","statements":[{"nativeSrc":"10229:26:25","nodeType":"YulAssignment","src":"10229:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"10241:9:25","nodeType":"YulIdentifier","src":"10241:9:25"},{"kind":"number","nativeSrc":"10252:2:25","nodeType":"YulLiteral","src":"10252:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10237:3:25","nodeType":"YulIdentifier","src":"10237:3:25"},"nativeSrc":"10237:18:25","nodeType":"YulFunctionCall","src":"10237:18:25"},"variableNames":[{"name":"tail","nativeSrc":"10229:4:25","nodeType":"YulIdentifier","src":"10229:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10309:6:25","nodeType":"YulIdentifier","src":"10309:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"10322:9:25","nodeType":"YulIdentifier","src":"10322:9:25"},{"kind":"number","nativeSrc":"10333:1:25","nodeType":"YulLiteral","src":"10333:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10318:3:25","nodeType":"YulIdentifier","src":"10318:3:25"},"nativeSrc":"10318:17:25","nodeType":"YulFunctionCall","src":"10318:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10265:43:25","nodeType":"YulIdentifier","src":"10265:43:25"},"nativeSrc":"10265:71:25","nodeType":"YulFunctionCall","src":"10265:71:25"},"nativeSrc":"10265:71:25","nodeType":"YulExpressionStatement","src":"10265:71:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10357:9:25","nodeType":"YulIdentifier","src":"10357:9:25"},{"kind":"number","nativeSrc":"10368:2:25","nodeType":"YulLiteral","src":"10368:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10353:3:25","nodeType":"YulIdentifier","src":"10353:3:25"},"nativeSrc":"10353:18:25","nodeType":"YulFunctionCall","src":"10353:18:25"},{"arguments":[{"name":"tail","nativeSrc":"10377:4:25","nodeType":"YulIdentifier","src":"10377:4:25"},{"name":"headStart","nativeSrc":"10383:9:25","nodeType":"YulIdentifier","src":"10383:9:25"}],"functionName":{"name":"sub","nativeSrc":"10373:3:25","nodeType":"YulIdentifier","src":"10373:3:25"},"nativeSrc":"10373:20:25","nodeType":"YulFunctionCall","src":"10373:20:25"}],"functionName":{"name":"mstore","nativeSrc":"10346:6:25","nodeType":"YulIdentifier","src":"10346:6:25"},"nativeSrc":"10346:48:25","nodeType":"YulFunctionCall","src":"10346:48:25"},"nativeSrc":"10346:48:25","nodeType":"YulExpressionStatement","src":"10346:48:25"},{"nativeSrc":"10403:94:25","nodeType":"YulAssignment","src":"10403:94:25","value":{"arguments":[{"name":"value1","nativeSrc":"10475:6:25","nodeType":"YulIdentifier","src":"10475:6:25"},{"name":"value2","nativeSrc":"10483:6:25","nodeType":"YulIdentifier","src":"10483:6:25"},{"name":"tail","nativeSrc":"10492:4:25","nodeType":"YulIdentifier","src":"10492:4:25"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"10411:63:25","nodeType":"YulIdentifier","src":"10411:63:25"},"nativeSrc":"10411:86:25","nodeType":"YulFunctionCall","src":"10411:86:25"},"variableNames":[{"name":"tail","nativeSrc":"10403:4:25","nodeType":"YulIdentifier","src":"10403:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"10065:439:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10175:9:25","nodeType":"YulTypedName","src":"10175:9:25","type":""},{"name":"value2","nativeSrc":"10187:6:25","nodeType":"YulTypedName","src":"10187:6:25","type":""},{"name":"value1","nativeSrc":"10195:6:25","nodeType":"YulTypedName","src":"10195:6:25","type":""},{"name":"value0","nativeSrc":"10203:6:25","nodeType":"YulTypedName","src":"10203:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10214:4:25","nodeType":"YulTypedName","src":"10214:4:25","type":""}],"src":"10065:439:25"},{"body":{"nativeSrc":"10538:152:25","nodeType":"YulBlock","src":"10538:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10555:1:25","nodeType":"YulLiteral","src":"10555:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"10558:77:25","nodeType":"YulLiteral","src":"10558:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10548:6:25","nodeType":"YulIdentifier","src":"10548:6:25"},"nativeSrc":"10548:88:25","nodeType":"YulFunctionCall","src":"10548:88:25"},"nativeSrc":"10548:88:25","nodeType":"YulExpressionStatement","src":"10548:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10652:1:25","nodeType":"YulLiteral","src":"10652:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"10655:4:25","nodeType":"YulLiteral","src":"10655:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"10645:6:25","nodeType":"YulIdentifier","src":"10645:6:25"},"nativeSrc":"10645:15:25","nodeType":"YulFunctionCall","src":"10645:15:25"},"nativeSrc":"10645:15:25","nodeType":"YulExpressionStatement","src":"10645:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10676:1:25","nodeType":"YulLiteral","src":"10676:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"10679:4:25","nodeType":"YulLiteral","src":"10679:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10669:6:25","nodeType":"YulIdentifier","src":"10669:6:25"},"nativeSrc":"10669:15:25","nodeType":"YulFunctionCall","src":"10669:15:25"},"nativeSrc":"10669:15:25","nodeType":"YulExpressionStatement","src":"10669:15:25"}]},"name":"panic_error_0x11","nativeSrc":"10510:180:25","nodeType":"YulFunctionDefinition","src":"10510:180:25"},{"body":{"nativeSrc":"10740:147:25","nodeType":"YulBlock","src":"10740:147:25","statements":[{"nativeSrc":"10750:25:25","nodeType":"YulAssignment","src":"10750:25:25","value":{"arguments":[{"name":"x","nativeSrc":"10773:1:25","nodeType":"YulIdentifier","src":"10773:1:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10755:17:25","nodeType":"YulIdentifier","src":"10755:17:25"},"nativeSrc":"10755:20:25","nodeType":"YulFunctionCall","src":"10755:20:25"},"variableNames":[{"name":"x","nativeSrc":"10750:1:25","nodeType":"YulIdentifier","src":"10750:1:25"}]},{"nativeSrc":"10784:25:25","nodeType":"YulAssignment","src":"10784:25:25","value":{"arguments":[{"name":"y","nativeSrc":"10807:1:25","nodeType":"YulIdentifier","src":"10807:1:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10789:17:25","nodeType":"YulIdentifier","src":"10789:17:25"},"nativeSrc":"10789:20:25","nodeType":"YulFunctionCall","src":"10789:20:25"},"variableNames":[{"name":"y","nativeSrc":"10784:1:25","nodeType":"YulIdentifier","src":"10784:1:25"}]},{"nativeSrc":"10818:16:25","nodeType":"YulAssignment","src":"10818:16:25","value":{"arguments":[{"name":"x","nativeSrc":"10829:1:25","nodeType":"YulIdentifier","src":"10829:1:25"},{"name":"y","nativeSrc":"10832:1:25","nodeType":"YulIdentifier","src":"10832:1:25"}],"functionName":{"name":"add","nativeSrc":"10825:3:25","nodeType":"YulIdentifier","src":"10825:3:25"},"nativeSrc":"10825:9:25","nodeType":"YulFunctionCall","src":"10825:9:25"},"variableNames":[{"name":"sum","nativeSrc":"10818:3:25","nodeType":"YulIdentifier","src":"10818:3:25"}]},{"body":{"nativeSrc":"10858:22:25","nodeType":"YulBlock","src":"10858:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10860:16:25","nodeType":"YulIdentifier","src":"10860:16:25"},"nativeSrc":"10860:18:25","nodeType":"YulFunctionCall","src":"10860:18:25"},"nativeSrc":"10860:18:25","nodeType":"YulExpressionStatement","src":"10860:18:25"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"10850:1:25","nodeType":"YulIdentifier","src":"10850:1:25"},{"name":"sum","nativeSrc":"10853:3:25","nodeType":"YulIdentifier","src":"10853:3:25"}],"functionName":{"name":"gt","nativeSrc":"10847:2:25","nodeType":"YulIdentifier","src":"10847:2:25"},"nativeSrc":"10847:10:25","nodeType":"YulFunctionCall","src":"10847:10:25"},"nativeSrc":"10844:36:25","nodeType":"YulIf","src":"10844:36:25"}]},"name":"checked_add_t_uint256","nativeSrc":"10696:191:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10727:1:25","nodeType":"YulTypedName","src":"10727:1:25","type":""},{"name":"y","nativeSrc":"10730:1:25","nodeType":"YulTypedName","src":"10730:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"10736:3:25","nodeType":"YulTypedName","src":"10736:3:25","type":""}],"src":"10696:191:25"},{"body":{"nativeSrc":"11045:286:25","nodeType":"YulBlock","src":"11045:286:25","statements":[{"nativeSrc":"11055:26:25","nodeType":"YulAssignment","src":"11055:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"11067:9:25","nodeType":"YulIdentifier","src":"11067:9:25"},{"kind":"number","nativeSrc":"11078:2:25","nodeType":"YulLiteral","src":"11078:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11063:3:25","nodeType":"YulIdentifier","src":"11063:3:25"},"nativeSrc":"11063:18:25","nodeType":"YulFunctionCall","src":"11063:18:25"},"variableNames":[{"name":"tail","nativeSrc":"11055:4:25","nodeType":"YulIdentifier","src":"11055:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11135:6:25","nodeType":"YulIdentifier","src":"11135:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"11148:9:25","nodeType":"YulIdentifier","src":"11148:9:25"},{"kind":"number","nativeSrc":"11159:1:25","nodeType":"YulLiteral","src":"11159:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11144:3:25","nodeType":"YulIdentifier","src":"11144:3:25"},"nativeSrc":"11144:17:25","nodeType":"YulFunctionCall","src":"11144:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11091:43:25","nodeType":"YulIdentifier","src":"11091:43:25"},"nativeSrc":"11091:71:25","nodeType":"YulFunctionCall","src":"11091:71:25"},"nativeSrc":"11091:71:25","nodeType":"YulExpressionStatement","src":"11091:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11216:6:25","nodeType":"YulIdentifier","src":"11216:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"11229:9:25","nodeType":"YulIdentifier","src":"11229:9:25"},{"kind":"number","nativeSrc":"11240:2:25","nodeType":"YulLiteral","src":"11240:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11225:3:25","nodeType":"YulIdentifier","src":"11225:3:25"},"nativeSrc":"11225:18:25","nodeType":"YulFunctionCall","src":"11225:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11172:43:25","nodeType":"YulIdentifier","src":"11172:43:25"},"nativeSrc":"11172:72:25","nodeType":"YulFunctionCall","src":"11172:72:25"},"nativeSrc":"11172:72:25","nodeType":"YulExpressionStatement","src":"11172:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11296:6:25","nodeType":"YulIdentifier","src":"11296:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"11309:9:25","nodeType":"YulIdentifier","src":"11309:9:25"},{"kind":"number","nativeSrc":"11320:2:25","nodeType":"YulLiteral","src":"11320:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11305:3:25","nodeType":"YulIdentifier","src":"11305:3:25"},"nativeSrc":"11305:18:25","nodeType":"YulFunctionCall","src":"11305:18:25"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"11254:41:25","nodeType":"YulIdentifier","src":"11254:41:25"},"nativeSrc":"11254:70:25","nodeType":"YulFunctionCall","src":"11254:70:25"},"nativeSrc":"11254:70:25","nodeType":"YulExpressionStatement","src":"11254:70:25"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed","nativeSrc":"10893:438:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11001:9:25","nodeType":"YulTypedName","src":"11001:9:25","type":""},{"name":"value2","nativeSrc":"11013:6:25","nodeType":"YulTypedName","src":"11013:6:25","type":""},{"name":"value1","nativeSrc":"11021:6:25","nodeType":"YulTypedName","src":"11021:6:25","type":""},{"name":"value0","nativeSrc":"11029:6:25","nodeType":"YulTypedName","src":"11029:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11040:4:25","nodeType":"YulTypedName","src":"11040:4:25","type":""}],"src":"10893:438:25"},{"body":{"nativeSrc":"11395:40:25","nodeType":"YulBlock","src":"11395:40:25","statements":[{"nativeSrc":"11406:22:25","nodeType":"YulAssignment","src":"11406:22:25","value":{"arguments":[{"name":"value","nativeSrc":"11422:5:25","nodeType":"YulIdentifier","src":"11422:5:25"}],"functionName":{"name":"mload","nativeSrc":"11416:5:25","nodeType":"YulIdentifier","src":"11416:5:25"},"nativeSrc":"11416:12:25","nodeType":"YulFunctionCall","src":"11416:12:25"},"variableNames":[{"name":"length","nativeSrc":"11406:6:25","nodeType":"YulIdentifier","src":"11406:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11337:98:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11378:5:25","nodeType":"YulTypedName","src":"11378:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11388:6:25","nodeType":"YulTypedName","src":"11388:6:25","type":""}],"src":"11337:98:25"},{"body":{"nativeSrc":"11554:34:25","nodeType":"YulBlock","src":"11554:34:25","statements":[{"nativeSrc":"11564:18:25","nodeType":"YulAssignment","src":"11564:18:25","value":{"name":"pos","nativeSrc":"11579:3:25","nodeType":"YulIdentifier","src":"11579:3:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"11564:11:25","nodeType":"YulIdentifier","src":"11564:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"11441:147:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11526:3:25","nodeType":"YulTypedName","src":"11526:3:25","type":""},{"name":"length","nativeSrc":"11531:6:25","nodeType":"YulTypedName","src":"11531:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"11542:11:25","nodeType":"YulTypedName","src":"11542:11:25","type":""}],"src":"11441:147:25"},{"body":{"nativeSrc":"11702:278:25","nodeType":"YulBlock","src":"11702:278:25","statements":[{"nativeSrc":"11712:52:25","nodeType":"YulVariableDeclaration","src":"11712:52:25","value":{"arguments":[{"name":"value","nativeSrc":"11758:5:25","nodeType":"YulIdentifier","src":"11758:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11726:31:25","nodeType":"YulIdentifier","src":"11726:31:25"},"nativeSrc":"11726:38:25","nodeType":"YulFunctionCall","src":"11726:38:25"},"variables":[{"name":"length","nativeSrc":"11716:6:25","nodeType":"YulTypedName","src":"11716:6:25","type":""}]},{"nativeSrc":"11773:95:25","nodeType":"YulAssignment","src":"11773:95:25","value":{"arguments":[{"name":"pos","nativeSrc":"11856:3:25","nodeType":"YulIdentifier","src":"11856:3:25"},{"name":"length","nativeSrc":"11861:6:25","nodeType":"YulIdentifier","src":"11861:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"11780:75:25","nodeType":"YulIdentifier","src":"11780:75:25"},"nativeSrc":"11780:88:25","nodeType":"YulFunctionCall","src":"11780:88:25"},"variableNames":[{"name":"pos","nativeSrc":"11773:3:25","nodeType":"YulIdentifier","src":"11773:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11916:5:25","nodeType":"YulIdentifier","src":"11916:5:25"},{"kind":"number","nativeSrc":"11923:4:25","nodeType":"YulLiteral","src":"11923:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11912:3:25","nodeType":"YulIdentifier","src":"11912:3:25"},"nativeSrc":"11912:16:25","nodeType":"YulFunctionCall","src":"11912:16:25"},{"name":"pos","nativeSrc":"11930:3:25","nodeType":"YulIdentifier","src":"11930:3:25"},{"name":"length","nativeSrc":"11935:6:25","nodeType":"YulIdentifier","src":"11935:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11877:34:25","nodeType":"YulIdentifier","src":"11877:34:25"},"nativeSrc":"11877:65:25","nodeType":"YulFunctionCall","src":"11877:65:25"},"nativeSrc":"11877:65:25","nodeType":"YulExpressionStatement","src":"11877:65:25"},{"nativeSrc":"11951:23:25","nodeType":"YulAssignment","src":"11951:23:25","value":{"arguments":[{"name":"pos","nativeSrc":"11962:3:25","nodeType":"YulIdentifier","src":"11962:3:25"},{"name":"length","nativeSrc":"11967:6:25","nodeType":"YulIdentifier","src":"11967:6:25"}],"functionName":{"name":"add","nativeSrc":"11958:3:25","nodeType":"YulIdentifier","src":"11958:3:25"},"nativeSrc":"11958:16:25","nodeType":"YulFunctionCall","src":"11958:16:25"},"variableNames":[{"name":"end","nativeSrc":"11951:3:25","nodeType":"YulIdentifier","src":"11951:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"11594:386:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11683:5:25","nodeType":"YulTypedName","src":"11683:5:25","type":""},{"name":"pos","nativeSrc":"11690:3:25","nodeType":"YulTypedName","src":"11690:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11698:3:25","nodeType":"YulTypedName","src":"11698:3:25","type":""}],"src":"11594:386:25"},{"body":{"nativeSrc":"12120:137:25","nodeType":"YulBlock","src":"12120:137:25","statements":[{"nativeSrc":"12131:100:25","nodeType":"YulAssignment","src":"12131:100:25","value":{"arguments":[{"name":"value0","nativeSrc":"12218:6:25","nodeType":"YulIdentifier","src":"12218:6:25"},{"name":"pos","nativeSrc":"12227:3:25","nodeType":"YulIdentifier","src":"12227:3:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"12138:79:25","nodeType":"YulIdentifier","src":"12138:79:25"},"nativeSrc":"12138:93:25","nodeType":"YulFunctionCall","src":"12138:93:25"},"variableNames":[{"name":"pos","nativeSrc":"12131:3:25","nodeType":"YulIdentifier","src":"12131:3:25"}]},{"nativeSrc":"12241:10:25","nodeType":"YulAssignment","src":"12241:10:25","value":{"name":"pos","nativeSrc":"12248:3:25","nodeType":"YulIdentifier","src":"12248:3:25"},"variableNames":[{"name":"end","nativeSrc":"12241:3:25","nodeType":"YulIdentifier","src":"12241:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"11986:271:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12099:3:25","nodeType":"YulTypedName","src":"12099:3:25","type":""},{"name":"value0","nativeSrc":"12105:6:25","nodeType":"YulTypedName","src":"12105:6:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12116:3:25","nodeType":"YulTypedName","src":"12116:3:25","type":""}],"src":"11986:271:25"},{"body":{"nativeSrc":"12303:76:25","nodeType":"YulBlock","src":"12303:76:25","statements":[{"body":{"nativeSrc":"12357:16:25","nodeType":"YulBlock","src":"12357:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12366:1:25","nodeType":"YulLiteral","src":"12366:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"12369:1:25","nodeType":"YulLiteral","src":"12369:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12359:6:25","nodeType":"YulIdentifier","src":"12359:6:25"},"nativeSrc":"12359:12:25","nodeType":"YulFunctionCall","src":"12359:12:25"},"nativeSrc":"12359:12:25","nodeType":"YulExpressionStatement","src":"12359:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12326:5:25","nodeType":"YulIdentifier","src":"12326:5:25"},{"arguments":[{"name":"value","nativeSrc":"12348:5:25","nodeType":"YulIdentifier","src":"12348:5:25"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"12333:14:25","nodeType":"YulIdentifier","src":"12333:14:25"},"nativeSrc":"12333:21:25","nodeType":"YulFunctionCall","src":"12333:21:25"}],"functionName":{"name":"eq","nativeSrc":"12323:2:25","nodeType":"YulIdentifier","src":"12323:2:25"},"nativeSrc":"12323:32:25","nodeType":"YulFunctionCall","src":"12323:32:25"}],"functionName":{"name":"iszero","nativeSrc":"12316:6:25","nodeType":"YulIdentifier","src":"12316:6:25"},"nativeSrc":"12316:40:25","nodeType":"YulFunctionCall","src":"12316:40:25"},"nativeSrc":"12313:60:25","nodeType":"YulIf","src":"12313:60:25"}]},"name":"validator_revert_t_bool","nativeSrc":"12263:116:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12296:5:25","nodeType":"YulTypedName","src":"12296:5:25","type":""}],"src":"12263:116:25"},{"body":{"nativeSrc":"12445:77:25","nodeType":"YulBlock","src":"12445:77:25","statements":[{"nativeSrc":"12455:22:25","nodeType":"YulAssignment","src":"12455:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"12470:6:25","nodeType":"YulIdentifier","src":"12470:6:25"}],"functionName":{"name":"mload","nativeSrc":"12464:5:25","nodeType":"YulIdentifier","src":"12464:5:25"},"nativeSrc":"12464:13:25","nodeType":"YulFunctionCall","src":"12464:13:25"},"variableNames":[{"name":"value","nativeSrc":"12455:5:25","nodeType":"YulIdentifier","src":"12455:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12510:5:25","nodeType":"YulIdentifier","src":"12510:5:25"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"12486:23:25","nodeType":"YulIdentifier","src":"12486:23:25"},"nativeSrc":"12486:30:25","nodeType":"YulFunctionCall","src":"12486:30:25"},"nativeSrc":"12486:30:25","nodeType":"YulExpressionStatement","src":"12486:30:25"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"12385:137:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12423:6:25","nodeType":"YulTypedName","src":"12423:6:25","type":""},{"name":"end","nativeSrc":"12431:3:25","nodeType":"YulTypedName","src":"12431:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12439:5:25","nodeType":"YulTypedName","src":"12439:5:25","type":""}],"src":"12385:137:25"},{"body":{"nativeSrc":"12572:49:25","nodeType":"YulBlock","src":"12572:49:25","statements":[{"nativeSrc":"12582:33:25","nodeType":"YulAssignment","src":"12582:33:25","value":{"arguments":[{"name":"value","nativeSrc":"12597:5:25","nodeType":"YulIdentifier","src":"12597:5:25"},{"kind":"number","nativeSrc":"12604:10:25","nodeType":"YulLiteral","src":"12604:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"12593:3:25","nodeType":"YulIdentifier","src":"12593:3:25"},"nativeSrc":"12593:22:25","nodeType":"YulFunctionCall","src":"12593:22:25"},"variableNames":[{"name":"cleaned","nativeSrc":"12582:7:25","nodeType":"YulIdentifier","src":"12582:7:25"}]}]},"name":"cleanup_t_uint32","nativeSrc":"12528:93:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12554:5:25","nodeType":"YulTypedName","src":"12554:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12564:7:25","nodeType":"YulTypedName","src":"12564:7:25","type":""}],"src":"12528:93:25"},{"body":{"nativeSrc":"12669:78:25","nodeType":"YulBlock","src":"12669:78:25","statements":[{"body":{"nativeSrc":"12725:16:25","nodeType":"YulBlock","src":"12725:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12734:1:25","nodeType":"YulLiteral","src":"12734:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"12737:1:25","nodeType":"YulLiteral","src":"12737:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12727:6:25","nodeType":"YulIdentifier","src":"12727:6:25"},"nativeSrc":"12727:12:25","nodeType":"YulFunctionCall","src":"12727:12:25"},"nativeSrc":"12727:12:25","nodeType":"YulExpressionStatement","src":"12727:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12692:5:25","nodeType":"YulIdentifier","src":"12692:5:25"},{"arguments":[{"name":"value","nativeSrc":"12716:5:25","nodeType":"YulIdentifier","src":"12716:5:25"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"12699:16:25","nodeType":"YulIdentifier","src":"12699:16:25"},"nativeSrc":"12699:23:25","nodeType":"YulFunctionCall","src":"12699:23:25"}],"functionName":{"name":"eq","nativeSrc":"12689:2:25","nodeType":"YulIdentifier","src":"12689:2:25"},"nativeSrc":"12689:34:25","nodeType":"YulFunctionCall","src":"12689:34:25"}],"functionName":{"name":"iszero","nativeSrc":"12682:6:25","nodeType":"YulIdentifier","src":"12682:6:25"},"nativeSrc":"12682:42:25","nodeType":"YulFunctionCall","src":"12682:42:25"},"nativeSrc":"12679:62:25","nodeType":"YulIf","src":"12679:62:25"}]},"name":"validator_revert_t_uint32","nativeSrc":"12627:120:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12662:5:25","nodeType":"YulTypedName","src":"12662:5:25","type":""}],"src":"12627:120:25"},{"body":{"nativeSrc":"12815:79:25","nodeType":"YulBlock","src":"12815:79:25","statements":[{"nativeSrc":"12825:22:25","nodeType":"YulAssignment","src":"12825:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"12840:6:25","nodeType":"YulIdentifier","src":"12840:6:25"}],"functionName":{"name":"mload","nativeSrc":"12834:5:25","nodeType":"YulIdentifier","src":"12834:5:25"},"nativeSrc":"12834:13:25","nodeType":"YulFunctionCall","src":"12834:13:25"},"variableNames":[{"name":"value","nativeSrc":"12825:5:25","nodeType":"YulIdentifier","src":"12825:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12882:5:25","nodeType":"YulIdentifier","src":"12882:5:25"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"12856:25:25","nodeType":"YulIdentifier","src":"12856:25:25"},"nativeSrc":"12856:32:25","nodeType":"YulFunctionCall","src":"12856:32:25"},"nativeSrc":"12856:32:25","nodeType":"YulExpressionStatement","src":"12856:32:25"}]},"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"12753:141:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12793:6:25","nodeType":"YulTypedName","src":"12793:6:25","type":""},{"name":"end","nativeSrc":"12801:3:25","nodeType":"YulTypedName","src":"12801:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12809:5:25","nodeType":"YulTypedName","src":"12809:5:25","type":""}],"src":"12753:141:25"},{"body":{"nativeSrc":"12990:409:25","nodeType":"YulBlock","src":"12990:409:25","statements":[{"body":{"nativeSrc":"13036:83:25","nodeType":"YulBlock","src":"13036:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13038:77:25","nodeType":"YulIdentifier","src":"13038:77:25"},"nativeSrc":"13038:79:25","nodeType":"YulFunctionCall","src":"13038:79:25"},"nativeSrc":"13038:79:25","nodeType":"YulExpressionStatement","src":"13038:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13011:7:25","nodeType":"YulIdentifier","src":"13011:7:25"},{"name":"headStart","nativeSrc":"13020:9:25","nodeType":"YulIdentifier","src":"13020:9:25"}],"functionName":{"name":"sub","nativeSrc":"13007:3:25","nodeType":"YulIdentifier","src":"13007:3:25"},"nativeSrc":"13007:23:25","nodeType":"YulFunctionCall","src":"13007:23:25"},{"kind":"number","nativeSrc":"13032:2:25","nodeType":"YulLiteral","src":"13032:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"13003:3:25","nodeType":"YulIdentifier","src":"13003:3:25"},"nativeSrc":"13003:32:25","nodeType":"YulFunctionCall","src":"13003:32:25"},"nativeSrc":"13000:119:25","nodeType":"YulIf","src":"13000:119:25"},{"nativeSrc":"13129:125:25","nodeType":"YulBlock","src":"13129:125:25","statements":[{"nativeSrc":"13144:15:25","nodeType":"YulVariableDeclaration","src":"13144:15:25","value":{"kind":"number","nativeSrc":"13158:1:25","nodeType":"YulLiteral","src":"13158:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13148:6:25","nodeType":"YulTypedName","src":"13148:6:25","type":""}]},{"nativeSrc":"13173:71:25","nodeType":"YulAssignment","src":"13173:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13216:9:25","nodeType":"YulIdentifier","src":"13216:9:25"},{"name":"offset","nativeSrc":"13227:6:25","nodeType":"YulIdentifier","src":"13227:6:25"}],"functionName":{"name":"add","nativeSrc":"13212:3:25","nodeType":"YulIdentifier","src":"13212:3:25"},"nativeSrc":"13212:22:25","nodeType":"YulFunctionCall","src":"13212:22:25"},{"name":"dataEnd","nativeSrc":"13236:7:25","nodeType":"YulIdentifier","src":"13236:7:25"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"13183:28:25","nodeType":"YulIdentifier","src":"13183:28:25"},"nativeSrc":"13183:61:25","nodeType":"YulFunctionCall","src":"13183:61:25"},"variableNames":[{"name":"value0","nativeSrc":"13173:6:25","nodeType":"YulIdentifier","src":"13173:6:25"}]}]},{"nativeSrc":"13264:128:25","nodeType":"YulBlock","src":"13264:128:25","statements":[{"nativeSrc":"13279:16:25","nodeType":"YulVariableDeclaration","src":"13279:16:25","value":{"kind":"number","nativeSrc":"13293:2:25","nodeType":"YulLiteral","src":"13293:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13283:6:25","nodeType":"YulTypedName","src":"13283:6:25","type":""}]},{"nativeSrc":"13309:73:25","nodeType":"YulAssignment","src":"13309:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13354:9:25","nodeType":"YulIdentifier","src":"13354:9:25"},{"name":"offset","nativeSrc":"13365:6:25","nodeType":"YulIdentifier","src":"13365:6:25"}],"functionName":{"name":"add","nativeSrc":"13350:3:25","nodeType":"YulIdentifier","src":"13350:3:25"},"nativeSrc":"13350:22:25","nodeType":"YulFunctionCall","src":"13350:22:25"},{"name":"dataEnd","nativeSrc":"13374:7:25","nodeType":"YulIdentifier","src":"13374:7:25"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"13319:30:25","nodeType":"YulIdentifier","src":"13319:30:25"},"nativeSrc":"13319:63:25","nodeType":"YulFunctionCall","src":"13319:63:25"},"variableNames":[{"name":"value1","nativeSrc":"13309:6:25","nodeType":"YulIdentifier","src":"13309:6:25"}]}]}]},"name":"abi_decode_tuple_t_boolt_uint32_fromMemory","nativeSrc":"12900:499:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12952:9:25","nodeType":"YulTypedName","src":"12952:9:25","type":""},{"name":"dataEnd","nativeSrc":"12963:7:25","nodeType":"YulTypedName","src":"12963:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12975:6:25","nodeType":"YulTypedName","src":"12975:6:25","type":""},{"name":"value1","nativeSrc":"12983:6:25","nodeType":"YulTypedName","src":"12983:6:25","type":""}],"src":"12900:499:25"},{"body":{"nativeSrc":"13479:271:25","nodeType":"YulBlock","src":"13479:271:25","statements":[{"body":{"nativeSrc":"13525:83:25","nodeType":"YulBlock","src":"13525:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13527:77:25","nodeType":"YulIdentifier","src":"13527:77:25"},"nativeSrc":"13527:79:25","nodeType":"YulFunctionCall","src":"13527:79:25"},"nativeSrc":"13527:79:25","nodeType":"YulExpressionStatement","src":"13527:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13500:7:25","nodeType":"YulIdentifier","src":"13500:7:25"},{"name":"headStart","nativeSrc":"13509:9:25","nodeType":"YulIdentifier","src":"13509:9:25"}],"functionName":{"name":"sub","nativeSrc":"13496:3:25","nodeType":"YulIdentifier","src":"13496:3:25"},"nativeSrc":"13496:23:25","nodeType":"YulFunctionCall","src":"13496:23:25"},{"kind":"number","nativeSrc":"13521:2:25","nodeType":"YulLiteral","src":"13521:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13492:3:25","nodeType":"YulIdentifier","src":"13492:3:25"},"nativeSrc":"13492:32:25","nodeType":"YulFunctionCall","src":"13492:32:25"},"nativeSrc":"13489:119:25","nodeType":"YulIf","src":"13489:119:25"},{"nativeSrc":"13618:125:25","nodeType":"YulBlock","src":"13618:125:25","statements":[{"nativeSrc":"13633:15:25","nodeType":"YulVariableDeclaration","src":"13633:15:25","value":{"kind":"number","nativeSrc":"13647:1:25","nodeType":"YulLiteral","src":"13647:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13637:6:25","nodeType":"YulTypedName","src":"13637:6:25","type":""}]},{"nativeSrc":"13662:71:25","nodeType":"YulAssignment","src":"13662:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13705:9:25","nodeType":"YulIdentifier","src":"13705:9:25"},{"name":"offset","nativeSrc":"13716:6:25","nodeType":"YulIdentifier","src":"13716:6:25"}],"functionName":{"name":"add","nativeSrc":"13701:3:25","nodeType":"YulIdentifier","src":"13701:3:25"},"nativeSrc":"13701:22:25","nodeType":"YulFunctionCall","src":"13701:22:25"},{"name":"dataEnd","nativeSrc":"13725:7:25","nodeType":"YulIdentifier","src":"13725:7:25"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"13672:28:25","nodeType":"YulIdentifier","src":"13672:28:25"},"nativeSrc":"13672:61:25","nodeType":"YulFunctionCall","src":"13672:61:25"},"variableNames":[{"name":"value0","nativeSrc":"13662:6:25","nodeType":"YulIdentifier","src":"13662:6:25"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"13405:345:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13449:9:25","nodeType":"YulTypedName","src":"13449:9:25","type":""},{"name":"dataEnd","nativeSrc":"13460:7:25","nodeType":"YulTypedName","src":"13460:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13472:6:25","nodeType":"YulTypedName","src":"13472:6:25","type":""}],"src":"13405:345:25"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes4(calldataload(dataArea))\n\n        if lt(length, 4) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(4, length)),\n                    0xffffffff00000000000000000000000000000000000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint32_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a082311161009757806395d89b411161006657806395d89b4114610272578063a9059cbb14610290578063bf7e214f146102c0578063dd62ed3e146102de576100f5565b806370a08231146101ec57806379cc67901461021c5780637a9e5e4b146102385780638fb3603714610254576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806340c10f19146101b457806342966c68146101d0576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b61010261030e565b60405161010f9190611149565b60405180910390f35b610132600480360381019061012d9190611204565b6103a0565b60405161013f919061125f565b60405180910390f35b6101506103c3565b60405161015d9190611289565b60405180910390f35b610180600480360381019061017b91906112a4565b6103cd565b60405161018d919061125f565b60405180910390f35b61019e6103fc565b6040516101ab9190611313565b60405180910390f35b6101ce60048036038101906101c99190611204565b610405565b005b6101ea60048036038101906101e5919061132e565b61042b565b005b6102066004803603810190610201919061135b565b61043f565b6040516102139190611289565b60405180910390f35b61023660048036038101906102319190611204565b610487565b005b610252600480360381019061024d919061135b565b6104a7565b005b61025c610593565b60405161026991906113c3565b60405180910390f35b61027a6105c1565b6040516102879190611149565b60405180910390f35b6102aa60048036038101906102a59190611204565b610653565b6040516102b7919061125f565b60405180910390f35b6102c8610676565b6040516102d591906113ed565b60405180910390f35b6102f860048036038101906102f39190611408565b6106a0565b6040516103059190611289565b60405180910390f35b60606003805461031d90611477565b80601f016020809104026020016040519081016040528092919081815260200182805461034990611477565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b5050505050905090565b6000806103ab610727565b90506103b881858561072f565b600191505092915050565b6000600254905090565b6000806103d8610727565b90506103e5858285610741565b6103f08585856107d5565b60019150509392505050565b60006012905090565b61041d610410610727565b6104186108c9565b6108d6565b6104278282610a18565b5050565b61043c610436610727565b82610a9a565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61049982610493610727565b83610741565b6104a38282610a9a565b5050565b60006104b1610727565b90506104bb610676565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461052a57806040517f068ca9d800000000000000000000000000000000000000000000000000000000815260040161052191906113ed565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff163b0361058657816040517fc2f31e5e00000000000000000000000000000000000000000000000000000000815260040161057d91906113ed565b60405180910390fd5b61058f82610b1c565b5050565b6000600560149054906101000a900460ff166105b357600060e01b6105bc565b638fb3603760e01b5b905090565b6060600480546105d090611477565b80601f01602080910402602001604051908101604052809291908181526020018280546105fc90611477565b80156106495780601f1061061e57610100808354040283529160200191610649565b820191906000526020600020905b81548152906001019060200180831161062c57829003601f168201915b5050505050905090565b60008061065e610727565b905061066b8185856107d5565b600191505092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61073c8383836001610b97565b505050565b600061074d84846106a0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107cf57818110156107bf578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107b6939291906114a8565b60405180910390fd5b6107ce84848484036000610b97565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108475760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161083e91906113ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b95760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108b091906113ed565b60405180910390fd5b6108c4838383610d6e565b505050565b3660008036915091509091565b60008061090a6108e4610676565b863087876000906004926108fa939291906114e9565b90610905919061153c565b610f93565b9150915081610a115760008163ffffffff1611156109d3576001600560146101000a81548160ff021916908315150217905550610945610676565b73ffffffffffffffffffffffffffffffffffffffff166394c7d7ee8686866040518463ffffffff1660e01b8152600401610981939291906115e8565b600060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b505050506000600560146101000a81548160ff021916908315150217905550610a10565b846040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401610a0791906113ed565b60405180910390fd5b5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a8a5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a8191906113ed565b60405180910390fd5b610a9660008383610d6e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b0c5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b0391906113ed565b60405180910390fd5b610b1882600083610d6e565b5050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad81604051610b8c91906113ed565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c095760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c0091906113ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c7b5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c7291906113ed565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d68578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d5f9190611289565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dc0578060026000828254610db49190611649565b92505081905550610e93565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e4c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e43939291906114a8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610edc5780600260008282540392505081905550610f29565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f869190611289565b60405180910390a3505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff16878787604051602401610fc59392919061167d565b60405160208183030381529060405263b700961360e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161101791906116fb565b600060405180830381855afa9150503d8060008114611052576040519150601f19603f3d011682016040523d82523d6000602084013e611057565b606091505b509150915081156110ae57604081511061108c578080602001905181019061107f919061177a565b80945081955050506110ad565b60208151106110ac57808060200190518101906110a991906117ba565b93505b5b5b505094509492505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110f35780820151818401526020810190506110d8565b60008484015250505050565b6000601f19601f8301169050919050565b600061111b826110b9565b61112581856110c4565b93506111358185602086016110d5565b61113e816110ff565b840191505092915050565b600060208201905081810360008301526111638184611110565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061119b82611170565b9050919050565b6111ab81611190565b81146111b657600080fd5b50565b6000813590506111c8816111a2565b92915050565b6000819050919050565b6111e1816111ce565b81146111ec57600080fd5b50565b6000813590506111fe816111d8565b92915050565b6000806040838503121561121b5761121a61116b565b5b6000611229858286016111b9565b925050602061123a858286016111ef565b9150509250929050565b60008115159050919050565b61125981611244565b82525050565b60006020820190506112746000830184611250565b92915050565b611283816111ce565b82525050565b600060208201905061129e600083018461127a565b92915050565b6000806000606084860312156112bd576112bc61116b565b5b60006112cb868287016111b9565b93505060206112dc868287016111b9565b92505060406112ed868287016111ef565b9150509250925092565b600060ff82169050919050565b61130d816112f7565b82525050565b60006020820190506113286000830184611304565b92915050565b6000602082840312156113445761134361116b565b5b6000611352848285016111ef565b91505092915050565b6000602082840312156113715761137061116b565b5b600061137f848285016111b9565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113bd81611388565b82525050565b60006020820190506113d860008301846113b4565b92915050565b6113e781611190565b82525050565b600060208201905061140260008301846113de565b92915050565b6000806040838503121561141f5761141e61116b565b5b600061142d858286016111b9565b925050602061143e858286016111b9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061148f57607f821691505b6020821081036114a2576114a1611448565b5b50919050565b60006060820190506114bd60008301866113de565b6114ca602083018561127a565b6114d7604083018461127a565b949350505050565b600080fd5b600080fd5b600080858511156114fd576114fc6114df565b5b8386111561150e5761150d6114e4565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b60006115488383611524565b826115538135611388565b925060048210156115935761158e7fffffffff000000000000000000000000000000000000000000000000000000008360040360080261152f565b831692505b505092915050565b600082825260208201905092915050565b82818337600083830152505050565b60006115c7838561159b565b93506115d48385846115ac565b6115dd836110ff565b840190509392505050565b60006040820190506115fd60008301866113de565b81810360208301526116108184866115bb565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611654826111ce565b915061165f836111ce565b92508282019050808211156116775761167661161a565b5b92915050565b600060608201905061169260008301866113de565b61169f60208301856113de565b6116ac60408301846113b4565b949350505050565b600081519050919050565b600081905092915050565b60006116d5826116b4565b6116df81856116bf565b93506116ef8185602086016110d5565b80840191505092915050565b600061170782846116ca565b915081905092915050565b61171b81611244565b811461172657600080fd5b50565b60008151905061173881611712565b92915050565b600063ffffffff82169050919050565b6117578161173e565b811461176257600080fd5b50565b6000815190506117748161174e565b92915050565b600080604083850312156117915761179061116b565b5b600061179f85828601611729565b92505060206117b085828601611765565b9150509250929050565b6000602082840312156117d0576117cf61116b565b5b60006117de84828501611729565b9150509291505056fea264697066735822122069f591c9ab53dc4fe35ed9ab1668e298671a8e922cc1ce5d37f5e0f100897b1e64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x8FB36037 EQ PUSH2 0x254 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x487 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31D SWAP1 PUSH2 0x1477 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x349 SWAP1 PUSH2 0x1477 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3AB PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B8 DUP2 DUP6 DUP6 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D8 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E5 DUP6 DUP3 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x3F0 DUP6 DUP6 DUP6 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x41D PUSH2 0x410 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x418 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST PUSH2 0x427 DUP3 DUP3 PUSH2 0xA18 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x43C PUSH2 0x436 PUSH2 0x727 JUMP JUMPDEST DUP3 PUSH2 0xA9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x499 DUP3 PUSH2 0x493 PUSH2 0x727 JUMP JUMPDEST DUP4 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4A3 DUP3 DUP3 PUSH2 0xA9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BB PUSH2 0x676 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x586 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xC2F31E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58F DUP3 PUSH2 0xB1C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5B3 JUMPI PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0x5BC JUMP JUMPDEST PUSH4 0x8FB36037 PUSH1 0xE0 SHL JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5D0 SWAP1 PUSH2 0x1477 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5FC SWAP1 PUSH2 0x1477 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x649 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x61E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x649 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x65E PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x66B DUP2 DUP6 DUP6 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x73C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB97 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D DUP5 DUP5 PUSH2 0x6A0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7CF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7BF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CE DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xB97 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C4 DUP4 DUP4 DUP4 PUSH2 0xD6E JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x90A PUSH2 0x8E4 PUSH2 0x676 JUMP JUMPDEST DUP7 ADDRESS DUP8 DUP8 PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP3 PUSH2 0x8FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xA11 JUMPI PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x945 PUSH2 0x676 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94C7D7EE DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA10 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA96 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD6E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB18 DUP3 PUSH1 0x0 DUP4 PUSH2 0xD6E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP2 PUSH1 0x40 MLOAD PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC09 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD68 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE4C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF29 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xFC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xB7009613 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1017 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x10AE JUMPI PUSH1 0x40 DUP2 MLOAD LT PUSH2 0x108C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x10AC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10A9 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x111B DUP3 PUSH2 0x10B9 JUMP JUMPDEST PUSH2 0x1125 DUP2 DUP6 PUSH2 0x10C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1135 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x113E DUP2 PUSH2 0x10FF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1163 DUP2 DUP5 PUSH2 0x1110 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119B DUP3 PUSH2 0x1170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP2 EQ PUSH2 0x11B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11C8 DUP2 PUSH2 0x11A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E1 DUP2 PUSH2 0x11CE JUMP JUMPDEST DUP2 EQ PUSH2 0x11EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FE DUP2 PUSH2 0x11D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x121B JUMPI PUSH2 0x121A PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1229 DUP6 DUP3 DUP7 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x123A DUP6 DUP3 DUP7 ADD PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1259 DUP2 PUSH2 0x1244 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1274 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1250 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1283 DUP2 PUSH2 0x11CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12BD JUMPI PUSH2 0x12BC PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12CB DUP7 DUP3 DUP8 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12DC DUP7 DUP3 DUP8 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12ED DUP7 DUP3 DUP8 ADD PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130D DUP2 PUSH2 0x12F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1328 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1343 PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1352 DUP5 DUP3 DUP6 ADD PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1371 JUMPI PUSH2 0x1370 PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137F DUP5 DUP3 DUP6 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BD DUP2 PUSH2 0x1388 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13E7 DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1402 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141F JUMPI PUSH2 0x141E PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142D DUP6 DUP3 DUP7 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143E DUP6 DUP3 DUP7 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x148F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14A2 JUMPI PUSH2 0x14A1 PUSH2 0x1448 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14BD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x14CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x14D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x14FD JUMPI PUSH2 0x14FC PUSH2 0x14DF JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x150E JUMPI PUSH2 0x150D PUSH2 0x14E4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1548 DUP4 DUP4 PUSH2 0x1524 JUMP JUMPDEST DUP3 PUSH2 0x1553 DUP2 CALLDATALOAD PUSH2 0x1388 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x1593 JUMPI PUSH2 0x158E PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x152F JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C7 DUP4 DUP6 PUSH2 0x159B JUMP JUMPDEST SWAP4 POP PUSH2 0x15D4 DUP4 DUP6 DUP5 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x15DD DUP4 PUSH2 0x10FF JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13DE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1610 DUP2 DUP5 DUP7 PUSH2 0x15BB JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1654 DUP3 PUSH2 0x11CE JUMP JUMPDEST SWAP2 POP PUSH2 0x165F DUP4 PUSH2 0x11CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x161A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1692 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x169F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x16AC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13B4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D5 DUP3 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x16DF DUP2 DUP6 PUSH2 0x16BF JUMP JUMPDEST SWAP4 POP PUSH2 0x16EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10D5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1707 DUP3 DUP5 PUSH2 0x16CA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x171B DUP2 PUSH2 0x1244 JUMP JUMPDEST DUP2 EQ PUSH2 0x1726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1738 DUP2 PUSH2 0x1712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1757 DUP2 PUSH2 0x173E JUMP JUMPDEST DUP2 EQ PUSH2 0x1762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1774 DUP2 PUSH2 0x174E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1791 JUMPI PUSH2 0x1790 PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x179F DUP6 DUP3 DUP7 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x116B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DE DUP5 DUP3 DUP6 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xF591C9AB53DC4FE35ED9 0xAB AND PUSH9 0xE298671A8E922CC1CE TSTORE CALLDATACOPY CREATE2 0xE0 CALL STOP DUP10 PUSH28 0x1E64736F6C6343000818003300000000000000000000000000000000 ","sourceMap":"306:280:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;490:94:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3056:362:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3459:156;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2922:93:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;490:94:23:-;2824:39:0;2838:12;:10;:12::i;:::-;2852:10;:8;:10::i;:::-;2824:13;:39::i;:::-;560:17:23::1;566:2;570:6;560:5;:17::i;:::-;490:94:::0;;:::o;618:87:8:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;3299:116:6:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;1021:158:8:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;3056:362:0:-;3125:14;3142:12;:10;:12::i;:::-;3125:29;;3178:11;:9;:11::i;:::-;3168:21;;:6;:21;;;3164:92;;3238:6;3212:33;;;;;;;;;;;:::i;:::-;;;;;;;;3164:92;3297:1;3269:12;:24;;;:29;3265:110;;3351:12;3321:43;;;;;;;;;;;:::i;:::-;;;;;;;;3265:110;3384:27;3398:12;3384:13;:27::i;:::-;3115:303;3056:362;:::o;3459:156::-;3514:6;3539:18;;;;;;;;;;;:69;;3606:1;3599:9;;3539:69;;;3560:36;;;3539:69;3532:76;;3459:156;:::o;2276:93:6:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;2922:93:0:-;2972:7;2998:10;;;;;;;;;;;2991:17;;2922:93;:::o;3846:140:6:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:15:-;709:7;735:10;728:17;;656:96;:::o;8989:128:6:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;758:99:15:-;809:14;;842:8;;835:15;;;;758:99;;:::o;4127:594:0:-;4215:14;4231:12;4247:144;4292:11;:9;:11::i;:::-;4317:6;4345:4;4371;;4376:1;4371:9;4378:1;4371:9;;;;;;;:::i;:::-;4364:17;;;;;:::i;:::-;4247:31;:144::i;:::-;4214:177;;;;4406:9;4401:314;;4443:1;4435:5;:9;;;4431:274;;;4485:4;4464:18;;:25;;;;;;;;;;;;;;;;;;4522:11;:9;:11::i;:::-;4507:46;;;4554:6;4562:4;;4507:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4606:5;4585:18;;:26;;;;;;;;;;;;;;;;;;4431:274;;;4683:6;4657:33;;;;;;;;;;;:::i;:::-;;;;;;;;4431:274;4401:314;4204:517;;4127:594;;;:::o;7721:208:6:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;3803:149:0:-;3888:12;3875:10;;:25;;;;;;;;;;;;;;;;;;3915:30;3932:12;3915:30;;;;;;:::i;:::-;;;;;;;;3803:149;:::o;9949:432:6:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;591:636:1:-;746:14;762:12;787;801:17;822:9;:20;;892:6;900;908:8;856:62;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:106;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:142;;;;942:7;938:248;;;984:4;969;:11;:19;965:211;;1040:4;1029:32;;;;;;;;;;;;:::i;:::-;1008:53;;;;;;;;965:211;;;1101:4;1086;:11;:19;1082:94;;1148:4;1137:24;;;;;;;;;;;;:::i;:::-;1125:36;;1082:94;965:211;938:248;1195:25;;591:636;;;;;;;:::o;7:99:25:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:149::-;5559:7;5599:66;5592:5;5588:78;5577:89;;5523:149;;;:::o;5678:115::-;5763:23;5780:5;5763:23;:::i;:::-;5758:3;5751:36;5678:115;;:::o;5799:218::-;5890:4;5928:2;5917:9;5913:18;5905:26;;5941:69;6007:1;5996:9;5992:17;5983:6;5941:69;:::i;:::-;5799:218;;;;:::o;6023:118::-;6110:24;6128:5;6110:24;:::i;:::-;6105:3;6098:37;6023:118;;:::o;6147:222::-;6240:4;6278:2;6267:9;6263:18;6255:26;;6291:71;6359:1;6348:9;6344:17;6335:6;6291:71;:::i;:::-;6147:222;;;;:::o;6375:474::-;6443:6;6451;6500:2;6488:9;6479:7;6475:23;6471:32;6468:119;;;6506:79;;:::i;:::-;6468:119;6626:1;6651:53;6696:7;6687:6;6676:9;6672:22;6651:53;:::i;:::-;6641:63;;6597:117;6753:2;6779:53;6824:7;6815:6;6804:9;6800:22;6779:53;:::i;:::-;6769:63;;6724:118;6375:474;;;;;:::o;6855:180::-;6903:77;6900:1;6893:88;7000:4;6997:1;6990:15;7024:4;7021:1;7014:15;7041:320;7085:6;7122:1;7116:4;7112:12;7102:22;;7169:1;7163:4;7159:12;7190:18;7180:81;;7246:4;7238:6;7234:17;7224:27;;7180:81;7308:2;7300:6;7297:14;7277:18;7274:38;7271:84;;7327:18;;:::i;:::-;7271:84;7092:269;7041:320;;;:::o;7367:442::-;7516:4;7554:2;7543:9;7539:18;7531:26;;7567:71;7635:1;7624:9;7620:17;7611:6;7567:71;:::i;:::-;7648:72;7716:2;7705:9;7701:18;7692:6;7648:72;:::i;:::-;7730;7798:2;7787:9;7783:18;7774:6;7730:72;:::i;:::-;7367:442;;;;;;:::o;7815:117::-;7924:1;7921;7914:12;7938:117;8047:1;8044;8037:12;8061:469;8166:9;8177;8215:8;8203:10;8200:24;8197:111;;;8227:79;;:::i;:::-;8197:111;8333:6;8323:8;8320:20;8317:107;;;8343:79;;:::i;:::-;8317:107;8474:1;8462:10;8458:18;8450:6;8446:31;8433:44;;8513:10;8503:8;8499:25;8486:38;;8061:469;;;;;;;:::o;8536:96::-;8594:6;8622:3;8612:13;;8536:96;;;;:::o;8730:107::-;8774:8;8824:5;8818:4;8814:16;8793:37;;8730:107;;;;:::o;8843:548::-;8933:5;8964:45;9005:3;8998:5;8964:45;:::i;:::-;9034:5;9058:40;9088:8;9075:22;9058:40;:::i;:::-;9049:49;;9122:1;9114:6;9111:13;9108:276;;;9192:168;9276:66;9246:6;9243:1;9239:14;9236:1;9232:22;9192:168;:::i;:::-;9169:5;9148:226;9139:235;;9108:276;8939:452;;8843:548;;;;:::o;9397:168::-;9480:11;9514:6;9509:3;9502:19;9554:4;9549:3;9545:14;9530:29;;9397:168;;;;:::o;9571:146::-;9668:6;9663:3;9658;9645:30;9709:1;9700:6;9695:3;9691:16;9684:27;9571:146;;;:::o;9745:314::-;9841:3;9862:70;9925:6;9920:3;9862:70;:::i;:::-;9855:77;;9942:56;9991:6;9986:3;9979:5;9942:56;:::i;:::-;10023:29;10045:6;10023:29;:::i;:::-;10018:3;10014:39;10007:46;;9745:314;;;;;:::o;10065:439::-;10214:4;10252:2;10241:9;10237:18;10229:26;;10265:71;10333:1;10322:9;10318:17;10309:6;10265:71;:::i;:::-;10383:9;10377:4;10373:20;10368:2;10357:9;10353:18;10346:48;10411:86;10492:4;10483:6;10475;10411:86;:::i;:::-;10403:94;;10065:439;;;;;;:::o;10510:180::-;10558:77;10555:1;10548:88;10655:4;10652:1;10645:15;10679:4;10676:1;10669:15;10696:191;10736:3;10755:20;10773:1;10755:20;:::i;:::-;10750:25;;10789:20;10807:1;10789:20;:::i;:::-;10784:25;;10832:1;10829;10825:9;10818:16;;10853:3;10850:1;10847:10;10844:36;;;10860:18;;:::i;:::-;10844:36;10696:191;;;;:::o;10893:438::-;11040:4;11078:2;11067:9;11063:18;11055:26;;11091:71;11159:1;11148:9;11144:17;11135:6;11091:71;:::i;:::-;11172:72;11240:2;11229:9;11225:18;11216:6;11172:72;:::i;:::-;11254:70;11320:2;11309:9;11305:18;11296:6;11254:70;:::i;:::-;10893:438;;;;;;:::o;11337:98::-;11388:6;11422:5;11416:12;11406:22;;11337:98;;;:::o;11441:147::-;11542:11;11579:3;11564:18;;11441:147;;;;:::o;11594:386::-;11698:3;11726:38;11758:5;11726:38;:::i;:::-;11780:88;11861:6;11856:3;11780:88;:::i;:::-;11773:95;;11877:65;11935:6;11930:3;11923:4;11916:5;11912:16;11877:65;:::i;:::-;11967:6;11962:3;11958:16;11951:23;;11702:278;11594:386;;;;:::o;11986:271::-;12116:3;12138:93;12227:3;12218:6;12138:93;:::i;:::-;12131:100;;12248:3;12241:10;;11986:271;;;;:::o;12263:116::-;12333:21;12348:5;12333:21;:::i;:::-;12326:5;12323:32;12313:60;;12369:1;12366;12359:12;12313:60;12263:116;:::o;12385:137::-;12439:5;12470:6;12464:13;12455:22;;12486:30;12510:5;12486:30;:::i;:::-;12385:137;;;;:::o;12528:93::-;12564:7;12604:10;12597:5;12593:22;12582:33;;12528:93;;;:::o;12627:120::-;12699:23;12716:5;12699:23;:::i;:::-;12692:5;12689:34;12679:62;;12737:1;12734;12727:12;12679:62;12627:120;:::o;12753:141::-;12809:5;12840:6;12834:13;12825:22;;12856:32;12882:5;12856:32;:::i;:::-;12753:141;;;;:::o;12900:499::-;12975:6;12983;13032:2;13020:9;13011:7;13007:23;13003:32;13000:119;;;13038:79;;:::i;:::-;13000:119;13158:1;13183:61;13236:7;13227:6;13216:9;13212:22;13183:61;:::i;:::-;13173:71;;13129:125;13293:2;13319:63;13374:7;13365:6;13354:9;13350:22;13319:63;:::i;:::-;13309:73;;13264:128;12900:499;;;;;:::o;13405:345::-;13472:6;13521:2;13509:9;13500:7;13496:23;13492:32;13489:119;;;13527:79;;:::i;:::-;13489:119;13647:1;13672:61;13725:7;13716:6;13705:9;13701:22;13672:61;:::i;:::-;13662:71;;13618:125;13405:345;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","authority()":"bf7e214f","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","isConsumingScheduledOp()":"8fb36037","mint(address,uint256)":"40c10f19","name()":"06fdde03","setAuthority(address)":"7a9e5e4b","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAuthority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"authority()\":{\"details\":\"Returns the current authority.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFToken.sol\":\"NFToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/AccessManaged.sol\":{\"keccak256\":\"0x137a4c22eb762b1580c632f575868d1f3b764291e58702ebe484fa1cef5447dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef14292067a6f91705f6cafcfa136870e6332de4bd36924a8679b4211531234\",\"dweb:/ipfs/QmWEBkKmdmDzaTEFRTNvguuWbD1Z3L8P7XV8bcTAkzc4fr\"]},\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0xdabf85e3bab52e7cfade4f77e661bcf7a2f9f95097bfd2ca5ddb193a0c21ee8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402259332090488a587a858ec0113bc7fe55e9dbc6e329927b87ed0f1cce7d08\",\"dweb:/ipfs/QmPJufTJJJifny3JscKTASsPzCrpXRbhtsJnwkCdbaKDTf\"]},\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/NFToken.sol\":{\"keccak256\":\"0xeb1bb717dd041ab0d17050a182aef046ed03d6c457b09a2d5372931fffcf6ab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e35f51918c7117b730235d2382231a0eb98a17625eab75084d8f7525caa7e60c\",\"dweb:/ipfs/QmTx1JZuAnFDL42umUADeBWJUQPGoi9X58mW64UipfLDpj\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":920,"contract":"contracts/NFToken.sol:NFToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":926,"contract":"contracts/NFToken.sol:NFToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":928,"contract":"contracts/NFToken.sol:NFToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":930,"contract":"contracts/NFToken.sol:NFToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":932,"contract":"contracts/NFToken.sol:NFToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":18,"contract":"contracts/NFToken.sol:NFToken","label":"_authority","offset":0,"slot":"5","type":"t_address"},{"astId":20,"contract":"contracts/NFToken.sol:NFToken","label":"_consumingSchedule","offset":20,"slot":"5","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/NFTune.sol":{"NFTune":{"abi":[{"inputs":[{"internalType":"address","name":"initialAuthority","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"AccessManagedInvalidAuthority","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"uint32","name":"delay","type":"uint32"}],"name":"AccessManagedRequiredDelay","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"AccessManagedUnauthorized","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"authority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"authority","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isConsumingScheduledOp","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1632":{"entryPoint":null,"id":1632,"parameterSlots":2,"returnSlots":0},"@_31":{"entryPoint":null,"id":31,"parameterSlots":1,"returnSlots":0},"@_6339":{"entryPoint":null,"id":6339,"parameterSlots":1,"returnSlots":0},"@_setAuthority_121":{"entryPoint":227,"id":121,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1373,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1390,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":666,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":508,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":987,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":389,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":357,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":802,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":948,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":822,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1142,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":687,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":613,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1112,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":812,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1080,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":566,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":519,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":862,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":352,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":703,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1067,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":920,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":716,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":872,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":409,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":915,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:6778:25","nodeType":"YulBlock","src":"0:6778:25","statements":[{"body":{"nativeSrc":"47:35:25","nodeType":"YulBlock","src":"47:35:25","statements":[{"nativeSrc":"57:19:25","nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:25","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:25","nodeType":"YulIdentifier","src":"67:5:25"},"nativeSrc":"67:9:25","nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:25","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:25","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nativeSrc":"177:28:25","nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:25","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:25","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:25","nodeType":"YulIdentifier","src":"187:6:25"},"nativeSrc":"187:12:25","nodeType":"YulFunctionCall","src":"187:12:25"},"nativeSrc":"187:12:25","nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:25","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nativeSrc":"300:28:25","nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:25","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:25","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:25","nodeType":"YulIdentifier","src":"310:6:25"},"nativeSrc":"310:12:25","nodeType":"YulFunctionCall","src":"310:12:25"},"nativeSrc":"310:12:25","nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:25","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nativeSrc":"379:81:25","nodeType":"YulBlock","src":"379:81:25","statements":[{"nativeSrc":"389:65:25","nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nativeSrc":"404:5:25","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nativeSrc":"411:42:25","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:25","nodeType":"YulIdentifier","src":"400:3:25"},"nativeSrc":"400:54:25","nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:25","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:25","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:25","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nativeSrc":"511:51:25","nodeType":"YulBlock","src":"511:51:25","statements":[{"nativeSrc":"521:35:25","nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nativeSrc":"550:5:25","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:25","nodeType":"YulIdentifier","src":"532:17:25"},"nativeSrc":"532:24:25","nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:25","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:25","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:25","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nativeSrc":"611:79:25","nodeType":"YulBlock","src":"611:79:25","statements":[{"body":{"nativeSrc":"668:16:25","nodeType":"YulBlock","src":"668:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:25","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:25","nodeType":"YulLiteral","src":"680:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:25","nodeType":"YulIdentifier","src":"670:6:25"},"nativeSrc":"670:12:25","nodeType":"YulFunctionCall","src":"670:12:25"},"nativeSrc":"670:12:25","nodeType":"YulExpressionStatement","src":"670:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:25","nodeType":"YulIdentifier","src":"634:5:25"},{"arguments":[{"name":"value","nativeSrc":"659:5:25","nodeType":"YulIdentifier","src":"659:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:25","nodeType":"YulIdentifier","src":"641:17:25"},"nativeSrc":"641:24:25","nodeType":"YulFunctionCall","src":"641:24:25"}],"functionName":{"name":"eq","nativeSrc":"631:2:25","nodeType":"YulIdentifier","src":"631:2:25"},"nativeSrc":"631:35:25","nodeType":"YulFunctionCall","src":"631:35:25"}],"functionName":{"name":"iszero","nativeSrc":"624:6:25","nodeType":"YulIdentifier","src":"624:6:25"},"nativeSrc":"624:43:25","nodeType":"YulFunctionCall","src":"624:43:25"},"nativeSrc":"621:63:25","nodeType":"YulIf","src":"621:63:25"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:25","nodeType":"YulTypedName","src":"604:5:25","type":""}],"src":"568:122:25"},{"body":{"nativeSrc":"759:80:25","nodeType":"YulBlock","src":"759:80:25","statements":[{"nativeSrc":"769:22:25","nodeType":"YulAssignment","src":"769:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:25","nodeType":"YulIdentifier","src":"784:6:25"}],"functionName":{"name":"mload","nativeSrc":"778:5:25","nodeType":"YulIdentifier","src":"778:5:25"},"nativeSrc":"778:13:25","nodeType":"YulFunctionCall","src":"778:13:25"},"variableNames":[{"name":"value","nativeSrc":"769:5:25","nodeType":"YulIdentifier","src":"769:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:25","nodeType":"YulIdentifier","src":"827:5:25"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:25","nodeType":"YulIdentifier","src":"800:26:25"},"nativeSrc":"800:33:25","nodeType":"YulFunctionCall","src":"800:33:25"},"nativeSrc":"800:33:25","nodeType":"YulExpressionStatement","src":"800:33:25"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:25","nodeType":"YulTypedName","src":"737:6:25","type":""},{"name":"end","nativeSrc":"745:3:25","nodeType":"YulTypedName","src":"745:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:25","nodeType":"YulTypedName","src":"753:5:25","type":""}],"src":"696:143:25"},{"body":{"nativeSrc":"922:274:25","nodeType":"YulBlock","src":"922:274:25","statements":[{"body":{"nativeSrc":"968:83:25","nodeType":"YulBlock","src":"968:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:25","nodeType":"YulIdentifier","src":"970:77:25"},"nativeSrc":"970:79:25","nodeType":"YulFunctionCall","src":"970:79:25"},"nativeSrc":"970:79:25","nodeType":"YulExpressionStatement","src":"970:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:25","nodeType":"YulIdentifier","src":"943:7:25"},{"name":"headStart","nativeSrc":"952:9:25","nodeType":"YulIdentifier","src":"952:9:25"}],"functionName":{"name":"sub","nativeSrc":"939:3:25","nodeType":"YulIdentifier","src":"939:3:25"},"nativeSrc":"939:23:25","nodeType":"YulFunctionCall","src":"939:23:25"},{"kind":"number","nativeSrc":"964:2:25","nodeType":"YulLiteral","src":"964:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:25","nodeType":"YulIdentifier","src":"935:3:25"},"nativeSrc":"935:32:25","nodeType":"YulFunctionCall","src":"935:32:25"},"nativeSrc":"932:119:25","nodeType":"YulIf","src":"932:119:25"},{"nativeSrc":"1061:128:25","nodeType":"YulBlock","src":"1061:128:25","statements":[{"nativeSrc":"1076:15:25","nodeType":"YulVariableDeclaration","src":"1076:15:25","value":{"kind":"number","nativeSrc":"1090:1:25","nodeType":"YulLiteral","src":"1090:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:25","nodeType":"YulTypedName","src":"1080:6:25","type":""}]},{"nativeSrc":"1105:74:25","nodeType":"YulAssignment","src":"1105:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:25","nodeType":"YulIdentifier","src":"1151:9:25"},{"name":"offset","nativeSrc":"1162:6:25","nodeType":"YulIdentifier","src":"1162:6:25"}],"functionName":{"name":"add","nativeSrc":"1147:3:25","nodeType":"YulIdentifier","src":"1147:3:25"},"nativeSrc":"1147:22:25","nodeType":"YulFunctionCall","src":"1147:22:25"},{"name":"dataEnd","nativeSrc":"1171:7:25","nodeType":"YulIdentifier","src":"1171:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:25","nodeType":"YulIdentifier","src":"1115:31:25"},"nativeSrc":"1115:64:25","nodeType":"YulFunctionCall","src":"1115:64:25"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:25","nodeType":"YulIdentifier","src":"1105:6:25"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:25","nodeType":"YulTypedName","src":"892:9:25","type":""},{"name":"dataEnd","nativeSrc":"903:7:25","nodeType":"YulTypedName","src":"903:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:25","nodeType":"YulTypedName","src":"915:6:25","type":""}],"src":"845:351:25"},{"body":{"nativeSrc":"1261:40:25","nodeType":"YulBlock","src":"1261:40:25","statements":[{"nativeSrc":"1272:22:25","nodeType":"YulAssignment","src":"1272:22:25","value":{"arguments":[{"name":"value","nativeSrc":"1288:5:25","nodeType":"YulIdentifier","src":"1288:5:25"}],"functionName":{"name":"mload","nativeSrc":"1282:5:25","nodeType":"YulIdentifier","src":"1282:5:25"},"nativeSrc":"1282:12:25","nodeType":"YulFunctionCall","src":"1282:12:25"},"variableNames":[{"name":"length","nativeSrc":"1272:6:25","nodeType":"YulIdentifier","src":"1272:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1202:99:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1244:5:25","nodeType":"YulTypedName","src":"1244:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1254:6:25","nodeType":"YulTypedName","src":"1254:6:25","type":""}],"src":"1202:99:25"},{"body":{"nativeSrc":"1335:152:25","nodeType":"YulBlock","src":"1335:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1352:1:25","nodeType":"YulLiteral","src":"1352:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1355:77:25","nodeType":"YulLiteral","src":"1355:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1345:6:25","nodeType":"YulIdentifier","src":"1345:6:25"},"nativeSrc":"1345:88:25","nodeType":"YulFunctionCall","src":"1345:88:25"},"nativeSrc":"1345:88:25","nodeType":"YulExpressionStatement","src":"1345:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1449:1:25","nodeType":"YulLiteral","src":"1449:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"1452:4:25","nodeType":"YulLiteral","src":"1452:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1442:6:25","nodeType":"YulIdentifier","src":"1442:6:25"},"nativeSrc":"1442:15:25","nodeType":"YulFunctionCall","src":"1442:15:25"},"nativeSrc":"1442:15:25","nodeType":"YulExpressionStatement","src":"1442:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:25","nodeType":"YulLiteral","src":"1473:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:4:25","nodeType":"YulLiteral","src":"1476:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1466:6:25","nodeType":"YulIdentifier","src":"1466:6:25"},"nativeSrc":"1466:15:25","nodeType":"YulFunctionCall","src":"1466:15:25"},"nativeSrc":"1466:15:25","nodeType":"YulExpressionStatement","src":"1466:15:25"}]},"name":"panic_error_0x41","nativeSrc":"1307:180:25","nodeType":"YulFunctionDefinition","src":"1307:180:25"},{"body":{"nativeSrc":"1521:152:25","nodeType":"YulBlock","src":"1521:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:25","nodeType":"YulLiteral","src":"1538:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:77:25","nodeType":"YulLiteral","src":"1541:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1531:6:25","nodeType":"YulIdentifier","src":"1531:6:25"},"nativeSrc":"1531:88:25","nodeType":"YulFunctionCall","src":"1531:88:25"},"nativeSrc":"1531:88:25","nodeType":"YulExpressionStatement","src":"1531:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1635:1:25","nodeType":"YulLiteral","src":"1635:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"1638:4:25","nodeType":"YulLiteral","src":"1638:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1628:6:25","nodeType":"YulIdentifier","src":"1628:6:25"},"nativeSrc":"1628:15:25","nodeType":"YulFunctionCall","src":"1628:15:25"},"nativeSrc":"1628:15:25","nodeType":"YulExpressionStatement","src":"1628:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:25","nodeType":"YulLiteral","src":"1659:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:4:25","nodeType":"YulLiteral","src":"1662:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1652:6:25","nodeType":"YulIdentifier","src":"1652:6:25"},"nativeSrc":"1652:15:25","nodeType":"YulFunctionCall","src":"1652:15:25"},"nativeSrc":"1652:15:25","nodeType":"YulExpressionStatement","src":"1652:15:25"}]},"name":"panic_error_0x22","nativeSrc":"1493:180:25","nodeType":"YulFunctionDefinition","src":"1493:180:25"},{"body":{"nativeSrc":"1730:269:25","nodeType":"YulBlock","src":"1730:269:25","statements":[{"nativeSrc":"1740:22:25","nodeType":"YulAssignment","src":"1740:22:25","value":{"arguments":[{"name":"data","nativeSrc":"1754:4:25","nodeType":"YulIdentifier","src":"1754:4:25"},{"kind":"number","nativeSrc":"1760:1:25","nodeType":"YulLiteral","src":"1760:1:25","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1750:3:25","nodeType":"YulIdentifier","src":"1750:3:25"},"nativeSrc":"1750:12:25","nodeType":"YulFunctionCall","src":"1750:12:25"},"variableNames":[{"name":"length","nativeSrc":"1740:6:25","nodeType":"YulIdentifier","src":"1740:6:25"}]},{"nativeSrc":"1771:38:25","nodeType":"YulVariableDeclaration","src":"1771:38:25","value":{"arguments":[{"name":"data","nativeSrc":"1801:4:25","nodeType":"YulIdentifier","src":"1801:4:25"},{"kind":"number","nativeSrc":"1807:1:25","nodeType":"YulLiteral","src":"1807:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1797:3:25","nodeType":"YulIdentifier","src":"1797:3:25"},"nativeSrc":"1797:12:25","nodeType":"YulFunctionCall","src":"1797:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1775:18:25","nodeType":"YulTypedName","src":"1775:18:25","type":""}]},{"body":{"nativeSrc":"1848:51:25","nodeType":"YulBlock","src":"1848:51:25","statements":[{"nativeSrc":"1862:27:25","nodeType":"YulAssignment","src":"1862:27:25","value":{"arguments":[{"name":"length","nativeSrc":"1876:6:25","nodeType":"YulIdentifier","src":"1876:6:25"},{"kind":"number","nativeSrc":"1884:4:25","nodeType":"YulLiteral","src":"1884:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1872:3:25","nodeType":"YulIdentifier","src":"1872:3:25"},"nativeSrc":"1872:17:25","nodeType":"YulFunctionCall","src":"1872:17:25"},"variableNames":[{"name":"length","nativeSrc":"1862:6:25","nodeType":"YulIdentifier","src":"1862:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1828:18:25","nodeType":"YulIdentifier","src":"1828:18:25"}],"functionName":{"name":"iszero","nativeSrc":"1821:6:25","nodeType":"YulIdentifier","src":"1821:6:25"},"nativeSrc":"1821:26:25","nodeType":"YulFunctionCall","src":"1821:26:25"},"nativeSrc":"1818:81:25","nodeType":"YulIf","src":"1818:81:25"},{"body":{"nativeSrc":"1951:42:25","nodeType":"YulBlock","src":"1951:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"1965:16:25","nodeType":"YulIdentifier","src":"1965:16:25"},"nativeSrc":"1965:18:25","nodeType":"YulFunctionCall","src":"1965:18:25"},"nativeSrc":"1965:18:25","nodeType":"YulExpressionStatement","src":"1965:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1915:18:25","nodeType":"YulIdentifier","src":"1915:18:25"},{"arguments":[{"name":"length","nativeSrc":"1938:6:25","nodeType":"YulIdentifier","src":"1938:6:25"},{"kind":"number","nativeSrc":"1946:2:25","nodeType":"YulLiteral","src":"1946:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1935:2:25","nodeType":"YulIdentifier","src":"1935:2:25"},"nativeSrc":"1935:14:25","nodeType":"YulFunctionCall","src":"1935:14:25"}],"functionName":{"name":"eq","nativeSrc":"1912:2:25","nodeType":"YulIdentifier","src":"1912:2:25"},"nativeSrc":"1912:38:25","nodeType":"YulFunctionCall","src":"1912:38:25"},"nativeSrc":"1909:84:25","nodeType":"YulIf","src":"1909:84:25"}]},"name":"extract_byte_array_length","nativeSrc":"1679:320:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1714:4:25","nodeType":"YulTypedName","src":"1714:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1723:6:25","nodeType":"YulTypedName","src":"1723:6:25","type":""}],"src":"1679:320:25"},{"body":{"nativeSrc":"2059:87:25","nodeType":"YulBlock","src":"2059:87:25","statements":[{"nativeSrc":"2069:11:25","nodeType":"YulAssignment","src":"2069:11:25","value":{"name":"ptr","nativeSrc":"2077:3:25","nodeType":"YulIdentifier","src":"2077:3:25"},"variableNames":[{"name":"data","nativeSrc":"2069:4:25","nodeType":"YulIdentifier","src":"2069:4:25"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2097:1:25","nodeType":"YulLiteral","src":"2097:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"2100:3:25","nodeType":"YulIdentifier","src":"2100:3:25"}],"functionName":{"name":"mstore","nativeSrc":"2090:6:25","nodeType":"YulIdentifier","src":"2090:6:25"},"nativeSrc":"2090:14:25","nodeType":"YulFunctionCall","src":"2090:14:25"},"nativeSrc":"2090:14:25","nodeType":"YulExpressionStatement","src":"2090:14:25"},{"nativeSrc":"2113:26:25","nodeType":"YulAssignment","src":"2113:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"2131:1:25","nodeType":"YulLiteral","src":"2131:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2134:4:25","nodeType":"YulLiteral","src":"2134:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2121:9:25","nodeType":"YulIdentifier","src":"2121:9:25"},"nativeSrc":"2121:18:25","nodeType":"YulFunctionCall","src":"2121:18:25"},"variableNames":[{"name":"data","nativeSrc":"2113:4:25","nodeType":"YulIdentifier","src":"2113:4:25"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2005:141:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2046:3:25","nodeType":"YulTypedName","src":"2046:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2054:4:25","nodeType":"YulTypedName","src":"2054:4:25","type":""}],"src":"2005:141:25"},{"body":{"nativeSrc":"2196:49:25","nodeType":"YulBlock","src":"2196:49:25","statements":[{"nativeSrc":"2206:33:25","nodeType":"YulAssignment","src":"2206:33:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2224:5:25","nodeType":"YulIdentifier","src":"2224:5:25"},{"kind":"number","nativeSrc":"2231:2:25","nodeType":"YulLiteral","src":"2231:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2220:3:25","nodeType":"YulIdentifier","src":"2220:3:25"},"nativeSrc":"2220:14:25","nodeType":"YulFunctionCall","src":"2220:14:25"},{"kind":"number","nativeSrc":"2236:2:25","nodeType":"YulLiteral","src":"2236:2:25","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2216:3:25","nodeType":"YulIdentifier","src":"2216:3:25"},"nativeSrc":"2216:23:25","nodeType":"YulFunctionCall","src":"2216:23:25"},"variableNames":[{"name":"result","nativeSrc":"2206:6:25","nodeType":"YulIdentifier","src":"2206:6:25"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2152:93:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2179:5:25","nodeType":"YulTypedName","src":"2179:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2189:6:25","nodeType":"YulTypedName","src":"2189:6:25","type":""}],"src":"2152:93:25"},{"body":{"nativeSrc":"2304:54:25","nodeType":"YulBlock","src":"2304:54:25","statements":[{"nativeSrc":"2314:37:25","nodeType":"YulAssignment","src":"2314:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"2339:4:25","nodeType":"YulIdentifier","src":"2339:4:25"},{"name":"value","nativeSrc":"2345:5:25","nodeType":"YulIdentifier","src":"2345:5:25"}],"functionName":{"name":"shl","nativeSrc":"2335:3:25","nodeType":"YulIdentifier","src":"2335:3:25"},"nativeSrc":"2335:16:25","nodeType":"YulFunctionCall","src":"2335:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"2314:8:25","nodeType":"YulIdentifier","src":"2314:8:25"}]}]},"name":"shift_left_dynamic","nativeSrc":"2251:107:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2279:4:25","nodeType":"YulTypedName","src":"2279:4:25","type":""},{"name":"value","nativeSrc":"2285:5:25","nodeType":"YulTypedName","src":"2285:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2295:8:25","nodeType":"YulTypedName","src":"2295:8:25","type":""}],"src":"2251:107:25"},{"body":{"nativeSrc":"2440:317:25","nodeType":"YulBlock","src":"2440:317:25","statements":[{"nativeSrc":"2450:35:25","nodeType":"YulVariableDeclaration","src":"2450:35:25","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2471:10:25","nodeType":"YulIdentifier","src":"2471:10:25"},{"kind":"number","nativeSrc":"2483:1:25","nodeType":"YulLiteral","src":"2483:1:25","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2467:3:25","nodeType":"YulIdentifier","src":"2467:3:25"},"nativeSrc":"2467:18:25","nodeType":"YulFunctionCall","src":"2467:18:25"},"variables":[{"name":"shiftBits","nativeSrc":"2454:9:25","nodeType":"YulTypedName","src":"2454:9:25","type":""}]},{"nativeSrc":"2494:109:25","nodeType":"YulVariableDeclaration","src":"2494:109:25","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2525:9:25","nodeType":"YulIdentifier","src":"2525:9:25"},{"kind":"number","nativeSrc":"2536:66:25","nodeType":"YulLiteral","src":"2536:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2506:18:25","nodeType":"YulIdentifier","src":"2506:18:25"},"nativeSrc":"2506:97:25","nodeType":"YulFunctionCall","src":"2506:97:25"},"variables":[{"name":"mask","nativeSrc":"2498:4:25","nodeType":"YulTypedName","src":"2498:4:25","type":""}]},{"nativeSrc":"2612:51:25","nodeType":"YulAssignment","src":"2612:51:25","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2643:9:25","nodeType":"YulIdentifier","src":"2643:9:25"},{"name":"toInsert","nativeSrc":"2654:8:25","nodeType":"YulIdentifier","src":"2654:8:25"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2624:18:25","nodeType":"YulIdentifier","src":"2624:18:25"},"nativeSrc":"2624:39:25","nodeType":"YulFunctionCall","src":"2624:39:25"},"variableNames":[{"name":"toInsert","nativeSrc":"2612:8:25","nodeType":"YulIdentifier","src":"2612:8:25"}]},{"nativeSrc":"2672:30:25","nodeType":"YulAssignment","src":"2672:30:25","value":{"arguments":[{"name":"value","nativeSrc":"2685:5:25","nodeType":"YulIdentifier","src":"2685:5:25"},{"arguments":[{"name":"mask","nativeSrc":"2696:4:25","nodeType":"YulIdentifier","src":"2696:4:25"}],"functionName":{"name":"not","nativeSrc":"2692:3:25","nodeType":"YulIdentifier","src":"2692:3:25"},"nativeSrc":"2692:9:25","nodeType":"YulFunctionCall","src":"2692:9:25"}],"functionName":{"name":"and","nativeSrc":"2681:3:25","nodeType":"YulIdentifier","src":"2681:3:25"},"nativeSrc":"2681:21:25","nodeType":"YulFunctionCall","src":"2681:21:25"},"variableNames":[{"name":"value","nativeSrc":"2672:5:25","nodeType":"YulIdentifier","src":"2672:5:25"}]},{"nativeSrc":"2711:40:25","nodeType":"YulAssignment","src":"2711:40:25","value":{"arguments":[{"name":"value","nativeSrc":"2724:5:25","nodeType":"YulIdentifier","src":"2724:5:25"},{"arguments":[{"name":"toInsert","nativeSrc":"2735:8:25","nodeType":"YulIdentifier","src":"2735:8:25"},{"name":"mask","nativeSrc":"2745:4:25","nodeType":"YulIdentifier","src":"2745:4:25"}],"functionName":{"name":"and","nativeSrc":"2731:3:25","nodeType":"YulIdentifier","src":"2731:3:25"},"nativeSrc":"2731:19:25","nodeType":"YulFunctionCall","src":"2731:19:25"}],"functionName":{"name":"or","nativeSrc":"2721:2:25","nodeType":"YulIdentifier","src":"2721:2:25"},"nativeSrc":"2721:30:25","nodeType":"YulFunctionCall","src":"2721:30:25"},"variableNames":[{"name":"result","nativeSrc":"2711:6:25","nodeType":"YulIdentifier","src":"2711:6:25"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2364:393:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2401:5:25","nodeType":"YulTypedName","src":"2401:5:25","type":""},{"name":"shiftBytes","nativeSrc":"2408:10:25","nodeType":"YulTypedName","src":"2408:10:25","type":""},{"name":"toInsert","nativeSrc":"2420:8:25","nodeType":"YulTypedName","src":"2420:8:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2433:6:25","nodeType":"YulTypedName","src":"2433:6:25","type":""}],"src":"2364:393:25"},{"body":{"nativeSrc":"2808:32:25","nodeType":"YulBlock","src":"2808:32:25","statements":[{"nativeSrc":"2818:16:25","nodeType":"YulAssignment","src":"2818:16:25","value":{"name":"value","nativeSrc":"2829:5:25","nodeType":"YulIdentifier","src":"2829:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"2818:7:25","nodeType":"YulIdentifier","src":"2818:7:25"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2763:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2790:5:25","nodeType":"YulTypedName","src":"2790:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2800:7:25","nodeType":"YulTypedName","src":"2800:7:25","type":""}],"src":"2763:77:25"},{"body":{"nativeSrc":"2878:28:25","nodeType":"YulBlock","src":"2878:28:25","statements":[{"nativeSrc":"2888:12:25","nodeType":"YulAssignment","src":"2888:12:25","value":{"name":"value","nativeSrc":"2895:5:25","nodeType":"YulIdentifier","src":"2895:5:25"},"variableNames":[{"name":"ret","nativeSrc":"2888:3:25","nodeType":"YulIdentifier","src":"2888:3:25"}]}]},"name":"identity","nativeSrc":"2846:60:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2864:5:25","nodeType":"YulTypedName","src":"2864:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2874:3:25","nodeType":"YulTypedName","src":"2874:3:25","type":""}],"src":"2846:60:25"},{"body":{"nativeSrc":"2972:82:25","nodeType":"YulBlock","src":"2972:82:25","statements":[{"nativeSrc":"2982:66:25","nodeType":"YulAssignment","src":"2982:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3040:5:25","nodeType":"YulIdentifier","src":"3040:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3022:17:25","nodeType":"YulIdentifier","src":"3022:17:25"},"nativeSrc":"3022:24:25","nodeType":"YulFunctionCall","src":"3022:24:25"}],"functionName":{"name":"identity","nativeSrc":"3013:8:25","nodeType":"YulIdentifier","src":"3013:8:25"},"nativeSrc":"3013:34:25","nodeType":"YulFunctionCall","src":"3013:34:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2995:17:25","nodeType":"YulIdentifier","src":"2995:17:25"},"nativeSrc":"2995:53:25","nodeType":"YulFunctionCall","src":"2995:53:25"},"variableNames":[{"name":"converted","nativeSrc":"2982:9:25","nodeType":"YulIdentifier","src":"2982:9:25"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2912:142:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2952:5:25","nodeType":"YulTypedName","src":"2952:5:25","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2962:9:25","nodeType":"YulTypedName","src":"2962:9:25","type":""}],"src":"2912:142:25"},{"body":{"nativeSrc":"3107:28:25","nodeType":"YulBlock","src":"3107:28:25","statements":[{"nativeSrc":"3117:12:25","nodeType":"YulAssignment","src":"3117:12:25","value":{"name":"value","nativeSrc":"3124:5:25","nodeType":"YulIdentifier","src":"3124:5:25"},"variableNames":[{"name":"ret","nativeSrc":"3117:3:25","nodeType":"YulIdentifier","src":"3117:3:25"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3060:75:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3093:5:25","nodeType":"YulTypedName","src":"3093:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3103:3:25","nodeType":"YulTypedName","src":"3103:3:25","type":""}],"src":"3060:75:25"},{"body":{"nativeSrc":"3217:193:25","nodeType":"YulBlock","src":"3217:193:25","statements":[{"nativeSrc":"3227:63:25","nodeType":"YulVariableDeclaration","src":"3227:63:25","value":{"arguments":[{"name":"value_0","nativeSrc":"3282:7:25","nodeType":"YulIdentifier","src":"3282:7:25"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3251:30:25","nodeType":"YulIdentifier","src":"3251:30:25"},"nativeSrc":"3251:39:25","nodeType":"YulFunctionCall","src":"3251:39:25"},"variables":[{"name":"convertedValue_0","nativeSrc":"3231:16:25","nodeType":"YulTypedName","src":"3231:16:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3306:4:25","nodeType":"YulIdentifier","src":"3306:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3346:4:25","nodeType":"YulIdentifier","src":"3346:4:25"}],"functionName":{"name":"sload","nativeSrc":"3340:5:25","nodeType":"YulIdentifier","src":"3340:5:25"},"nativeSrc":"3340:11:25","nodeType":"YulFunctionCall","src":"3340:11:25"},{"name":"offset","nativeSrc":"3353:6:25","nodeType":"YulIdentifier","src":"3353:6:25"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3385:16:25","nodeType":"YulIdentifier","src":"3385:16:25"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3361:23:25","nodeType":"YulIdentifier","src":"3361:23:25"},"nativeSrc":"3361:41:25","nodeType":"YulFunctionCall","src":"3361:41:25"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3312:27:25","nodeType":"YulIdentifier","src":"3312:27:25"},"nativeSrc":"3312:91:25","nodeType":"YulFunctionCall","src":"3312:91:25"}],"functionName":{"name":"sstore","nativeSrc":"3299:6:25","nodeType":"YulIdentifier","src":"3299:6:25"},"nativeSrc":"3299:105:25","nodeType":"YulFunctionCall","src":"3299:105:25"},"nativeSrc":"3299:105:25","nodeType":"YulExpressionStatement","src":"3299:105:25"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3141:269:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3194:4:25","nodeType":"YulTypedName","src":"3194:4:25","type":""},{"name":"offset","nativeSrc":"3200:6:25","nodeType":"YulTypedName","src":"3200:6:25","type":""},{"name":"value_0","nativeSrc":"3208:7:25","nodeType":"YulTypedName","src":"3208:7:25","type":""}],"src":"3141:269:25"},{"body":{"nativeSrc":"3465:24:25","nodeType":"YulBlock","src":"3465:24:25","statements":[{"nativeSrc":"3475:8:25","nodeType":"YulAssignment","src":"3475:8:25","value":{"kind":"number","nativeSrc":"3482:1:25","nodeType":"YulLiteral","src":"3482:1:25","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3475:3:25","nodeType":"YulIdentifier","src":"3475:3:25"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3416:73:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3461:3:25","nodeType":"YulTypedName","src":"3461:3:25","type":""}],"src":"3416:73:25"},{"body":{"nativeSrc":"3548:136:25","nodeType":"YulBlock","src":"3548:136:25","statements":[{"nativeSrc":"3558:46:25","nodeType":"YulVariableDeclaration","src":"3558:46:25","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:30:25","nodeType":"YulIdentifier","src":"3572:30:25"},"nativeSrc":"3572:32:25","nodeType":"YulFunctionCall","src":"3572:32:25"},"variables":[{"name":"zero_0","nativeSrc":"3562:6:25","nodeType":"YulTypedName","src":"3562:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3657:4:25","nodeType":"YulIdentifier","src":"3657:4:25"},{"name":"offset","nativeSrc":"3663:6:25","nodeType":"YulIdentifier","src":"3663:6:25"},{"name":"zero_0","nativeSrc":"3671:6:25","nodeType":"YulIdentifier","src":"3671:6:25"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3613:43:25","nodeType":"YulIdentifier","src":"3613:43:25"},"nativeSrc":"3613:65:25","nodeType":"YulFunctionCall","src":"3613:65:25"},"nativeSrc":"3613:65:25","nodeType":"YulExpressionStatement","src":"3613:65:25"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3495:189:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3534:4:25","nodeType":"YulTypedName","src":"3534:4:25","type":""},{"name":"offset","nativeSrc":"3540:6:25","nodeType":"YulTypedName","src":"3540:6:25","type":""}],"src":"3495:189:25"},{"body":{"nativeSrc":"3740:136:25","nodeType":"YulBlock","src":"3740:136:25","statements":[{"body":{"nativeSrc":"3807:63:25","nodeType":"YulBlock","src":"3807:63:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3851:5:25","nodeType":"YulIdentifier","src":"3851:5:25"},{"kind":"number","nativeSrc":"3858:1:25","nodeType":"YulLiteral","src":"3858:1:25","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3821:29:25","nodeType":"YulIdentifier","src":"3821:29:25"},"nativeSrc":"3821:39:25","nodeType":"YulFunctionCall","src":"3821:39:25"},"nativeSrc":"3821:39:25","nodeType":"YulExpressionStatement","src":"3821:39:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3760:5:25","nodeType":"YulIdentifier","src":"3760:5:25"},{"name":"end","nativeSrc":"3767:3:25","nodeType":"YulIdentifier","src":"3767:3:25"}],"functionName":{"name":"lt","nativeSrc":"3757:2:25","nodeType":"YulIdentifier","src":"3757:2:25"},"nativeSrc":"3757:14:25","nodeType":"YulFunctionCall","src":"3757:14:25"},"nativeSrc":"3750:120:25","nodeType":"YulForLoop","post":{"nativeSrc":"3772:26:25","nodeType":"YulBlock","src":"3772:26:25","statements":[{"nativeSrc":"3774:22:25","nodeType":"YulAssignment","src":"3774:22:25","value":{"arguments":[{"name":"start","nativeSrc":"3787:5:25","nodeType":"YulIdentifier","src":"3787:5:25"},{"kind":"number","nativeSrc":"3794:1:25","nodeType":"YulLiteral","src":"3794:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3783:3:25","nodeType":"YulIdentifier","src":"3783:3:25"},"nativeSrc":"3783:13:25","nodeType":"YulFunctionCall","src":"3783:13:25"},"variableNames":[{"name":"start","nativeSrc":"3774:5:25","nodeType":"YulIdentifier","src":"3774:5:25"}]}]},"pre":{"nativeSrc":"3754:2:25","nodeType":"YulBlock","src":"3754:2:25","statements":[]},"src":"3750:120:25"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3690:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3728:5:25","nodeType":"YulTypedName","src":"3728:5:25","type":""},{"name":"end","nativeSrc":"3735:3:25","nodeType":"YulTypedName","src":"3735:3:25","type":""}],"src":"3690:186:25"},{"body":{"nativeSrc":"3961:464:25","nodeType":"YulBlock","src":"3961:464:25","statements":[{"body":{"nativeSrc":"3987:431:25","nodeType":"YulBlock","src":"3987:431:25","statements":[{"nativeSrc":"4001:54:25","nodeType":"YulVariableDeclaration","src":"4001:54:25","value":{"arguments":[{"name":"array","nativeSrc":"4049:5:25","nodeType":"YulIdentifier","src":"4049:5:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4017:31:25","nodeType":"YulIdentifier","src":"4017:31:25"},"nativeSrc":"4017:38:25","nodeType":"YulFunctionCall","src":"4017:38:25"},"variables":[{"name":"dataArea","nativeSrc":"4005:8:25","nodeType":"YulTypedName","src":"4005:8:25","type":""}]},{"nativeSrc":"4068:63:25","nodeType":"YulVariableDeclaration","src":"4068:63:25","value":{"arguments":[{"name":"dataArea","nativeSrc":"4091:8:25","nodeType":"YulIdentifier","src":"4091:8:25"},{"arguments":[{"name":"startIndex","nativeSrc":"4119:10:25","nodeType":"YulIdentifier","src":"4119:10:25"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4101:17:25","nodeType":"YulIdentifier","src":"4101:17:25"},"nativeSrc":"4101:29:25","nodeType":"YulFunctionCall","src":"4101:29:25"}],"functionName":{"name":"add","nativeSrc":"4087:3:25","nodeType":"YulIdentifier","src":"4087:3:25"},"nativeSrc":"4087:44:25","nodeType":"YulFunctionCall","src":"4087:44:25"},"variables":[{"name":"deleteStart","nativeSrc":"4072:11:25","nodeType":"YulTypedName","src":"4072:11:25","type":""}]},{"body":{"nativeSrc":"4288:27:25","nodeType":"YulBlock","src":"4288:27:25","statements":[{"nativeSrc":"4290:23:25","nodeType":"YulAssignment","src":"4290:23:25","value":{"name":"dataArea","nativeSrc":"4305:8:25","nodeType":"YulIdentifier","src":"4305:8:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"4290:11:25","nodeType":"YulIdentifier","src":"4290:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4272:10:25","nodeType":"YulIdentifier","src":"4272:10:25"},{"kind":"number","nativeSrc":"4284:2:25","nodeType":"YulLiteral","src":"4284:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4269:2:25","nodeType":"YulIdentifier","src":"4269:2:25"},"nativeSrc":"4269:18:25","nodeType":"YulFunctionCall","src":"4269:18:25"},"nativeSrc":"4266:49:25","nodeType":"YulIf","src":"4266:49:25"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4357:11:25","nodeType":"YulIdentifier","src":"4357:11:25"},{"arguments":[{"name":"dataArea","nativeSrc":"4374:8:25","nodeType":"YulIdentifier","src":"4374:8:25"},{"arguments":[{"name":"len","nativeSrc":"4402:3:25","nodeType":"YulIdentifier","src":"4402:3:25"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4384:17:25","nodeType":"YulIdentifier","src":"4384:17:25"},"nativeSrc":"4384:22:25","nodeType":"YulFunctionCall","src":"4384:22:25"}],"functionName":{"name":"add","nativeSrc":"4370:3:25","nodeType":"YulIdentifier","src":"4370:3:25"},"nativeSrc":"4370:37:25","nodeType":"YulFunctionCall","src":"4370:37:25"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4328:28:25","nodeType":"YulIdentifier","src":"4328:28:25"},"nativeSrc":"4328:80:25","nodeType":"YulFunctionCall","src":"4328:80:25"},"nativeSrc":"4328:80:25","nodeType":"YulExpressionStatement","src":"4328:80:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3978:3:25","nodeType":"YulIdentifier","src":"3978:3:25"},{"kind":"number","nativeSrc":"3983:2:25","nodeType":"YulLiteral","src":"3983:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3975:2:25","nodeType":"YulIdentifier","src":"3975:2:25"},"nativeSrc":"3975:11:25","nodeType":"YulFunctionCall","src":"3975:11:25"},"nativeSrc":"3972:446:25","nodeType":"YulIf","src":"3972:446:25"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"3882:543:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3937:5:25","nodeType":"YulTypedName","src":"3937:5:25","type":""},{"name":"len","nativeSrc":"3944:3:25","nodeType":"YulTypedName","src":"3944:3:25","type":""},{"name":"startIndex","nativeSrc":"3949:10:25","nodeType":"YulTypedName","src":"3949:10:25","type":""}],"src":"3882:543:25"},{"body":{"nativeSrc":"4494:54:25","nodeType":"YulBlock","src":"4494:54:25","statements":[{"nativeSrc":"4504:37:25","nodeType":"YulAssignment","src":"4504:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"4529:4:25","nodeType":"YulIdentifier","src":"4529:4:25"},{"name":"value","nativeSrc":"4535:5:25","nodeType":"YulIdentifier","src":"4535:5:25"}],"functionName":{"name":"shr","nativeSrc":"4525:3:25","nodeType":"YulIdentifier","src":"4525:3:25"},"nativeSrc":"4525:16:25","nodeType":"YulFunctionCall","src":"4525:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"4504:8:25","nodeType":"YulIdentifier","src":"4504:8:25"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4431:117:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4469:4:25","nodeType":"YulTypedName","src":"4469:4:25","type":""},{"name":"value","nativeSrc":"4475:5:25","nodeType":"YulTypedName","src":"4475:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4485:8:25","nodeType":"YulTypedName","src":"4485:8:25","type":""}],"src":"4431:117:25"},{"body":{"nativeSrc":"4605:118:25","nodeType":"YulBlock","src":"4605:118:25","statements":[{"nativeSrc":"4615:68:25","nodeType":"YulVariableDeclaration","src":"4615:68:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4664:1:25","nodeType":"YulLiteral","src":"4664:1:25","type":"","value":"8"},{"name":"bytes","nativeSrc":"4667:5:25","nodeType":"YulIdentifier","src":"4667:5:25"}],"functionName":{"name":"mul","nativeSrc":"4660:3:25","nodeType":"YulIdentifier","src":"4660:3:25"},"nativeSrc":"4660:13:25","nodeType":"YulFunctionCall","src":"4660:13:25"},{"arguments":[{"kind":"number","nativeSrc":"4679:1:25","nodeType":"YulLiteral","src":"4679:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4675:3:25","nodeType":"YulIdentifier","src":"4675:3:25"},"nativeSrc":"4675:6:25","nodeType":"YulFunctionCall","src":"4675:6:25"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4631:28:25","nodeType":"YulIdentifier","src":"4631:28:25"},"nativeSrc":"4631:51:25","nodeType":"YulFunctionCall","src":"4631:51:25"}],"functionName":{"name":"not","nativeSrc":"4627:3:25","nodeType":"YulIdentifier","src":"4627:3:25"},"nativeSrc":"4627:56:25","nodeType":"YulFunctionCall","src":"4627:56:25"},"variables":[{"name":"mask","nativeSrc":"4619:4:25","nodeType":"YulTypedName","src":"4619:4:25","type":""}]},{"nativeSrc":"4692:25:25","nodeType":"YulAssignment","src":"4692:25:25","value":{"arguments":[{"name":"data","nativeSrc":"4706:4:25","nodeType":"YulIdentifier","src":"4706:4:25"},{"name":"mask","nativeSrc":"4712:4:25","nodeType":"YulIdentifier","src":"4712:4:25"}],"functionName":{"name":"and","nativeSrc":"4702:3:25","nodeType":"YulIdentifier","src":"4702:3:25"},"nativeSrc":"4702:15:25","nodeType":"YulFunctionCall","src":"4702:15:25"},"variableNames":[{"name":"result","nativeSrc":"4692:6:25","nodeType":"YulIdentifier","src":"4692:6:25"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4554:169:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4582:4:25","nodeType":"YulTypedName","src":"4582:4:25","type":""},{"name":"bytes","nativeSrc":"4588:5:25","nodeType":"YulTypedName","src":"4588:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4598:6:25","nodeType":"YulTypedName","src":"4598:6:25","type":""}],"src":"4554:169:25"},{"body":{"nativeSrc":"4809:214:25","nodeType":"YulBlock","src":"4809:214:25","statements":[{"nativeSrc":"4942:37:25","nodeType":"YulAssignment","src":"4942:37:25","value":{"arguments":[{"name":"data","nativeSrc":"4969:4:25","nodeType":"YulIdentifier","src":"4969:4:25"},{"name":"len","nativeSrc":"4975:3:25","nodeType":"YulIdentifier","src":"4975:3:25"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4950:18:25","nodeType":"YulIdentifier","src":"4950:18:25"},"nativeSrc":"4950:29:25","nodeType":"YulFunctionCall","src":"4950:29:25"},"variableNames":[{"name":"data","nativeSrc":"4942:4:25","nodeType":"YulIdentifier","src":"4942:4:25"}]},{"nativeSrc":"4988:29:25","nodeType":"YulAssignment","src":"4988:29:25","value":{"arguments":[{"name":"data","nativeSrc":"4999:4:25","nodeType":"YulIdentifier","src":"4999:4:25"},{"arguments":[{"kind":"number","nativeSrc":"5009:1:25","nodeType":"YulLiteral","src":"5009:1:25","type":"","value":"2"},{"name":"len","nativeSrc":"5012:3:25","nodeType":"YulIdentifier","src":"5012:3:25"}],"functionName":{"name":"mul","nativeSrc":"5005:3:25","nodeType":"YulIdentifier","src":"5005:3:25"},"nativeSrc":"5005:11:25","nodeType":"YulFunctionCall","src":"5005:11:25"}],"functionName":{"name":"or","nativeSrc":"4996:2:25","nodeType":"YulIdentifier","src":"4996:2:25"},"nativeSrc":"4996:21:25","nodeType":"YulFunctionCall","src":"4996:21:25"},"variableNames":[{"name":"used","nativeSrc":"4988:4:25","nodeType":"YulIdentifier","src":"4988:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4728:295:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4790:4:25","nodeType":"YulTypedName","src":"4790:4:25","type":""},{"name":"len","nativeSrc":"4796:3:25","nodeType":"YulTypedName","src":"4796:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4804:4:25","nodeType":"YulTypedName","src":"4804:4:25","type":""}],"src":"4728:295:25"},{"body":{"nativeSrc":"5120:1303:25","nodeType":"YulBlock","src":"5120:1303:25","statements":[{"nativeSrc":"5131:51:25","nodeType":"YulVariableDeclaration","src":"5131:51:25","value":{"arguments":[{"name":"src","nativeSrc":"5178:3:25","nodeType":"YulIdentifier","src":"5178:3:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5145:32:25","nodeType":"YulIdentifier","src":"5145:32:25"},"nativeSrc":"5145:37:25","nodeType":"YulFunctionCall","src":"5145:37:25"},"variables":[{"name":"newLen","nativeSrc":"5135:6:25","nodeType":"YulTypedName","src":"5135:6:25","type":""}]},{"body":{"nativeSrc":"5267:22:25","nodeType":"YulBlock","src":"5267:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5269:16:25","nodeType":"YulIdentifier","src":"5269:16:25"},"nativeSrc":"5269:18:25","nodeType":"YulFunctionCall","src":"5269:18:25"},"nativeSrc":"5269:18:25","nodeType":"YulExpressionStatement","src":"5269:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5239:6:25","nodeType":"YulIdentifier","src":"5239:6:25"},{"kind":"number","nativeSrc":"5247:18:25","nodeType":"YulLiteral","src":"5247:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5236:2:25","nodeType":"YulIdentifier","src":"5236:2:25"},"nativeSrc":"5236:30:25","nodeType":"YulFunctionCall","src":"5236:30:25"},"nativeSrc":"5233:56:25","nodeType":"YulIf","src":"5233:56:25"},{"nativeSrc":"5299:52:25","nodeType":"YulVariableDeclaration","src":"5299:52:25","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5345:4:25","nodeType":"YulIdentifier","src":"5345:4:25"}],"functionName":{"name":"sload","nativeSrc":"5339:5:25","nodeType":"YulIdentifier","src":"5339:5:25"},"nativeSrc":"5339:11:25","nodeType":"YulFunctionCall","src":"5339:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5313:25:25","nodeType":"YulIdentifier","src":"5313:25:25"},"nativeSrc":"5313:38:25","nodeType":"YulFunctionCall","src":"5313:38:25"},"variables":[{"name":"oldLen","nativeSrc":"5303:6:25","nodeType":"YulTypedName","src":"5303:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5444:4:25","nodeType":"YulIdentifier","src":"5444:4:25"},{"name":"oldLen","nativeSrc":"5450:6:25","nodeType":"YulIdentifier","src":"5450:6:25"},{"name":"newLen","nativeSrc":"5458:6:25","nodeType":"YulIdentifier","src":"5458:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5398:45:25","nodeType":"YulIdentifier","src":"5398:45:25"},"nativeSrc":"5398:67:25","nodeType":"YulFunctionCall","src":"5398:67:25"},"nativeSrc":"5398:67:25","nodeType":"YulExpressionStatement","src":"5398:67:25"},{"nativeSrc":"5475:18:25","nodeType":"YulVariableDeclaration","src":"5475:18:25","value":{"kind":"number","nativeSrc":"5492:1:25","nodeType":"YulLiteral","src":"5492:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5479:9:25","nodeType":"YulTypedName","src":"5479:9:25","type":""}]},{"nativeSrc":"5503:17:25","nodeType":"YulAssignment","src":"5503:17:25","value":{"kind":"number","nativeSrc":"5516:4:25","nodeType":"YulLiteral","src":"5516:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5503:9:25","nodeType":"YulIdentifier","src":"5503:9:25"}]},{"cases":[{"body":{"nativeSrc":"5567:611:25","nodeType":"YulBlock","src":"5567:611:25","statements":[{"nativeSrc":"5581:37:25","nodeType":"YulVariableDeclaration","src":"5581:37:25","value":{"arguments":[{"name":"newLen","nativeSrc":"5600:6:25","nodeType":"YulIdentifier","src":"5600:6:25"},{"arguments":[{"kind":"number","nativeSrc":"5612:4:25","nodeType":"YulLiteral","src":"5612:4:25","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5608:3:25","nodeType":"YulIdentifier","src":"5608:3:25"},"nativeSrc":"5608:9:25","nodeType":"YulFunctionCall","src":"5608:9:25"}],"functionName":{"name":"and","nativeSrc":"5596:3:25","nodeType":"YulIdentifier","src":"5596:3:25"},"nativeSrc":"5596:22:25","nodeType":"YulFunctionCall","src":"5596:22:25"},"variables":[{"name":"loopEnd","nativeSrc":"5585:7:25","nodeType":"YulTypedName","src":"5585:7:25","type":""}]},{"nativeSrc":"5632:51:25","nodeType":"YulVariableDeclaration","src":"5632:51:25","value":{"arguments":[{"name":"slot","nativeSrc":"5678:4:25","nodeType":"YulIdentifier","src":"5678:4:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5646:31:25","nodeType":"YulIdentifier","src":"5646:31:25"},"nativeSrc":"5646:37:25","nodeType":"YulFunctionCall","src":"5646:37:25"},"variables":[{"name":"dstPtr","nativeSrc":"5636:6:25","nodeType":"YulTypedName","src":"5636:6:25","type":""}]},{"nativeSrc":"5696:10:25","nodeType":"YulVariableDeclaration","src":"5696:10:25","value":{"kind":"number","nativeSrc":"5705:1:25","nodeType":"YulLiteral","src":"5705:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5700:1:25","nodeType":"YulTypedName","src":"5700:1:25","type":""}]},{"body":{"nativeSrc":"5764:163:25","nodeType":"YulBlock","src":"5764:163:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5789:6:25","nodeType":"YulIdentifier","src":"5789:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5807:3:25","nodeType":"YulIdentifier","src":"5807:3:25"},{"name":"srcOffset","nativeSrc":"5812:9:25","nodeType":"YulIdentifier","src":"5812:9:25"}],"functionName":{"name":"add","nativeSrc":"5803:3:25","nodeType":"YulIdentifier","src":"5803:3:25"},"nativeSrc":"5803:19:25","nodeType":"YulFunctionCall","src":"5803:19:25"}],"functionName":{"name":"mload","nativeSrc":"5797:5:25","nodeType":"YulIdentifier","src":"5797:5:25"},"nativeSrc":"5797:26:25","nodeType":"YulFunctionCall","src":"5797:26:25"}],"functionName":{"name":"sstore","nativeSrc":"5782:6:25","nodeType":"YulIdentifier","src":"5782:6:25"},"nativeSrc":"5782:42:25","nodeType":"YulFunctionCall","src":"5782:42:25"},"nativeSrc":"5782:42:25","nodeType":"YulExpressionStatement","src":"5782:42:25"},{"nativeSrc":"5841:24:25","nodeType":"YulAssignment","src":"5841:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"5855:6:25","nodeType":"YulIdentifier","src":"5855:6:25"},{"kind":"number","nativeSrc":"5863:1:25","nodeType":"YulLiteral","src":"5863:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5851:3:25","nodeType":"YulIdentifier","src":"5851:3:25"},"nativeSrc":"5851:14:25","nodeType":"YulFunctionCall","src":"5851:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"5841:6:25","nodeType":"YulIdentifier","src":"5841:6:25"}]},{"nativeSrc":"5882:31:25","nodeType":"YulAssignment","src":"5882:31:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"5899:9:25","nodeType":"YulIdentifier","src":"5899:9:25"},{"kind":"number","nativeSrc":"5910:2:25","nodeType":"YulLiteral","src":"5910:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5895:3:25","nodeType":"YulIdentifier","src":"5895:3:25"},"nativeSrc":"5895:18:25","nodeType":"YulFunctionCall","src":"5895:18:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"5882:9:25","nodeType":"YulIdentifier","src":"5882:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5730:1:25","nodeType":"YulIdentifier","src":"5730:1:25"},{"name":"loopEnd","nativeSrc":"5733:7:25","nodeType":"YulIdentifier","src":"5733:7:25"}],"functionName":{"name":"lt","nativeSrc":"5727:2:25","nodeType":"YulIdentifier","src":"5727:2:25"},"nativeSrc":"5727:14:25","nodeType":"YulFunctionCall","src":"5727:14:25"},"nativeSrc":"5719:208:25","nodeType":"YulForLoop","post":{"nativeSrc":"5742:21:25","nodeType":"YulBlock","src":"5742:21:25","statements":[{"nativeSrc":"5744:17:25","nodeType":"YulAssignment","src":"5744:17:25","value":{"arguments":[{"name":"i","nativeSrc":"5753:1:25","nodeType":"YulIdentifier","src":"5753:1:25"},{"kind":"number","nativeSrc":"5756:4:25","nodeType":"YulLiteral","src":"5756:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5749:3:25","nodeType":"YulIdentifier","src":"5749:3:25"},"nativeSrc":"5749:12:25","nodeType":"YulFunctionCall","src":"5749:12:25"},"variableNames":[{"name":"i","nativeSrc":"5744:1:25","nodeType":"YulIdentifier","src":"5744:1:25"}]}]},"pre":{"nativeSrc":"5723:3:25","nodeType":"YulBlock","src":"5723:3:25","statements":[]},"src":"5719:208:25"},{"body":{"nativeSrc":"5963:156:25","nodeType":"YulBlock","src":"5963:156:25","statements":[{"nativeSrc":"5981:43:25","nodeType":"YulVariableDeclaration","src":"5981:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6008:3:25","nodeType":"YulIdentifier","src":"6008:3:25"},{"name":"srcOffset","nativeSrc":"6013:9:25","nodeType":"YulIdentifier","src":"6013:9:25"}],"functionName":{"name":"add","nativeSrc":"6004:3:25","nodeType":"YulIdentifier","src":"6004:3:25"},"nativeSrc":"6004:19:25","nodeType":"YulFunctionCall","src":"6004:19:25"}],"functionName":{"name":"mload","nativeSrc":"5998:5:25","nodeType":"YulIdentifier","src":"5998:5:25"},"nativeSrc":"5998:26:25","nodeType":"YulFunctionCall","src":"5998:26:25"},"variables":[{"name":"lastValue","nativeSrc":"5985:9:25","nodeType":"YulTypedName","src":"5985:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6048:6:25","nodeType":"YulIdentifier","src":"6048:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"6075:9:25","nodeType":"YulIdentifier","src":"6075:9:25"},{"arguments":[{"name":"newLen","nativeSrc":"6090:6:25","nodeType":"YulIdentifier","src":"6090:6:25"},{"kind":"number","nativeSrc":"6098:4:25","nodeType":"YulLiteral","src":"6098:4:25","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6086:3:25","nodeType":"YulIdentifier","src":"6086:3:25"},"nativeSrc":"6086:17:25","nodeType":"YulFunctionCall","src":"6086:17:25"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6056:18:25","nodeType":"YulIdentifier","src":"6056:18:25"},"nativeSrc":"6056:48:25","nodeType":"YulFunctionCall","src":"6056:48:25"}],"functionName":{"name":"sstore","nativeSrc":"6041:6:25","nodeType":"YulIdentifier","src":"6041:6:25"},"nativeSrc":"6041:64:25","nodeType":"YulFunctionCall","src":"6041:64:25"},"nativeSrc":"6041:64:25","nodeType":"YulExpressionStatement","src":"6041:64:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"5946:7:25","nodeType":"YulIdentifier","src":"5946:7:25"},{"name":"newLen","nativeSrc":"5955:6:25","nodeType":"YulIdentifier","src":"5955:6:25"}],"functionName":{"name":"lt","nativeSrc":"5943:2:25","nodeType":"YulIdentifier","src":"5943:2:25"},"nativeSrc":"5943:19:25","nodeType":"YulFunctionCall","src":"5943:19:25"},"nativeSrc":"5940:179:25","nodeType":"YulIf","src":"5940:179:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6139:4:25","nodeType":"YulIdentifier","src":"6139:4:25"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6153:6:25","nodeType":"YulIdentifier","src":"6153:6:25"},{"kind":"number","nativeSrc":"6161:1:25","nodeType":"YulLiteral","src":"6161:1:25","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6149:3:25","nodeType":"YulIdentifier","src":"6149:3:25"},"nativeSrc":"6149:14:25","nodeType":"YulFunctionCall","src":"6149:14:25"},{"kind":"number","nativeSrc":"6165:1:25","nodeType":"YulLiteral","src":"6165:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6145:3:25","nodeType":"YulIdentifier","src":"6145:3:25"},"nativeSrc":"6145:22:25","nodeType":"YulFunctionCall","src":"6145:22:25"}],"functionName":{"name":"sstore","nativeSrc":"6132:6:25","nodeType":"YulIdentifier","src":"6132:6:25"},"nativeSrc":"6132:36:25","nodeType":"YulFunctionCall","src":"6132:36:25"},"nativeSrc":"6132:36:25","nodeType":"YulExpressionStatement","src":"6132:36:25"}]},"nativeSrc":"5560:618:25","nodeType":"YulCase","src":"5560:618:25","value":{"kind":"number","nativeSrc":"5565:1:25","nodeType":"YulLiteral","src":"5565:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"6195:222:25","nodeType":"YulBlock","src":"6195:222:25","statements":[{"nativeSrc":"6209:14:25","nodeType":"YulVariableDeclaration","src":"6209:14:25","value":{"kind":"number","nativeSrc":"6222:1:25","nodeType":"YulLiteral","src":"6222:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6213:5:25","nodeType":"YulTypedName","src":"6213:5:25","type":""}]},{"body":{"nativeSrc":"6246:67:25","nodeType":"YulBlock","src":"6246:67:25","statements":[{"nativeSrc":"6264:35:25","nodeType":"YulAssignment","src":"6264:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6283:3:25","nodeType":"YulIdentifier","src":"6283:3:25"},{"name":"srcOffset","nativeSrc":"6288:9:25","nodeType":"YulIdentifier","src":"6288:9:25"}],"functionName":{"name":"add","nativeSrc":"6279:3:25","nodeType":"YulIdentifier","src":"6279:3:25"},"nativeSrc":"6279:19:25","nodeType":"YulFunctionCall","src":"6279:19:25"}],"functionName":{"name":"mload","nativeSrc":"6273:5:25","nodeType":"YulIdentifier","src":"6273:5:25"},"nativeSrc":"6273:26:25","nodeType":"YulFunctionCall","src":"6273:26:25"},"variableNames":[{"name":"value","nativeSrc":"6264:5:25","nodeType":"YulIdentifier","src":"6264:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"6239:6:25","nodeType":"YulIdentifier","src":"6239:6:25"},"nativeSrc":"6236:77:25","nodeType":"YulIf","src":"6236:77:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6333:4:25","nodeType":"YulIdentifier","src":"6333:4:25"},{"arguments":[{"name":"value","nativeSrc":"6392:5:25","nodeType":"YulIdentifier","src":"6392:5:25"},{"name":"newLen","nativeSrc":"6399:6:25","nodeType":"YulIdentifier","src":"6399:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6339:52:25","nodeType":"YulIdentifier","src":"6339:52:25"},"nativeSrc":"6339:67:25","nodeType":"YulFunctionCall","src":"6339:67:25"}],"functionName":{"name":"sstore","nativeSrc":"6326:6:25","nodeType":"YulIdentifier","src":"6326:6:25"},"nativeSrc":"6326:81:25","nodeType":"YulFunctionCall","src":"6326:81:25"},"nativeSrc":"6326:81:25","nodeType":"YulExpressionStatement","src":"6326:81:25"}]},"nativeSrc":"6187:230:25","nodeType":"YulCase","src":"6187:230:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5540:6:25","nodeType":"YulIdentifier","src":"5540:6:25"},{"kind":"number","nativeSrc":"5548:2:25","nodeType":"YulLiteral","src":"5548:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5537:2:25","nodeType":"YulIdentifier","src":"5537:2:25"},"nativeSrc":"5537:14:25","nodeType":"YulFunctionCall","src":"5537:14:25"},"nativeSrc":"5530:887:25","nodeType":"YulSwitch","src":"5530:887:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5028:1395:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5109:4:25","nodeType":"YulTypedName","src":"5109:4:25","type":""},{"name":"src","nativeSrc":"5115:3:25","nodeType":"YulTypedName","src":"5115:3:25","type":""}],"src":"5028:1395:25"},{"body":{"nativeSrc":"6494:53:25","nodeType":"YulBlock","src":"6494:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6511:3:25","nodeType":"YulIdentifier","src":"6511:3:25"},{"arguments":[{"name":"value","nativeSrc":"6534:5:25","nodeType":"YulIdentifier","src":"6534:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6516:17:25","nodeType":"YulIdentifier","src":"6516:17:25"},"nativeSrc":"6516:24:25","nodeType":"YulFunctionCall","src":"6516:24:25"}],"functionName":{"name":"mstore","nativeSrc":"6504:6:25","nodeType":"YulIdentifier","src":"6504:6:25"},"nativeSrc":"6504:37:25","nodeType":"YulFunctionCall","src":"6504:37:25"},"nativeSrc":"6504:37:25","nodeType":"YulExpressionStatement","src":"6504:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6429:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6482:5:25","nodeType":"YulTypedName","src":"6482:5:25","type":""},{"name":"pos","nativeSrc":"6489:3:25","nodeType":"YulTypedName","src":"6489:3:25","type":""}],"src":"6429:118:25"},{"body":{"nativeSrc":"6651:124:25","nodeType":"YulBlock","src":"6651:124:25","statements":[{"nativeSrc":"6661:26:25","nodeType":"YulAssignment","src":"6661:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6673:9:25","nodeType":"YulIdentifier","src":"6673:9:25"},{"kind":"number","nativeSrc":"6684:2:25","nodeType":"YulLiteral","src":"6684:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6669:3:25","nodeType":"YulIdentifier","src":"6669:3:25"},"nativeSrc":"6669:18:25","nodeType":"YulFunctionCall","src":"6669:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6661:4:25","nodeType":"YulIdentifier","src":"6661:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6741:6:25","nodeType":"YulIdentifier","src":"6741:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6754:9:25","nodeType":"YulIdentifier","src":"6754:9:25"},{"kind":"number","nativeSrc":"6765:1:25","nodeType":"YulLiteral","src":"6765:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6750:3:25","nodeType":"YulIdentifier","src":"6750:3:25"},"nativeSrc":"6750:17:25","nodeType":"YulFunctionCall","src":"6750:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6697:43:25","nodeType":"YulIdentifier","src":"6697:43:25"},"nativeSrc":"6697:71:25","nodeType":"YulFunctionCall","src":"6697:71:25"},"nativeSrc":"6697:71:25","nodeType":"YulExpressionStatement","src":"6697:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6553:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6623:9:25","nodeType":"YulTypedName","src":"6623:9:25","type":""},{"name":"value0","nativeSrc":"6635:6:25","nodeType":"YulTypedName","src":"6635:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6646:4:25","nodeType":"YulTypedName","src":"6646:4:25","type":""}],"src":"6553:222:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002bb138038062002bb18339818101604052810190620000379190620001ca565b806040518060400160405280600681526020017f4e4654756e6500000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e465500000000000000000000000000000000000000000000000000000000008152508160009081620000b5919062000476565b508060019081620000c7919062000476565b505050620000db81620000e360201b60201c565b50506200058b565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad816040516200015591906200056e565b60405180910390a150565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001928262000165565b9050919050565b620001a48162000185565b8114620001b057600080fd5b50565b600081519050620001c48162000199565b92915050565b600060208284031215620001e357620001e262000160565b5b6000620001f384828501620001b3565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027e57607f821691505b60208210810362000294576200029362000236565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002bf565b6200030a8683620002bf565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000357620003516200034b8462000322565b6200032c565b62000322565b9050919050565b6000819050919050565b620003738362000336565b6200038b62000382826200035e565b848454620002cc565b825550505050565b600090565b620003a262000393565b620003af81848462000368565b505050565b5b81811015620003d757620003cb60008262000398565b600181019050620003b5565b5050565b601f8211156200042657620003f0816200029a565b620003fb84620002af565b810160208510156200040b578190505b620004236200041a85620002af565b830182620003b4565b50505b505050565b600082821c905092915050565b60006200044b600019846008026200042b565b1980831691505092915050565b600062000466838362000438565b9150826002028217905092915050565b6200048182620001fc565b67ffffffffffffffff8111156200049d576200049c62000207565b5b620004a9825462000265565b620004b6828285620003db565b600060209050601f831160018114620004ee5760008415620004d9578287015190505b620004e5858262000458565b86555062000555565b601f198416620004fe866200029a565b60005b82811015620005285784890151825560018201915060208501945060208101905062000501565b8683101562000548578489015162000544601f89168262000438565b8355505b6001600288020188555050505b505050505050565b620005688162000185565b82525050565b60006020820190506200058560008301846200055d565b92915050565b612616806200059b6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102dd578063b88d4fde146102f9578063bf7e214f14610315578063c87b56dd14610333578063e985e9c51461036357610116565b806370a08231146102555780637a9e5e4b146102855780638fb36037146102a157806395d89b41146102bf57610116565b806323b872dd116100e957806323b872dd146101b557806340d097c3146101d157806342842e0e146101ed57806342966c68146102095780636352211e1461022557610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611b5c565b610393565b6040516101429190611ba4565b60405180910390f35b610153610475565b6040516101609190611c4f565b60405180910390f35b610183600480360381019061017e9190611ca7565b610507565b6040516101909190611d15565b60405180910390f35b6101b360048036038101906101ae9190611d5c565b610523565b005b6101cf60048036038101906101ca9190611d9c565b610539565b005b6101eb60048036038101906101e69190611def565b61063b565b005b61020760048036038101906102029190611d9c565b61067c565b005b610223600480360381019061021e9190611ca7565b61069c565b005b61023f600480360381019061023a9190611ca7565b6106b3565b60405161024c9190611d15565b60405180910390f35b61026f600480360381019061026a9190611def565b6106c5565b60405161027c9190611e2b565b60405180910390f35b61029f600480360381019061029a9190611def565b61077f565b005b6102a961086b565b6040516102b69190611e55565b60405180910390f35b6102c7610899565b6040516102d49190611c4f565b60405180910390f35b6102f760048036038101906102f29190611e9c565b61092b565b005b610313600480360381019061030e9190612011565b610941565b005b61031d61095e565b60405161032a9190611d15565b60405180910390f35b61034d60048036038101906103489190611ca7565b610988565b60405161035a9190611c4f565b60405180910390f35b61037d60048036038101906103789190612094565b6109f1565b60405161038a9190611ba4565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610a85565b5b9050919050565b60606000805461048490612103565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090612103565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b600061051282610aef565b5061051c82610b77565b9050919050565b6105358282610530610bb4565b610bbc565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a29190611d15565b60405180910390fd5b60006105bf83836105ba610bb4565b610bce565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610635578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062c93929190612134565b60405180910390fd5b50505050565b610653610646610bb4565b61064e610de8565b610df5565b6000600760008154809291906106689061219a565b9190505590506106788282610f37565b5050565b61069783838360405180602001604052806000815250610941565b505050565b6106af6000826106aa610bb4565b610bce565b5050565b60006106be82610aef565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107385760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161072f9190611d15565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610789610bb4565b905061079361095e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461080257806040517f068ca9d80000000000000000000000000000000000000000000000000000000081526004016107f99190611d15565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff163b0361085e57816040517fc2f31e5e0000000000000000000000000000000000000000000000000000000081526004016108559190611d15565b60405180910390fd5b61086782610f55565b5050565b6000600660149054906101000a900460ff1661088b57600060e01b610894565b638fb3603760e01b5b905090565b6060600180546108a890612103565b80601f01602080910402602001604051908101604052809291908181526020018280546108d490612103565b80156109215780601f106108f657610100808354040283529160200191610921565b820191906000526020600020905b81548152906001019060200180831161090457829003601f168201915b5050505050905090565b61093d610936610bb4565b8383610fd0565b5050565b61094c848484610539565b6109588484848461113f565b50505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061099382610aef565b50600061099e6112f6565b905060008151116109be57604051806020016040528060008152506109e9565b806109c88461130d565b6040516020016109d992919061221e565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610afb836113db565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b6e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b659190611e2b565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bc98383836001611418565b505050565b600080610bda846113db565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c1c57610c1b8184866115dd565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cad57610c5e600085600080611418565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d30576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b3660008036915091509091565b600080610e29610e0361095e565b86308787600090600492610e199392919061224c565b90610e24919061229f565b6116a1565b9150915081610f305760008163ffffffff161115610ef2576001600660146101000a81548160ff021916908315150217905550610e6461095e565b73ffffffffffffffffffffffffffffffffffffffff166394c7d7ee8686866040518463ffffffff1660e01b8152600401610ea09392919061233c565b600060405180830381600087803b158015610eba57600080fd5b505af1158015610ece573d6000803e3d6000fd5b505050506000600660146101000a81548160ff021916908315150217905550610f2f565b846040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401610f269190611d15565b60405180910390fd5b5b5050505050565b610f518282604051806020016040528060008152506117c7565b5050565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad81604051610fc59190611d15565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361104157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110389190611d15565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111329190611ba4565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156112f0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611183610bb4565b8685856040518563ffffffff1660e01b81526004016111a594939291906123b2565b6020604051808303816000875af19250505080156111e157506040513d601f19601f820116820180604052508101906111de9190612413565b60015b611265573d8060008114611211576040519150601f19603f3d011682016040523d82523d6000602084013e611216565b606091505b50600081510361125d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112549190611d15565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112ee57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112e59190611d15565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606000600161131c846117e3565b01905060008167ffffffffffffffff81111561133b5761133a611ee6565b5b6040519080825280601f01601f19166020018201604052801561136d5781602001600182028036833780820191505090505b509050600082602001820190505b6001156113d0578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113c4576113c3612440565b5b0494506000850361137b575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114515750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561158557600061146184610aef565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114cc57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156114df57506114dd81846109f1565b155b1561152157826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115189190611d15565b60405180910390fd5b811561158357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6115e8838383611936565b61169c57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361165d57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116549190611e2b565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161169392919061246f565b60405180910390fd5b505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff168787876040516024016116d393929190612498565b60405160208183030381529060405263b700961360e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611725919061250b565b600060405180830381855afa9150503d8060008114611760576040519150601f19603f3d011682016040523d82523d6000602084013e611765565b606091505b509150915081156117bc57604081511061179a578080602001905181019061178d9190612573565b80945081955050506117bb565b60208151106117ba57808060200190518101906117b791906125b3565b93505b5b5b505094509492505050565b6117d183836119f7565b6117de600084848461113f565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611841577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161183757611836612440565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061187e576d04ee2d6d415b85acef8100000000838161187457611873612440565b5b0492506020810190505b662386f26fc1000083106118ad57662386f26fc1000083816118a3576118a2612440565b5b0492506010810190505b6305f5e10083106118d6576305f5e10083816118cc576118cb612440565b5b0492506008810190505b61271083106118fb5761271083816118f1576118f0612440565b5b0492506004810190505b6064831061191e576064838161191457611913612440565b5b0492506002810190505b600a831061192d576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119ee57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119af57506119ae84846109f1565b5b806119ed57508273ffffffffffffffffffffffffffffffffffffffff166119d583610b77565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a695760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a609190611d15565b60405180910390fd5b6000611a7783836000610bce565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611aeb5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ae29190611d15565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b3981611b04565b8114611b4457600080fd5b50565b600081359050611b5681611b30565b92915050565b600060208284031215611b7257611b71611afa565b5b6000611b8084828501611b47565b91505092915050565b60008115159050919050565b611b9e81611b89565b82525050565b6000602082019050611bb96000830184611b95565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bf9578082015181840152602081019050611bde565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c2182611bbf565b611c2b8185611bca565b9350611c3b818560208601611bdb565b611c4481611c05565b840191505092915050565b60006020820190508181036000830152611c698184611c16565b905092915050565b6000819050919050565b611c8481611c71565b8114611c8f57600080fd5b50565b600081359050611ca181611c7b565b92915050565b600060208284031215611cbd57611cbc611afa565b5b6000611ccb84828501611c92565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cff82611cd4565b9050919050565b611d0f81611cf4565b82525050565b6000602082019050611d2a6000830184611d06565b92915050565b611d3981611cf4565b8114611d4457600080fd5b50565b600081359050611d5681611d30565b92915050565b60008060408385031215611d7357611d72611afa565b5b6000611d8185828601611d47565b9250506020611d9285828601611c92565b9150509250929050565b600080600060608486031215611db557611db4611afa565b5b6000611dc386828701611d47565b9350506020611dd486828701611d47565b9250506040611de586828701611c92565b9150509250925092565b600060208284031215611e0557611e04611afa565b5b6000611e1384828501611d47565b91505092915050565b611e2581611c71565b82525050565b6000602082019050611e406000830184611e1c565b92915050565b611e4f81611b04565b82525050565b6000602082019050611e6a6000830184611e46565b92915050565b611e7981611b89565b8114611e8457600080fd5b50565b600081359050611e9681611e70565b92915050565b60008060408385031215611eb357611eb2611afa565b5b6000611ec185828601611d47565b9250506020611ed285828601611e87565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f1e82611c05565b810181811067ffffffffffffffff82111715611f3d57611f3c611ee6565b5b80604052505050565b6000611f50611af0565b9050611f5c8282611f15565b919050565b600067ffffffffffffffff821115611f7c57611f7b611ee6565b5b611f8582611c05565b9050602081019050919050565b82818337600083830152505050565b6000611fb4611faf84611f61565b611f46565b905082815260208101848484011115611fd057611fcf611ee1565b5b611fdb848285611f92565b509392505050565b600082601f830112611ff857611ff7611edc565b5b8135612008848260208601611fa1565b91505092915050565b6000806000806080858703121561202b5761202a611afa565b5b600061203987828801611d47565b945050602061204a87828801611d47565b935050604061205b87828801611c92565b925050606085013567ffffffffffffffff81111561207c5761207b611aff565b5b61208887828801611fe3565b91505092959194509250565b600080604083850312156120ab576120aa611afa565b5b60006120b985828601611d47565b92505060206120ca85828601611d47565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061211b57607f821691505b60208210810361212e5761212d6120d4565b5b50919050565b60006060820190506121496000830186611d06565b6121566020830185611e1c565b6121636040830184611d06565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121a582611c71565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121d7576121d661216b565b5b600182019050919050565b600081905092915050565b60006121f882611bbf565b61220281856121e2565b9350612212818560208601611bdb565b80840191505092915050565b600061222a82856121ed565b915061223682846121ed565b91508190509392505050565b600080fd5b600080fd5b600080858511156122605761225f612242565b5b8386111561227157612270612247565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b60006122ab8383612287565b826122b68135611b04565b925060048210156122f6576122f17fffffffff0000000000000000000000000000000000000000000000000000000083600403600802612292565b831692505b505092915050565b600082825260208201905092915050565b600061231b83856122fe565b9350612328838584611f92565b61233183611c05565b840190509392505050565b60006040820190506123516000830186611d06565b818103602083015261236481848661230f565b9050949350505050565b600081519050919050565b60006123848261236e565b61238e81856122fe565b935061239e818560208601611bdb565b6123a781611c05565b840191505092915050565b60006080820190506123c76000830187611d06565b6123d46020830186611d06565b6123e16040830185611e1c565b81810360608301526123f38184612379565b905095945050505050565b60008151905061240d81611b30565b92915050565b60006020828403121561242957612428611afa565b5b6000612437848285016123fe565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506124846000830185611d06565b6124916020830184611e1c565b9392505050565b60006060820190506124ad6000830186611d06565b6124ba6020830185611d06565b6124c76040830184611e46565b949350505050565b600081905092915050565b60006124e58261236e565b6124ef81856124cf565b93506124ff818560208601611bdb565b80840191505092915050565b600061251782846124da565b915081905092915050565b60008151905061253181611e70565b92915050565b600063ffffffff82169050919050565b61255081612537565b811461255b57600080fd5b50565b60008151905061256d81612547565b92915050565b6000806040838503121561258a57612589611afa565b5b600061259885828601612522565b92505060206125a98582860161255e565b9150509250929050565b6000602082840312156125c9576125c8611afa565b5b60006125d784828501612522565b9150509291505056fea264697066735822122056abdb6c2a3356e10dba14baef6d47099b5ace067cd90e6110e4b0259664fd3b64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2BB1 CODESIZE SUB DUP1 PUSH3 0x2BB1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1CA JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E4654756E650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E46550000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x476 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x476 JUMP JUMPDEST POP POP POP PUSH3 0xDB DUP2 PUSH3 0xE3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x58B JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP2 PUSH1 0x40 MLOAD PUSH3 0x155 SWAP2 SWAP1 PUSH3 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x192 DUP3 PUSH3 0x165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A4 DUP2 PUSH3 0x185 JUMP JUMPDEST DUP2 EQ PUSH3 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1C4 DUP2 PUSH3 0x199 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1E3 JUMPI PUSH3 0x1E2 PUSH3 0x160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1F3 DUP5 DUP3 DUP6 ADD PUSH3 0x1B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x27E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x294 JUMPI PUSH3 0x293 PUSH3 0x236 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2FE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2BF JUMP JUMPDEST PUSH3 0x30A DUP7 DUP4 PUSH3 0x2BF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x357 PUSH3 0x351 PUSH3 0x34B DUP5 PUSH3 0x322 JUMP JUMPDEST PUSH3 0x32C JUMP JUMPDEST PUSH3 0x322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x373 DUP4 PUSH3 0x336 JUMP JUMPDEST PUSH3 0x38B PUSH3 0x382 DUP3 PUSH3 0x35E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2CC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3A2 PUSH3 0x393 JUMP JUMPDEST PUSH3 0x3AF DUP2 DUP5 DUP5 PUSH3 0x368 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D7 JUMPI PUSH3 0x3CB PUSH1 0x0 DUP3 PUSH3 0x398 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x426 JUMPI PUSH3 0x3F0 DUP2 PUSH3 0x29A JUMP JUMPDEST PUSH3 0x3FB DUP5 PUSH3 0x2AF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x40B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x423 PUSH3 0x41A DUP6 PUSH3 0x2AF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x44B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x42B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x466 DUP4 DUP4 PUSH3 0x438 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x481 DUP3 PUSH3 0x1FC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x49D JUMPI PUSH3 0x49C PUSH3 0x207 JUMP JUMPDEST JUMPDEST PUSH3 0x4A9 DUP3 SLOAD PUSH3 0x265 JUMP JUMPDEST PUSH3 0x4B6 DUP3 DUP3 DUP6 PUSH3 0x3DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4EE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4D9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E5 DUP6 DUP3 PUSH3 0x458 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x555 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4FE DUP7 PUSH3 0x29A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x528 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x501 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x548 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x544 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x438 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x568 DUP2 PUSH3 0x185 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x585 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x55D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2616 DUP1 PUSH3 0x59B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x363 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8FB36037 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BF JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x225 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2094 JUMP JUMPDEST PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46E JUMPI POP PUSH2 0x46D DUP3 PUSH2 0xA85 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x2103 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B0 SWAP1 PUSH2 0x2103 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0xAEF JUMP JUMPDEST POP PUSH2 0x51C DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 DUP3 DUP3 PUSH2 0x530 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xBBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP4 DUP4 PUSH2 0x5BA PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x635 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2134 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x653 PUSH2 0x646 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x64E PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x668 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x678 DUP3 DUP3 PUSH2 0xF37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x697 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x941 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6AF PUSH1 0x0 DUP3 PUSH2 0x6AA PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BE DUP3 PUSH2 0xAEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x738 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x789 PUSH2 0xBB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x793 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x802 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x85E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xC2F31E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x867 DUP3 PUSH2 0xF55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x88B JUMPI PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0x894 JUMP JUMPDEST PUSH4 0x8FB36037 PUSH1 0xE0 SHL JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8A8 SWAP1 PUSH2 0x2103 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D4 SWAP1 PUSH2 0x2103 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x921 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x921 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x904 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x93D PUSH2 0x936 PUSH2 0xBB4 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFD0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x94C DUP5 DUP5 DUP5 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x958 DUP5 DUP5 DUP5 DUP5 PUSH2 0x113F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x993 DUP3 PUSH2 0xAEF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x99E PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9E9 JUMP JUMPDEST DUP1 PUSH2 0x9C8 DUP5 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D9 SWAP3 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAFB DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBC9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1418 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBDA DUP5 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC1C JUMPI PUSH2 0xC1B DUP2 DUP5 DUP7 PUSH2 0x15DD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAD JUMPI PUSH2 0xC5E PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD30 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE29 PUSH2 0xE03 PUSH2 0x95E JUMP JUMPDEST DUP7 ADDRESS DUP8 DUP8 PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP3 PUSH2 0xE19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST SWAP1 PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xF30 JUMPI PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE64 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94C7D7EE DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF2F JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF51 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17C7 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP2 PUSH1 0x40 MLOAD PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1041 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1038 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12F0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1183 PUSH2 0xBB4 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11E1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1265 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1211 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x125D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1254 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12EE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E5 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x131C DUP5 PUSH2 0x17E3 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x133B JUMPI PUSH2 0x133A PUSH2 0x1EE6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x136D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13D0 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13C4 JUMPI PUSH2 0x13C3 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x137B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1451 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1585 JUMPI PUSH1 0x0 PUSH2 0x1461 DUP5 PUSH2 0xAEF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x14CC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14DF JUMPI POP PUSH2 0x14DD DUP2 DUP5 PUSH2 0x9F1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1521 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1518 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1583 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15E8 DUP4 DUP4 DUP4 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x169C JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1693 SWAP3 SWAP2 SWAP1 PUSH2 0x246F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xB7009613 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1725 SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1760 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x17BC JUMPI PUSH1 0x40 DUP2 MLOAD LT PUSH2 0x179A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x178D SWAP2 SWAP1 PUSH2 0x2573 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x17BA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17B7 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17D1 DUP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x17DE PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x113F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1841 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1837 JUMPI PUSH2 0x1836 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x187E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x18AD JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x18A3 JUMPI PUSH2 0x18A2 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x18D6 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x18FB JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x191E JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1914 JUMPI PUSH2 0x1913 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x192D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19EE JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x19AF JUMPI POP PUSH2 0x19AE DUP5 DUP5 PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x19ED JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D5 DUP4 PUSH2 0xB77 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A69 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A60 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AEB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE2 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B39 DUP2 PUSH2 0x1B04 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B56 DUP2 PUSH2 0x1B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B80 DUP5 DUP3 DUP6 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9E DUP2 PUSH2 0x1B89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BF9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C21 DUP3 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1C2B DUP2 DUP6 PUSH2 0x1BCA JUMP JUMPDEST SWAP4 POP PUSH2 0x1C3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x1C44 DUP2 PUSH2 0x1C05 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 DUP5 PUSH2 0x1C16 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C84 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CA1 DUP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CBD JUMPI PUSH2 0x1CBC PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CCB DUP5 DUP3 DUP6 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFF DUP3 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0F DUP2 PUSH2 0x1CF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D39 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D56 DUP2 PUSH2 0x1D30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D73 JUMPI PUSH2 0x1D72 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D81 DUP6 DUP3 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D92 DUP6 DUP3 DUP7 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DB5 JUMPI PUSH2 0x1DB4 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DC3 DUP7 DUP3 DUP8 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DD4 DUP7 DUP3 DUP8 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DE5 DUP7 DUP3 DUP8 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E13 DUP5 DUP3 DUP6 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E25 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E4F DUP2 PUSH2 0x1B04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E79 DUP2 PUSH2 0x1B89 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E96 DUP2 PUSH2 0x1E70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EB3 JUMPI PUSH2 0x1EB2 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ED2 DUP6 DUP3 DUP7 ADD PUSH2 0x1E87 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F1E DUP3 PUSH2 0x1C05 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F3D JUMPI PUSH2 0x1F3C PUSH2 0x1EE6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F50 PUSH2 0x1AF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F5C DUP3 DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F7C JUMPI PUSH2 0x1F7B PUSH2 0x1EE6 JUMP JUMPDEST JUMPDEST PUSH2 0x1F85 DUP3 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB4 PUSH2 0x1FAF DUP5 PUSH2 0x1F61 JUMP JUMPDEST PUSH2 0x1F46 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FD0 JUMPI PUSH2 0x1FCF PUSH2 0x1EE1 JUMP JUMPDEST JUMPDEST PUSH2 0x1FDB DUP5 DUP3 DUP6 PUSH2 0x1F92 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FF8 JUMPI PUSH2 0x1FF7 PUSH2 0x1EDC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2008 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH2 0x202A PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2039 DUP8 DUP3 DUP9 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x204A DUP8 DUP3 DUP9 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x205B DUP8 DUP3 DUP9 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207C JUMPI PUSH2 0x207B PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH2 0x2088 DUP8 DUP3 DUP9 ADD PUSH2 0x1FE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP6 DUP3 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20CA DUP6 DUP3 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x211B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x212E JUMPI PUSH2 0x212D PUSH2 0x20D4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2149 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x2156 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0x2163 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21A5 DUP3 PUSH2 0x1C71 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x216B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F8 DUP3 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x2202 DUP2 DUP6 PUSH2 0x21E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2212 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222A DUP3 DUP6 PUSH2 0x21ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2236 DUP3 DUP5 PUSH2 0x21ED JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x2242 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x2247 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22AB DUP4 DUP4 PUSH2 0x2287 JUMP JUMPDEST DUP3 PUSH2 0x22B6 DUP2 CALLDATALOAD PUSH2 0x1B04 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x22F6 JUMPI PUSH2 0x22F1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x2292 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231B DUP4 DUP6 PUSH2 0x22FE JUMP JUMPDEST SWAP4 POP PUSH2 0x2328 DUP4 DUP6 DUP5 PUSH2 0x1F92 JUMP JUMPDEST PUSH2 0x2331 DUP4 PUSH2 0x1C05 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2351 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2364 DUP2 DUP5 DUP7 PUSH2 0x230F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2384 DUP3 PUSH2 0x236E JUMP JUMPDEST PUSH2 0x238E DUP2 DUP6 PUSH2 0x22FE JUMP JUMPDEST SWAP4 POP PUSH2 0x239E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x23A7 DUP2 PUSH2 0x1C05 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23C7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x23D4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x23E1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E1C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23F3 DUP2 DUP5 PUSH2 0x2379 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x240D DUP2 PUSH2 0x1B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2429 JUMPI PUSH2 0x2428 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2437 DUP5 DUP3 DUP6 ADD PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2484 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x2491 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E1C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24AD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x24BA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x24C7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E46 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E5 DUP3 PUSH2 0x236E JUMP JUMPDEST PUSH2 0x24EF DUP2 DUP6 PUSH2 0x24CF JUMP JUMPDEST SWAP4 POP PUSH2 0x24FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2517 DUP3 DUP5 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2531 DUP2 PUSH2 0x1E70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2550 DUP2 PUSH2 0x2537 JUMP JUMPDEST DUP2 EQ PUSH2 0x255B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x256D DUP2 PUSH2 0x2547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x258A JUMPI PUSH2 0x2589 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2598 DUP6 DUP3 DUP7 ADD PUSH2 0x2522 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25A9 DUP6 DUP3 DUP7 ADD PUSH2 0x255E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C9 JUMPI PUSH2 0x25C8 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25D7 DUP5 DUP3 DUP6 ADD PUSH2 0x2522 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xAB 0xDB PUSH13 0x2A3356E10DBA14BAEF6D47099B GAS 0xCE MOD PUSH29 0xD90E6110E4B0259664FD3B64736F6C6343000818003300000000000000 ","sourceMap":"310:351:24:-:0;;;408:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;500:16;1381:113:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1190:31:0;1204:16;1190:13;;;:31;;:::i;:::-;1142:86;408:116:24;310:351;;3803:149:0;3888:12;3875:10;;:25;;;;;;;;;;;;;;;;;;3915:30;3932:12;3915:30;;;;;;:::i;:::-;;;;;;;;3803:149;:::o;88:117:25:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;310:351:24:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_2374":{"entryPoint":3004,"id":2374,"parameterSlots":3,"returnSlots":0},"@_approve_2440":{"entryPoint":5144,"id":2440,"parameterSlots":4,"returnSlots":0},"@_baseURI_1767":{"entryPoint":4854,"id":1767,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_2022":{"entryPoint":5597,"id":2022,"parameterSlots":3,"returnSlots":0},"@_checkCanCall_183":{"entryPoint":3573,"id":183,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_2570":{"entryPoint":4415,"id":2570,"parameterSlots":4,"returnSlots":0},"@_getApproved_1949":{"entryPoint":2935,"id":1949,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1985":{"entryPoint":6454,"id":1985,"parameterSlots":3,"returnSlots":1},"@_mint_2178":{"entryPoint":6647,"id":2178,"parameterSlots":2,"returnSlots":0},"@_msgData_2784":{"entryPoint":3560,"id":2784,"parameterSlots":0,"returnSlots":2},"@_msgSender_2775":{"entryPoint":2996,"id":2775,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1936":{"entryPoint":5083,"id":1936,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2506":{"entryPoint":2799,"id":2506,"parameterSlots":1,"returnSlots":1},"@_safeMint_2193":{"entryPoint":3895,"id":2193,"parameterSlots":2,"returnSlots":0},"@_safeMint_2219":{"entryPoint":6087,"id":2219,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_2477":{"entryPoint":4048,"id":2477,"parameterSlots":3,"returnSlots":0},"@_setAuthority_121":{"entryPoint":3925,"id":121,"parameterSlots":1,"returnSlots":0},"@_update_2128":{"entryPoint":3022,"id":2128,"parameterSlots":3,"returnSlots":1},"@approve_1783":{"entryPoint":1315,"id":1783,"parameterSlots":2,"returnSlots":0},"@authority_52":{"entryPoint":2398,"id":52,"parameterSlots":0,"returnSlots":1},"@balanceOf_1691":{"entryPoint":1733,"id":1691,"parameterSlots":1,"returnSlots":1},"@burn_2734":{"entryPoint":1692,"id":2734,"parameterSlots":1,"returnSlots":0},"@canCallWithDelay_265":{"entryPoint":5793,"id":265,"parameterSlots":4,"returnSlots":2},"@getApproved_1800":{"entryPoint":1287,"id":1800,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1833":{"entryPoint":2545,"id":1833,"parameterSlots":2,"returnSlots":1},"@isConsumingScheduledOp_106":{"entryPoint":2155,"id":106,"parameterSlots":0,"returnSlots":1},"@log10_3958":{"entryPoint":6115,"id":3958,"parameterSlots":1,"returnSlots":1},"@name_1713":{"entryPoint":1141,"id":1713,"parameterSlots":0,"returnSlots":1},"@ownerOf_1704":{"entryPoint":1715,"id":1704,"parameterSlots":1,"returnSlots":1},"@safeMint_6357":{"entryPoint":1595,"id":6357,"parameterSlots":1,"returnSlots":0},"@safeTransferFrom_1897":{"entryPoint":1660,"id":1897,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1923":{"entryPoint":2369,"id":1923,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1816":{"entryPoint":2347,"id":1816,"parameterSlots":2,"returnSlots":0},"@setAuthority_89":{"entryPoint":1919,"id":89,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1663":{"entryPoint":915,"id":1663,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3071":{"entryPoint":2693,"id":3071,"parameterSlots":1,"returnSlots":1},"@symbol_1722":{"entryPoint":2201,"id":1722,"parameterSlots":0,"returnSlots":1},"@toString_2861":{"entryPoint":4877,"id":2861,"parameterSlots":1,"returnSlots":1},"@tokenURI_1758":{"entryPoint":2440,"id":1758,"parameterSlots":1,"returnSlots":1},"@transferFrom_1879":{"entryPoint":1337,"id":1879,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8097,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7495,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":9506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6983,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":9214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":9566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7663,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8340,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7580,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8209,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7836,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7516,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":9651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_boolt_uint32_fromMemory":{"entryPoint":9587,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7004,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":9235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7430,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7061,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":7750,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8975,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":9081,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8685,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7708,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8734,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed":{"entryPoint":9368,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9138,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9020,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":9327,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":8500,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7076,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":7765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7723,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8006,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6896,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8033,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":8839,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9070,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7103,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8958,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9423,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7114,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8674,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":8780,"id":null,"parameterSlots":4,"returnSlots":2},"cleanup_t_address":{"entryPoint":7412,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7049,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6916,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7380,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7281,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":9527,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4":{"entryPoint":8863,"id":null,"parameterSlots":2,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8082,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7131,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8451,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7957,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":8602,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8555,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":9280,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8404,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7910,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7900,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":8775,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":8770,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7905,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6911,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6906,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7173,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":8850,"id":null,"parameterSlots":2,"returnSlots":1},"validator_revert_t_address":{"entryPoint":7472,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7792,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6960,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7291,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":9543,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:20524:25","nodeType":"YulBlock","src":"0:20524:25","statements":[{"body":{"nativeSrc":"47:35:25","nodeType":"YulBlock","src":"47:35:25","statements":[{"nativeSrc":"57:19:25","nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:25","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:25","nodeType":"YulIdentifier","src":"67:5:25"},"nativeSrc":"67:9:25","nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:25","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:25","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nativeSrc":"177:28:25","nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:25","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:25","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:25","nodeType":"YulIdentifier","src":"187:6:25"},"nativeSrc":"187:12:25","nodeType":"YulFunctionCall","src":"187:12:25"},"nativeSrc":"187:12:25","nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:25","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nativeSrc":"300:28:25","nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:25","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:25","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:25","nodeType":"YulIdentifier","src":"310:6:25"},"nativeSrc":"310:12:25","nodeType":"YulFunctionCall","src":"310:12:25"},"nativeSrc":"310:12:25","nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:25","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nativeSrc":"378:105:25","nodeType":"YulBlock","src":"378:105:25","statements":[{"nativeSrc":"388:89:25","nodeType":"YulAssignment","src":"388:89:25","value":{"arguments":[{"name":"value","nativeSrc":"403:5:25","nodeType":"YulIdentifier","src":"403:5:25"},{"kind":"number","nativeSrc":"410:66:25","nodeType":"YulLiteral","src":"410:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:25","nodeType":"YulIdentifier","src":"399:3:25"},"nativeSrc":"399:78:25","nodeType":"YulFunctionCall","src":"399:78:25"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:25","nodeType":"YulIdentifier","src":"388:7:25"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:25","nodeType":"YulTypedName","src":"360:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:25","nodeType":"YulTypedName","src":"370:7:25","type":""}],"src":"334:149:25"},{"body":{"nativeSrc":"531:78:25","nodeType":"YulBlock","src":"531:78:25","statements":[{"body":{"nativeSrc":"587:16:25","nodeType":"YulBlock","src":"587:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:25","nodeType":"YulLiteral","src":"596:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:25","nodeType":"YulLiteral","src":"599:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:25","nodeType":"YulIdentifier","src":"589:6:25"},"nativeSrc":"589:12:25","nodeType":"YulFunctionCall","src":"589:12:25"},"nativeSrc":"589:12:25","nodeType":"YulExpressionStatement","src":"589:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:25","nodeType":"YulIdentifier","src":"554:5:25"},{"arguments":[{"name":"value","nativeSrc":"578:5:25","nodeType":"YulIdentifier","src":"578:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:25","nodeType":"YulIdentifier","src":"561:16:25"},"nativeSrc":"561:23:25","nodeType":"YulFunctionCall","src":"561:23:25"}],"functionName":{"name":"eq","nativeSrc":"551:2:25","nodeType":"YulIdentifier","src":"551:2:25"},"nativeSrc":"551:34:25","nodeType":"YulFunctionCall","src":"551:34:25"}],"functionName":{"name":"iszero","nativeSrc":"544:6:25","nodeType":"YulIdentifier","src":"544:6:25"},"nativeSrc":"544:42:25","nodeType":"YulFunctionCall","src":"544:42:25"},"nativeSrc":"541:62:25","nodeType":"YulIf","src":"541:62:25"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:25","nodeType":"YulTypedName","src":"524:5:25","type":""}],"src":"489:120:25"},{"body":{"nativeSrc":"666:86:25","nodeType":"YulBlock","src":"666:86:25","statements":[{"nativeSrc":"676:29:25","nodeType":"YulAssignment","src":"676:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:25","nodeType":"YulIdentifier","src":"698:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:25","nodeType":"YulIdentifier","src":"685:12:25"},"nativeSrc":"685:20:25","nodeType":"YulFunctionCall","src":"685:20:25"},"variableNames":[{"name":"value","nativeSrc":"676:5:25","nodeType":"YulIdentifier","src":"676:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:25","nodeType":"YulIdentifier","src":"740:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:25","nodeType":"YulIdentifier","src":"714:25:25"},"nativeSrc":"714:32:25","nodeType":"YulFunctionCall","src":"714:32:25"},"nativeSrc":"714:32:25","nodeType":"YulExpressionStatement","src":"714:32:25"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:25","nodeType":"YulTypedName","src":"644:6:25","type":""},{"name":"end","nativeSrc":"652:3:25","nodeType":"YulTypedName","src":"652:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:25","nodeType":"YulTypedName","src":"660:5:25","type":""}],"src":"615:137:25"},{"body":{"nativeSrc":"823:262:25","nodeType":"YulBlock","src":"823:262:25","statements":[{"body":{"nativeSrc":"869:83:25","nodeType":"YulBlock","src":"869:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:25","nodeType":"YulIdentifier","src":"871:77:25"},"nativeSrc":"871:79:25","nodeType":"YulFunctionCall","src":"871:79:25"},"nativeSrc":"871:79:25","nodeType":"YulExpressionStatement","src":"871:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:25","nodeType":"YulIdentifier","src":"844:7:25"},{"name":"headStart","nativeSrc":"853:9:25","nodeType":"YulIdentifier","src":"853:9:25"}],"functionName":{"name":"sub","nativeSrc":"840:3:25","nodeType":"YulIdentifier","src":"840:3:25"},"nativeSrc":"840:23:25","nodeType":"YulFunctionCall","src":"840:23:25"},{"kind":"number","nativeSrc":"865:2:25","nodeType":"YulLiteral","src":"865:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:25","nodeType":"YulIdentifier","src":"836:3:25"},"nativeSrc":"836:32:25","nodeType":"YulFunctionCall","src":"836:32:25"},"nativeSrc":"833:119:25","nodeType":"YulIf","src":"833:119:25"},{"nativeSrc":"962:116:25","nodeType":"YulBlock","src":"962:116:25","statements":[{"nativeSrc":"977:15:25","nodeType":"YulVariableDeclaration","src":"977:15:25","value":{"kind":"number","nativeSrc":"991:1:25","nodeType":"YulLiteral","src":"991:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:25","nodeType":"YulTypedName","src":"981:6:25","type":""}]},{"nativeSrc":"1006:62:25","nodeType":"YulAssignment","src":"1006:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:25","nodeType":"YulIdentifier","src":"1040:9:25"},{"name":"offset","nativeSrc":"1051:6:25","nodeType":"YulIdentifier","src":"1051:6:25"}],"functionName":{"name":"add","nativeSrc":"1036:3:25","nodeType":"YulIdentifier","src":"1036:3:25"},"nativeSrc":"1036:22:25","nodeType":"YulFunctionCall","src":"1036:22:25"},{"name":"dataEnd","nativeSrc":"1060:7:25","nodeType":"YulIdentifier","src":"1060:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:25","nodeType":"YulIdentifier","src":"1016:19:25"},"nativeSrc":"1016:52:25","nodeType":"YulFunctionCall","src":"1016:52:25"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:25","nodeType":"YulIdentifier","src":"1006:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:25","nodeType":"YulTypedName","src":"793:9:25","type":""},{"name":"dataEnd","nativeSrc":"804:7:25","nodeType":"YulTypedName","src":"804:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:25","nodeType":"YulTypedName","src":"816:6:25","type":""}],"src":"758:327:25"},{"body":{"nativeSrc":"1133:48:25","nodeType":"YulBlock","src":"1133:48:25","statements":[{"nativeSrc":"1143:32:25","nodeType":"YulAssignment","src":"1143:32:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:25","nodeType":"YulIdentifier","src":"1168:5:25"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:25","nodeType":"YulIdentifier","src":"1161:6:25"},"nativeSrc":"1161:13:25","nodeType":"YulFunctionCall","src":"1161:13:25"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:25","nodeType":"YulIdentifier","src":"1154:6:25"},"nativeSrc":"1154:21:25","nodeType":"YulFunctionCall","src":"1154:21:25"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:25","nodeType":"YulIdentifier","src":"1143:7:25"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:25","nodeType":"YulTypedName","src":"1115:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:25","nodeType":"YulTypedName","src":"1125:7:25","type":""}],"src":"1091:90:25"},{"body":{"nativeSrc":"1246:50:25","nodeType":"YulBlock","src":"1246:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:25","nodeType":"YulIdentifier","src":"1263:3:25"},{"arguments":[{"name":"value","nativeSrc":"1283:5:25","nodeType":"YulIdentifier","src":"1283:5:25"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:25","nodeType":"YulIdentifier","src":"1268:14:25"},"nativeSrc":"1268:21:25","nodeType":"YulFunctionCall","src":"1268:21:25"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:25","nodeType":"YulIdentifier","src":"1256:6:25"},"nativeSrc":"1256:34:25","nodeType":"YulFunctionCall","src":"1256:34:25"},"nativeSrc":"1256:34:25","nodeType":"YulExpressionStatement","src":"1256:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:25","nodeType":"YulTypedName","src":"1234:5:25","type":""},{"name":"pos","nativeSrc":"1241:3:25","nodeType":"YulTypedName","src":"1241:3:25","type":""}],"src":"1187:109:25"},{"body":{"nativeSrc":"1394:118:25","nodeType":"YulBlock","src":"1394:118:25","statements":[{"nativeSrc":"1404:26:25","nodeType":"YulAssignment","src":"1404:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:25","nodeType":"YulIdentifier","src":"1416:9:25"},{"kind":"number","nativeSrc":"1427:2:25","nodeType":"YulLiteral","src":"1427:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:25","nodeType":"YulIdentifier","src":"1412:3:25"},"nativeSrc":"1412:18:25","nodeType":"YulFunctionCall","src":"1412:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:25","nodeType":"YulIdentifier","src":"1404:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:25","nodeType":"YulIdentifier","src":"1478:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:25","nodeType":"YulIdentifier","src":"1491:9:25"},{"kind":"number","nativeSrc":"1502:1:25","nodeType":"YulLiteral","src":"1502:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:25","nodeType":"YulIdentifier","src":"1487:3:25"},"nativeSrc":"1487:17:25","nodeType":"YulFunctionCall","src":"1487:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:25","nodeType":"YulIdentifier","src":"1440:37:25"},"nativeSrc":"1440:65:25","nodeType":"YulFunctionCall","src":"1440:65:25"},"nativeSrc":"1440:65:25","nodeType":"YulExpressionStatement","src":"1440:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:25","nodeType":"YulTypedName","src":"1366:9:25","type":""},{"name":"value0","nativeSrc":"1378:6:25","nodeType":"YulTypedName","src":"1378:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:25","nodeType":"YulTypedName","src":"1389:4:25","type":""}],"src":"1302:210:25"},{"body":{"nativeSrc":"1577:40:25","nodeType":"YulBlock","src":"1577:40:25","statements":[{"nativeSrc":"1588:22:25","nodeType":"YulAssignment","src":"1588:22:25","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:25","nodeType":"YulIdentifier","src":"1604:5:25"}],"functionName":{"name":"mload","nativeSrc":"1598:5:25","nodeType":"YulIdentifier","src":"1598:5:25"},"nativeSrc":"1598:12:25","nodeType":"YulFunctionCall","src":"1598:12:25"},"variableNames":[{"name":"length","nativeSrc":"1588:6:25","nodeType":"YulIdentifier","src":"1588:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:25","nodeType":"YulTypedName","src":"1560:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:25","nodeType":"YulTypedName","src":"1570:6:25","type":""}],"src":"1518:99:25"},{"body":{"nativeSrc":"1719:73:25","nodeType":"YulBlock","src":"1719:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:25","nodeType":"YulIdentifier","src":"1736:3:25"},{"name":"length","nativeSrc":"1741:6:25","nodeType":"YulIdentifier","src":"1741:6:25"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:25","nodeType":"YulIdentifier","src":"1729:6:25"},"nativeSrc":"1729:19:25","nodeType":"YulFunctionCall","src":"1729:19:25"},"nativeSrc":"1729:19:25","nodeType":"YulExpressionStatement","src":"1729:19:25"},{"nativeSrc":"1757:29:25","nodeType":"YulAssignment","src":"1757:29:25","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:25","nodeType":"YulIdentifier","src":"1776:3:25"},{"kind":"number","nativeSrc":"1781:4:25","nodeType":"YulLiteral","src":"1781:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:25","nodeType":"YulIdentifier","src":"1772:3:25"},"nativeSrc":"1772:14:25","nodeType":"YulFunctionCall","src":"1772:14:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:25","nodeType":"YulIdentifier","src":"1757:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:25","nodeType":"YulTypedName","src":"1691:3:25","type":""},{"name":"length","nativeSrc":"1696:6:25","nodeType":"YulTypedName","src":"1696:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:25","nodeType":"YulTypedName","src":"1707:11:25","type":""}],"src":"1623:169:25"},{"body":{"nativeSrc":"1860:184:25","nodeType":"YulBlock","src":"1860:184:25","statements":[{"nativeSrc":"1870:10:25","nodeType":"YulVariableDeclaration","src":"1870:10:25","value":{"kind":"number","nativeSrc":"1879:1:25","nodeType":"YulLiteral","src":"1879:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1874:1:25","nodeType":"YulTypedName","src":"1874:1:25","type":""}]},{"body":{"nativeSrc":"1939:63:25","nodeType":"YulBlock","src":"1939:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1964:3:25","nodeType":"YulIdentifier","src":"1964:3:25"},{"name":"i","nativeSrc":"1969:1:25","nodeType":"YulIdentifier","src":"1969:1:25"}],"functionName":{"name":"add","nativeSrc":"1960:3:25","nodeType":"YulIdentifier","src":"1960:3:25"},"nativeSrc":"1960:11:25","nodeType":"YulFunctionCall","src":"1960:11:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1983:3:25","nodeType":"YulIdentifier","src":"1983:3:25"},{"name":"i","nativeSrc":"1988:1:25","nodeType":"YulIdentifier","src":"1988:1:25"}],"functionName":{"name":"add","nativeSrc":"1979:3:25","nodeType":"YulIdentifier","src":"1979:3:25"},"nativeSrc":"1979:11:25","nodeType":"YulFunctionCall","src":"1979:11:25"}],"functionName":{"name":"mload","nativeSrc":"1973:5:25","nodeType":"YulIdentifier","src":"1973:5:25"},"nativeSrc":"1973:18:25","nodeType":"YulFunctionCall","src":"1973:18:25"}],"functionName":{"name":"mstore","nativeSrc":"1953:6:25","nodeType":"YulIdentifier","src":"1953:6:25"},"nativeSrc":"1953:39:25","nodeType":"YulFunctionCall","src":"1953:39:25"},"nativeSrc":"1953:39:25","nodeType":"YulExpressionStatement","src":"1953:39:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1900:1:25","nodeType":"YulIdentifier","src":"1900:1:25"},{"name":"length","nativeSrc":"1903:6:25","nodeType":"YulIdentifier","src":"1903:6:25"}],"functionName":{"name":"lt","nativeSrc":"1897:2:25","nodeType":"YulIdentifier","src":"1897:2:25"},"nativeSrc":"1897:13:25","nodeType":"YulFunctionCall","src":"1897:13:25"},"nativeSrc":"1889:113:25","nodeType":"YulForLoop","post":{"nativeSrc":"1911:19:25","nodeType":"YulBlock","src":"1911:19:25","statements":[{"nativeSrc":"1913:15:25","nodeType":"YulAssignment","src":"1913:15:25","value":{"arguments":[{"name":"i","nativeSrc":"1922:1:25","nodeType":"YulIdentifier","src":"1922:1:25"},{"kind":"number","nativeSrc":"1925:2:25","nodeType":"YulLiteral","src":"1925:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1918:3:25","nodeType":"YulIdentifier","src":"1918:3:25"},"nativeSrc":"1918:10:25","nodeType":"YulFunctionCall","src":"1918:10:25"},"variableNames":[{"name":"i","nativeSrc":"1913:1:25","nodeType":"YulIdentifier","src":"1913:1:25"}]}]},"pre":{"nativeSrc":"1893:3:25","nodeType":"YulBlock","src":"1893:3:25","statements":[]},"src":"1889:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2022:3:25","nodeType":"YulIdentifier","src":"2022:3:25"},{"name":"length","nativeSrc":"2027:6:25","nodeType":"YulIdentifier","src":"2027:6:25"}],"functionName":{"name":"add","nativeSrc":"2018:3:25","nodeType":"YulIdentifier","src":"2018:3:25"},"nativeSrc":"2018:16:25","nodeType":"YulFunctionCall","src":"2018:16:25"},{"kind":"number","nativeSrc":"2036:1:25","nodeType":"YulLiteral","src":"2036:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2011:6:25","nodeType":"YulIdentifier","src":"2011:6:25"},"nativeSrc":"2011:27:25","nodeType":"YulFunctionCall","src":"2011:27:25"},"nativeSrc":"2011:27:25","nodeType":"YulExpressionStatement","src":"2011:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:246:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:25","nodeType":"YulTypedName","src":"1842:3:25","type":""},{"name":"dst","nativeSrc":"1847:3:25","nodeType":"YulTypedName","src":"1847:3:25","type":""},{"name":"length","nativeSrc":"1852:6:25","nodeType":"YulTypedName","src":"1852:6:25","type":""}],"src":"1798:246:25"},{"body":{"nativeSrc":"2098:54:25","nodeType":"YulBlock","src":"2098:54:25","statements":[{"nativeSrc":"2108:38:25","nodeType":"YulAssignment","src":"2108:38:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2126:5:25","nodeType":"YulIdentifier","src":"2126:5:25"},{"kind":"number","nativeSrc":"2133:2:25","nodeType":"YulLiteral","src":"2133:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2122:3:25","nodeType":"YulIdentifier","src":"2122:3:25"},"nativeSrc":"2122:14:25","nodeType":"YulFunctionCall","src":"2122:14:25"},{"arguments":[{"kind":"number","nativeSrc":"2142:2:25","nodeType":"YulLiteral","src":"2142:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2138:3:25","nodeType":"YulIdentifier","src":"2138:3:25"},"nativeSrc":"2138:7:25","nodeType":"YulFunctionCall","src":"2138:7:25"}],"functionName":{"name":"and","nativeSrc":"2118:3:25","nodeType":"YulIdentifier","src":"2118:3:25"},"nativeSrc":"2118:28:25","nodeType":"YulFunctionCall","src":"2118:28:25"},"variableNames":[{"name":"result","nativeSrc":"2108:6:25","nodeType":"YulIdentifier","src":"2108:6:25"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2050:102:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2081:5:25","nodeType":"YulTypedName","src":"2081:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2091:6:25","nodeType":"YulTypedName","src":"2091:6:25","type":""}],"src":"2050:102:25"},{"body":{"nativeSrc":"2250:285:25","nodeType":"YulBlock","src":"2250:285:25","statements":[{"nativeSrc":"2260:53:25","nodeType":"YulVariableDeclaration","src":"2260:53:25","value":{"arguments":[{"name":"value","nativeSrc":"2307:5:25","nodeType":"YulIdentifier","src":"2307:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2274:32:25","nodeType":"YulIdentifier","src":"2274:32:25"},"nativeSrc":"2274:39:25","nodeType":"YulFunctionCall","src":"2274:39:25"},"variables":[{"name":"length","nativeSrc":"2264:6:25","nodeType":"YulTypedName","src":"2264:6:25","type":""}]},{"nativeSrc":"2322:78:25","nodeType":"YulAssignment","src":"2322:78:25","value":{"arguments":[{"name":"pos","nativeSrc":"2388:3:25","nodeType":"YulIdentifier","src":"2388:3:25"},{"name":"length","nativeSrc":"2393:6:25","nodeType":"YulIdentifier","src":"2393:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2329:58:25","nodeType":"YulIdentifier","src":"2329:58:25"},"nativeSrc":"2329:71:25","nodeType":"YulFunctionCall","src":"2329:71:25"},"variableNames":[{"name":"pos","nativeSrc":"2322:3:25","nodeType":"YulIdentifier","src":"2322:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2448:5:25","nodeType":"YulIdentifier","src":"2448:5:25"},{"kind":"number","nativeSrc":"2455:4:25","nodeType":"YulLiteral","src":"2455:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2444:3:25","nodeType":"YulIdentifier","src":"2444:3:25"},"nativeSrc":"2444:16:25","nodeType":"YulFunctionCall","src":"2444:16:25"},{"name":"pos","nativeSrc":"2462:3:25","nodeType":"YulIdentifier","src":"2462:3:25"},{"name":"length","nativeSrc":"2467:6:25","nodeType":"YulIdentifier","src":"2467:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2409:34:25","nodeType":"YulIdentifier","src":"2409:34:25"},"nativeSrc":"2409:65:25","nodeType":"YulFunctionCall","src":"2409:65:25"},"nativeSrc":"2409:65:25","nodeType":"YulExpressionStatement","src":"2409:65:25"},{"nativeSrc":"2483:46:25","nodeType":"YulAssignment","src":"2483:46:25","value":{"arguments":[{"name":"pos","nativeSrc":"2494:3:25","nodeType":"YulIdentifier","src":"2494:3:25"},{"arguments":[{"name":"length","nativeSrc":"2521:6:25","nodeType":"YulIdentifier","src":"2521:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2499:21:25","nodeType":"YulIdentifier","src":"2499:21:25"},"nativeSrc":"2499:29:25","nodeType":"YulFunctionCall","src":"2499:29:25"}],"functionName":{"name":"add","nativeSrc":"2490:3:25","nodeType":"YulIdentifier","src":"2490:3:25"},"nativeSrc":"2490:39:25","nodeType":"YulFunctionCall","src":"2490:39:25"},"variableNames":[{"name":"end","nativeSrc":"2483:3:25","nodeType":"YulIdentifier","src":"2483:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2158:377:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2231:5:25","nodeType":"YulTypedName","src":"2231:5:25","type":""},{"name":"pos","nativeSrc":"2238:3:25","nodeType":"YulTypedName","src":"2238:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2246:3:25","nodeType":"YulTypedName","src":"2246:3:25","type":""}],"src":"2158:377:25"},{"body":{"nativeSrc":"2659:195:25","nodeType":"YulBlock","src":"2659:195:25","statements":[{"nativeSrc":"2669:26:25","nodeType":"YulAssignment","src":"2669:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2681:9:25","nodeType":"YulIdentifier","src":"2681:9:25"},{"kind":"number","nativeSrc":"2692:2:25","nodeType":"YulLiteral","src":"2692:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2677:3:25","nodeType":"YulIdentifier","src":"2677:3:25"},"nativeSrc":"2677:18:25","nodeType":"YulFunctionCall","src":"2677:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2669:4:25","nodeType":"YulIdentifier","src":"2669:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2716:9:25","nodeType":"YulIdentifier","src":"2716:9:25"},{"kind":"number","nativeSrc":"2727:1:25","nodeType":"YulLiteral","src":"2727:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2712:3:25","nodeType":"YulIdentifier","src":"2712:3:25"},"nativeSrc":"2712:17:25","nodeType":"YulFunctionCall","src":"2712:17:25"},{"arguments":[{"name":"tail","nativeSrc":"2735:4:25","nodeType":"YulIdentifier","src":"2735:4:25"},{"name":"headStart","nativeSrc":"2741:9:25","nodeType":"YulIdentifier","src":"2741:9:25"}],"functionName":{"name":"sub","nativeSrc":"2731:3:25","nodeType":"YulIdentifier","src":"2731:3:25"},"nativeSrc":"2731:20:25","nodeType":"YulFunctionCall","src":"2731:20:25"}],"functionName":{"name":"mstore","nativeSrc":"2705:6:25","nodeType":"YulIdentifier","src":"2705:6:25"},"nativeSrc":"2705:47:25","nodeType":"YulFunctionCall","src":"2705:47:25"},"nativeSrc":"2705:47:25","nodeType":"YulExpressionStatement","src":"2705:47:25"},{"nativeSrc":"2761:86:25","nodeType":"YulAssignment","src":"2761:86:25","value":{"arguments":[{"name":"value0","nativeSrc":"2833:6:25","nodeType":"YulIdentifier","src":"2833:6:25"},{"name":"tail","nativeSrc":"2842:4:25","nodeType":"YulIdentifier","src":"2842:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2769:63:25","nodeType":"YulIdentifier","src":"2769:63:25"},"nativeSrc":"2769:78:25","nodeType":"YulFunctionCall","src":"2769:78:25"},"variableNames":[{"name":"tail","nativeSrc":"2761:4:25","nodeType":"YulIdentifier","src":"2761:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2541:313:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2631:9:25","nodeType":"YulTypedName","src":"2631:9:25","type":""},{"name":"value0","nativeSrc":"2643:6:25","nodeType":"YulTypedName","src":"2643:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2654:4:25","nodeType":"YulTypedName","src":"2654:4:25","type":""}],"src":"2541:313:25"},{"body":{"nativeSrc":"2905:32:25","nodeType":"YulBlock","src":"2905:32:25","statements":[{"nativeSrc":"2915:16:25","nodeType":"YulAssignment","src":"2915:16:25","value":{"name":"value","nativeSrc":"2926:5:25","nodeType":"YulIdentifier","src":"2926:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"2915:7:25","nodeType":"YulIdentifier","src":"2915:7:25"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2860:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2887:5:25","nodeType":"YulTypedName","src":"2887:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2897:7:25","nodeType":"YulTypedName","src":"2897:7:25","type":""}],"src":"2860:77:25"},{"body":{"nativeSrc":"2986:79:25","nodeType":"YulBlock","src":"2986:79:25","statements":[{"body":{"nativeSrc":"3043:16:25","nodeType":"YulBlock","src":"3043:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3052:1:25","nodeType":"YulLiteral","src":"3052:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3055:1:25","nodeType":"YulLiteral","src":"3055:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3045:6:25","nodeType":"YulIdentifier","src":"3045:6:25"},"nativeSrc":"3045:12:25","nodeType":"YulFunctionCall","src":"3045:12:25"},"nativeSrc":"3045:12:25","nodeType":"YulExpressionStatement","src":"3045:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3009:5:25","nodeType":"YulIdentifier","src":"3009:5:25"},{"arguments":[{"name":"value","nativeSrc":"3034:5:25","nodeType":"YulIdentifier","src":"3034:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3016:17:25","nodeType":"YulIdentifier","src":"3016:17:25"},"nativeSrc":"3016:24:25","nodeType":"YulFunctionCall","src":"3016:24:25"}],"functionName":{"name":"eq","nativeSrc":"3006:2:25","nodeType":"YulIdentifier","src":"3006:2:25"},"nativeSrc":"3006:35:25","nodeType":"YulFunctionCall","src":"3006:35:25"}],"functionName":{"name":"iszero","nativeSrc":"2999:6:25","nodeType":"YulIdentifier","src":"2999:6:25"},"nativeSrc":"2999:43:25","nodeType":"YulFunctionCall","src":"2999:43:25"},"nativeSrc":"2996:63:25","nodeType":"YulIf","src":"2996:63:25"}]},"name":"validator_revert_t_uint256","nativeSrc":"2943:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2979:5:25","nodeType":"YulTypedName","src":"2979:5:25","type":""}],"src":"2943:122:25"},{"body":{"nativeSrc":"3123:87:25","nodeType":"YulBlock","src":"3123:87:25","statements":[{"nativeSrc":"3133:29:25","nodeType":"YulAssignment","src":"3133:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"3155:6:25","nodeType":"YulIdentifier","src":"3155:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"3142:12:25","nodeType":"YulIdentifier","src":"3142:12:25"},"nativeSrc":"3142:20:25","nodeType":"YulFunctionCall","src":"3142:20:25"},"variableNames":[{"name":"value","nativeSrc":"3133:5:25","nodeType":"YulIdentifier","src":"3133:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3198:5:25","nodeType":"YulIdentifier","src":"3198:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3171:26:25","nodeType":"YulIdentifier","src":"3171:26:25"},"nativeSrc":"3171:33:25","nodeType":"YulFunctionCall","src":"3171:33:25"},"nativeSrc":"3171:33:25","nodeType":"YulExpressionStatement","src":"3171:33:25"}]},"name":"abi_decode_t_uint256","nativeSrc":"3071:139:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3101:6:25","nodeType":"YulTypedName","src":"3101:6:25","type":""},{"name":"end","nativeSrc":"3109:3:25","nodeType":"YulTypedName","src":"3109:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3117:5:25","nodeType":"YulTypedName","src":"3117:5:25","type":""}],"src":"3071:139:25"},{"body":{"nativeSrc":"3282:263:25","nodeType":"YulBlock","src":"3282:263:25","statements":[{"body":{"nativeSrc":"3328:83:25","nodeType":"YulBlock","src":"3328:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3330:77:25","nodeType":"YulIdentifier","src":"3330:77:25"},"nativeSrc":"3330:79:25","nodeType":"YulFunctionCall","src":"3330:79:25"},"nativeSrc":"3330:79:25","nodeType":"YulExpressionStatement","src":"3330:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3303:7:25","nodeType":"YulIdentifier","src":"3303:7:25"},{"name":"headStart","nativeSrc":"3312:9:25","nodeType":"YulIdentifier","src":"3312:9:25"}],"functionName":{"name":"sub","nativeSrc":"3299:3:25","nodeType":"YulIdentifier","src":"3299:3:25"},"nativeSrc":"3299:23:25","nodeType":"YulFunctionCall","src":"3299:23:25"},{"kind":"number","nativeSrc":"3324:2:25","nodeType":"YulLiteral","src":"3324:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3295:3:25","nodeType":"YulIdentifier","src":"3295:3:25"},"nativeSrc":"3295:32:25","nodeType":"YulFunctionCall","src":"3295:32:25"},"nativeSrc":"3292:119:25","nodeType":"YulIf","src":"3292:119:25"},{"nativeSrc":"3421:117:25","nodeType":"YulBlock","src":"3421:117:25","statements":[{"nativeSrc":"3436:15:25","nodeType":"YulVariableDeclaration","src":"3436:15:25","value":{"kind":"number","nativeSrc":"3450:1:25","nodeType":"YulLiteral","src":"3450:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3440:6:25","nodeType":"YulTypedName","src":"3440:6:25","type":""}]},{"nativeSrc":"3465:63:25","nodeType":"YulAssignment","src":"3465:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3500:9:25","nodeType":"YulIdentifier","src":"3500:9:25"},{"name":"offset","nativeSrc":"3511:6:25","nodeType":"YulIdentifier","src":"3511:6:25"}],"functionName":{"name":"add","nativeSrc":"3496:3:25","nodeType":"YulIdentifier","src":"3496:3:25"},"nativeSrc":"3496:22:25","nodeType":"YulFunctionCall","src":"3496:22:25"},{"name":"dataEnd","nativeSrc":"3520:7:25","nodeType":"YulIdentifier","src":"3520:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3475:20:25","nodeType":"YulIdentifier","src":"3475:20:25"},"nativeSrc":"3475:53:25","nodeType":"YulFunctionCall","src":"3475:53:25"},"variableNames":[{"name":"value0","nativeSrc":"3465:6:25","nodeType":"YulIdentifier","src":"3465:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3216:329:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3252:9:25","nodeType":"YulTypedName","src":"3252:9:25","type":""},{"name":"dataEnd","nativeSrc":"3263:7:25","nodeType":"YulTypedName","src":"3263:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3275:6:25","nodeType":"YulTypedName","src":"3275:6:25","type":""}],"src":"3216:329:25"},{"body":{"nativeSrc":"3596:81:25","nodeType":"YulBlock","src":"3596:81:25","statements":[{"nativeSrc":"3606:65:25","nodeType":"YulAssignment","src":"3606:65:25","value":{"arguments":[{"name":"value","nativeSrc":"3621:5:25","nodeType":"YulIdentifier","src":"3621:5:25"},{"kind":"number","nativeSrc":"3628:42:25","nodeType":"YulLiteral","src":"3628:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3617:3:25","nodeType":"YulIdentifier","src":"3617:3:25"},"nativeSrc":"3617:54:25","nodeType":"YulFunctionCall","src":"3617:54:25"},"variableNames":[{"name":"cleaned","nativeSrc":"3606:7:25","nodeType":"YulIdentifier","src":"3606:7:25"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3551:126:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3578:5:25","nodeType":"YulTypedName","src":"3578:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3588:7:25","nodeType":"YulTypedName","src":"3588:7:25","type":""}],"src":"3551:126:25"},{"body":{"nativeSrc":"3728:51:25","nodeType":"YulBlock","src":"3728:51:25","statements":[{"nativeSrc":"3738:35:25","nodeType":"YulAssignment","src":"3738:35:25","value":{"arguments":[{"name":"value","nativeSrc":"3767:5:25","nodeType":"YulIdentifier","src":"3767:5:25"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3749:17:25","nodeType":"YulIdentifier","src":"3749:17:25"},"nativeSrc":"3749:24:25","nodeType":"YulFunctionCall","src":"3749:24:25"},"variableNames":[{"name":"cleaned","nativeSrc":"3738:7:25","nodeType":"YulIdentifier","src":"3738:7:25"}]}]},"name":"cleanup_t_address","nativeSrc":"3683:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3710:5:25","nodeType":"YulTypedName","src":"3710:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3720:7:25","nodeType":"YulTypedName","src":"3720:7:25","type":""}],"src":"3683:96:25"},{"body":{"nativeSrc":"3850:53:25","nodeType":"YulBlock","src":"3850:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3867:3:25","nodeType":"YulIdentifier","src":"3867:3:25"},{"arguments":[{"name":"value","nativeSrc":"3890:5:25","nodeType":"YulIdentifier","src":"3890:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3872:17:25","nodeType":"YulIdentifier","src":"3872:17:25"},"nativeSrc":"3872:24:25","nodeType":"YulFunctionCall","src":"3872:24:25"}],"functionName":{"name":"mstore","nativeSrc":"3860:6:25","nodeType":"YulIdentifier","src":"3860:6:25"},"nativeSrc":"3860:37:25","nodeType":"YulFunctionCall","src":"3860:37:25"},"nativeSrc":"3860:37:25","nodeType":"YulExpressionStatement","src":"3860:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3785:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3838:5:25","nodeType":"YulTypedName","src":"3838:5:25","type":""},{"name":"pos","nativeSrc":"3845:3:25","nodeType":"YulTypedName","src":"3845:3:25","type":""}],"src":"3785:118:25"},{"body":{"nativeSrc":"4007:124:25","nodeType":"YulBlock","src":"4007:124:25","statements":[{"nativeSrc":"4017:26:25","nodeType":"YulAssignment","src":"4017:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4029:9:25","nodeType":"YulIdentifier","src":"4029:9:25"},{"kind":"number","nativeSrc":"4040:2:25","nodeType":"YulLiteral","src":"4040:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4025:3:25","nodeType":"YulIdentifier","src":"4025:3:25"},"nativeSrc":"4025:18:25","nodeType":"YulFunctionCall","src":"4025:18:25"},"variableNames":[{"name":"tail","nativeSrc":"4017:4:25","nodeType":"YulIdentifier","src":"4017:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4097:6:25","nodeType":"YulIdentifier","src":"4097:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"4110:9:25","nodeType":"YulIdentifier","src":"4110:9:25"},{"kind":"number","nativeSrc":"4121:1:25","nodeType":"YulLiteral","src":"4121:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4106:3:25","nodeType":"YulIdentifier","src":"4106:3:25"},"nativeSrc":"4106:17:25","nodeType":"YulFunctionCall","src":"4106:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4053:43:25","nodeType":"YulIdentifier","src":"4053:43:25"},"nativeSrc":"4053:71:25","nodeType":"YulFunctionCall","src":"4053:71:25"},"nativeSrc":"4053:71:25","nodeType":"YulExpressionStatement","src":"4053:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3909:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3979:9:25","nodeType":"YulTypedName","src":"3979:9:25","type":""},{"name":"value0","nativeSrc":"3991:6:25","nodeType":"YulTypedName","src":"3991:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4002:4:25","nodeType":"YulTypedName","src":"4002:4:25","type":""}],"src":"3909:222:25"},{"body":{"nativeSrc":"4180:79:25","nodeType":"YulBlock","src":"4180:79:25","statements":[{"body":{"nativeSrc":"4237:16:25","nodeType":"YulBlock","src":"4237:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4246:1:25","nodeType":"YulLiteral","src":"4246:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4249:1:25","nodeType":"YulLiteral","src":"4249:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4239:6:25","nodeType":"YulIdentifier","src":"4239:6:25"},"nativeSrc":"4239:12:25","nodeType":"YulFunctionCall","src":"4239:12:25"},"nativeSrc":"4239:12:25","nodeType":"YulExpressionStatement","src":"4239:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4203:5:25","nodeType":"YulIdentifier","src":"4203:5:25"},{"arguments":[{"name":"value","nativeSrc":"4228:5:25","nodeType":"YulIdentifier","src":"4228:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4210:17:25","nodeType":"YulIdentifier","src":"4210:17:25"},"nativeSrc":"4210:24:25","nodeType":"YulFunctionCall","src":"4210:24:25"}],"functionName":{"name":"eq","nativeSrc":"4200:2:25","nodeType":"YulIdentifier","src":"4200:2:25"},"nativeSrc":"4200:35:25","nodeType":"YulFunctionCall","src":"4200:35:25"}],"functionName":{"name":"iszero","nativeSrc":"4193:6:25","nodeType":"YulIdentifier","src":"4193:6:25"},"nativeSrc":"4193:43:25","nodeType":"YulFunctionCall","src":"4193:43:25"},"nativeSrc":"4190:63:25","nodeType":"YulIf","src":"4190:63:25"}]},"name":"validator_revert_t_address","nativeSrc":"4137:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4173:5:25","nodeType":"YulTypedName","src":"4173:5:25","type":""}],"src":"4137:122:25"},{"body":{"nativeSrc":"4317:87:25","nodeType":"YulBlock","src":"4317:87:25","statements":[{"nativeSrc":"4327:29:25","nodeType":"YulAssignment","src":"4327:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"4349:6:25","nodeType":"YulIdentifier","src":"4349:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"4336:12:25","nodeType":"YulIdentifier","src":"4336:12:25"},"nativeSrc":"4336:20:25","nodeType":"YulFunctionCall","src":"4336:20:25"},"variableNames":[{"name":"value","nativeSrc":"4327:5:25","nodeType":"YulIdentifier","src":"4327:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4392:5:25","nodeType":"YulIdentifier","src":"4392:5:25"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4365:26:25","nodeType":"YulIdentifier","src":"4365:26:25"},"nativeSrc":"4365:33:25","nodeType":"YulFunctionCall","src":"4365:33:25"},"nativeSrc":"4365:33:25","nodeType":"YulExpressionStatement","src":"4365:33:25"}]},"name":"abi_decode_t_address","nativeSrc":"4265:139:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4295:6:25","nodeType":"YulTypedName","src":"4295:6:25","type":""},{"name":"end","nativeSrc":"4303:3:25","nodeType":"YulTypedName","src":"4303:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4311:5:25","nodeType":"YulTypedName","src":"4311:5:25","type":""}],"src":"4265:139:25"},{"body":{"nativeSrc":"4493:391:25","nodeType":"YulBlock","src":"4493:391:25","statements":[{"body":{"nativeSrc":"4539:83:25","nodeType":"YulBlock","src":"4539:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4541:77:25","nodeType":"YulIdentifier","src":"4541:77:25"},"nativeSrc":"4541:79:25","nodeType":"YulFunctionCall","src":"4541:79:25"},"nativeSrc":"4541:79:25","nodeType":"YulExpressionStatement","src":"4541:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4514:7:25","nodeType":"YulIdentifier","src":"4514:7:25"},{"name":"headStart","nativeSrc":"4523:9:25","nodeType":"YulIdentifier","src":"4523:9:25"}],"functionName":{"name":"sub","nativeSrc":"4510:3:25","nodeType":"YulIdentifier","src":"4510:3:25"},"nativeSrc":"4510:23:25","nodeType":"YulFunctionCall","src":"4510:23:25"},{"kind":"number","nativeSrc":"4535:2:25","nodeType":"YulLiteral","src":"4535:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4506:3:25","nodeType":"YulIdentifier","src":"4506:3:25"},"nativeSrc":"4506:32:25","nodeType":"YulFunctionCall","src":"4506:32:25"},"nativeSrc":"4503:119:25","nodeType":"YulIf","src":"4503:119:25"},{"nativeSrc":"4632:117:25","nodeType":"YulBlock","src":"4632:117:25","statements":[{"nativeSrc":"4647:15:25","nodeType":"YulVariableDeclaration","src":"4647:15:25","value":{"kind":"number","nativeSrc":"4661:1:25","nodeType":"YulLiteral","src":"4661:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4651:6:25","nodeType":"YulTypedName","src":"4651:6:25","type":""}]},{"nativeSrc":"4676:63:25","nodeType":"YulAssignment","src":"4676:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4711:9:25","nodeType":"YulIdentifier","src":"4711:9:25"},{"name":"offset","nativeSrc":"4722:6:25","nodeType":"YulIdentifier","src":"4722:6:25"}],"functionName":{"name":"add","nativeSrc":"4707:3:25","nodeType":"YulIdentifier","src":"4707:3:25"},"nativeSrc":"4707:22:25","nodeType":"YulFunctionCall","src":"4707:22:25"},{"name":"dataEnd","nativeSrc":"4731:7:25","nodeType":"YulIdentifier","src":"4731:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4686:20:25","nodeType":"YulIdentifier","src":"4686:20:25"},"nativeSrc":"4686:53:25","nodeType":"YulFunctionCall","src":"4686:53:25"},"variableNames":[{"name":"value0","nativeSrc":"4676:6:25","nodeType":"YulIdentifier","src":"4676:6:25"}]}]},{"nativeSrc":"4759:118:25","nodeType":"YulBlock","src":"4759:118:25","statements":[{"nativeSrc":"4774:16:25","nodeType":"YulVariableDeclaration","src":"4774:16:25","value":{"kind":"number","nativeSrc":"4788:2:25","nodeType":"YulLiteral","src":"4788:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4778:6:25","nodeType":"YulTypedName","src":"4778:6:25","type":""}]},{"nativeSrc":"4804:63:25","nodeType":"YulAssignment","src":"4804:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4839:9:25","nodeType":"YulIdentifier","src":"4839:9:25"},{"name":"offset","nativeSrc":"4850:6:25","nodeType":"YulIdentifier","src":"4850:6:25"}],"functionName":{"name":"add","nativeSrc":"4835:3:25","nodeType":"YulIdentifier","src":"4835:3:25"},"nativeSrc":"4835:22:25","nodeType":"YulFunctionCall","src":"4835:22:25"},{"name":"dataEnd","nativeSrc":"4859:7:25","nodeType":"YulIdentifier","src":"4859:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4814:20:25","nodeType":"YulIdentifier","src":"4814:20:25"},"nativeSrc":"4814:53:25","nodeType":"YulFunctionCall","src":"4814:53:25"},"variableNames":[{"name":"value1","nativeSrc":"4804:6:25","nodeType":"YulIdentifier","src":"4804:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4410:474:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4455:9:25","nodeType":"YulTypedName","src":"4455:9:25","type":""},{"name":"dataEnd","nativeSrc":"4466:7:25","nodeType":"YulTypedName","src":"4466:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4478:6:25","nodeType":"YulTypedName","src":"4478:6:25","type":""},{"name":"value1","nativeSrc":"4486:6:25","nodeType":"YulTypedName","src":"4486:6:25","type":""}],"src":"4410:474:25"},{"body":{"nativeSrc":"4990:519:25","nodeType":"YulBlock","src":"4990:519:25","statements":[{"body":{"nativeSrc":"5036:83:25","nodeType":"YulBlock","src":"5036:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5038:77:25","nodeType":"YulIdentifier","src":"5038:77:25"},"nativeSrc":"5038:79:25","nodeType":"YulFunctionCall","src":"5038:79:25"},"nativeSrc":"5038:79:25","nodeType":"YulExpressionStatement","src":"5038:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5011:7:25","nodeType":"YulIdentifier","src":"5011:7:25"},{"name":"headStart","nativeSrc":"5020:9:25","nodeType":"YulIdentifier","src":"5020:9:25"}],"functionName":{"name":"sub","nativeSrc":"5007:3:25","nodeType":"YulIdentifier","src":"5007:3:25"},"nativeSrc":"5007:23:25","nodeType":"YulFunctionCall","src":"5007:23:25"},{"kind":"number","nativeSrc":"5032:2:25","nodeType":"YulLiteral","src":"5032:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5003:3:25","nodeType":"YulIdentifier","src":"5003:3:25"},"nativeSrc":"5003:32:25","nodeType":"YulFunctionCall","src":"5003:32:25"},"nativeSrc":"5000:119:25","nodeType":"YulIf","src":"5000:119:25"},{"nativeSrc":"5129:117:25","nodeType":"YulBlock","src":"5129:117:25","statements":[{"nativeSrc":"5144:15:25","nodeType":"YulVariableDeclaration","src":"5144:15:25","value":{"kind":"number","nativeSrc":"5158:1:25","nodeType":"YulLiteral","src":"5158:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5148:6:25","nodeType":"YulTypedName","src":"5148:6:25","type":""}]},{"nativeSrc":"5173:63:25","nodeType":"YulAssignment","src":"5173:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5208:9:25","nodeType":"YulIdentifier","src":"5208:9:25"},{"name":"offset","nativeSrc":"5219:6:25","nodeType":"YulIdentifier","src":"5219:6:25"}],"functionName":{"name":"add","nativeSrc":"5204:3:25","nodeType":"YulIdentifier","src":"5204:3:25"},"nativeSrc":"5204:22:25","nodeType":"YulFunctionCall","src":"5204:22:25"},{"name":"dataEnd","nativeSrc":"5228:7:25","nodeType":"YulIdentifier","src":"5228:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5183:20:25","nodeType":"YulIdentifier","src":"5183:20:25"},"nativeSrc":"5183:53:25","nodeType":"YulFunctionCall","src":"5183:53:25"},"variableNames":[{"name":"value0","nativeSrc":"5173:6:25","nodeType":"YulIdentifier","src":"5173:6:25"}]}]},{"nativeSrc":"5256:118:25","nodeType":"YulBlock","src":"5256:118:25","statements":[{"nativeSrc":"5271:16:25","nodeType":"YulVariableDeclaration","src":"5271:16:25","value":{"kind":"number","nativeSrc":"5285:2:25","nodeType":"YulLiteral","src":"5285:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5275:6:25","nodeType":"YulTypedName","src":"5275:6:25","type":""}]},{"nativeSrc":"5301:63:25","nodeType":"YulAssignment","src":"5301:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5336:9:25","nodeType":"YulIdentifier","src":"5336:9:25"},{"name":"offset","nativeSrc":"5347:6:25","nodeType":"YulIdentifier","src":"5347:6:25"}],"functionName":{"name":"add","nativeSrc":"5332:3:25","nodeType":"YulIdentifier","src":"5332:3:25"},"nativeSrc":"5332:22:25","nodeType":"YulFunctionCall","src":"5332:22:25"},{"name":"dataEnd","nativeSrc":"5356:7:25","nodeType":"YulIdentifier","src":"5356:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5311:20:25","nodeType":"YulIdentifier","src":"5311:20:25"},"nativeSrc":"5311:53:25","nodeType":"YulFunctionCall","src":"5311:53:25"},"variableNames":[{"name":"value1","nativeSrc":"5301:6:25","nodeType":"YulIdentifier","src":"5301:6:25"}]}]},{"nativeSrc":"5384:118:25","nodeType":"YulBlock","src":"5384:118:25","statements":[{"nativeSrc":"5399:16:25","nodeType":"YulVariableDeclaration","src":"5399:16:25","value":{"kind":"number","nativeSrc":"5413:2:25","nodeType":"YulLiteral","src":"5413:2:25","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5403:6:25","nodeType":"YulTypedName","src":"5403:6:25","type":""}]},{"nativeSrc":"5429:63:25","nodeType":"YulAssignment","src":"5429:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5464:9:25","nodeType":"YulIdentifier","src":"5464:9:25"},{"name":"offset","nativeSrc":"5475:6:25","nodeType":"YulIdentifier","src":"5475:6:25"}],"functionName":{"name":"add","nativeSrc":"5460:3:25","nodeType":"YulIdentifier","src":"5460:3:25"},"nativeSrc":"5460:22:25","nodeType":"YulFunctionCall","src":"5460:22:25"},{"name":"dataEnd","nativeSrc":"5484:7:25","nodeType":"YulIdentifier","src":"5484:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5439:20:25","nodeType":"YulIdentifier","src":"5439:20:25"},"nativeSrc":"5439:53:25","nodeType":"YulFunctionCall","src":"5439:53:25"},"variableNames":[{"name":"value2","nativeSrc":"5429:6:25","nodeType":"YulIdentifier","src":"5429:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4890:619:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4944:9:25","nodeType":"YulTypedName","src":"4944:9:25","type":""},{"name":"dataEnd","nativeSrc":"4955:7:25","nodeType":"YulTypedName","src":"4955:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4967:6:25","nodeType":"YulTypedName","src":"4967:6:25","type":""},{"name":"value1","nativeSrc":"4975:6:25","nodeType":"YulTypedName","src":"4975:6:25","type":""},{"name":"value2","nativeSrc":"4983:6:25","nodeType":"YulTypedName","src":"4983:6:25","type":""}],"src":"4890:619:25"},{"body":{"nativeSrc":"5581:263:25","nodeType":"YulBlock","src":"5581:263:25","statements":[{"body":{"nativeSrc":"5627:83:25","nodeType":"YulBlock","src":"5627:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5629:77:25","nodeType":"YulIdentifier","src":"5629:77:25"},"nativeSrc":"5629:79:25","nodeType":"YulFunctionCall","src":"5629:79:25"},"nativeSrc":"5629:79:25","nodeType":"YulExpressionStatement","src":"5629:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5602:7:25","nodeType":"YulIdentifier","src":"5602:7:25"},{"name":"headStart","nativeSrc":"5611:9:25","nodeType":"YulIdentifier","src":"5611:9:25"}],"functionName":{"name":"sub","nativeSrc":"5598:3:25","nodeType":"YulIdentifier","src":"5598:3:25"},"nativeSrc":"5598:23:25","nodeType":"YulFunctionCall","src":"5598:23:25"},{"kind":"number","nativeSrc":"5623:2:25","nodeType":"YulLiteral","src":"5623:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5594:3:25","nodeType":"YulIdentifier","src":"5594:3:25"},"nativeSrc":"5594:32:25","nodeType":"YulFunctionCall","src":"5594:32:25"},"nativeSrc":"5591:119:25","nodeType":"YulIf","src":"5591:119:25"},{"nativeSrc":"5720:117:25","nodeType":"YulBlock","src":"5720:117:25","statements":[{"nativeSrc":"5735:15:25","nodeType":"YulVariableDeclaration","src":"5735:15:25","value":{"kind":"number","nativeSrc":"5749:1:25","nodeType":"YulLiteral","src":"5749:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5739:6:25","nodeType":"YulTypedName","src":"5739:6:25","type":""}]},{"nativeSrc":"5764:63:25","nodeType":"YulAssignment","src":"5764:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5799:9:25","nodeType":"YulIdentifier","src":"5799:9:25"},{"name":"offset","nativeSrc":"5810:6:25","nodeType":"YulIdentifier","src":"5810:6:25"}],"functionName":{"name":"add","nativeSrc":"5795:3:25","nodeType":"YulIdentifier","src":"5795:3:25"},"nativeSrc":"5795:22:25","nodeType":"YulFunctionCall","src":"5795:22:25"},{"name":"dataEnd","nativeSrc":"5819:7:25","nodeType":"YulIdentifier","src":"5819:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5774:20:25","nodeType":"YulIdentifier","src":"5774:20:25"},"nativeSrc":"5774:53:25","nodeType":"YulFunctionCall","src":"5774:53:25"},"variableNames":[{"name":"value0","nativeSrc":"5764:6:25","nodeType":"YulIdentifier","src":"5764:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5515:329:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5551:9:25","nodeType":"YulTypedName","src":"5551:9:25","type":""},{"name":"dataEnd","nativeSrc":"5562:7:25","nodeType":"YulTypedName","src":"5562:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5574:6:25","nodeType":"YulTypedName","src":"5574:6:25","type":""}],"src":"5515:329:25"},{"body":{"nativeSrc":"5915:53:25","nodeType":"YulBlock","src":"5915:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5932:3:25","nodeType":"YulIdentifier","src":"5932:3:25"},{"arguments":[{"name":"value","nativeSrc":"5955:5:25","nodeType":"YulIdentifier","src":"5955:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5937:17:25","nodeType":"YulIdentifier","src":"5937:17:25"},"nativeSrc":"5937:24:25","nodeType":"YulFunctionCall","src":"5937:24:25"}],"functionName":{"name":"mstore","nativeSrc":"5925:6:25","nodeType":"YulIdentifier","src":"5925:6:25"},"nativeSrc":"5925:37:25","nodeType":"YulFunctionCall","src":"5925:37:25"},"nativeSrc":"5925:37:25","nodeType":"YulExpressionStatement","src":"5925:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5850:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5903:5:25","nodeType":"YulTypedName","src":"5903:5:25","type":""},{"name":"pos","nativeSrc":"5910:3:25","nodeType":"YulTypedName","src":"5910:3:25","type":""}],"src":"5850:118:25"},{"body":{"nativeSrc":"6072:124:25","nodeType":"YulBlock","src":"6072:124:25","statements":[{"nativeSrc":"6082:26:25","nodeType":"YulAssignment","src":"6082:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6094:9:25","nodeType":"YulIdentifier","src":"6094:9:25"},{"kind":"number","nativeSrc":"6105:2:25","nodeType":"YulLiteral","src":"6105:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6090:3:25","nodeType":"YulIdentifier","src":"6090:3:25"},"nativeSrc":"6090:18:25","nodeType":"YulFunctionCall","src":"6090:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6082:4:25","nodeType":"YulIdentifier","src":"6082:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6162:6:25","nodeType":"YulIdentifier","src":"6162:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6175:9:25","nodeType":"YulIdentifier","src":"6175:9:25"},{"kind":"number","nativeSrc":"6186:1:25","nodeType":"YulLiteral","src":"6186:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6171:3:25","nodeType":"YulIdentifier","src":"6171:3:25"},"nativeSrc":"6171:17:25","nodeType":"YulFunctionCall","src":"6171:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6118:43:25","nodeType":"YulIdentifier","src":"6118:43:25"},"nativeSrc":"6118:71:25","nodeType":"YulFunctionCall","src":"6118:71:25"},"nativeSrc":"6118:71:25","nodeType":"YulExpressionStatement","src":"6118:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5974:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6044:9:25","nodeType":"YulTypedName","src":"6044:9:25","type":""},{"name":"value0","nativeSrc":"6056:6:25","nodeType":"YulTypedName","src":"6056:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6067:4:25","nodeType":"YulTypedName","src":"6067:4:25","type":""}],"src":"5974:222:25"},{"body":{"nativeSrc":"6265:52:25","nodeType":"YulBlock","src":"6265:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6282:3:25","nodeType":"YulIdentifier","src":"6282:3:25"},{"arguments":[{"name":"value","nativeSrc":"6304:5:25","nodeType":"YulIdentifier","src":"6304:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"6287:16:25","nodeType":"YulIdentifier","src":"6287:16:25"},"nativeSrc":"6287:23:25","nodeType":"YulFunctionCall","src":"6287:23:25"}],"functionName":{"name":"mstore","nativeSrc":"6275:6:25","nodeType":"YulIdentifier","src":"6275:6:25"},"nativeSrc":"6275:36:25","nodeType":"YulFunctionCall","src":"6275:36:25"},"nativeSrc":"6275:36:25","nodeType":"YulExpressionStatement","src":"6275:36:25"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"6202:115:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6253:5:25","nodeType":"YulTypedName","src":"6253:5:25","type":""},{"name":"pos","nativeSrc":"6260:3:25","nodeType":"YulTypedName","src":"6260:3:25","type":""}],"src":"6202:115:25"},{"body":{"nativeSrc":"6419:122:25","nodeType":"YulBlock","src":"6419:122:25","statements":[{"nativeSrc":"6429:26:25","nodeType":"YulAssignment","src":"6429:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6441:9:25","nodeType":"YulIdentifier","src":"6441:9:25"},{"kind":"number","nativeSrc":"6452:2:25","nodeType":"YulLiteral","src":"6452:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6437:3:25","nodeType":"YulIdentifier","src":"6437:3:25"},"nativeSrc":"6437:18:25","nodeType":"YulFunctionCall","src":"6437:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6429:4:25","nodeType":"YulIdentifier","src":"6429:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6507:6:25","nodeType":"YulIdentifier","src":"6507:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6520:9:25","nodeType":"YulIdentifier","src":"6520:9:25"},{"kind":"number","nativeSrc":"6531:1:25","nodeType":"YulLiteral","src":"6531:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6516:3:25","nodeType":"YulIdentifier","src":"6516:3:25"},"nativeSrc":"6516:17:25","nodeType":"YulFunctionCall","src":"6516:17:25"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"6465:41:25","nodeType":"YulIdentifier","src":"6465:41:25"},"nativeSrc":"6465:69:25","nodeType":"YulFunctionCall","src":"6465:69:25"},"nativeSrc":"6465:69:25","nodeType":"YulExpressionStatement","src":"6465:69:25"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"6323:218:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6391:9:25","nodeType":"YulTypedName","src":"6391:9:25","type":""},{"name":"value0","nativeSrc":"6403:6:25","nodeType":"YulTypedName","src":"6403:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6414:4:25","nodeType":"YulTypedName","src":"6414:4:25","type":""}],"src":"6323:218:25"},{"body":{"nativeSrc":"6587:76:25","nodeType":"YulBlock","src":"6587:76:25","statements":[{"body":{"nativeSrc":"6641:16:25","nodeType":"YulBlock","src":"6641:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6650:1:25","nodeType":"YulLiteral","src":"6650:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6653:1:25","nodeType":"YulLiteral","src":"6653:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6643:6:25","nodeType":"YulIdentifier","src":"6643:6:25"},"nativeSrc":"6643:12:25","nodeType":"YulFunctionCall","src":"6643:12:25"},"nativeSrc":"6643:12:25","nodeType":"YulExpressionStatement","src":"6643:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6610:5:25","nodeType":"YulIdentifier","src":"6610:5:25"},{"arguments":[{"name":"value","nativeSrc":"6632:5:25","nodeType":"YulIdentifier","src":"6632:5:25"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6617:14:25","nodeType":"YulIdentifier","src":"6617:14:25"},"nativeSrc":"6617:21:25","nodeType":"YulFunctionCall","src":"6617:21:25"}],"functionName":{"name":"eq","nativeSrc":"6607:2:25","nodeType":"YulIdentifier","src":"6607:2:25"},"nativeSrc":"6607:32:25","nodeType":"YulFunctionCall","src":"6607:32:25"}],"functionName":{"name":"iszero","nativeSrc":"6600:6:25","nodeType":"YulIdentifier","src":"6600:6:25"},"nativeSrc":"6600:40:25","nodeType":"YulFunctionCall","src":"6600:40:25"},"nativeSrc":"6597:60:25","nodeType":"YulIf","src":"6597:60:25"}]},"name":"validator_revert_t_bool","nativeSrc":"6547:116:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6580:5:25","nodeType":"YulTypedName","src":"6580:5:25","type":""}],"src":"6547:116:25"},{"body":{"nativeSrc":"6718:84:25","nodeType":"YulBlock","src":"6718:84:25","statements":[{"nativeSrc":"6728:29:25","nodeType":"YulAssignment","src":"6728:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"6750:6:25","nodeType":"YulIdentifier","src":"6750:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"6737:12:25","nodeType":"YulIdentifier","src":"6737:12:25"},"nativeSrc":"6737:20:25","nodeType":"YulFunctionCall","src":"6737:20:25"},"variableNames":[{"name":"value","nativeSrc":"6728:5:25","nodeType":"YulIdentifier","src":"6728:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6790:5:25","nodeType":"YulIdentifier","src":"6790:5:25"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"6766:23:25","nodeType":"YulIdentifier","src":"6766:23:25"},"nativeSrc":"6766:30:25","nodeType":"YulFunctionCall","src":"6766:30:25"},"nativeSrc":"6766:30:25","nodeType":"YulExpressionStatement","src":"6766:30:25"}]},"name":"abi_decode_t_bool","nativeSrc":"6669:133:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6696:6:25","nodeType":"YulTypedName","src":"6696:6:25","type":""},{"name":"end","nativeSrc":"6704:3:25","nodeType":"YulTypedName","src":"6704:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6712:5:25","nodeType":"YulTypedName","src":"6712:5:25","type":""}],"src":"6669:133:25"},{"body":{"nativeSrc":"6888:388:25","nodeType":"YulBlock","src":"6888:388:25","statements":[{"body":{"nativeSrc":"6934:83:25","nodeType":"YulBlock","src":"6934:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6936:77:25","nodeType":"YulIdentifier","src":"6936:77:25"},"nativeSrc":"6936:79:25","nodeType":"YulFunctionCall","src":"6936:79:25"},"nativeSrc":"6936:79:25","nodeType":"YulExpressionStatement","src":"6936:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6909:7:25","nodeType":"YulIdentifier","src":"6909:7:25"},{"name":"headStart","nativeSrc":"6918:9:25","nodeType":"YulIdentifier","src":"6918:9:25"}],"functionName":{"name":"sub","nativeSrc":"6905:3:25","nodeType":"YulIdentifier","src":"6905:3:25"},"nativeSrc":"6905:23:25","nodeType":"YulFunctionCall","src":"6905:23:25"},{"kind":"number","nativeSrc":"6930:2:25","nodeType":"YulLiteral","src":"6930:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6901:3:25","nodeType":"YulIdentifier","src":"6901:3:25"},"nativeSrc":"6901:32:25","nodeType":"YulFunctionCall","src":"6901:32:25"},"nativeSrc":"6898:119:25","nodeType":"YulIf","src":"6898:119:25"},{"nativeSrc":"7027:117:25","nodeType":"YulBlock","src":"7027:117:25","statements":[{"nativeSrc":"7042:15:25","nodeType":"YulVariableDeclaration","src":"7042:15:25","value":{"kind":"number","nativeSrc":"7056:1:25","nodeType":"YulLiteral","src":"7056:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7046:6:25","nodeType":"YulTypedName","src":"7046:6:25","type":""}]},{"nativeSrc":"7071:63:25","nodeType":"YulAssignment","src":"7071:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7106:9:25","nodeType":"YulIdentifier","src":"7106:9:25"},{"name":"offset","nativeSrc":"7117:6:25","nodeType":"YulIdentifier","src":"7117:6:25"}],"functionName":{"name":"add","nativeSrc":"7102:3:25","nodeType":"YulIdentifier","src":"7102:3:25"},"nativeSrc":"7102:22:25","nodeType":"YulFunctionCall","src":"7102:22:25"},{"name":"dataEnd","nativeSrc":"7126:7:25","nodeType":"YulIdentifier","src":"7126:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7081:20:25","nodeType":"YulIdentifier","src":"7081:20:25"},"nativeSrc":"7081:53:25","nodeType":"YulFunctionCall","src":"7081:53:25"},"variableNames":[{"name":"value0","nativeSrc":"7071:6:25","nodeType":"YulIdentifier","src":"7071:6:25"}]}]},{"nativeSrc":"7154:115:25","nodeType":"YulBlock","src":"7154:115:25","statements":[{"nativeSrc":"7169:16:25","nodeType":"YulVariableDeclaration","src":"7169:16:25","value":{"kind":"number","nativeSrc":"7183:2:25","nodeType":"YulLiteral","src":"7183:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7173:6:25","nodeType":"YulTypedName","src":"7173:6:25","type":""}]},{"nativeSrc":"7199:60:25","nodeType":"YulAssignment","src":"7199:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7231:9:25","nodeType":"YulIdentifier","src":"7231:9:25"},{"name":"offset","nativeSrc":"7242:6:25","nodeType":"YulIdentifier","src":"7242:6:25"}],"functionName":{"name":"add","nativeSrc":"7227:3:25","nodeType":"YulIdentifier","src":"7227:3:25"},"nativeSrc":"7227:22:25","nodeType":"YulFunctionCall","src":"7227:22:25"},{"name":"dataEnd","nativeSrc":"7251:7:25","nodeType":"YulIdentifier","src":"7251:7:25"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"7209:17:25","nodeType":"YulIdentifier","src":"7209:17:25"},"nativeSrc":"7209:50:25","nodeType":"YulFunctionCall","src":"7209:50:25"},"variableNames":[{"name":"value1","nativeSrc":"7199:6:25","nodeType":"YulIdentifier","src":"7199:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"6808:468:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6850:9:25","nodeType":"YulTypedName","src":"6850:9:25","type":""},{"name":"dataEnd","nativeSrc":"6861:7:25","nodeType":"YulTypedName","src":"6861:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6873:6:25","nodeType":"YulTypedName","src":"6873:6:25","type":""},{"name":"value1","nativeSrc":"6881:6:25","nodeType":"YulTypedName","src":"6881:6:25","type":""}],"src":"6808:468:25"},{"body":{"nativeSrc":"7371:28:25","nodeType":"YulBlock","src":"7371:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7388:1:25","nodeType":"YulLiteral","src":"7388:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7391:1:25","nodeType":"YulLiteral","src":"7391:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7381:6:25","nodeType":"YulIdentifier","src":"7381:6:25"},"nativeSrc":"7381:12:25","nodeType":"YulFunctionCall","src":"7381:12:25"},"nativeSrc":"7381:12:25","nodeType":"YulExpressionStatement","src":"7381:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7282:117:25","nodeType":"YulFunctionDefinition","src":"7282:117:25"},{"body":{"nativeSrc":"7494:28:25","nodeType":"YulBlock","src":"7494:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7511:1:25","nodeType":"YulLiteral","src":"7511:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7514:1:25","nodeType":"YulLiteral","src":"7514:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7504:6:25","nodeType":"YulIdentifier","src":"7504:6:25"},"nativeSrc":"7504:12:25","nodeType":"YulFunctionCall","src":"7504:12:25"},"nativeSrc":"7504:12:25","nodeType":"YulExpressionStatement","src":"7504:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7405:117:25","nodeType":"YulFunctionDefinition","src":"7405:117:25"},{"body":{"nativeSrc":"7556:152:25","nodeType":"YulBlock","src":"7556:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7573:1:25","nodeType":"YulLiteral","src":"7573:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7576:77:25","nodeType":"YulLiteral","src":"7576:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7566:6:25","nodeType":"YulIdentifier","src":"7566:6:25"},"nativeSrc":"7566:88:25","nodeType":"YulFunctionCall","src":"7566:88:25"},"nativeSrc":"7566:88:25","nodeType":"YulExpressionStatement","src":"7566:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7670:1:25","nodeType":"YulLiteral","src":"7670:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"7673:4:25","nodeType":"YulLiteral","src":"7673:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"7663:6:25","nodeType":"YulIdentifier","src":"7663:6:25"},"nativeSrc":"7663:15:25","nodeType":"YulFunctionCall","src":"7663:15:25"},"nativeSrc":"7663:15:25","nodeType":"YulExpressionStatement","src":"7663:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7694:1:25","nodeType":"YulLiteral","src":"7694:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7697:4:25","nodeType":"YulLiteral","src":"7697:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7687:6:25","nodeType":"YulIdentifier","src":"7687:6:25"},"nativeSrc":"7687:15:25","nodeType":"YulFunctionCall","src":"7687:15:25"},"nativeSrc":"7687:15:25","nodeType":"YulExpressionStatement","src":"7687:15:25"}]},"name":"panic_error_0x41","nativeSrc":"7528:180:25","nodeType":"YulFunctionDefinition","src":"7528:180:25"},{"body":{"nativeSrc":"7757:238:25","nodeType":"YulBlock","src":"7757:238:25","statements":[{"nativeSrc":"7767:58:25","nodeType":"YulVariableDeclaration","src":"7767:58:25","value":{"arguments":[{"name":"memPtr","nativeSrc":"7789:6:25","nodeType":"YulIdentifier","src":"7789:6:25"},{"arguments":[{"name":"size","nativeSrc":"7819:4:25","nodeType":"YulIdentifier","src":"7819:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7797:21:25","nodeType":"YulIdentifier","src":"7797:21:25"},"nativeSrc":"7797:27:25","nodeType":"YulFunctionCall","src":"7797:27:25"}],"functionName":{"name":"add","nativeSrc":"7785:3:25","nodeType":"YulIdentifier","src":"7785:3:25"},"nativeSrc":"7785:40:25","nodeType":"YulFunctionCall","src":"7785:40:25"},"variables":[{"name":"newFreePtr","nativeSrc":"7771:10:25","nodeType":"YulTypedName","src":"7771:10:25","type":""}]},{"body":{"nativeSrc":"7936:22:25","nodeType":"YulBlock","src":"7936:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7938:16:25","nodeType":"YulIdentifier","src":"7938:16:25"},"nativeSrc":"7938:18:25","nodeType":"YulFunctionCall","src":"7938:18:25"},"nativeSrc":"7938:18:25","nodeType":"YulExpressionStatement","src":"7938:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7879:10:25","nodeType":"YulIdentifier","src":"7879:10:25"},{"kind":"number","nativeSrc":"7891:18:25","nodeType":"YulLiteral","src":"7891:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7876:2:25","nodeType":"YulIdentifier","src":"7876:2:25"},"nativeSrc":"7876:34:25","nodeType":"YulFunctionCall","src":"7876:34:25"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7915:10:25","nodeType":"YulIdentifier","src":"7915:10:25"},{"name":"memPtr","nativeSrc":"7927:6:25","nodeType":"YulIdentifier","src":"7927:6:25"}],"functionName":{"name":"lt","nativeSrc":"7912:2:25","nodeType":"YulIdentifier","src":"7912:2:25"},"nativeSrc":"7912:22:25","nodeType":"YulFunctionCall","src":"7912:22:25"}],"functionName":{"name":"or","nativeSrc":"7873:2:25","nodeType":"YulIdentifier","src":"7873:2:25"},"nativeSrc":"7873:62:25","nodeType":"YulFunctionCall","src":"7873:62:25"},"nativeSrc":"7870:88:25","nodeType":"YulIf","src":"7870:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7974:2:25","nodeType":"YulLiteral","src":"7974:2:25","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7978:10:25","nodeType":"YulIdentifier","src":"7978:10:25"}],"functionName":{"name":"mstore","nativeSrc":"7967:6:25","nodeType":"YulIdentifier","src":"7967:6:25"},"nativeSrc":"7967:22:25","nodeType":"YulFunctionCall","src":"7967:22:25"},"nativeSrc":"7967:22:25","nodeType":"YulExpressionStatement","src":"7967:22:25"}]},"name":"finalize_allocation","nativeSrc":"7714:281:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7743:6:25","nodeType":"YulTypedName","src":"7743:6:25","type":""},{"name":"size","nativeSrc":"7751:4:25","nodeType":"YulTypedName","src":"7751:4:25","type":""}],"src":"7714:281:25"},{"body":{"nativeSrc":"8042:88:25","nodeType":"YulBlock","src":"8042:88:25","statements":[{"nativeSrc":"8052:30:25","nodeType":"YulAssignment","src":"8052:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"8062:18:25","nodeType":"YulIdentifier","src":"8062:18:25"},"nativeSrc":"8062:20:25","nodeType":"YulFunctionCall","src":"8062:20:25"},"variableNames":[{"name":"memPtr","nativeSrc":"8052:6:25","nodeType":"YulIdentifier","src":"8052:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"8111:6:25","nodeType":"YulIdentifier","src":"8111:6:25"},{"name":"size","nativeSrc":"8119:4:25","nodeType":"YulIdentifier","src":"8119:4:25"}],"functionName":{"name":"finalize_allocation","nativeSrc":"8091:19:25","nodeType":"YulIdentifier","src":"8091:19:25"},"nativeSrc":"8091:33:25","nodeType":"YulFunctionCall","src":"8091:33:25"},"nativeSrc":"8091:33:25","nodeType":"YulExpressionStatement","src":"8091:33:25"}]},"name":"allocate_memory","nativeSrc":"8001:129:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"8026:4:25","nodeType":"YulTypedName","src":"8026:4:25","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"8035:6:25","nodeType":"YulTypedName","src":"8035:6:25","type":""}],"src":"8001:129:25"},{"body":{"nativeSrc":"8202:241:25","nodeType":"YulBlock","src":"8202:241:25","statements":[{"body":{"nativeSrc":"8307:22:25","nodeType":"YulBlock","src":"8307:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8309:16:25","nodeType":"YulIdentifier","src":"8309:16:25"},"nativeSrc":"8309:18:25","nodeType":"YulFunctionCall","src":"8309:18:25"},"nativeSrc":"8309:18:25","nodeType":"YulExpressionStatement","src":"8309:18:25"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"8279:6:25","nodeType":"YulIdentifier","src":"8279:6:25"},{"kind":"number","nativeSrc":"8287:18:25","nodeType":"YulLiteral","src":"8287:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8276:2:25","nodeType":"YulIdentifier","src":"8276:2:25"},"nativeSrc":"8276:30:25","nodeType":"YulFunctionCall","src":"8276:30:25"},"nativeSrc":"8273:56:25","nodeType":"YulIf","src":"8273:56:25"},{"nativeSrc":"8339:37:25","nodeType":"YulAssignment","src":"8339:37:25","value":{"arguments":[{"name":"length","nativeSrc":"8369:6:25","nodeType":"YulIdentifier","src":"8369:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8347:21:25","nodeType":"YulIdentifier","src":"8347:21:25"},"nativeSrc":"8347:29:25","nodeType":"YulFunctionCall","src":"8347:29:25"},"variableNames":[{"name":"size","nativeSrc":"8339:4:25","nodeType":"YulIdentifier","src":"8339:4:25"}]},{"nativeSrc":"8413:23:25","nodeType":"YulAssignment","src":"8413:23:25","value":{"arguments":[{"name":"size","nativeSrc":"8425:4:25","nodeType":"YulIdentifier","src":"8425:4:25"},{"kind":"number","nativeSrc":"8431:4:25","nodeType":"YulLiteral","src":"8431:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8421:3:25","nodeType":"YulIdentifier","src":"8421:3:25"},"nativeSrc":"8421:15:25","nodeType":"YulFunctionCall","src":"8421:15:25"},"variableNames":[{"name":"size","nativeSrc":"8413:4:25","nodeType":"YulIdentifier","src":"8413:4:25"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"8136:307:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"8186:6:25","nodeType":"YulTypedName","src":"8186:6:25","type":""}],"returnVariables":[{"name":"size","nativeSrc":"8197:4:25","nodeType":"YulTypedName","src":"8197:4:25","type":""}],"src":"8136:307:25"},{"body":{"nativeSrc":"8513:82:25","nodeType":"YulBlock","src":"8513:82:25","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"8536:3:25","nodeType":"YulIdentifier","src":"8536:3:25"},{"name":"src","nativeSrc":"8541:3:25","nodeType":"YulIdentifier","src":"8541:3:25"},{"name":"length","nativeSrc":"8546:6:25","nodeType":"YulIdentifier","src":"8546:6:25"}],"functionName":{"name":"calldatacopy","nativeSrc":"8523:12:25","nodeType":"YulIdentifier","src":"8523:12:25"},"nativeSrc":"8523:30:25","nodeType":"YulFunctionCall","src":"8523:30:25"},"nativeSrc":"8523:30:25","nodeType":"YulExpressionStatement","src":"8523:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"8573:3:25","nodeType":"YulIdentifier","src":"8573:3:25"},{"name":"length","nativeSrc":"8578:6:25","nodeType":"YulIdentifier","src":"8578:6:25"}],"functionName":{"name":"add","nativeSrc":"8569:3:25","nodeType":"YulIdentifier","src":"8569:3:25"},"nativeSrc":"8569:16:25","nodeType":"YulFunctionCall","src":"8569:16:25"},{"kind":"number","nativeSrc":"8587:1:25","nodeType":"YulLiteral","src":"8587:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"8562:6:25","nodeType":"YulIdentifier","src":"8562:6:25"},"nativeSrc":"8562:27:25","nodeType":"YulFunctionCall","src":"8562:27:25"},"nativeSrc":"8562:27:25","nodeType":"YulExpressionStatement","src":"8562:27:25"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8449:146:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8495:3:25","nodeType":"YulTypedName","src":"8495:3:25","type":""},{"name":"dst","nativeSrc":"8500:3:25","nodeType":"YulTypedName","src":"8500:3:25","type":""},{"name":"length","nativeSrc":"8505:6:25","nodeType":"YulTypedName","src":"8505:6:25","type":""}],"src":"8449:146:25"},{"body":{"nativeSrc":"8684:340:25","nodeType":"YulBlock","src":"8684:340:25","statements":[{"nativeSrc":"8694:74:25","nodeType":"YulAssignment","src":"8694:74:25","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"8760:6:25","nodeType":"YulIdentifier","src":"8760:6:25"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"8719:40:25","nodeType":"YulIdentifier","src":"8719:40:25"},"nativeSrc":"8719:48:25","nodeType":"YulFunctionCall","src":"8719:48:25"}],"functionName":{"name":"allocate_memory","nativeSrc":"8703:15:25","nodeType":"YulIdentifier","src":"8703:15:25"},"nativeSrc":"8703:65:25","nodeType":"YulFunctionCall","src":"8703:65:25"},"variableNames":[{"name":"array","nativeSrc":"8694:5:25","nodeType":"YulIdentifier","src":"8694:5:25"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"8784:5:25","nodeType":"YulIdentifier","src":"8784:5:25"},{"name":"length","nativeSrc":"8791:6:25","nodeType":"YulIdentifier","src":"8791:6:25"}],"functionName":{"name":"mstore","nativeSrc":"8777:6:25","nodeType":"YulIdentifier","src":"8777:6:25"},"nativeSrc":"8777:21:25","nodeType":"YulFunctionCall","src":"8777:21:25"},"nativeSrc":"8777:21:25","nodeType":"YulExpressionStatement","src":"8777:21:25"},{"nativeSrc":"8807:27:25","nodeType":"YulVariableDeclaration","src":"8807:27:25","value":{"arguments":[{"name":"array","nativeSrc":"8822:5:25","nodeType":"YulIdentifier","src":"8822:5:25"},{"kind":"number","nativeSrc":"8829:4:25","nodeType":"YulLiteral","src":"8829:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8818:3:25","nodeType":"YulIdentifier","src":"8818:3:25"},"nativeSrc":"8818:16:25","nodeType":"YulFunctionCall","src":"8818:16:25"},"variables":[{"name":"dst","nativeSrc":"8811:3:25","nodeType":"YulTypedName","src":"8811:3:25","type":""}]},{"body":{"nativeSrc":"8872:83:25","nodeType":"YulBlock","src":"8872:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8874:77:25","nodeType":"YulIdentifier","src":"8874:77:25"},"nativeSrc":"8874:79:25","nodeType":"YulFunctionCall","src":"8874:79:25"},"nativeSrc":"8874:79:25","nodeType":"YulExpressionStatement","src":"8874:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8853:3:25","nodeType":"YulIdentifier","src":"8853:3:25"},{"name":"length","nativeSrc":"8858:6:25","nodeType":"YulIdentifier","src":"8858:6:25"}],"functionName":{"name":"add","nativeSrc":"8849:3:25","nodeType":"YulIdentifier","src":"8849:3:25"},"nativeSrc":"8849:16:25","nodeType":"YulFunctionCall","src":"8849:16:25"},{"name":"end","nativeSrc":"8867:3:25","nodeType":"YulIdentifier","src":"8867:3:25"}],"functionName":{"name":"gt","nativeSrc":"8846:2:25","nodeType":"YulIdentifier","src":"8846:2:25"},"nativeSrc":"8846:25:25","nodeType":"YulFunctionCall","src":"8846:25:25"},"nativeSrc":"8843:112:25","nodeType":"YulIf","src":"8843:112:25"},{"expression":{"arguments":[{"name":"src","nativeSrc":"9001:3:25","nodeType":"YulIdentifier","src":"9001:3:25"},{"name":"dst","nativeSrc":"9006:3:25","nodeType":"YulIdentifier","src":"9006:3:25"},{"name":"length","nativeSrc":"9011:6:25","nodeType":"YulIdentifier","src":"9011:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8964:36:25","nodeType":"YulIdentifier","src":"8964:36:25"},"nativeSrc":"8964:54:25","nodeType":"YulFunctionCall","src":"8964:54:25"},"nativeSrc":"8964:54:25","nodeType":"YulExpressionStatement","src":"8964:54:25"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8601:423:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8657:3:25","nodeType":"YulTypedName","src":"8657:3:25","type":""},{"name":"length","nativeSrc":"8662:6:25","nodeType":"YulTypedName","src":"8662:6:25","type":""},{"name":"end","nativeSrc":"8670:3:25","nodeType":"YulTypedName","src":"8670:3:25","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8678:5:25","nodeType":"YulTypedName","src":"8678:5:25","type":""}],"src":"8601:423:25"},{"body":{"nativeSrc":"9104:277:25","nodeType":"YulBlock","src":"9104:277:25","statements":[{"body":{"nativeSrc":"9153:83:25","nodeType":"YulBlock","src":"9153:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"9155:77:25","nodeType":"YulIdentifier","src":"9155:77:25"},"nativeSrc":"9155:79:25","nodeType":"YulFunctionCall","src":"9155:79:25"},"nativeSrc":"9155:79:25","nodeType":"YulExpressionStatement","src":"9155:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9132:6:25","nodeType":"YulIdentifier","src":"9132:6:25"},{"kind":"number","nativeSrc":"9140:4:25","nodeType":"YulLiteral","src":"9140:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"9128:3:25","nodeType":"YulIdentifier","src":"9128:3:25"},"nativeSrc":"9128:17:25","nodeType":"YulFunctionCall","src":"9128:17:25"},{"name":"end","nativeSrc":"9147:3:25","nodeType":"YulIdentifier","src":"9147:3:25"}],"functionName":{"name":"slt","nativeSrc":"9124:3:25","nodeType":"YulIdentifier","src":"9124:3:25"},"nativeSrc":"9124:27:25","nodeType":"YulFunctionCall","src":"9124:27:25"}],"functionName":{"name":"iszero","nativeSrc":"9117:6:25","nodeType":"YulIdentifier","src":"9117:6:25"},"nativeSrc":"9117:35:25","nodeType":"YulFunctionCall","src":"9117:35:25"},"nativeSrc":"9114:122:25","nodeType":"YulIf","src":"9114:122:25"},{"nativeSrc":"9245:34:25","nodeType":"YulVariableDeclaration","src":"9245:34:25","value":{"arguments":[{"name":"offset","nativeSrc":"9272:6:25","nodeType":"YulIdentifier","src":"9272:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"9259:12:25","nodeType":"YulIdentifier","src":"9259:12:25"},"nativeSrc":"9259:20:25","nodeType":"YulFunctionCall","src":"9259:20:25"},"variables":[{"name":"length","nativeSrc":"9249:6:25","nodeType":"YulTypedName","src":"9249:6:25","type":""}]},{"nativeSrc":"9288:87:25","nodeType":"YulAssignment","src":"9288:87:25","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9348:6:25","nodeType":"YulIdentifier","src":"9348:6:25"},{"kind":"number","nativeSrc":"9356:4:25","nodeType":"YulLiteral","src":"9356:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9344:3:25","nodeType":"YulIdentifier","src":"9344:3:25"},"nativeSrc":"9344:17:25","nodeType":"YulFunctionCall","src":"9344:17:25"},{"name":"length","nativeSrc":"9363:6:25","nodeType":"YulIdentifier","src":"9363:6:25"},{"name":"end","nativeSrc":"9371:3:25","nodeType":"YulIdentifier","src":"9371:3:25"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"9297:46:25","nodeType":"YulIdentifier","src":"9297:46:25"},"nativeSrc":"9297:78:25","nodeType":"YulFunctionCall","src":"9297:78:25"},"variableNames":[{"name":"array","nativeSrc":"9288:5:25","nodeType":"YulIdentifier","src":"9288:5:25"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9043:338:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9082:6:25","nodeType":"YulTypedName","src":"9082:6:25","type":""},{"name":"end","nativeSrc":"9090:3:25","nodeType":"YulTypedName","src":"9090:3:25","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9098:5:25","nodeType":"YulTypedName","src":"9098:5:25","type":""}],"src":"9043:338:25"},{"body":{"nativeSrc":"9513:817:25","nodeType":"YulBlock","src":"9513:817:25","statements":[{"body":{"nativeSrc":"9560:83:25","nodeType":"YulBlock","src":"9560:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9562:77:25","nodeType":"YulIdentifier","src":"9562:77:25"},"nativeSrc":"9562:79:25","nodeType":"YulFunctionCall","src":"9562:79:25"},"nativeSrc":"9562:79:25","nodeType":"YulExpressionStatement","src":"9562:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9534:7:25","nodeType":"YulIdentifier","src":"9534:7:25"},{"name":"headStart","nativeSrc":"9543:9:25","nodeType":"YulIdentifier","src":"9543:9:25"}],"functionName":{"name":"sub","nativeSrc":"9530:3:25","nodeType":"YulIdentifier","src":"9530:3:25"},"nativeSrc":"9530:23:25","nodeType":"YulFunctionCall","src":"9530:23:25"},{"kind":"number","nativeSrc":"9555:3:25","nodeType":"YulLiteral","src":"9555:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"9526:3:25","nodeType":"YulIdentifier","src":"9526:3:25"},"nativeSrc":"9526:33:25","nodeType":"YulFunctionCall","src":"9526:33:25"},"nativeSrc":"9523:120:25","nodeType":"YulIf","src":"9523:120:25"},{"nativeSrc":"9653:117:25","nodeType":"YulBlock","src":"9653:117:25","statements":[{"nativeSrc":"9668:15:25","nodeType":"YulVariableDeclaration","src":"9668:15:25","value":{"kind":"number","nativeSrc":"9682:1:25","nodeType":"YulLiteral","src":"9682:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9672:6:25","nodeType":"YulTypedName","src":"9672:6:25","type":""}]},{"nativeSrc":"9697:63:25","nodeType":"YulAssignment","src":"9697:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9732:9:25","nodeType":"YulIdentifier","src":"9732:9:25"},{"name":"offset","nativeSrc":"9743:6:25","nodeType":"YulIdentifier","src":"9743:6:25"}],"functionName":{"name":"add","nativeSrc":"9728:3:25","nodeType":"YulIdentifier","src":"9728:3:25"},"nativeSrc":"9728:22:25","nodeType":"YulFunctionCall","src":"9728:22:25"},{"name":"dataEnd","nativeSrc":"9752:7:25","nodeType":"YulIdentifier","src":"9752:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9707:20:25","nodeType":"YulIdentifier","src":"9707:20:25"},"nativeSrc":"9707:53:25","nodeType":"YulFunctionCall","src":"9707:53:25"},"variableNames":[{"name":"value0","nativeSrc":"9697:6:25","nodeType":"YulIdentifier","src":"9697:6:25"}]}]},{"nativeSrc":"9780:118:25","nodeType":"YulBlock","src":"9780:118:25","statements":[{"nativeSrc":"9795:16:25","nodeType":"YulVariableDeclaration","src":"9795:16:25","value":{"kind":"number","nativeSrc":"9809:2:25","nodeType":"YulLiteral","src":"9809:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9799:6:25","nodeType":"YulTypedName","src":"9799:6:25","type":""}]},{"nativeSrc":"9825:63:25","nodeType":"YulAssignment","src":"9825:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9860:9:25","nodeType":"YulIdentifier","src":"9860:9:25"},{"name":"offset","nativeSrc":"9871:6:25","nodeType":"YulIdentifier","src":"9871:6:25"}],"functionName":{"name":"add","nativeSrc":"9856:3:25","nodeType":"YulIdentifier","src":"9856:3:25"},"nativeSrc":"9856:22:25","nodeType":"YulFunctionCall","src":"9856:22:25"},{"name":"dataEnd","nativeSrc":"9880:7:25","nodeType":"YulIdentifier","src":"9880:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9835:20:25","nodeType":"YulIdentifier","src":"9835:20:25"},"nativeSrc":"9835:53:25","nodeType":"YulFunctionCall","src":"9835:53:25"},"variableNames":[{"name":"value1","nativeSrc":"9825:6:25","nodeType":"YulIdentifier","src":"9825:6:25"}]}]},{"nativeSrc":"9908:118:25","nodeType":"YulBlock","src":"9908:118:25","statements":[{"nativeSrc":"9923:16:25","nodeType":"YulVariableDeclaration","src":"9923:16:25","value":{"kind":"number","nativeSrc":"9937:2:25","nodeType":"YulLiteral","src":"9937:2:25","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9927:6:25","nodeType":"YulTypedName","src":"9927:6:25","type":""}]},{"nativeSrc":"9953:63:25","nodeType":"YulAssignment","src":"9953:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9988:9:25","nodeType":"YulIdentifier","src":"9988:9:25"},{"name":"offset","nativeSrc":"9999:6:25","nodeType":"YulIdentifier","src":"9999:6:25"}],"functionName":{"name":"add","nativeSrc":"9984:3:25","nodeType":"YulIdentifier","src":"9984:3:25"},"nativeSrc":"9984:22:25","nodeType":"YulFunctionCall","src":"9984:22:25"},{"name":"dataEnd","nativeSrc":"10008:7:25","nodeType":"YulIdentifier","src":"10008:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9963:20:25","nodeType":"YulIdentifier","src":"9963:20:25"},"nativeSrc":"9963:53:25","nodeType":"YulFunctionCall","src":"9963:53:25"},"variableNames":[{"name":"value2","nativeSrc":"9953:6:25","nodeType":"YulIdentifier","src":"9953:6:25"}]}]},{"nativeSrc":"10036:287:25","nodeType":"YulBlock","src":"10036:287:25","statements":[{"nativeSrc":"10051:46:25","nodeType":"YulVariableDeclaration","src":"10051:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10082:9:25","nodeType":"YulIdentifier","src":"10082:9:25"},{"kind":"number","nativeSrc":"10093:2:25","nodeType":"YulLiteral","src":"10093:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10078:3:25","nodeType":"YulIdentifier","src":"10078:3:25"},"nativeSrc":"10078:18:25","nodeType":"YulFunctionCall","src":"10078:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"10065:12:25","nodeType":"YulIdentifier","src":"10065:12:25"},"nativeSrc":"10065:32:25","nodeType":"YulFunctionCall","src":"10065:32:25"},"variables":[{"name":"offset","nativeSrc":"10055:6:25","nodeType":"YulTypedName","src":"10055:6:25","type":""}]},{"body":{"nativeSrc":"10144:83:25","nodeType":"YulBlock","src":"10144:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10146:77:25","nodeType":"YulIdentifier","src":"10146:77:25"},"nativeSrc":"10146:79:25","nodeType":"YulFunctionCall","src":"10146:79:25"},"nativeSrc":"10146:79:25","nodeType":"YulExpressionStatement","src":"10146:79:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10116:6:25","nodeType":"YulIdentifier","src":"10116:6:25"},{"kind":"number","nativeSrc":"10124:18:25","nodeType":"YulLiteral","src":"10124:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10113:2:25","nodeType":"YulIdentifier","src":"10113:2:25"},"nativeSrc":"10113:30:25","nodeType":"YulFunctionCall","src":"10113:30:25"},"nativeSrc":"10110:117:25","nodeType":"YulIf","src":"10110:117:25"},{"nativeSrc":"10241:72:25","nodeType":"YulAssignment","src":"10241:72:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10285:9:25","nodeType":"YulIdentifier","src":"10285:9:25"},{"name":"offset","nativeSrc":"10296:6:25","nodeType":"YulIdentifier","src":"10296:6:25"}],"functionName":{"name":"add","nativeSrc":"10281:3:25","nodeType":"YulIdentifier","src":"10281:3:25"},"nativeSrc":"10281:22:25","nodeType":"YulFunctionCall","src":"10281:22:25"},{"name":"dataEnd","nativeSrc":"10305:7:25","nodeType":"YulIdentifier","src":"10305:7:25"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"10251:29:25","nodeType":"YulIdentifier","src":"10251:29:25"},"nativeSrc":"10251:62:25","nodeType":"YulFunctionCall","src":"10251:62:25"},"variableNames":[{"name":"value3","nativeSrc":"10241:6:25","nodeType":"YulIdentifier","src":"10241:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"9387:943:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9459:9:25","nodeType":"YulTypedName","src":"9459:9:25","type":""},{"name":"dataEnd","nativeSrc":"9470:7:25","nodeType":"YulTypedName","src":"9470:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9482:6:25","nodeType":"YulTypedName","src":"9482:6:25","type":""},{"name":"value1","nativeSrc":"9490:6:25","nodeType":"YulTypedName","src":"9490:6:25","type":""},{"name":"value2","nativeSrc":"9498:6:25","nodeType":"YulTypedName","src":"9498:6:25","type":""},{"name":"value3","nativeSrc":"9506:6:25","nodeType":"YulTypedName","src":"9506:6:25","type":""}],"src":"9387:943:25"},{"body":{"nativeSrc":"10419:391:25","nodeType":"YulBlock","src":"10419:391:25","statements":[{"body":{"nativeSrc":"10465:83:25","nodeType":"YulBlock","src":"10465:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10467:77:25","nodeType":"YulIdentifier","src":"10467:77:25"},"nativeSrc":"10467:79:25","nodeType":"YulFunctionCall","src":"10467:79:25"},"nativeSrc":"10467:79:25","nodeType":"YulExpressionStatement","src":"10467:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10440:7:25","nodeType":"YulIdentifier","src":"10440:7:25"},{"name":"headStart","nativeSrc":"10449:9:25","nodeType":"YulIdentifier","src":"10449:9:25"}],"functionName":{"name":"sub","nativeSrc":"10436:3:25","nodeType":"YulIdentifier","src":"10436:3:25"},"nativeSrc":"10436:23:25","nodeType":"YulFunctionCall","src":"10436:23:25"},{"kind":"number","nativeSrc":"10461:2:25","nodeType":"YulLiteral","src":"10461:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10432:3:25","nodeType":"YulIdentifier","src":"10432:3:25"},"nativeSrc":"10432:32:25","nodeType":"YulFunctionCall","src":"10432:32:25"},"nativeSrc":"10429:119:25","nodeType":"YulIf","src":"10429:119:25"},{"nativeSrc":"10558:117:25","nodeType":"YulBlock","src":"10558:117:25","statements":[{"nativeSrc":"10573:15:25","nodeType":"YulVariableDeclaration","src":"10573:15:25","value":{"kind":"number","nativeSrc":"10587:1:25","nodeType":"YulLiteral","src":"10587:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10577:6:25","nodeType":"YulTypedName","src":"10577:6:25","type":""}]},{"nativeSrc":"10602:63:25","nodeType":"YulAssignment","src":"10602:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10637:9:25","nodeType":"YulIdentifier","src":"10637:9:25"},{"name":"offset","nativeSrc":"10648:6:25","nodeType":"YulIdentifier","src":"10648:6:25"}],"functionName":{"name":"add","nativeSrc":"10633:3:25","nodeType":"YulIdentifier","src":"10633:3:25"},"nativeSrc":"10633:22:25","nodeType":"YulFunctionCall","src":"10633:22:25"},{"name":"dataEnd","nativeSrc":"10657:7:25","nodeType":"YulIdentifier","src":"10657:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10612:20:25","nodeType":"YulIdentifier","src":"10612:20:25"},"nativeSrc":"10612:53:25","nodeType":"YulFunctionCall","src":"10612:53:25"},"variableNames":[{"name":"value0","nativeSrc":"10602:6:25","nodeType":"YulIdentifier","src":"10602:6:25"}]}]},{"nativeSrc":"10685:118:25","nodeType":"YulBlock","src":"10685:118:25","statements":[{"nativeSrc":"10700:16:25","nodeType":"YulVariableDeclaration","src":"10700:16:25","value":{"kind":"number","nativeSrc":"10714:2:25","nodeType":"YulLiteral","src":"10714:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10704:6:25","nodeType":"YulTypedName","src":"10704:6:25","type":""}]},{"nativeSrc":"10730:63:25","nodeType":"YulAssignment","src":"10730:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10765:9:25","nodeType":"YulIdentifier","src":"10765:9:25"},{"name":"offset","nativeSrc":"10776:6:25","nodeType":"YulIdentifier","src":"10776:6:25"}],"functionName":{"name":"add","nativeSrc":"10761:3:25","nodeType":"YulIdentifier","src":"10761:3:25"},"nativeSrc":"10761:22:25","nodeType":"YulFunctionCall","src":"10761:22:25"},{"name":"dataEnd","nativeSrc":"10785:7:25","nodeType":"YulIdentifier","src":"10785:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10740:20:25","nodeType":"YulIdentifier","src":"10740:20:25"},"nativeSrc":"10740:53:25","nodeType":"YulFunctionCall","src":"10740:53:25"},"variableNames":[{"name":"value1","nativeSrc":"10730:6:25","nodeType":"YulIdentifier","src":"10730:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10336:474:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10381:9:25","nodeType":"YulTypedName","src":"10381:9:25","type":""},{"name":"dataEnd","nativeSrc":"10392:7:25","nodeType":"YulTypedName","src":"10392:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10404:6:25","nodeType":"YulTypedName","src":"10404:6:25","type":""},{"name":"value1","nativeSrc":"10412:6:25","nodeType":"YulTypedName","src":"10412:6:25","type":""}],"src":"10336:474:25"},{"body":{"nativeSrc":"10844:152:25","nodeType":"YulBlock","src":"10844:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10861:1:25","nodeType":"YulLiteral","src":"10861:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"10864:77:25","nodeType":"YulLiteral","src":"10864:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10854:6:25","nodeType":"YulIdentifier","src":"10854:6:25"},"nativeSrc":"10854:88:25","nodeType":"YulFunctionCall","src":"10854:88:25"},"nativeSrc":"10854:88:25","nodeType":"YulExpressionStatement","src":"10854:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10958:1:25","nodeType":"YulLiteral","src":"10958:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"10961:4:25","nodeType":"YulLiteral","src":"10961:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"10951:6:25","nodeType":"YulIdentifier","src":"10951:6:25"},"nativeSrc":"10951:15:25","nodeType":"YulFunctionCall","src":"10951:15:25"},"nativeSrc":"10951:15:25","nodeType":"YulExpressionStatement","src":"10951:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10982:1:25","nodeType":"YulLiteral","src":"10982:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"10985:4:25","nodeType":"YulLiteral","src":"10985:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10975:6:25","nodeType":"YulIdentifier","src":"10975:6:25"},"nativeSrc":"10975:15:25","nodeType":"YulFunctionCall","src":"10975:15:25"},"nativeSrc":"10975:15:25","nodeType":"YulExpressionStatement","src":"10975:15:25"}]},"name":"panic_error_0x22","nativeSrc":"10816:180:25","nodeType":"YulFunctionDefinition","src":"10816:180:25"},{"body":{"nativeSrc":"11053:269:25","nodeType":"YulBlock","src":"11053:269:25","statements":[{"nativeSrc":"11063:22:25","nodeType":"YulAssignment","src":"11063:22:25","value":{"arguments":[{"name":"data","nativeSrc":"11077:4:25","nodeType":"YulIdentifier","src":"11077:4:25"},{"kind":"number","nativeSrc":"11083:1:25","nodeType":"YulLiteral","src":"11083:1:25","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"11073:3:25","nodeType":"YulIdentifier","src":"11073:3:25"},"nativeSrc":"11073:12:25","nodeType":"YulFunctionCall","src":"11073:12:25"},"variableNames":[{"name":"length","nativeSrc":"11063:6:25","nodeType":"YulIdentifier","src":"11063:6:25"}]},{"nativeSrc":"11094:38:25","nodeType":"YulVariableDeclaration","src":"11094:38:25","value":{"arguments":[{"name":"data","nativeSrc":"11124:4:25","nodeType":"YulIdentifier","src":"11124:4:25"},{"kind":"number","nativeSrc":"11130:1:25","nodeType":"YulLiteral","src":"11130:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11120:3:25","nodeType":"YulIdentifier","src":"11120:3:25"},"nativeSrc":"11120:12:25","nodeType":"YulFunctionCall","src":"11120:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11098:18:25","nodeType":"YulTypedName","src":"11098:18:25","type":""}]},{"body":{"nativeSrc":"11171:51:25","nodeType":"YulBlock","src":"11171:51:25","statements":[{"nativeSrc":"11185:27:25","nodeType":"YulAssignment","src":"11185:27:25","value":{"arguments":[{"name":"length","nativeSrc":"11199:6:25","nodeType":"YulIdentifier","src":"11199:6:25"},{"kind":"number","nativeSrc":"11207:4:25","nodeType":"YulLiteral","src":"11207:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11195:3:25","nodeType":"YulIdentifier","src":"11195:3:25"},"nativeSrc":"11195:17:25","nodeType":"YulFunctionCall","src":"11195:17:25"},"variableNames":[{"name":"length","nativeSrc":"11185:6:25","nodeType":"YulIdentifier","src":"11185:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11151:18:25","nodeType":"YulIdentifier","src":"11151:18:25"}],"functionName":{"name":"iszero","nativeSrc":"11144:6:25","nodeType":"YulIdentifier","src":"11144:6:25"},"nativeSrc":"11144:26:25","nodeType":"YulFunctionCall","src":"11144:26:25"},"nativeSrc":"11141:81:25","nodeType":"YulIf","src":"11141:81:25"},{"body":{"nativeSrc":"11274:42:25","nodeType":"YulBlock","src":"11274:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"11288:16:25","nodeType":"YulIdentifier","src":"11288:16:25"},"nativeSrc":"11288:18:25","nodeType":"YulFunctionCall","src":"11288:18:25"},"nativeSrc":"11288:18:25","nodeType":"YulExpressionStatement","src":"11288:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11238:18:25","nodeType":"YulIdentifier","src":"11238:18:25"},{"arguments":[{"name":"length","nativeSrc":"11261:6:25","nodeType":"YulIdentifier","src":"11261:6:25"},{"kind":"number","nativeSrc":"11269:2:25","nodeType":"YulLiteral","src":"11269:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11258:2:25","nodeType":"YulIdentifier","src":"11258:2:25"},"nativeSrc":"11258:14:25","nodeType":"YulFunctionCall","src":"11258:14:25"}],"functionName":{"name":"eq","nativeSrc":"11235:2:25","nodeType":"YulIdentifier","src":"11235:2:25"},"nativeSrc":"11235:38:25","nodeType":"YulFunctionCall","src":"11235:38:25"},"nativeSrc":"11232:84:25","nodeType":"YulIf","src":"11232:84:25"}]},"name":"extract_byte_array_length","nativeSrc":"11002:320:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11037:4:25","nodeType":"YulTypedName","src":"11037:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11046:6:25","nodeType":"YulTypedName","src":"11046:6:25","type":""}],"src":"11002:320:25"},{"body":{"nativeSrc":"11482:288:25","nodeType":"YulBlock","src":"11482:288:25","statements":[{"nativeSrc":"11492:26:25","nodeType":"YulAssignment","src":"11492:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"11504:9:25","nodeType":"YulIdentifier","src":"11504:9:25"},{"kind":"number","nativeSrc":"11515:2:25","nodeType":"YulLiteral","src":"11515:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11500:3:25","nodeType":"YulIdentifier","src":"11500:3:25"},"nativeSrc":"11500:18:25","nodeType":"YulFunctionCall","src":"11500:18:25"},"variableNames":[{"name":"tail","nativeSrc":"11492:4:25","nodeType":"YulIdentifier","src":"11492:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11572:6:25","nodeType":"YulIdentifier","src":"11572:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"11585:9:25","nodeType":"YulIdentifier","src":"11585:9:25"},{"kind":"number","nativeSrc":"11596:1:25","nodeType":"YulLiteral","src":"11596:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11581:3:25","nodeType":"YulIdentifier","src":"11581:3:25"},"nativeSrc":"11581:17:25","nodeType":"YulFunctionCall","src":"11581:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11528:43:25","nodeType":"YulIdentifier","src":"11528:43:25"},"nativeSrc":"11528:71:25","nodeType":"YulFunctionCall","src":"11528:71:25"},"nativeSrc":"11528:71:25","nodeType":"YulExpressionStatement","src":"11528:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11653:6:25","nodeType":"YulIdentifier","src":"11653:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"11666:9:25","nodeType":"YulIdentifier","src":"11666:9:25"},{"kind":"number","nativeSrc":"11677:2:25","nodeType":"YulLiteral","src":"11677:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11662:3:25","nodeType":"YulIdentifier","src":"11662:3:25"},"nativeSrc":"11662:18:25","nodeType":"YulFunctionCall","src":"11662:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11609:43:25","nodeType":"YulIdentifier","src":"11609:43:25"},"nativeSrc":"11609:72:25","nodeType":"YulFunctionCall","src":"11609:72:25"},"nativeSrc":"11609:72:25","nodeType":"YulExpressionStatement","src":"11609:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11735:6:25","nodeType":"YulIdentifier","src":"11735:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"11748:9:25","nodeType":"YulIdentifier","src":"11748:9:25"},{"kind":"number","nativeSrc":"11759:2:25","nodeType":"YulLiteral","src":"11759:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11744:3:25","nodeType":"YulIdentifier","src":"11744:3:25"},"nativeSrc":"11744:18:25","nodeType":"YulFunctionCall","src":"11744:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11691:43:25","nodeType":"YulIdentifier","src":"11691:43:25"},"nativeSrc":"11691:72:25","nodeType":"YulFunctionCall","src":"11691:72:25"},"nativeSrc":"11691:72:25","nodeType":"YulExpressionStatement","src":"11691:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"11328:442:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11438:9:25","nodeType":"YulTypedName","src":"11438:9:25","type":""},{"name":"value2","nativeSrc":"11450:6:25","nodeType":"YulTypedName","src":"11450:6:25","type":""},{"name":"value1","nativeSrc":"11458:6:25","nodeType":"YulTypedName","src":"11458:6:25","type":""},{"name":"value0","nativeSrc":"11466:6:25","nodeType":"YulTypedName","src":"11466:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11477:4:25","nodeType":"YulTypedName","src":"11477:4:25","type":""}],"src":"11328:442:25"},{"body":{"nativeSrc":"11804:152:25","nodeType":"YulBlock","src":"11804:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11821:1:25","nodeType":"YulLiteral","src":"11821:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"11824:77:25","nodeType":"YulLiteral","src":"11824:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11814:6:25","nodeType":"YulIdentifier","src":"11814:6:25"},"nativeSrc":"11814:88:25","nodeType":"YulFunctionCall","src":"11814:88:25"},"nativeSrc":"11814:88:25","nodeType":"YulExpressionStatement","src":"11814:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11918:1:25","nodeType":"YulLiteral","src":"11918:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"11921:4:25","nodeType":"YulLiteral","src":"11921:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"11911:6:25","nodeType":"YulIdentifier","src":"11911:6:25"},"nativeSrc":"11911:15:25","nodeType":"YulFunctionCall","src":"11911:15:25"},"nativeSrc":"11911:15:25","nodeType":"YulExpressionStatement","src":"11911:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11942:1:25","nodeType":"YulLiteral","src":"11942:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"11945:4:25","nodeType":"YulLiteral","src":"11945:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11935:6:25","nodeType":"YulIdentifier","src":"11935:6:25"},"nativeSrc":"11935:15:25","nodeType":"YulFunctionCall","src":"11935:15:25"},"nativeSrc":"11935:15:25","nodeType":"YulExpressionStatement","src":"11935:15:25"}]},"name":"panic_error_0x11","nativeSrc":"11776:180:25","nodeType":"YulFunctionDefinition","src":"11776:180:25"},{"body":{"nativeSrc":"12005:190:25","nodeType":"YulBlock","src":"12005:190:25","statements":[{"nativeSrc":"12015:33:25","nodeType":"YulAssignment","src":"12015:33:25","value":{"arguments":[{"name":"value","nativeSrc":"12042:5:25","nodeType":"YulIdentifier","src":"12042:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12024:17:25","nodeType":"YulIdentifier","src":"12024:17:25"},"nativeSrc":"12024:24:25","nodeType":"YulFunctionCall","src":"12024:24:25"},"variableNames":[{"name":"value","nativeSrc":"12015:5:25","nodeType":"YulIdentifier","src":"12015:5:25"}]},{"body":{"nativeSrc":"12138:22:25","nodeType":"YulBlock","src":"12138:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12140:16:25","nodeType":"YulIdentifier","src":"12140:16:25"},"nativeSrc":"12140:18:25","nodeType":"YulFunctionCall","src":"12140:18:25"},"nativeSrc":"12140:18:25","nodeType":"YulExpressionStatement","src":"12140:18:25"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"12063:5:25","nodeType":"YulIdentifier","src":"12063:5:25"},{"kind":"number","nativeSrc":"12070:66:25","nodeType":"YulLiteral","src":"12070:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"12060:2:25","nodeType":"YulIdentifier","src":"12060:2:25"},"nativeSrc":"12060:77:25","nodeType":"YulFunctionCall","src":"12060:77:25"},"nativeSrc":"12057:103:25","nodeType":"YulIf","src":"12057:103:25"},{"nativeSrc":"12169:20:25","nodeType":"YulAssignment","src":"12169:20:25","value":{"arguments":[{"name":"value","nativeSrc":"12180:5:25","nodeType":"YulIdentifier","src":"12180:5:25"},{"kind":"number","nativeSrc":"12187:1:25","nodeType":"YulLiteral","src":"12187:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"12176:3:25","nodeType":"YulIdentifier","src":"12176:3:25"},"nativeSrc":"12176:13:25","nodeType":"YulFunctionCall","src":"12176:13:25"},"variableNames":[{"name":"ret","nativeSrc":"12169:3:25","nodeType":"YulIdentifier","src":"12169:3:25"}]}]},"name":"increment_t_uint256","nativeSrc":"11962:233:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11991:5:25","nodeType":"YulTypedName","src":"11991:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"12001:3:25","nodeType":"YulTypedName","src":"12001:3:25","type":""}],"src":"11962:233:25"},{"body":{"nativeSrc":"12315:34:25","nodeType":"YulBlock","src":"12315:34:25","statements":[{"nativeSrc":"12325:18:25","nodeType":"YulAssignment","src":"12325:18:25","value":{"name":"pos","nativeSrc":"12340:3:25","nodeType":"YulIdentifier","src":"12340:3:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"12325:11:25","nodeType":"YulIdentifier","src":"12325:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"12201:148:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12287:3:25","nodeType":"YulTypedName","src":"12287:3:25","type":""},{"name":"length","nativeSrc":"12292:6:25","nodeType":"YulTypedName","src":"12292:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"12303:11:25","nodeType":"YulTypedName","src":"12303:11:25","type":""}],"src":"12201:148:25"},{"body":{"nativeSrc":"12465:280:25","nodeType":"YulBlock","src":"12465:280:25","statements":[{"nativeSrc":"12475:53:25","nodeType":"YulVariableDeclaration","src":"12475:53:25","value":{"arguments":[{"name":"value","nativeSrc":"12522:5:25","nodeType":"YulIdentifier","src":"12522:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"12489:32:25","nodeType":"YulIdentifier","src":"12489:32:25"},"nativeSrc":"12489:39:25","nodeType":"YulFunctionCall","src":"12489:39:25"},"variables":[{"name":"length","nativeSrc":"12479:6:25","nodeType":"YulTypedName","src":"12479:6:25","type":""}]},{"nativeSrc":"12537:96:25","nodeType":"YulAssignment","src":"12537:96:25","value":{"arguments":[{"name":"pos","nativeSrc":"12621:3:25","nodeType":"YulIdentifier","src":"12621:3:25"},{"name":"length","nativeSrc":"12626:6:25","nodeType":"YulIdentifier","src":"12626:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"12544:76:25","nodeType":"YulIdentifier","src":"12544:76:25"},"nativeSrc":"12544:89:25","nodeType":"YulFunctionCall","src":"12544:89:25"},"variableNames":[{"name":"pos","nativeSrc":"12537:3:25","nodeType":"YulIdentifier","src":"12537:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12681:5:25","nodeType":"YulIdentifier","src":"12681:5:25"},{"kind":"number","nativeSrc":"12688:4:25","nodeType":"YulLiteral","src":"12688:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12677:3:25","nodeType":"YulIdentifier","src":"12677:3:25"},"nativeSrc":"12677:16:25","nodeType":"YulFunctionCall","src":"12677:16:25"},{"name":"pos","nativeSrc":"12695:3:25","nodeType":"YulIdentifier","src":"12695:3:25"},{"name":"length","nativeSrc":"12700:6:25","nodeType":"YulIdentifier","src":"12700:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"12642:34:25","nodeType":"YulIdentifier","src":"12642:34:25"},"nativeSrc":"12642:65:25","nodeType":"YulFunctionCall","src":"12642:65:25"},"nativeSrc":"12642:65:25","nodeType":"YulExpressionStatement","src":"12642:65:25"},{"nativeSrc":"12716:23:25","nodeType":"YulAssignment","src":"12716:23:25","value":{"arguments":[{"name":"pos","nativeSrc":"12727:3:25","nodeType":"YulIdentifier","src":"12727:3:25"},{"name":"length","nativeSrc":"12732:6:25","nodeType":"YulIdentifier","src":"12732:6:25"}],"functionName":{"name":"add","nativeSrc":"12723:3:25","nodeType":"YulIdentifier","src":"12723:3:25"},"nativeSrc":"12723:16:25","nodeType":"YulFunctionCall","src":"12723:16:25"},"variableNames":[{"name":"end","nativeSrc":"12716:3:25","nodeType":"YulIdentifier","src":"12716:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"12355:390:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12446:5:25","nodeType":"YulTypedName","src":"12446:5:25","type":""},{"name":"pos","nativeSrc":"12453:3:25","nodeType":"YulTypedName","src":"12453:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12461:3:25","nodeType":"YulTypedName","src":"12461:3:25","type":""}],"src":"12355:390:25"},{"body":{"nativeSrc":"12935:251:25","nodeType":"YulBlock","src":"12935:251:25","statements":[{"nativeSrc":"12946:102:25","nodeType":"YulAssignment","src":"12946:102:25","value":{"arguments":[{"name":"value0","nativeSrc":"13035:6:25","nodeType":"YulIdentifier","src":"13035:6:25"},{"name":"pos","nativeSrc":"13044:3:25","nodeType":"YulIdentifier","src":"13044:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"12953:81:25","nodeType":"YulIdentifier","src":"12953:81:25"},"nativeSrc":"12953:95:25","nodeType":"YulFunctionCall","src":"12953:95:25"},"variableNames":[{"name":"pos","nativeSrc":"12946:3:25","nodeType":"YulIdentifier","src":"12946:3:25"}]},{"nativeSrc":"13058:102:25","nodeType":"YulAssignment","src":"13058:102:25","value":{"arguments":[{"name":"value1","nativeSrc":"13147:6:25","nodeType":"YulIdentifier","src":"13147:6:25"},{"name":"pos","nativeSrc":"13156:3:25","nodeType":"YulIdentifier","src":"13156:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13065:81:25","nodeType":"YulIdentifier","src":"13065:81:25"},"nativeSrc":"13065:95:25","nodeType":"YulFunctionCall","src":"13065:95:25"},"variableNames":[{"name":"pos","nativeSrc":"13058:3:25","nodeType":"YulIdentifier","src":"13058:3:25"}]},{"nativeSrc":"13170:10:25","nodeType":"YulAssignment","src":"13170:10:25","value":{"name":"pos","nativeSrc":"13177:3:25","nodeType":"YulIdentifier","src":"13177:3:25"},"variableNames":[{"name":"end","nativeSrc":"13170:3:25","nodeType":"YulIdentifier","src":"13170:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"12751:435:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12906:3:25","nodeType":"YulTypedName","src":"12906:3:25","type":""},{"name":"value1","nativeSrc":"12912:6:25","nodeType":"YulTypedName","src":"12912:6:25","type":""},{"name":"value0","nativeSrc":"12920:6:25","nodeType":"YulTypedName","src":"12920:6:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12931:3:25","nodeType":"YulTypedName","src":"12931:3:25","type":""}],"src":"12751:435:25"},{"body":{"nativeSrc":"13281:28:25","nodeType":"YulBlock","src":"13281:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13298:1:25","nodeType":"YulLiteral","src":"13298:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"13301:1:25","nodeType":"YulLiteral","src":"13301:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13291:6:25","nodeType":"YulIdentifier","src":"13291:6:25"},"nativeSrc":"13291:12:25","nodeType":"YulFunctionCall","src":"13291:12:25"},"nativeSrc":"13291:12:25","nodeType":"YulExpressionStatement","src":"13291:12:25"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nativeSrc":"13192:117:25","nodeType":"YulFunctionDefinition","src":"13192:117:25"},{"body":{"nativeSrc":"13404:28:25","nodeType":"YulBlock","src":"13404:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13421:1:25","nodeType":"YulLiteral","src":"13421:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"13424:1:25","nodeType":"YulLiteral","src":"13424:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13414:6:25","nodeType":"YulIdentifier","src":"13414:6:25"},"nativeSrc":"13414:12:25","nodeType":"YulFunctionCall","src":"13414:12:25"},"nativeSrc":"13414:12:25","nodeType":"YulExpressionStatement","src":"13414:12:25"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nativeSrc":"13315:117:25","nodeType":"YulFunctionDefinition","src":"13315:117:25"},{"body":{"nativeSrc":"13564:343:25","nodeType":"YulBlock","src":"13564:343:25","statements":[{"body":{"nativeSrc":"13602:83:25","nodeType":"YulBlock","src":"13602:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nativeSrc":"13604:77:25","nodeType":"YulIdentifier","src":"13604:77:25"},"nativeSrc":"13604:79:25","nodeType":"YulFunctionCall","src":"13604:79:25"},"nativeSrc":"13604:79:25","nodeType":"YulExpressionStatement","src":"13604:79:25"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"13580:10:25","nodeType":"YulIdentifier","src":"13580:10:25"},{"name":"endIndex","nativeSrc":"13592:8:25","nodeType":"YulIdentifier","src":"13592:8:25"}],"functionName":{"name":"gt","nativeSrc":"13577:2:25","nodeType":"YulIdentifier","src":"13577:2:25"},"nativeSrc":"13577:24:25","nodeType":"YulFunctionCall","src":"13577:24:25"},"nativeSrc":"13574:111:25","nodeType":"YulIf","src":"13574:111:25"},{"body":{"nativeSrc":"13718:83:25","nodeType":"YulBlock","src":"13718:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nativeSrc":"13720:77:25","nodeType":"YulIdentifier","src":"13720:77:25"},"nativeSrc":"13720:79:25","nodeType":"YulFunctionCall","src":"13720:79:25"},"nativeSrc":"13720:79:25","nodeType":"YulExpressionStatement","src":"13720:79:25"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"13700:8:25","nodeType":"YulIdentifier","src":"13700:8:25"},{"name":"length","nativeSrc":"13710:6:25","nodeType":"YulIdentifier","src":"13710:6:25"}],"functionName":{"name":"gt","nativeSrc":"13697:2:25","nodeType":"YulIdentifier","src":"13697:2:25"},"nativeSrc":"13697:20:25","nodeType":"YulFunctionCall","src":"13697:20:25"},"nativeSrc":"13694:107:25","nodeType":"YulIf","src":"13694:107:25"},{"nativeSrc":"13810:44:25","nodeType":"YulAssignment","src":"13810:44:25","value":{"arguments":[{"name":"offset","nativeSrc":"13827:6:25","nodeType":"YulIdentifier","src":"13827:6:25"},{"arguments":[{"name":"startIndex","nativeSrc":"13839:10:25","nodeType":"YulIdentifier","src":"13839:10:25"},{"kind":"number","nativeSrc":"13851:1:25","nodeType":"YulLiteral","src":"13851:1:25","type":"","value":"1"}],"functionName":{"name":"mul","nativeSrc":"13835:3:25","nodeType":"YulIdentifier","src":"13835:3:25"},"nativeSrc":"13835:18:25","nodeType":"YulFunctionCall","src":"13835:18:25"}],"functionName":{"name":"add","nativeSrc":"13823:3:25","nodeType":"YulIdentifier","src":"13823:3:25"},"nativeSrc":"13823:31:25","nodeType":"YulFunctionCall","src":"13823:31:25"},"variableNames":[{"name":"offsetOut","nativeSrc":"13810:9:25","nodeType":"YulIdentifier","src":"13810:9:25"}]},{"nativeSrc":"13863:38:25","nodeType":"YulAssignment","src":"13863:38:25","value":{"arguments":[{"name":"endIndex","nativeSrc":"13880:8:25","nodeType":"YulIdentifier","src":"13880:8:25"},{"name":"startIndex","nativeSrc":"13890:10:25","nodeType":"YulIdentifier","src":"13890:10:25"}],"functionName":{"name":"sub","nativeSrc":"13876:3:25","nodeType":"YulIdentifier","src":"13876:3:25"},"nativeSrc":"13876:25:25","nodeType":"YulFunctionCall","src":"13876:25:25"},"variableNames":[{"name":"lengthOut","nativeSrc":"13863:9:25","nodeType":"YulIdentifier","src":"13863:9:25"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"13438:469:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13502:6:25","nodeType":"YulTypedName","src":"13502:6:25","type":""},{"name":"length","nativeSrc":"13510:6:25","nodeType":"YulTypedName","src":"13510:6:25","type":""},{"name":"startIndex","nativeSrc":"13518:10:25","nodeType":"YulTypedName","src":"13518:10:25","type":""},{"name":"endIndex","nativeSrc":"13530:8:25","nodeType":"YulTypedName","src":"13530:8:25","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"13543:9:25","nodeType":"YulTypedName","src":"13543:9:25","type":""},{"name":"lengthOut","nativeSrc":"13554:9:25","nodeType":"YulTypedName","src":"13554:9:25","type":""}],"src":"13438:469:25"},{"body":{"nativeSrc":"13978:31:25","nodeType":"YulBlock","src":"13978:31:25","statements":[{"nativeSrc":"13989:13:25","nodeType":"YulAssignment","src":"13989:13:25","value":{"name":"len","nativeSrc":"13999:3:25","nodeType":"YulIdentifier","src":"13999:3:25"},"variableNames":[{"name":"length","nativeSrc":"13989:6:25","nodeType":"YulIdentifier","src":"13989:6:25"}]}]},"name":"array_length_t_bytes_calldata_ptr","nativeSrc":"13913:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13956:5:25","nodeType":"YulTypedName","src":"13956:5:25","type":""},{"name":"len","nativeSrc":"13963:3:25","nodeType":"YulTypedName","src":"13963:3:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"13971:6:25","nodeType":"YulTypedName","src":"13971:6:25","type":""}],"src":"13913:96:25"},{"body":{"nativeSrc":"14073:28:25","nodeType":"YulBlock","src":"14073:28:25","statements":[{"nativeSrc":"14083:11:25","nodeType":"YulAssignment","src":"14083:11:25","value":{"name":"ptr","nativeSrc":"14091:3:25","nodeType":"YulIdentifier","src":"14091:3:25"},"variableNames":[{"name":"data","nativeSrc":"14083:4:25","nodeType":"YulIdentifier","src":"14083:4:25"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nativeSrc":"14015:86:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14060:3:25","nodeType":"YulTypedName","src":"14060:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"14068:4:25","nodeType":"YulTypedName","src":"14068:4:25","type":""}],"src":"14015:86:25"},{"body":{"nativeSrc":"14160:54:25","nodeType":"YulBlock","src":"14160:54:25","statements":[{"nativeSrc":"14170:37:25","nodeType":"YulAssignment","src":"14170:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"14195:4:25","nodeType":"YulIdentifier","src":"14195:4:25"},{"name":"value","nativeSrc":"14201:5:25","nodeType":"YulIdentifier","src":"14201:5:25"}],"functionName":{"name":"shl","nativeSrc":"14191:3:25","nodeType":"YulIdentifier","src":"14191:3:25"},"nativeSrc":"14191:16:25","nodeType":"YulFunctionCall","src":"14191:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"14170:8:25","nodeType":"YulIdentifier","src":"14170:8:25"}]}]},"name":"shift_left_dynamic","nativeSrc":"14107:107:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"14135:4:25","nodeType":"YulTypedName","src":"14135:4:25","type":""},{"name":"value","nativeSrc":"14141:5:25","nodeType":"YulTypedName","src":"14141:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"14151:8:25","nodeType":"YulTypedName","src":"14151:8:25","type":""}],"src":"14107:107:25"},{"body":{"nativeSrc":"14316:452:25","nodeType":"YulBlock","src":"14316:452:25","statements":[{"nativeSrc":"14327:59:25","nodeType":"YulVariableDeclaration","src":"14327:59:25","value":{"arguments":[{"name":"array","nativeSrc":"14375:5:25","nodeType":"YulIdentifier","src":"14375:5:25"},{"name":"len","nativeSrc":"14382:3:25","nodeType":"YulIdentifier","src":"14382:3:25"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nativeSrc":"14341:33:25","nodeType":"YulIdentifier","src":"14341:33:25"},"nativeSrc":"14341:45:25","nodeType":"YulFunctionCall","src":"14341:45:25"},"variables":[{"name":"length","nativeSrc":"14331:6:25","nodeType":"YulTypedName","src":"14331:6:25","type":""}]},{"nativeSrc":"14395:21:25","nodeType":"YulVariableDeclaration","src":"14395:21:25","value":{"name":"array","nativeSrc":"14411:5:25","nodeType":"YulIdentifier","src":"14411:5:25"},"variables":[{"name":"dataArea","nativeSrc":"14399:8:25","nodeType":"YulTypedName","src":"14399:8:25","type":""}]},{"nativeSrc":"14426:49:25","nodeType":"YulAssignment","src":"14426:49:25","value":{"arguments":[{"arguments":[{"name":"dataArea","nativeSrc":"14465:8:25","nodeType":"YulIdentifier","src":"14465:8:25"}],"functionName":{"name":"calldataload","nativeSrc":"14452:12:25","nodeType":"YulIdentifier","src":"14452:12:25"},"nativeSrc":"14452:22:25","nodeType":"YulFunctionCall","src":"14452:22:25"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"14435:16:25","nodeType":"YulIdentifier","src":"14435:16:25"},"nativeSrc":"14435:40:25","nodeType":"YulFunctionCall","src":"14435:40:25"},"variableNames":[{"name":"value","nativeSrc":"14426:5:25","nodeType":"YulIdentifier","src":"14426:5:25"}]},{"body":{"nativeSrc":"14502:259:25","nodeType":"YulBlock","src":"14502:259:25","statements":[{"nativeSrc":"14516:235:25","nodeType":"YulAssignment","src":"14516:235:25","value":{"arguments":[{"name":"value","nativeSrc":"14546:5:25","nodeType":"YulIdentifier","src":"14546:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14613:1:25","nodeType":"YulLiteral","src":"14613:1:25","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"14620:1:25","nodeType":"YulLiteral","src":"14620:1:25","type":"","value":"4"},{"name":"length","nativeSrc":"14623:6:25","nodeType":"YulIdentifier","src":"14623:6:25"}],"functionName":{"name":"sub","nativeSrc":"14616:3:25","nodeType":"YulIdentifier","src":"14616:3:25"},"nativeSrc":"14616:14:25","nodeType":"YulFunctionCall","src":"14616:14:25"}],"functionName":{"name":"mul","nativeSrc":"14609:3:25","nodeType":"YulIdentifier","src":"14609:3:25"},"nativeSrc":"14609:22:25","nodeType":"YulFunctionCall","src":"14609:22:25"},{"kind":"number","nativeSrc":"14653:66:25","nodeType":"YulLiteral","src":"14653:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"14569:18:25","nodeType":"YulIdentifier","src":"14569:18:25"},"nativeSrc":"14569:168:25","nodeType":"YulFunctionCall","src":"14569:168:25"}],"functionName":{"name":"and","nativeSrc":"14525:3:25","nodeType":"YulIdentifier","src":"14525:3:25"},"nativeSrc":"14525:226:25","nodeType":"YulFunctionCall","src":"14525:226:25"},"variableNames":[{"name":"value","nativeSrc":"14516:5:25","nodeType":"YulIdentifier","src":"14516:5:25"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"14491:6:25","nodeType":"YulIdentifier","src":"14491:6:25"},{"kind":"number","nativeSrc":"14499:1:25","nodeType":"YulLiteral","src":"14499:1:25","type":"","value":"4"}],"functionName":{"name":"lt","nativeSrc":"14488:2:25","nodeType":"YulIdentifier","src":"14488:2:25"},"nativeSrc":"14488:13:25","nodeType":"YulFunctionCall","src":"14488:13:25"},"nativeSrc":"14485:276:25","nodeType":"YulIf","src":"14485:276:25"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4","nativeSrc":"14220:548:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"14295:5:25","nodeType":"YulTypedName","src":"14295:5:25","type":""},{"name":"len","nativeSrc":"14302:3:25","nodeType":"YulTypedName","src":"14302:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14310:5:25","nodeType":"YulTypedName","src":"14310:5:25","type":""}],"src":"14220:548:25"},{"body":{"nativeSrc":"14869:73:25","nodeType":"YulBlock","src":"14869:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14886:3:25","nodeType":"YulIdentifier","src":"14886:3:25"},{"name":"length","nativeSrc":"14891:6:25","nodeType":"YulIdentifier","src":"14891:6:25"}],"functionName":{"name":"mstore","nativeSrc":"14879:6:25","nodeType":"YulIdentifier","src":"14879:6:25"},"nativeSrc":"14879:19:25","nodeType":"YulFunctionCall","src":"14879:19:25"},"nativeSrc":"14879:19:25","nodeType":"YulExpressionStatement","src":"14879:19:25"},{"nativeSrc":"14907:29:25","nodeType":"YulAssignment","src":"14907:29:25","value":{"arguments":[{"name":"pos","nativeSrc":"14926:3:25","nodeType":"YulIdentifier","src":"14926:3:25"},{"kind":"number","nativeSrc":"14931:4:25","nodeType":"YulLiteral","src":"14931:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14922:3:25","nodeType":"YulIdentifier","src":"14922:3:25"},"nativeSrc":"14922:14:25","nodeType":"YulFunctionCall","src":"14922:14:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"14907:11:25","nodeType":"YulIdentifier","src":"14907:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"14774:168:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14841:3:25","nodeType":"YulTypedName","src":"14841:3:25","type":""},{"name":"length","nativeSrc":"14846:6:25","nodeType":"YulTypedName","src":"14846:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14857:11:25","nodeType":"YulTypedName","src":"14857:11:25","type":""}],"src":"14774:168:25"},{"body":{"nativeSrc":"15070:214:25","nodeType":"YulBlock","src":"15070:214:25","statements":[{"nativeSrc":"15080:77:25","nodeType":"YulAssignment","src":"15080:77:25","value":{"arguments":[{"name":"pos","nativeSrc":"15145:3:25","nodeType":"YulIdentifier","src":"15145:3:25"},{"name":"length","nativeSrc":"15150:6:25","nodeType":"YulIdentifier","src":"15150:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"15087:57:25","nodeType":"YulIdentifier","src":"15087:57:25"},"nativeSrc":"15087:70:25","nodeType":"YulFunctionCall","src":"15087:70:25"},"variableNames":[{"name":"pos","nativeSrc":"15080:3:25","nodeType":"YulIdentifier","src":"15080:3:25"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"15204:5:25","nodeType":"YulIdentifier","src":"15204:5:25"},{"name":"pos","nativeSrc":"15211:3:25","nodeType":"YulIdentifier","src":"15211:3:25"},{"name":"length","nativeSrc":"15216:6:25","nodeType":"YulIdentifier","src":"15216:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"15167:36:25","nodeType":"YulIdentifier","src":"15167:36:25"},"nativeSrc":"15167:56:25","nodeType":"YulFunctionCall","src":"15167:56:25"},"nativeSrc":"15167:56:25","nodeType":"YulExpressionStatement","src":"15167:56:25"},{"nativeSrc":"15232:46:25","nodeType":"YulAssignment","src":"15232:46:25","value":{"arguments":[{"name":"pos","nativeSrc":"15243:3:25","nodeType":"YulIdentifier","src":"15243:3:25"},{"arguments":[{"name":"length","nativeSrc":"15270:6:25","nodeType":"YulIdentifier","src":"15270:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"15248:21:25","nodeType":"YulIdentifier","src":"15248:21:25"},"nativeSrc":"15248:29:25","nodeType":"YulFunctionCall","src":"15248:29:25"}],"functionName":{"name":"add","nativeSrc":"15239:3:25","nodeType":"YulIdentifier","src":"15239:3:25"},"nativeSrc":"15239:39:25","nodeType":"YulFunctionCall","src":"15239:39:25"},"variableNames":[{"name":"end","nativeSrc":"15232:3:25","nodeType":"YulIdentifier","src":"15232:3:25"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"14970:314:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"15043:5:25","nodeType":"YulTypedName","src":"15043:5:25","type":""},{"name":"length","nativeSrc":"15050:6:25","nodeType":"YulTypedName","src":"15050:6:25","type":""},{"name":"pos","nativeSrc":"15058:3:25","nodeType":"YulTypedName","src":"15058:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15066:3:25","nodeType":"YulTypedName","src":"15066:3:25","type":""}],"src":"14970:314:25"},{"body":{"nativeSrc":"15444:285:25","nodeType":"YulBlock","src":"15444:285:25","statements":[{"nativeSrc":"15454:26:25","nodeType":"YulAssignment","src":"15454:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"15466:9:25","nodeType":"YulIdentifier","src":"15466:9:25"},{"kind":"number","nativeSrc":"15477:2:25","nodeType":"YulLiteral","src":"15477:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15462:3:25","nodeType":"YulIdentifier","src":"15462:3:25"},"nativeSrc":"15462:18:25","nodeType":"YulFunctionCall","src":"15462:18:25"},"variableNames":[{"name":"tail","nativeSrc":"15454:4:25","nodeType":"YulIdentifier","src":"15454:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15534:6:25","nodeType":"YulIdentifier","src":"15534:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"15547:9:25","nodeType":"YulIdentifier","src":"15547:9:25"},{"kind":"number","nativeSrc":"15558:1:25","nodeType":"YulLiteral","src":"15558:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15543:3:25","nodeType":"YulIdentifier","src":"15543:3:25"},"nativeSrc":"15543:17:25","nodeType":"YulFunctionCall","src":"15543:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15490:43:25","nodeType":"YulIdentifier","src":"15490:43:25"},"nativeSrc":"15490:71:25","nodeType":"YulFunctionCall","src":"15490:71:25"},"nativeSrc":"15490:71:25","nodeType":"YulExpressionStatement","src":"15490:71:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15582:9:25","nodeType":"YulIdentifier","src":"15582:9:25"},{"kind":"number","nativeSrc":"15593:2:25","nodeType":"YulLiteral","src":"15593:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15578:3:25","nodeType":"YulIdentifier","src":"15578:3:25"},"nativeSrc":"15578:18:25","nodeType":"YulFunctionCall","src":"15578:18:25"},{"arguments":[{"name":"tail","nativeSrc":"15602:4:25","nodeType":"YulIdentifier","src":"15602:4:25"},{"name":"headStart","nativeSrc":"15608:9:25","nodeType":"YulIdentifier","src":"15608:9:25"}],"functionName":{"name":"sub","nativeSrc":"15598:3:25","nodeType":"YulIdentifier","src":"15598:3:25"},"nativeSrc":"15598:20:25","nodeType":"YulFunctionCall","src":"15598:20:25"}],"functionName":{"name":"mstore","nativeSrc":"15571:6:25","nodeType":"YulIdentifier","src":"15571:6:25"},"nativeSrc":"15571:48:25","nodeType":"YulFunctionCall","src":"15571:48:25"},"nativeSrc":"15571:48:25","nodeType":"YulExpressionStatement","src":"15571:48:25"},{"nativeSrc":"15628:94:25","nodeType":"YulAssignment","src":"15628:94:25","value":{"arguments":[{"name":"value1","nativeSrc":"15700:6:25","nodeType":"YulIdentifier","src":"15700:6:25"},{"name":"value2","nativeSrc":"15708:6:25","nodeType":"YulIdentifier","src":"15708:6:25"},{"name":"tail","nativeSrc":"15717:4:25","nodeType":"YulIdentifier","src":"15717:4:25"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"15636:63:25","nodeType":"YulIdentifier","src":"15636:63:25"},"nativeSrc":"15636:86:25","nodeType":"YulFunctionCall","src":"15636:86:25"},"variableNames":[{"name":"tail","nativeSrc":"15628:4:25","nodeType":"YulIdentifier","src":"15628:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"15290:439:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15400:9:25","nodeType":"YulTypedName","src":"15400:9:25","type":""},{"name":"value2","nativeSrc":"15412:6:25","nodeType":"YulTypedName","src":"15412:6:25","type":""},{"name":"value1","nativeSrc":"15420:6:25","nodeType":"YulTypedName","src":"15420:6:25","type":""},{"name":"value0","nativeSrc":"15428:6:25","nodeType":"YulTypedName","src":"15428:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15439:4:25","nodeType":"YulTypedName","src":"15439:4:25","type":""}],"src":"15290:439:25"},{"body":{"nativeSrc":"15793:40:25","nodeType":"YulBlock","src":"15793:40:25","statements":[{"nativeSrc":"15804:22:25","nodeType":"YulAssignment","src":"15804:22:25","value":{"arguments":[{"name":"value","nativeSrc":"15820:5:25","nodeType":"YulIdentifier","src":"15820:5:25"}],"functionName":{"name":"mload","nativeSrc":"15814:5:25","nodeType":"YulIdentifier","src":"15814:5:25"},"nativeSrc":"15814:12:25","nodeType":"YulFunctionCall","src":"15814:12:25"},"variableNames":[{"name":"length","nativeSrc":"15804:6:25","nodeType":"YulIdentifier","src":"15804:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"15735:98:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15776:5:25","nodeType":"YulTypedName","src":"15776:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15786:6:25","nodeType":"YulTypedName","src":"15786:6:25","type":""}],"src":"15735:98:25"},{"body":{"nativeSrc":"15929:283:25","nodeType":"YulBlock","src":"15929:283:25","statements":[{"nativeSrc":"15939:52:25","nodeType":"YulVariableDeclaration","src":"15939:52:25","value":{"arguments":[{"name":"value","nativeSrc":"15985:5:25","nodeType":"YulIdentifier","src":"15985:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"15953:31:25","nodeType":"YulIdentifier","src":"15953:31:25"},"nativeSrc":"15953:38:25","nodeType":"YulFunctionCall","src":"15953:38:25"},"variables":[{"name":"length","nativeSrc":"15943:6:25","nodeType":"YulTypedName","src":"15943:6:25","type":""}]},{"nativeSrc":"16000:77:25","nodeType":"YulAssignment","src":"16000:77:25","value":{"arguments":[{"name":"pos","nativeSrc":"16065:3:25","nodeType":"YulIdentifier","src":"16065:3:25"},{"name":"length","nativeSrc":"16070:6:25","nodeType":"YulIdentifier","src":"16070:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"16007:57:25","nodeType":"YulIdentifier","src":"16007:57:25"},"nativeSrc":"16007:70:25","nodeType":"YulFunctionCall","src":"16007:70:25"},"variableNames":[{"name":"pos","nativeSrc":"16000:3:25","nodeType":"YulIdentifier","src":"16000:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16125:5:25","nodeType":"YulIdentifier","src":"16125:5:25"},{"kind":"number","nativeSrc":"16132:4:25","nodeType":"YulLiteral","src":"16132:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16121:3:25","nodeType":"YulIdentifier","src":"16121:3:25"},"nativeSrc":"16121:16:25","nodeType":"YulFunctionCall","src":"16121:16:25"},{"name":"pos","nativeSrc":"16139:3:25","nodeType":"YulIdentifier","src":"16139:3:25"},{"name":"length","nativeSrc":"16144:6:25","nodeType":"YulIdentifier","src":"16144:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"16086:34:25","nodeType":"YulIdentifier","src":"16086:34:25"},"nativeSrc":"16086:65:25","nodeType":"YulFunctionCall","src":"16086:65:25"},"nativeSrc":"16086:65:25","nodeType":"YulExpressionStatement","src":"16086:65:25"},{"nativeSrc":"16160:46:25","nodeType":"YulAssignment","src":"16160:46:25","value":{"arguments":[{"name":"pos","nativeSrc":"16171:3:25","nodeType":"YulIdentifier","src":"16171:3:25"},{"arguments":[{"name":"length","nativeSrc":"16198:6:25","nodeType":"YulIdentifier","src":"16198:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"16176:21:25","nodeType":"YulIdentifier","src":"16176:21:25"},"nativeSrc":"16176:29:25","nodeType":"YulFunctionCall","src":"16176:29:25"}],"functionName":{"name":"add","nativeSrc":"16167:3:25","nodeType":"YulIdentifier","src":"16167:3:25"},"nativeSrc":"16167:39:25","nodeType":"YulFunctionCall","src":"16167:39:25"},"variableNames":[{"name":"end","nativeSrc":"16160:3:25","nodeType":"YulIdentifier","src":"16160:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"15839:373:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15910:5:25","nodeType":"YulTypedName","src":"15910:5:25","type":""},{"name":"pos","nativeSrc":"15917:3:25","nodeType":"YulTypedName","src":"15917:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15925:3:25","nodeType":"YulTypedName","src":"15925:3:25","type":""}],"src":"15839:373:25"},{"body":{"nativeSrc":"16418:440:25","nodeType":"YulBlock","src":"16418:440:25","statements":[{"nativeSrc":"16428:27:25","nodeType":"YulAssignment","src":"16428:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"16440:9:25","nodeType":"YulIdentifier","src":"16440:9:25"},{"kind":"number","nativeSrc":"16451:3:25","nodeType":"YulLiteral","src":"16451:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16436:3:25","nodeType":"YulIdentifier","src":"16436:3:25"},"nativeSrc":"16436:19:25","nodeType":"YulFunctionCall","src":"16436:19:25"},"variableNames":[{"name":"tail","nativeSrc":"16428:4:25","nodeType":"YulIdentifier","src":"16428:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16509:6:25","nodeType":"YulIdentifier","src":"16509:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"16522:9:25","nodeType":"YulIdentifier","src":"16522:9:25"},{"kind":"number","nativeSrc":"16533:1:25","nodeType":"YulLiteral","src":"16533:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16518:3:25","nodeType":"YulIdentifier","src":"16518:3:25"},"nativeSrc":"16518:17:25","nodeType":"YulFunctionCall","src":"16518:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16465:43:25","nodeType":"YulIdentifier","src":"16465:43:25"},"nativeSrc":"16465:71:25","nodeType":"YulFunctionCall","src":"16465:71:25"},"nativeSrc":"16465:71:25","nodeType":"YulExpressionStatement","src":"16465:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16590:6:25","nodeType":"YulIdentifier","src":"16590:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"16603:9:25","nodeType":"YulIdentifier","src":"16603:9:25"},{"kind":"number","nativeSrc":"16614:2:25","nodeType":"YulLiteral","src":"16614:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16599:3:25","nodeType":"YulIdentifier","src":"16599:3:25"},"nativeSrc":"16599:18:25","nodeType":"YulFunctionCall","src":"16599:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16546:43:25","nodeType":"YulIdentifier","src":"16546:43:25"},"nativeSrc":"16546:72:25","nodeType":"YulFunctionCall","src":"16546:72:25"},"nativeSrc":"16546:72:25","nodeType":"YulExpressionStatement","src":"16546:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"16672:6:25","nodeType":"YulIdentifier","src":"16672:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"16685:9:25","nodeType":"YulIdentifier","src":"16685:9:25"},{"kind":"number","nativeSrc":"16696:2:25","nodeType":"YulLiteral","src":"16696:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16681:3:25","nodeType":"YulIdentifier","src":"16681:3:25"},"nativeSrc":"16681:18:25","nodeType":"YulFunctionCall","src":"16681:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16628:43:25","nodeType":"YulIdentifier","src":"16628:43:25"},"nativeSrc":"16628:72:25","nodeType":"YulFunctionCall","src":"16628:72:25"},"nativeSrc":"16628:72:25","nodeType":"YulExpressionStatement","src":"16628:72:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16721:9:25","nodeType":"YulIdentifier","src":"16721:9:25"},{"kind":"number","nativeSrc":"16732:2:25","nodeType":"YulLiteral","src":"16732:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16717:3:25","nodeType":"YulIdentifier","src":"16717:3:25"},"nativeSrc":"16717:18:25","nodeType":"YulFunctionCall","src":"16717:18:25"},{"arguments":[{"name":"tail","nativeSrc":"16741:4:25","nodeType":"YulIdentifier","src":"16741:4:25"},{"name":"headStart","nativeSrc":"16747:9:25","nodeType":"YulIdentifier","src":"16747:9:25"}],"functionName":{"name":"sub","nativeSrc":"16737:3:25","nodeType":"YulIdentifier","src":"16737:3:25"},"nativeSrc":"16737:20:25","nodeType":"YulFunctionCall","src":"16737:20:25"}],"functionName":{"name":"mstore","nativeSrc":"16710:6:25","nodeType":"YulIdentifier","src":"16710:6:25"},"nativeSrc":"16710:48:25","nodeType":"YulFunctionCall","src":"16710:48:25"},"nativeSrc":"16710:48:25","nodeType":"YulExpressionStatement","src":"16710:48:25"},{"nativeSrc":"16767:84:25","nodeType":"YulAssignment","src":"16767:84:25","value":{"arguments":[{"name":"value3","nativeSrc":"16837:6:25","nodeType":"YulIdentifier","src":"16837:6:25"},{"name":"tail","nativeSrc":"16846:4:25","nodeType":"YulIdentifier","src":"16846:4:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"16775:61:25","nodeType":"YulIdentifier","src":"16775:61:25"},"nativeSrc":"16775:76:25","nodeType":"YulFunctionCall","src":"16775:76:25"},"variableNames":[{"name":"tail","nativeSrc":"16767:4:25","nodeType":"YulIdentifier","src":"16767:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"16218:640:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16366:9:25","nodeType":"YulTypedName","src":"16366:9:25","type":""},{"name":"value3","nativeSrc":"16378:6:25","nodeType":"YulTypedName","src":"16378:6:25","type":""},{"name":"value2","nativeSrc":"16386:6:25","nodeType":"YulTypedName","src":"16386:6:25","type":""},{"name":"value1","nativeSrc":"16394:6:25","nodeType":"YulTypedName","src":"16394:6:25","type":""},{"name":"value0","nativeSrc":"16402:6:25","nodeType":"YulTypedName","src":"16402:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16413:4:25","nodeType":"YulTypedName","src":"16413:4:25","type":""}],"src":"16218:640:25"},{"body":{"nativeSrc":"16926:79:25","nodeType":"YulBlock","src":"16926:79:25","statements":[{"nativeSrc":"16936:22:25","nodeType":"YulAssignment","src":"16936:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"16951:6:25","nodeType":"YulIdentifier","src":"16951:6:25"}],"functionName":{"name":"mload","nativeSrc":"16945:5:25","nodeType":"YulIdentifier","src":"16945:5:25"},"nativeSrc":"16945:13:25","nodeType":"YulFunctionCall","src":"16945:13:25"},"variableNames":[{"name":"value","nativeSrc":"16936:5:25","nodeType":"YulIdentifier","src":"16936:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"16993:5:25","nodeType":"YulIdentifier","src":"16993:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"16967:25:25","nodeType":"YulIdentifier","src":"16967:25:25"},"nativeSrc":"16967:32:25","nodeType":"YulFunctionCall","src":"16967:32:25"},"nativeSrc":"16967:32:25","nodeType":"YulExpressionStatement","src":"16967:32:25"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"16864:141:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16904:6:25","nodeType":"YulTypedName","src":"16904:6:25","type":""},{"name":"end","nativeSrc":"16912:3:25","nodeType":"YulTypedName","src":"16912:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16920:5:25","nodeType":"YulTypedName","src":"16920:5:25","type":""}],"src":"16864:141:25"},{"body":{"nativeSrc":"17087:273:25","nodeType":"YulBlock","src":"17087:273:25","statements":[{"body":{"nativeSrc":"17133:83:25","nodeType":"YulBlock","src":"17133:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17135:77:25","nodeType":"YulIdentifier","src":"17135:77:25"},"nativeSrc":"17135:79:25","nodeType":"YulFunctionCall","src":"17135:79:25"},"nativeSrc":"17135:79:25","nodeType":"YulExpressionStatement","src":"17135:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17108:7:25","nodeType":"YulIdentifier","src":"17108:7:25"},{"name":"headStart","nativeSrc":"17117:9:25","nodeType":"YulIdentifier","src":"17117:9:25"}],"functionName":{"name":"sub","nativeSrc":"17104:3:25","nodeType":"YulIdentifier","src":"17104:3:25"},"nativeSrc":"17104:23:25","nodeType":"YulFunctionCall","src":"17104:23:25"},{"kind":"number","nativeSrc":"17129:2:25","nodeType":"YulLiteral","src":"17129:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17100:3:25","nodeType":"YulIdentifier","src":"17100:3:25"},"nativeSrc":"17100:32:25","nodeType":"YulFunctionCall","src":"17100:32:25"},"nativeSrc":"17097:119:25","nodeType":"YulIf","src":"17097:119:25"},{"nativeSrc":"17226:127:25","nodeType":"YulBlock","src":"17226:127:25","statements":[{"nativeSrc":"17241:15:25","nodeType":"YulVariableDeclaration","src":"17241:15:25","value":{"kind":"number","nativeSrc":"17255:1:25","nodeType":"YulLiteral","src":"17255:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17245:6:25","nodeType":"YulTypedName","src":"17245:6:25","type":""}]},{"nativeSrc":"17270:73:25","nodeType":"YulAssignment","src":"17270:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17315:9:25","nodeType":"YulIdentifier","src":"17315:9:25"},{"name":"offset","nativeSrc":"17326:6:25","nodeType":"YulIdentifier","src":"17326:6:25"}],"functionName":{"name":"add","nativeSrc":"17311:3:25","nodeType":"YulIdentifier","src":"17311:3:25"},"nativeSrc":"17311:22:25","nodeType":"YulFunctionCall","src":"17311:22:25"},{"name":"dataEnd","nativeSrc":"17335:7:25","nodeType":"YulIdentifier","src":"17335:7:25"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"17280:30:25","nodeType":"YulIdentifier","src":"17280:30:25"},"nativeSrc":"17280:63:25","nodeType":"YulFunctionCall","src":"17280:63:25"},"variableNames":[{"name":"value0","nativeSrc":"17270:6:25","nodeType":"YulIdentifier","src":"17270:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"17011:349:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17057:9:25","nodeType":"YulTypedName","src":"17057:9:25","type":""},{"name":"dataEnd","nativeSrc":"17068:7:25","nodeType":"YulTypedName","src":"17068:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17080:6:25","nodeType":"YulTypedName","src":"17080:6:25","type":""}],"src":"17011:349:25"},{"body":{"nativeSrc":"17394:152:25","nodeType":"YulBlock","src":"17394:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17411:1:25","nodeType":"YulLiteral","src":"17411:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"17414:77:25","nodeType":"YulLiteral","src":"17414:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17404:6:25","nodeType":"YulIdentifier","src":"17404:6:25"},"nativeSrc":"17404:88:25","nodeType":"YulFunctionCall","src":"17404:88:25"},"nativeSrc":"17404:88:25","nodeType":"YulExpressionStatement","src":"17404:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17508:1:25","nodeType":"YulLiteral","src":"17508:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"17511:4:25","nodeType":"YulLiteral","src":"17511:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"17501:6:25","nodeType":"YulIdentifier","src":"17501:6:25"},"nativeSrc":"17501:15:25","nodeType":"YulFunctionCall","src":"17501:15:25"},"nativeSrc":"17501:15:25","nodeType":"YulExpressionStatement","src":"17501:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17532:1:25","nodeType":"YulLiteral","src":"17532:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"17535:4:25","nodeType":"YulLiteral","src":"17535:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17525:6:25","nodeType":"YulIdentifier","src":"17525:6:25"},"nativeSrc":"17525:15:25","nodeType":"YulFunctionCall","src":"17525:15:25"},"nativeSrc":"17525:15:25","nodeType":"YulExpressionStatement","src":"17525:15:25"}]},"name":"panic_error_0x12","nativeSrc":"17366:180:25","nodeType":"YulFunctionDefinition","src":"17366:180:25"},{"body":{"nativeSrc":"17678:206:25","nodeType":"YulBlock","src":"17678:206:25","statements":[{"nativeSrc":"17688:26:25","nodeType":"YulAssignment","src":"17688:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"17700:9:25","nodeType":"YulIdentifier","src":"17700:9:25"},{"kind":"number","nativeSrc":"17711:2:25","nodeType":"YulLiteral","src":"17711:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17696:3:25","nodeType":"YulIdentifier","src":"17696:3:25"},"nativeSrc":"17696:18:25","nodeType":"YulFunctionCall","src":"17696:18:25"},"variableNames":[{"name":"tail","nativeSrc":"17688:4:25","nodeType":"YulIdentifier","src":"17688:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17768:6:25","nodeType":"YulIdentifier","src":"17768:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"17781:9:25","nodeType":"YulIdentifier","src":"17781:9:25"},{"kind":"number","nativeSrc":"17792:1:25","nodeType":"YulLiteral","src":"17792:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17777:3:25","nodeType":"YulIdentifier","src":"17777:3:25"},"nativeSrc":"17777:17:25","nodeType":"YulFunctionCall","src":"17777:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17724:43:25","nodeType":"YulIdentifier","src":"17724:43:25"},"nativeSrc":"17724:71:25","nodeType":"YulFunctionCall","src":"17724:71:25"},"nativeSrc":"17724:71:25","nodeType":"YulExpressionStatement","src":"17724:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17849:6:25","nodeType":"YulIdentifier","src":"17849:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"17862:9:25","nodeType":"YulIdentifier","src":"17862:9:25"},{"kind":"number","nativeSrc":"17873:2:25","nodeType":"YulLiteral","src":"17873:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17858:3:25","nodeType":"YulIdentifier","src":"17858:3:25"},"nativeSrc":"17858:18:25","nodeType":"YulFunctionCall","src":"17858:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17805:43:25","nodeType":"YulIdentifier","src":"17805:43:25"},"nativeSrc":"17805:72:25","nodeType":"YulFunctionCall","src":"17805:72:25"},"nativeSrc":"17805:72:25","nodeType":"YulExpressionStatement","src":"17805:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"17552:332:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17642:9:25","nodeType":"YulTypedName","src":"17642:9:25","type":""},{"name":"value1","nativeSrc":"17654:6:25","nodeType":"YulTypedName","src":"17654:6:25","type":""},{"name":"value0","nativeSrc":"17662:6:25","nodeType":"YulTypedName","src":"17662:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17673:4:25","nodeType":"YulTypedName","src":"17673:4:25","type":""}],"src":"17552:332:25"},{"body":{"nativeSrc":"18042:286:25","nodeType":"YulBlock","src":"18042:286:25","statements":[{"nativeSrc":"18052:26:25","nodeType":"YulAssignment","src":"18052:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"18064:9:25","nodeType":"YulIdentifier","src":"18064:9:25"},{"kind":"number","nativeSrc":"18075:2:25","nodeType":"YulLiteral","src":"18075:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18060:3:25","nodeType":"YulIdentifier","src":"18060:3:25"},"nativeSrc":"18060:18:25","nodeType":"YulFunctionCall","src":"18060:18:25"},"variableNames":[{"name":"tail","nativeSrc":"18052:4:25","nodeType":"YulIdentifier","src":"18052:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18132:6:25","nodeType":"YulIdentifier","src":"18132:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"18145:9:25","nodeType":"YulIdentifier","src":"18145:9:25"},{"kind":"number","nativeSrc":"18156:1:25","nodeType":"YulLiteral","src":"18156:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18141:3:25","nodeType":"YulIdentifier","src":"18141:3:25"},"nativeSrc":"18141:17:25","nodeType":"YulFunctionCall","src":"18141:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18088:43:25","nodeType":"YulIdentifier","src":"18088:43:25"},"nativeSrc":"18088:71:25","nodeType":"YulFunctionCall","src":"18088:71:25"},"nativeSrc":"18088:71:25","nodeType":"YulExpressionStatement","src":"18088:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18213:6:25","nodeType":"YulIdentifier","src":"18213:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"18226:9:25","nodeType":"YulIdentifier","src":"18226:9:25"},{"kind":"number","nativeSrc":"18237:2:25","nodeType":"YulLiteral","src":"18237:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18222:3:25","nodeType":"YulIdentifier","src":"18222:3:25"},"nativeSrc":"18222:18:25","nodeType":"YulFunctionCall","src":"18222:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18169:43:25","nodeType":"YulIdentifier","src":"18169:43:25"},"nativeSrc":"18169:72:25","nodeType":"YulFunctionCall","src":"18169:72:25"},"nativeSrc":"18169:72:25","nodeType":"YulExpressionStatement","src":"18169:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"18293:6:25","nodeType":"YulIdentifier","src":"18293:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"18306:9:25","nodeType":"YulIdentifier","src":"18306:9:25"},{"kind":"number","nativeSrc":"18317:2:25","nodeType":"YulLiteral","src":"18317:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18302:3:25","nodeType":"YulIdentifier","src":"18302:3:25"},"nativeSrc":"18302:18:25","nodeType":"YulFunctionCall","src":"18302:18:25"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"18251:41:25","nodeType":"YulIdentifier","src":"18251:41:25"},"nativeSrc":"18251:70:25","nodeType":"YulFunctionCall","src":"18251:70:25"},"nativeSrc":"18251:70:25","nodeType":"YulExpressionStatement","src":"18251:70:25"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed","nativeSrc":"17890:438:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17998:9:25","nodeType":"YulTypedName","src":"17998:9:25","type":""},{"name":"value2","nativeSrc":"18010:6:25","nodeType":"YulTypedName","src":"18010:6:25","type":""},{"name":"value1","nativeSrc":"18018:6:25","nodeType":"YulTypedName","src":"18018:6:25","type":""},{"name":"value0","nativeSrc":"18026:6:25","nodeType":"YulTypedName","src":"18026:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18037:4:25","nodeType":"YulTypedName","src":"18037:4:25","type":""}],"src":"17890:438:25"},{"body":{"nativeSrc":"18447:34:25","nodeType":"YulBlock","src":"18447:34:25","statements":[{"nativeSrc":"18457:18:25","nodeType":"YulAssignment","src":"18457:18:25","value":{"name":"pos","nativeSrc":"18472:3:25","nodeType":"YulIdentifier","src":"18472:3:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"18457:11:25","nodeType":"YulIdentifier","src":"18457:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18334:147:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18419:3:25","nodeType":"YulTypedName","src":"18419:3:25","type":""},{"name":"length","nativeSrc":"18424:6:25","nodeType":"YulTypedName","src":"18424:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"18435:11:25","nodeType":"YulTypedName","src":"18435:11:25","type":""}],"src":"18334:147:25"},{"body":{"nativeSrc":"18595:278:25","nodeType":"YulBlock","src":"18595:278:25","statements":[{"nativeSrc":"18605:52:25","nodeType":"YulVariableDeclaration","src":"18605:52:25","value":{"arguments":[{"name":"value","nativeSrc":"18651:5:25","nodeType":"YulIdentifier","src":"18651:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"18619:31:25","nodeType":"YulIdentifier","src":"18619:31:25"},"nativeSrc":"18619:38:25","nodeType":"YulFunctionCall","src":"18619:38:25"},"variables":[{"name":"length","nativeSrc":"18609:6:25","nodeType":"YulTypedName","src":"18609:6:25","type":""}]},{"nativeSrc":"18666:95:25","nodeType":"YulAssignment","src":"18666:95:25","value":{"arguments":[{"name":"pos","nativeSrc":"18749:3:25","nodeType":"YulIdentifier","src":"18749:3:25"},{"name":"length","nativeSrc":"18754:6:25","nodeType":"YulIdentifier","src":"18754:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18673:75:25","nodeType":"YulIdentifier","src":"18673:75:25"},"nativeSrc":"18673:88:25","nodeType":"YulFunctionCall","src":"18673:88:25"},"variableNames":[{"name":"pos","nativeSrc":"18666:3:25","nodeType":"YulIdentifier","src":"18666:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18809:5:25","nodeType":"YulIdentifier","src":"18809:5:25"},{"kind":"number","nativeSrc":"18816:4:25","nodeType":"YulLiteral","src":"18816:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18805:3:25","nodeType":"YulIdentifier","src":"18805:3:25"},"nativeSrc":"18805:16:25","nodeType":"YulFunctionCall","src":"18805:16:25"},{"name":"pos","nativeSrc":"18823:3:25","nodeType":"YulIdentifier","src":"18823:3:25"},{"name":"length","nativeSrc":"18828:6:25","nodeType":"YulIdentifier","src":"18828:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"18770:34:25","nodeType":"YulIdentifier","src":"18770:34:25"},"nativeSrc":"18770:65:25","nodeType":"YulFunctionCall","src":"18770:65:25"},"nativeSrc":"18770:65:25","nodeType":"YulExpressionStatement","src":"18770:65:25"},{"nativeSrc":"18844:23:25","nodeType":"YulAssignment","src":"18844:23:25","value":{"arguments":[{"name":"pos","nativeSrc":"18855:3:25","nodeType":"YulIdentifier","src":"18855:3:25"},{"name":"length","nativeSrc":"18860:6:25","nodeType":"YulIdentifier","src":"18860:6:25"}],"functionName":{"name":"add","nativeSrc":"18851:3:25","nodeType":"YulIdentifier","src":"18851:3:25"},"nativeSrc":"18851:16:25","nodeType":"YulFunctionCall","src":"18851:16:25"},"variableNames":[{"name":"end","nativeSrc":"18844:3:25","nodeType":"YulIdentifier","src":"18844:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18487:386:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18576:5:25","nodeType":"YulTypedName","src":"18576:5:25","type":""},{"name":"pos","nativeSrc":"18583:3:25","nodeType":"YulTypedName","src":"18583:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18591:3:25","nodeType":"YulTypedName","src":"18591:3:25","type":""}],"src":"18487:386:25"},{"body":{"nativeSrc":"19013:137:25","nodeType":"YulBlock","src":"19013:137:25","statements":[{"nativeSrc":"19024:100:25","nodeType":"YulAssignment","src":"19024:100:25","value":{"arguments":[{"name":"value0","nativeSrc":"19111:6:25","nodeType":"YulIdentifier","src":"19111:6:25"},{"name":"pos","nativeSrc":"19120:3:25","nodeType":"YulIdentifier","src":"19120:3:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19031:79:25","nodeType":"YulIdentifier","src":"19031:79:25"},"nativeSrc":"19031:93:25","nodeType":"YulFunctionCall","src":"19031:93:25"},"variableNames":[{"name":"pos","nativeSrc":"19024:3:25","nodeType":"YulIdentifier","src":"19024:3:25"}]},{"nativeSrc":"19134:10:25","nodeType":"YulAssignment","src":"19134:10:25","value":{"name":"pos","nativeSrc":"19141:3:25","nodeType":"YulIdentifier","src":"19141:3:25"},"variableNames":[{"name":"end","nativeSrc":"19134:3:25","nodeType":"YulIdentifier","src":"19134:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"18879:271:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18992:3:25","nodeType":"YulTypedName","src":"18992:3:25","type":""},{"name":"value0","nativeSrc":"18998:6:25","nodeType":"YulTypedName","src":"18998:6:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19009:3:25","nodeType":"YulTypedName","src":"19009:3:25","type":""}],"src":"18879:271:25"},{"body":{"nativeSrc":"19216:77:25","nodeType":"YulBlock","src":"19216:77:25","statements":[{"nativeSrc":"19226:22:25","nodeType":"YulAssignment","src":"19226:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"19241:6:25","nodeType":"YulIdentifier","src":"19241:6:25"}],"functionName":{"name":"mload","nativeSrc":"19235:5:25","nodeType":"YulIdentifier","src":"19235:5:25"},"nativeSrc":"19235:13:25","nodeType":"YulFunctionCall","src":"19235:13:25"},"variableNames":[{"name":"value","nativeSrc":"19226:5:25","nodeType":"YulIdentifier","src":"19226:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"19281:5:25","nodeType":"YulIdentifier","src":"19281:5:25"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"19257:23:25","nodeType":"YulIdentifier","src":"19257:23:25"},"nativeSrc":"19257:30:25","nodeType":"YulFunctionCall","src":"19257:30:25"},"nativeSrc":"19257:30:25","nodeType":"YulExpressionStatement","src":"19257:30:25"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"19156:137:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"19194:6:25","nodeType":"YulTypedName","src":"19194:6:25","type":""},{"name":"end","nativeSrc":"19202:3:25","nodeType":"YulTypedName","src":"19202:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"19210:5:25","nodeType":"YulTypedName","src":"19210:5:25","type":""}],"src":"19156:137:25"},{"body":{"nativeSrc":"19343:49:25","nodeType":"YulBlock","src":"19343:49:25","statements":[{"nativeSrc":"19353:33:25","nodeType":"YulAssignment","src":"19353:33:25","value":{"arguments":[{"name":"value","nativeSrc":"19368:5:25","nodeType":"YulIdentifier","src":"19368:5:25"},{"kind":"number","nativeSrc":"19375:10:25","nodeType":"YulLiteral","src":"19375:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"19364:3:25","nodeType":"YulIdentifier","src":"19364:3:25"},"nativeSrc":"19364:22:25","nodeType":"YulFunctionCall","src":"19364:22:25"},"variableNames":[{"name":"cleaned","nativeSrc":"19353:7:25","nodeType":"YulIdentifier","src":"19353:7:25"}]}]},"name":"cleanup_t_uint32","nativeSrc":"19299:93:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19325:5:25","nodeType":"YulTypedName","src":"19325:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"19335:7:25","nodeType":"YulTypedName","src":"19335:7:25","type":""}],"src":"19299:93:25"},{"body":{"nativeSrc":"19440:78:25","nodeType":"YulBlock","src":"19440:78:25","statements":[{"body":{"nativeSrc":"19496:16:25","nodeType":"YulBlock","src":"19496:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19505:1:25","nodeType":"YulLiteral","src":"19505:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"19508:1:25","nodeType":"YulLiteral","src":"19508:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19498:6:25","nodeType":"YulIdentifier","src":"19498:6:25"},"nativeSrc":"19498:12:25","nodeType":"YulFunctionCall","src":"19498:12:25"},"nativeSrc":"19498:12:25","nodeType":"YulExpressionStatement","src":"19498:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19463:5:25","nodeType":"YulIdentifier","src":"19463:5:25"},{"arguments":[{"name":"value","nativeSrc":"19487:5:25","nodeType":"YulIdentifier","src":"19487:5:25"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"19470:16:25","nodeType":"YulIdentifier","src":"19470:16:25"},"nativeSrc":"19470:23:25","nodeType":"YulFunctionCall","src":"19470:23:25"}],"functionName":{"name":"eq","nativeSrc":"19460:2:25","nodeType":"YulIdentifier","src":"19460:2:25"},"nativeSrc":"19460:34:25","nodeType":"YulFunctionCall","src":"19460:34:25"}],"functionName":{"name":"iszero","nativeSrc":"19453:6:25","nodeType":"YulIdentifier","src":"19453:6:25"},"nativeSrc":"19453:42:25","nodeType":"YulFunctionCall","src":"19453:42:25"},"nativeSrc":"19450:62:25","nodeType":"YulIf","src":"19450:62:25"}]},"name":"validator_revert_t_uint32","nativeSrc":"19398:120:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19433:5:25","nodeType":"YulTypedName","src":"19433:5:25","type":""}],"src":"19398:120:25"},{"body":{"nativeSrc":"19586:79:25","nodeType":"YulBlock","src":"19586:79:25","statements":[{"nativeSrc":"19596:22:25","nodeType":"YulAssignment","src":"19596:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"19611:6:25","nodeType":"YulIdentifier","src":"19611:6:25"}],"functionName":{"name":"mload","nativeSrc":"19605:5:25","nodeType":"YulIdentifier","src":"19605:5:25"},"nativeSrc":"19605:13:25","nodeType":"YulFunctionCall","src":"19605:13:25"},"variableNames":[{"name":"value","nativeSrc":"19596:5:25","nodeType":"YulIdentifier","src":"19596:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"19653:5:25","nodeType":"YulIdentifier","src":"19653:5:25"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"19627:25:25","nodeType":"YulIdentifier","src":"19627:25:25"},"nativeSrc":"19627:32:25","nodeType":"YulFunctionCall","src":"19627:32:25"},"nativeSrc":"19627:32:25","nodeType":"YulExpressionStatement","src":"19627:32:25"}]},"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"19524:141:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"19564:6:25","nodeType":"YulTypedName","src":"19564:6:25","type":""},{"name":"end","nativeSrc":"19572:3:25","nodeType":"YulTypedName","src":"19572:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"19580:5:25","nodeType":"YulTypedName","src":"19580:5:25","type":""}],"src":"19524:141:25"},{"body":{"nativeSrc":"19761:409:25","nodeType":"YulBlock","src":"19761:409:25","statements":[{"body":{"nativeSrc":"19807:83:25","nodeType":"YulBlock","src":"19807:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19809:77:25","nodeType":"YulIdentifier","src":"19809:77:25"},"nativeSrc":"19809:79:25","nodeType":"YulFunctionCall","src":"19809:79:25"},"nativeSrc":"19809:79:25","nodeType":"YulExpressionStatement","src":"19809:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19782:7:25","nodeType":"YulIdentifier","src":"19782:7:25"},{"name":"headStart","nativeSrc":"19791:9:25","nodeType":"YulIdentifier","src":"19791:9:25"}],"functionName":{"name":"sub","nativeSrc":"19778:3:25","nodeType":"YulIdentifier","src":"19778:3:25"},"nativeSrc":"19778:23:25","nodeType":"YulFunctionCall","src":"19778:23:25"},{"kind":"number","nativeSrc":"19803:2:25","nodeType":"YulLiteral","src":"19803:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"19774:3:25","nodeType":"YulIdentifier","src":"19774:3:25"},"nativeSrc":"19774:32:25","nodeType":"YulFunctionCall","src":"19774:32:25"},"nativeSrc":"19771:119:25","nodeType":"YulIf","src":"19771:119:25"},{"nativeSrc":"19900:125:25","nodeType":"YulBlock","src":"19900:125:25","statements":[{"nativeSrc":"19915:15:25","nodeType":"YulVariableDeclaration","src":"19915:15:25","value":{"kind":"number","nativeSrc":"19929:1:25","nodeType":"YulLiteral","src":"19929:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19919:6:25","nodeType":"YulTypedName","src":"19919:6:25","type":""}]},{"nativeSrc":"19944:71:25","nodeType":"YulAssignment","src":"19944:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19987:9:25","nodeType":"YulIdentifier","src":"19987:9:25"},{"name":"offset","nativeSrc":"19998:6:25","nodeType":"YulIdentifier","src":"19998:6:25"}],"functionName":{"name":"add","nativeSrc":"19983:3:25","nodeType":"YulIdentifier","src":"19983:3:25"},"nativeSrc":"19983:22:25","nodeType":"YulFunctionCall","src":"19983:22:25"},{"name":"dataEnd","nativeSrc":"20007:7:25","nodeType":"YulIdentifier","src":"20007:7:25"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"19954:28:25","nodeType":"YulIdentifier","src":"19954:28:25"},"nativeSrc":"19954:61:25","nodeType":"YulFunctionCall","src":"19954:61:25"},"variableNames":[{"name":"value0","nativeSrc":"19944:6:25","nodeType":"YulIdentifier","src":"19944:6:25"}]}]},{"nativeSrc":"20035:128:25","nodeType":"YulBlock","src":"20035:128:25","statements":[{"nativeSrc":"20050:16:25","nodeType":"YulVariableDeclaration","src":"20050:16:25","value":{"kind":"number","nativeSrc":"20064:2:25","nodeType":"YulLiteral","src":"20064:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"20054:6:25","nodeType":"YulTypedName","src":"20054:6:25","type":""}]},{"nativeSrc":"20080:73:25","nodeType":"YulAssignment","src":"20080:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20125:9:25","nodeType":"YulIdentifier","src":"20125:9:25"},{"name":"offset","nativeSrc":"20136:6:25","nodeType":"YulIdentifier","src":"20136:6:25"}],"functionName":{"name":"add","nativeSrc":"20121:3:25","nodeType":"YulIdentifier","src":"20121:3:25"},"nativeSrc":"20121:22:25","nodeType":"YulFunctionCall","src":"20121:22:25"},{"name":"dataEnd","nativeSrc":"20145:7:25","nodeType":"YulIdentifier","src":"20145:7:25"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"20090:30:25","nodeType":"YulIdentifier","src":"20090:30:25"},"nativeSrc":"20090:63:25","nodeType":"YulFunctionCall","src":"20090:63:25"},"variableNames":[{"name":"value1","nativeSrc":"20080:6:25","nodeType":"YulIdentifier","src":"20080:6:25"}]}]}]},"name":"abi_decode_tuple_t_boolt_uint32_fromMemory","nativeSrc":"19671:499:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19723:9:25","nodeType":"YulTypedName","src":"19723:9:25","type":""},{"name":"dataEnd","nativeSrc":"19734:7:25","nodeType":"YulTypedName","src":"19734:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19746:6:25","nodeType":"YulTypedName","src":"19746:6:25","type":""},{"name":"value1","nativeSrc":"19754:6:25","nodeType":"YulTypedName","src":"19754:6:25","type":""}],"src":"19671:499:25"},{"body":{"nativeSrc":"20250:271:25","nodeType":"YulBlock","src":"20250:271:25","statements":[{"body":{"nativeSrc":"20296:83:25","nodeType":"YulBlock","src":"20296:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"20298:77:25","nodeType":"YulIdentifier","src":"20298:77:25"},"nativeSrc":"20298:79:25","nodeType":"YulFunctionCall","src":"20298:79:25"},"nativeSrc":"20298:79:25","nodeType":"YulExpressionStatement","src":"20298:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20271:7:25","nodeType":"YulIdentifier","src":"20271:7:25"},{"name":"headStart","nativeSrc":"20280:9:25","nodeType":"YulIdentifier","src":"20280:9:25"}],"functionName":{"name":"sub","nativeSrc":"20267:3:25","nodeType":"YulIdentifier","src":"20267:3:25"},"nativeSrc":"20267:23:25","nodeType":"YulFunctionCall","src":"20267:23:25"},{"kind":"number","nativeSrc":"20292:2:25","nodeType":"YulLiteral","src":"20292:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"20263:3:25","nodeType":"YulIdentifier","src":"20263:3:25"},"nativeSrc":"20263:32:25","nodeType":"YulFunctionCall","src":"20263:32:25"},"nativeSrc":"20260:119:25","nodeType":"YulIf","src":"20260:119:25"},{"nativeSrc":"20389:125:25","nodeType":"YulBlock","src":"20389:125:25","statements":[{"nativeSrc":"20404:15:25","nodeType":"YulVariableDeclaration","src":"20404:15:25","value":{"kind":"number","nativeSrc":"20418:1:25","nodeType":"YulLiteral","src":"20418:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"20408:6:25","nodeType":"YulTypedName","src":"20408:6:25","type":""}]},{"nativeSrc":"20433:71:25","nodeType":"YulAssignment","src":"20433:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20476:9:25","nodeType":"YulIdentifier","src":"20476:9:25"},{"name":"offset","nativeSrc":"20487:6:25","nodeType":"YulIdentifier","src":"20487:6:25"}],"functionName":{"name":"add","nativeSrc":"20472:3:25","nodeType":"YulIdentifier","src":"20472:3:25"},"nativeSrc":"20472:22:25","nodeType":"YulFunctionCall","src":"20472:22:25"},{"name":"dataEnd","nativeSrc":"20496:7:25","nodeType":"YulIdentifier","src":"20496:7:25"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"20443:28:25","nodeType":"YulIdentifier","src":"20443:28:25"},"nativeSrc":"20443:61:25","nodeType":"YulFunctionCall","src":"20443:61:25"},"variableNames":[{"name":"value0","nativeSrc":"20433:6:25","nodeType":"YulIdentifier","src":"20433:6:25"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"20176:345:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20220:9:25","nodeType":"YulTypedName","src":"20220:9:25","type":""},{"name":"dataEnd","nativeSrc":"20231:7:25","nodeType":"YulTypedName","src":"20231:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20243:6:25","nodeType":"YulTypedName","src":"20243:6:25","type":""}],"src":"20176:345:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes4(calldataload(dataArea))\n\n        if lt(length, 4) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(4, length)),\n                    0xffffffff00000000000000000000000000000000000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint32_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102dd578063b88d4fde146102f9578063bf7e214f14610315578063c87b56dd14610333578063e985e9c51461036357610116565b806370a08231146102555780637a9e5e4b146102855780638fb36037146102a157806395d89b41146102bf57610116565b806323b872dd116100e957806323b872dd146101b557806340d097c3146101d157806342842e0e146101ed57806342966c68146102095780636352211e1461022557610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611b5c565b610393565b6040516101429190611ba4565b60405180910390f35b610153610475565b6040516101609190611c4f565b60405180910390f35b610183600480360381019061017e9190611ca7565b610507565b6040516101909190611d15565b60405180910390f35b6101b360048036038101906101ae9190611d5c565b610523565b005b6101cf60048036038101906101ca9190611d9c565b610539565b005b6101eb60048036038101906101e69190611def565b61063b565b005b61020760048036038101906102029190611d9c565b61067c565b005b610223600480360381019061021e9190611ca7565b61069c565b005b61023f600480360381019061023a9190611ca7565b6106b3565b60405161024c9190611d15565b60405180910390f35b61026f600480360381019061026a9190611def565b6106c5565b60405161027c9190611e2b565b60405180910390f35b61029f600480360381019061029a9190611def565b61077f565b005b6102a961086b565b6040516102b69190611e55565b60405180910390f35b6102c7610899565b6040516102d49190611c4f565b60405180910390f35b6102f760048036038101906102f29190611e9c565b61092b565b005b610313600480360381019061030e9190612011565b610941565b005b61031d61095e565b60405161032a9190611d15565b60405180910390f35b61034d60048036038101906103489190611ca7565b610988565b60405161035a9190611c4f565b60405180910390f35b61037d60048036038101906103789190612094565b6109f1565b60405161038a9190611ba4565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610a85565b5b9050919050565b60606000805461048490612103565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090612103565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b600061051282610aef565b5061051c82610b77565b9050919050565b6105358282610530610bb4565b610bbc565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a29190611d15565b60405180910390fd5b60006105bf83836105ba610bb4565b610bce565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610635578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062c93929190612134565b60405180910390fd5b50505050565b610653610646610bb4565b61064e610de8565b610df5565b6000600760008154809291906106689061219a565b9190505590506106788282610f37565b5050565b61069783838360405180602001604052806000815250610941565b505050565b6106af6000826106aa610bb4565b610bce565b5050565b60006106be82610aef565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107385760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161072f9190611d15565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610789610bb4565b905061079361095e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461080257806040517f068ca9d80000000000000000000000000000000000000000000000000000000081526004016107f99190611d15565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff163b0361085e57816040517fc2f31e5e0000000000000000000000000000000000000000000000000000000081526004016108559190611d15565b60405180910390fd5b61086782610f55565b5050565b6000600660149054906101000a900460ff1661088b57600060e01b610894565b638fb3603760e01b5b905090565b6060600180546108a890612103565b80601f01602080910402602001604051908101604052809291908181526020018280546108d490612103565b80156109215780601f106108f657610100808354040283529160200191610921565b820191906000526020600020905b81548152906001019060200180831161090457829003601f168201915b5050505050905090565b61093d610936610bb4565b8383610fd0565b5050565b61094c848484610539565b6109588484848461113f565b50505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061099382610aef565b50600061099e6112f6565b905060008151116109be57604051806020016040528060008152506109e9565b806109c88461130d565b6040516020016109d992919061221e565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610afb836113db565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b6e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b659190611e2b565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bc98383836001611418565b505050565b600080610bda846113db565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c1c57610c1b8184866115dd565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cad57610c5e600085600080611418565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d30576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b3660008036915091509091565b600080610e29610e0361095e565b86308787600090600492610e199392919061224c565b90610e24919061229f565b6116a1565b9150915081610f305760008163ffffffff161115610ef2576001600660146101000a81548160ff021916908315150217905550610e6461095e565b73ffffffffffffffffffffffffffffffffffffffff166394c7d7ee8686866040518463ffffffff1660e01b8152600401610ea09392919061233c565b600060405180830381600087803b158015610eba57600080fd5b505af1158015610ece573d6000803e3d6000fd5b505050506000600660146101000a81548160ff021916908315150217905550610f2f565b846040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401610f269190611d15565b60405180910390fd5b5b5050505050565b610f518282604051806020016040528060008152506117c7565b5050565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad81604051610fc59190611d15565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361104157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110389190611d15565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111329190611ba4565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156112f0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611183610bb4565b8685856040518563ffffffff1660e01b81526004016111a594939291906123b2565b6020604051808303816000875af19250505080156111e157506040513d601f19601f820116820180604052508101906111de9190612413565b60015b611265573d8060008114611211576040519150601f19603f3d011682016040523d82523d6000602084013e611216565b606091505b50600081510361125d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112549190611d15565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112ee57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112e59190611d15565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606000600161131c846117e3565b01905060008167ffffffffffffffff81111561133b5761133a611ee6565b5b6040519080825280601f01601f19166020018201604052801561136d5781602001600182028036833780820191505090505b509050600082602001820190505b6001156113d0578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113c4576113c3612440565b5b0494506000850361137b575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114515750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561158557600061146184610aef565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114cc57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156114df57506114dd81846109f1565b155b1561152157826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115189190611d15565b60405180910390fd5b811561158357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6115e8838383611936565b61169c57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361165d57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116549190611e2b565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161169392919061246f565b60405180910390fd5b505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff168787876040516024016116d393929190612498565b60405160208183030381529060405263b700961360e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611725919061250b565b600060405180830381855afa9150503d8060008114611760576040519150601f19603f3d011682016040523d82523d6000602084013e611765565b606091505b509150915081156117bc57604081511061179a578080602001905181019061178d9190612573565b80945081955050506117bb565b60208151106117ba57808060200190518101906117b791906125b3565b93505b5b5b505094509492505050565b6117d183836119f7565b6117de600084848461113f565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611841577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161183757611836612440565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061187e576d04ee2d6d415b85acef8100000000838161187457611873612440565b5b0492506020810190505b662386f26fc1000083106118ad57662386f26fc1000083816118a3576118a2612440565b5b0492506010810190505b6305f5e10083106118d6576305f5e10083816118cc576118cb612440565b5b0492506008810190505b61271083106118fb5761271083816118f1576118f0612440565b5b0492506004810190505b6064831061191e576064838161191457611913612440565b5b0492506002810190505b600a831061192d576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119ee57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119af57506119ae84846109f1565b5b806119ed57508273ffffffffffffffffffffffffffffffffffffffff166119d583610b77565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a695760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a609190611d15565b60405180910390fd5b6000611a7783836000610bce565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611aeb5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ae29190611d15565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b3981611b04565b8114611b4457600080fd5b50565b600081359050611b5681611b30565b92915050565b600060208284031215611b7257611b71611afa565b5b6000611b8084828501611b47565b91505092915050565b60008115159050919050565b611b9e81611b89565b82525050565b6000602082019050611bb96000830184611b95565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bf9578082015181840152602081019050611bde565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c2182611bbf565b611c2b8185611bca565b9350611c3b818560208601611bdb565b611c4481611c05565b840191505092915050565b60006020820190508181036000830152611c698184611c16565b905092915050565b6000819050919050565b611c8481611c71565b8114611c8f57600080fd5b50565b600081359050611ca181611c7b565b92915050565b600060208284031215611cbd57611cbc611afa565b5b6000611ccb84828501611c92565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cff82611cd4565b9050919050565b611d0f81611cf4565b82525050565b6000602082019050611d2a6000830184611d06565b92915050565b611d3981611cf4565b8114611d4457600080fd5b50565b600081359050611d5681611d30565b92915050565b60008060408385031215611d7357611d72611afa565b5b6000611d8185828601611d47565b9250506020611d9285828601611c92565b9150509250929050565b600080600060608486031215611db557611db4611afa565b5b6000611dc386828701611d47565b9350506020611dd486828701611d47565b9250506040611de586828701611c92565b9150509250925092565b600060208284031215611e0557611e04611afa565b5b6000611e1384828501611d47565b91505092915050565b611e2581611c71565b82525050565b6000602082019050611e406000830184611e1c565b92915050565b611e4f81611b04565b82525050565b6000602082019050611e6a6000830184611e46565b92915050565b611e7981611b89565b8114611e8457600080fd5b50565b600081359050611e9681611e70565b92915050565b60008060408385031215611eb357611eb2611afa565b5b6000611ec185828601611d47565b9250506020611ed285828601611e87565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f1e82611c05565b810181811067ffffffffffffffff82111715611f3d57611f3c611ee6565b5b80604052505050565b6000611f50611af0565b9050611f5c8282611f15565b919050565b600067ffffffffffffffff821115611f7c57611f7b611ee6565b5b611f8582611c05565b9050602081019050919050565b82818337600083830152505050565b6000611fb4611faf84611f61565b611f46565b905082815260208101848484011115611fd057611fcf611ee1565b5b611fdb848285611f92565b509392505050565b600082601f830112611ff857611ff7611edc565b5b8135612008848260208601611fa1565b91505092915050565b6000806000806080858703121561202b5761202a611afa565b5b600061203987828801611d47565b945050602061204a87828801611d47565b935050604061205b87828801611c92565b925050606085013567ffffffffffffffff81111561207c5761207b611aff565b5b61208887828801611fe3565b91505092959194509250565b600080604083850312156120ab576120aa611afa565b5b60006120b985828601611d47565b92505060206120ca85828601611d47565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061211b57607f821691505b60208210810361212e5761212d6120d4565b5b50919050565b60006060820190506121496000830186611d06565b6121566020830185611e1c565b6121636040830184611d06565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121a582611c71565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121d7576121d661216b565b5b600182019050919050565b600081905092915050565b60006121f882611bbf565b61220281856121e2565b9350612212818560208601611bdb565b80840191505092915050565b600061222a82856121ed565b915061223682846121ed565b91508190509392505050565b600080fd5b600080fd5b600080858511156122605761225f612242565b5b8386111561227157612270612247565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b60006122ab8383612287565b826122b68135611b04565b925060048210156122f6576122f17fffffffff0000000000000000000000000000000000000000000000000000000083600403600802612292565b831692505b505092915050565b600082825260208201905092915050565b600061231b83856122fe565b9350612328838584611f92565b61233183611c05565b840190509392505050565b60006040820190506123516000830186611d06565b818103602083015261236481848661230f565b9050949350505050565b600081519050919050565b60006123848261236e565b61238e81856122fe565b935061239e818560208601611bdb565b6123a781611c05565b840191505092915050565b60006080820190506123c76000830187611d06565b6123d46020830186611d06565b6123e16040830185611e1c565b81810360608301526123f38184612379565b905095945050505050565b60008151905061240d81611b30565b92915050565b60006020828403121561242957612428611afa565b5b6000612437848285016123fe565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506124846000830185611d06565b6124916020830184611e1c565b9392505050565b60006060820190506124ad6000830186611d06565b6124ba6020830185611d06565b6124c76040830184611e46565b949350505050565b600081905092915050565b60006124e58261236e565b6124ef81856124cf565b93506124ff818560208601611bdb565b80840191505092915050565b600061251782846124da565b915081905092915050565b60008151905061253181611e70565b92915050565b600063ffffffff82169050919050565b61255081612537565b811461255b57600080fd5b50565b60008151905061256d81612547565b92915050565b6000806040838503121561258a57612589611afa565b5b600061259885828601612522565b92505060206125a98582860161255e565b9150509250929050565b6000602082840312156125c9576125c8611afa565b5b60006125d784828501612522565b9150509291505056fea264697066735822122056abdb6c2a3356e10dba14baef6d47099b5ace067cd90e6110e4b0259664fd3b64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x363 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8FB36037 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BF JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x225 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2094 JUMP JUMPDEST PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46E JUMPI POP PUSH2 0x46D DUP3 PUSH2 0xA85 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x2103 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B0 SWAP1 PUSH2 0x2103 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0xAEF JUMP JUMPDEST POP PUSH2 0x51C DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 DUP3 DUP3 PUSH2 0x530 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xBBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP4 DUP4 PUSH2 0x5BA PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x635 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2134 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x653 PUSH2 0x646 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x64E PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x668 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x678 DUP3 DUP3 PUSH2 0xF37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x697 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x941 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6AF PUSH1 0x0 DUP3 PUSH2 0x6AA PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BE DUP3 PUSH2 0xAEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x738 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x789 PUSH2 0xBB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x793 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x802 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x85E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xC2F31E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x867 DUP3 PUSH2 0xF55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x88B JUMPI PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0x894 JUMP JUMPDEST PUSH4 0x8FB36037 PUSH1 0xE0 SHL JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8A8 SWAP1 PUSH2 0x2103 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D4 SWAP1 PUSH2 0x2103 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x921 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x921 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x904 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x93D PUSH2 0x936 PUSH2 0xBB4 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFD0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x94C DUP5 DUP5 DUP5 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x958 DUP5 DUP5 DUP5 DUP5 PUSH2 0x113F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x993 DUP3 PUSH2 0xAEF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x99E PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9E9 JUMP JUMPDEST DUP1 PUSH2 0x9C8 DUP5 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D9 SWAP3 SWAP2 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAFB DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBC9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1418 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBDA DUP5 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC1C JUMPI PUSH2 0xC1B DUP2 DUP5 DUP7 PUSH2 0x15DD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAD JUMPI PUSH2 0xC5E PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD30 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE29 PUSH2 0xE03 PUSH2 0x95E JUMP JUMPDEST DUP7 ADDRESS DUP8 DUP8 PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP3 PUSH2 0xE19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST SWAP1 PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xF30 JUMPI PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE64 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94C7D7EE DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF2F JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD PUSH32 0x68CA9D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF51 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17C7 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD DUP2 PUSH1 0x40 MLOAD PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1041 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1038 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12F0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1183 PUSH2 0xBB4 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11E1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1265 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1211 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x125D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1254 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12EE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E5 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x131C DUP5 PUSH2 0x17E3 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x133B JUMPI PUSH2 0x133A PUSH2 0x1EE6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x136D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13D0 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13C4 JUMPI PUSH2 0x13C3 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x137B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1451 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1585 JUMPI PUSH1 0x0 PUSH2 0x1461 DUP5 PUSH2 0xAEF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x14CC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14DF JUMPI POP PUSH2 0x14DD DUP2 DUP5 PUSH2 0x9F1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1521 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1518 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1583 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15E8 DUP4 DUP4 DUP4 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x169C JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1693 SWAP3 SWAP2 SWAP1 PUSH2 0x246F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xB7009613 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1725 SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1760 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x17BC JUMPI PUSH1 0x40 DUP2 MLOAD LT PUSH2 0x179A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x178D SWAP2 SWAP1 PUSH2 0x2573 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD LT PUSH2 0x17BA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17B7 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17D1 DUP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x17DE PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x113F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1841 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1837 JUMPI PUSH2 0x1836 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x187E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x18AD JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x18A3 JUMPI PUSH2 0x18A2 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x18D6 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x18FB JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x191E JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1914 JUMPI PUSH2 0x1913 PUSH2 0x2440 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x192D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19EE JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x19AF JUMPI POP PUSH2 0x19AE DUP5 DUP5 PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x19ED JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D5 DUP4 PUSH2 0xB77 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A69 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A60 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AEB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE2 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B39 DUP2 PUSH2 0x1B04 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B56 DUP2 PUSH2 0x1B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B80 DUP5 DUP3 DUP6 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9E DUP2 PUSH2 0x1B89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BF9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C21 DUP3 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1C2B DUP2 DUP6 PUSH2 0x1BCA JUMP JUMPDEST SWAP4 POP PUSH2 0x1C3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x1C44 DUP2 PUSH2 0x1C05 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 DUP5 PUSH2 0x1C16 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C84 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CA1 DUP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CBD JUMPI PUSH2 0x1CBC PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CCB DUP5 DUP3 DUP6 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFF DUP3 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0F DUP2 PUSH2 0x1CF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D39 DUP2 PUSH2 0x1CF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D56 DUP2 PUSH2 0x1D30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D73 JUMPI PUSH2 0x1D72 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D81 DUP6 DUP3 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D92 DUP6 DUP3 DUP7 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DB5 JUMPI PUSH2 0x1DB4 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DC3 DUP7 DUP3 DUP8 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DD4 DUP7 DUP3 DUP8 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DE5 DUP7 DUP3 DUP8 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E13 DUP5 DUP3 DUP6 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E25 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E4F DUP2 PUSH2 0x1B04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E79 DUP2 PUSH2 0x1B89 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E96 DUP2 PUSH2 0x1E70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EB3 JUMPI PUSH2 0x1EB2 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ED2 DUP6 DUP3 DUP7 ADD PUSH2 0x1E87 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F1E DUP3 PUSH2 0x1C05 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F3D JUMPI PUSH2 0x1F3C PUSH2 0x1EE6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F50 PUSH2 0x1AF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F5C DUP3 DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F7C JUMPI PUSH2 0x1F7B PUSH2 0x1EE6 JUMP JUMPDEST JUMPDEST PUSH2 0x1F85 DUP3 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB4 PUSH2 0x1FAF DUP5 PUSH2 0x1F61 JUMP JUMPDEST PUSH2 0x1F46 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FD0 JUMPI PUSH2 0x1FCF PUSH2 0x1EE1 JUMP JUMPDEST JUMPDEST PUSH2 0x1FDB DUP5 DUP3 DUP6 PUSH2 0x1F92 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FF8 JUMPI PUSH2 0x1FF7 PUSH2 0x1EDC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2008 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH2 0x202A PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2039 DUP8 DUP3 DUP9 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x204A DUP8 DUP3 DUP9 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x205B DUP8 DUP3 DUP9 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207C JUMPI PUSH2 0x207B PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH2 0x2088 DUP8 DUP3 DUP9 ADD PUSH2 0x1FE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP6 DUP3 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20CA DUP6 DUP3 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x211B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x212E JUMPI PUSH2 0x212D PUSH2 0x20D4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2149 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x2156 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0x2163 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21A5 DUP3 PUSH2 0x1C71 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x216B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F8 DUP3 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x2202 DUP2 DUP6 PUSH2 0x21E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2212 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222A DUP3 DUP6 PUSH2 0x21ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2236 DUP3 DUP5 PUSH2 0x21ED JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x2242 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x2247 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22AB DUP4 DUP4 PUSH2 0x2287 JUMP JUMPDEST DUP3 PUSH2 0x22B6 DUP2 CALLDATALOAD PUSH2 0x1B04 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x22F6 JUMPI PUSH2 0x22F1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x2292 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231B DUP4 DUP6 PUSH2 0x22FE JUMP JUMPDEST SWAP4 POP PUSH2 0x2328 DUP4 DUP6 DUP5 PUSH2 0x1F92 JUMP JUMPDEST PUSH2 0x2331 DUP4 PUSH2 0x1C05 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2351 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2364 DUP2 DUP5 DUP7 PUSH2 0x230F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2384 DUP3 PUSH2 0x236E JUMP JUMPDEST PUSH2 0x238E DUP2 DUP6 PUSH2 0x22FE JUMP JUMPDEST SWAP4 POP PUSH2 0x239E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x23A7 DUP2 PUSH2 0x1C05 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23C7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x23D4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x23E1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E1C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23F3 DUP2 DUP5 PUSH2 0x2379 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x240D DUP2 PUSH2 0x1B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2429 JUMPI PUSH2 0x2428 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2437 DUP5 DUP3 DUP6 ADD PUSH2 0x23FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2484 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x2491 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E1C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24AD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x24BA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x24C7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E46 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E5 DUP3 PUSH2 0x236E JUMP JUMPDEST PUSH2 0x24EF DUP2 DUP6 PUSH2 0x24CF JUMP JUMPDEST SWAP4 POP PUSH2 0x24FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2517 DUP3 DUP5 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2531 DUP2 PUSH2 0x1E70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2550 DUP2 PUSH2 0x2537 JUMP JUMPDEST DUP2 EQ PUSH2 0x255B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x256D DUP2 PUSH2 0x2547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x258A JUMPI PUSH2 0x2589 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2598 DUP6 DUP3 DUP7 ADD PUSH2 0x2522 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25A9 DUP6 DUP3 DUP7 ADD PUSH2 0x255E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C9 JUMPI PUSH2 0x25C8 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25D7 DUP5 DUP3 DUP6 ADD PUSH2 0x2522 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xAB 0xDB PUSH13 0x2A3356E10DBA14BAEF6D47099B GAS 0xCE MOD PUSH29 0xD90E6110E4B0259664FD3B64736F6C6343000818003300000000000000 ","sourceMap":"310:351:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;530:129:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;561:314:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3056:362:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3459:156;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2922:93:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2677:255:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;530:129:24:-;2824:39:0;2838:12;:10;:12::i;:::-;2852:10;:8;:10::i;:::-;2824:13;:39::i;:::-;588:15:24::1;606:12;;:14;;;;;;;;;:::i;:::-;;;;;588:32;;630:22;640:2;644:7;630:9;:22::i;:::-;578:81;530:129:::0;:::o;4787:132:10:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;561:314:13:-;826:42;842:1;846:7;855:12;:10;:12::i;:::-;826:7;:42::i;:::-;;561:314;:::o;2185:118:10:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;3056:362:0:-;3125:14;3142:12;:10;:12::i;:::-;3125:29;;3178:11;:9;:11::i;:::-;3168:21;;:6;:21;;;3164:92;;3238:6;3212:33;;;;;;;;;;;:::i;:::-;;;;;;;;3164:92;3297:1;3269:12;:24;;;:29;3265:110;;3351:12;3321:43;;;;;;;;;;;:::i;:::-;;;;;;;;3265:110;3384:27;3398:12;3384:13;:27::i;:::-;3115:303;3056:362;:::o;3459:156::-;3514:6;3539:18;;;;;;;;;;;:69;;3606:1;3599:9;;3539:69;;;3560:36;;;3539:69;3532:76;;3459:156;:::o;2518:93:10:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2922:93:0:-;2972:7;2998:10;;;;;;;;;;;2991:17;;2922:93;:::o;2677:255:10:-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;3928:153::-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;762:146:17:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:10:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:15:-;709:7;735:10;728:17;;656:96;:::o;14418:120:10:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;758:99:15:-;809:14;;842:8;;835:15;;;;758:99;;:::o;4127:594:0:-;4215:14;4231:12;4247:144;4292:11;:9;:11::i;:::-;4317:6;4345:4;4371;;4376:1;4371:9;4378:1;4371:9;;;;;;;:::i;:::-;4364:17;;;;;:::i;:::-;4247:31;:144::i;:::-;4214:177;;;;4406:9;4401:314;;4443:1;4435:5;:9;;;4431:274;;;4485:4;4464:18;;:25;;;;;;;;;;;;;;;;;;4522:11;:9;:11::i;:::-;4507:46;;;4554:6;4562:4;;4507:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4606:5;4585:18;;:26;;;;;;;;;;;;;;;;;;4431:274;;;4683:6;4657:33;;;;;;;;;;;:::i;:::-;;;;;;;;4431:274;4401:314;4204:517;;4127:594;;;:::o;10633:100:10:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;3803:149:0:-;3888:12;3875:10;;:25;;;;;;;;;;;;;;;;;;3915:30;3932:12;3915:30;;;;;;:::i;:::-;;;;;;;;3803:149;:::o;15591:312:10:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:16:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:10:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;591:636:1:-;746:14;762:12;787;801:17;822:9;:20;;892:6;900;908:8;856:62;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:106;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:142;;;;942:7;938:248;;;984:4;969;:11;:19;965:211;;1040:4;1029:32;;;;;;;;;;;;:::i;:::-;1008:53;;;;;;;;965:211;;;1101:4;1086;:11;:19;1082:94;;1148:4;1137:24;;;;;;;;;;;;:::i;:::-;1125:36;;1082:94;965:211;938:248;1195:25;;591:636;;;;;;;:::o;10954:182:10:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;12214:916:19:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:10:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:115::-;6287:23;6304:5;6287:23;:::i;:::-;6282:3;6275:36;6202:115;;:::o;6323:218::-;6414:4;6452:2;6441:9;6437:18;6429:26;;6465:69;6531:1;6520:9;6516:17;6507:6;6465:69;:::i;:::-;6323:218;;;;:::o;6547:116::-;6617:21;6632:5;6617:21;:::i;:::-;6610:5;6607:32;6597:60;;6653:1;6650;6643:12;6597:60;6547:116;:::o;6669:133::-;6712:5;6750:6;6737:20;6728:29;;6766:30;6790:5;6766:30;:::i;:::-;6669:133;;;;:::o;6808:468::-;6873:6;6881;6930:2;6918:9;6909:7;6905:23;6901:32;6898:119;;;6936:79;;:::i;:::-;6898:119;7056:1;7081:53;7126:7;7117:6;7106:9;7102:22;7081:53;:::i;:::-;7071:63;;7027:117;7183:2;7209:50;7251:7;7242:6;7231:9;7227:22;7209:50;:::i;:::-;7199:60;;7154:115;6808:468;;;;;:::o;7282:117::-;7391:1;7388;7381:12;7405:117;7514:1;7511;7504:12;7528:180;7576:77;7573:1;7566:88;7673:4;7670:1;7663:15;7697:4;7694:1;7687:15;7714:281;7797:27;7819:4;7797:27;:::i;:::-;7789:6;7785:40;7927:6;7915:10;7912:22;7891:18;7879:10;7876:34;7873:62;7870:88;;;7938:18;;:::i;:::-;7870:88;7978:10;7974:2;7967:22;7757:238;7714:281;;:::o;8001:129::-;8035:6;8062:20;;:::i;:::-;8052:30;;8091:33;8119:4;8111:6;8091:33;:::i;:::-;8001:129;;;:::o;8136:307::-;8197:4;8287:18;8279:6;8276:30;8273:56;;;8309:18;;:::i;:::-;8273:56;8347:29;8369:6;8347:29;:::i;:::-;8339:37;;8431:4;8425;8421:15;8413:23;;8136:307;;;:::o;8449:146::-;8546:6;8541:3;8536;8523:30;8587:1;8578:6;8573:3;8569:16;8562:27;8449:146;;;:::o;8601:423::-;8678:5;8703:65;8719:48;8760:6;8719:48;:::i;:::-;8703:65;:::i;:::-;8694:74;;8791:6;8784:5;8777:21;8829:4;8822:5;8818:16;8867:3;8858:6;8853:3;8849:16;8846:25;8843:112;;;8874:79;;:::i;:::-;8843:112;8964:54;9011:6;9006:3;9001;8964:54;:::i;:::-;8684:340;8601:423;;;;;:::o;9043:338::-;9098:5;9147:3;9140:4;9132:6;9128:17;9124:27;9114:122;;9155:79;;:::i;:::-;9114:122;9272:6;9259:20;9297:78;9371:3;9363:6;9356:4;9348:6;9344:17;9297:78;:::i;:::-;9288:87;;9104:277;9043:338;;;;:::o;9387:943::-;9482:6;9490;9498;9506;9555:3;9543:9;9534:7;9530:23;9526:33;9523:120;;;9562:79;;:::i;:::-;9523:120;9682:1;9707:53;9752:7;9743:6;9732:9;9728:22;9707:53;:::i;:::-;9697:63;;9653:117;9809:2;9835:53;9880:7;9871:6;9860:9;9856:22;9835:53;:::i;:::-;9825:63;;9780:118;9937:2;9963:53;10008:7;9999:6;9988:9;9984:22;9963:53;:::i;:::-;9953:63;;9908:118;10093:2;10082:9;10078:18;10065:32;10124:18;10116:6;10113:30;10110:117;;;10146:79;;:::i;:::-;10110:117;10251:62;10305:7;10296:6;10285:9;10281:22;10251:62;:::i;:::-;10241:72;;10036:287;9387:943;;;;;;;:::o;10336:474::-;10404:6;10412;10461:2;10449:9;10440:7;10436:23;10432:32;10429:119;;;10467:79;;:::i;:::-;10429:119;10587:1;10612:53;10657:7;10648:6;10637:9;10633:22;10612:53;:::i;:::-;10602:63;;10558:117;10714:2;10740:53;10785:7;10776:6;10765:9;10761:22;10740:53;:::i;:::-;10730:63;;10685:118;10336:474;;;;;:::o;10816:180::-;10864:77;10861:1;10854:88;10961:4;10958:1;10951:15;10985:4;10982:1;10975:15;11002:320;11046:6;11083:1;11077:4;11073:12;11063:22;;11130:1;11124:4;11120:12;11151:18;11141:81;;11207:4;11199:6;11195:17;11185:27;;11141:81;11269:2;11261:6;11258:14;11238:18;11235:38;11232:84;;11288:18;;:::i;:::-;11232:84;11053:269;11002:320;;;:::o;11328:442::-;11477:4;11515:2;11504:9;11500:18;11492:26;;11528:71;11596:1;11585:9;11581:17;11572:6;11528:71;:::i;:::-;11609:72;11677:2;11666:9;11662:18;11653:6;11609:72;:::i;:::-;11691;11759:2;11748:9;11744:18;11735:6;11691:72;:::i;:::-;11328:442;;;;;;:::o;11776:180::-;11824:77;11821:1;11814:88;11921:4;11918:1;11911:15;11945:4;11942:1;11935:15;11962:233;12001:3;12024:24;12042:5;12024:24;:::i;:::-;12015:33;;12070:66;12063:5;12060:77;12057:103;;12140:18;;:::i;:::-;12057:103;12187:1;12180:5;12176:13;12169:20;;11962:233;;;:::o;12201:148::-;12303:11;12340:3;12325:18;;12201:148;;;;:::o;12355:390::-;12461:3;12489:39;12522:5;12489:39;:::i;:::-;12544:89;12626:6;12621:3;12544:89;:::i;:::-;12537:96;;12642:65;12700:6;12695:3;12688:4;12681:5;12677:16;12642:65;:::i;:::-;12732:6;12727:3;12723:16;12716:23;;12465:280;12355:390;;;;:::o;12751:435::-;12931:3;12953:95;13044:3;13035:6;12953:95;:::i;:::-;12946:102;;13065:95;13156:3;13147:6;13065:95;:::i;:::-;13058:102;;13177:3;13170:10;;12751:435;;;;;:::o;13192:117::-;13301:1;13298;13291:12;13315:117;13424:1;13421;13414:12;13438:469;13543:9;13554;13592:8;13580:10;13577:24;13574:111;;;13604:79;;:::i;:::-;13574:111;13710:6;13700:8;13697:20;13694:107;;;13720:79;;:::i;:::-;13694:107;13851:1;13839:10;13835:18;13827:6;13823:31;13810:44;;13890:10;13880:8;13876:25;13863:38;;13438:469;;;;;;;:::o;13913:96::-;13971:6;13999:3;13989:13;;13913:96;;;;:::o;14107:107::-;14151:8;14201:5;14195:4;14191:16;14170:37;;14107:107;;;;:::o;14220:548::-;14310:5;14341:45;14382:3;14375:5;14341:45;:::i;:::-;14411:5;14435:40;14465:8;14452:22;14435:40;:::i;:::-;14426:49;;14499:1;14491:6;14488:13;14485:276;;;14569:168;14653:66;14623:6;14620:1;14616:14;14613:1;14609:22;14569:168;:::i;:::-;14546:5;14525:226;14516:235;;14485:276;14316:452;;14220:548;;;;:::o;14774:168::-;14857:11;14891:6;14886:3;14879:19;14931:4;14926:3;14922:14;14907:29;;14774:168;;;;:::o;14970:314::-;15066:3;15087:70;15150:6;15145:3;15087:70;:::i;:::-;15080:77;;15167:56;15216:6;15211:3;15204:5;15167:56;:::i;:::-;15248:29;15270:6;15248:29;:::i;:::-;15243:3;15239:39;15232:46;;14970:314;;;;;:::o;15290:439::-;15439:4;15477:2;15466:9;15462:18;15454:26;;15490:71;15558:1;15547:9;15543:17;15534:6;15490:71;:::i;:::-;15608:9;15602:4;15598:20;15593:2;15582:9;15578:18;15571:48;15636:86;15717:4;15708:6;15700;15636:86;:::i;:::-;15628:94;;15290:439;;;;;;:::o;15735:98::-;15786:6;15820:5;15814:12;15804:22;;15735:98;;;:::o;15839:373::-;15925:3;15953:38;15985:5;15953:38;:::i;:::-;16007:70;16070:6;16065:3;16007:70;:::i;:::-;16000:77;;16086:65;16144:6;16139:3;16132:4;16125:5;16121:16;16086:65;:::i;:::-;16176:29;16198:6;16176:29;:::i;:::-;16171:3;16167:39;16160:46;;15929:283;15839:373;;;;:::o;16218:640::-;16413:4;16451:3;16440:9;16436:19;16428:27;;16465:71;16533:1;16522:9;16518:17;16509:6;16465:71;:::i;:::-;16546:72;16614:2;16603:9;16599:18;16590:6;16546:72;:::i;:::-;16628;16696:2;16685:9;16681:18;16672:6;16628:72;:::i;:::-;16747:9;16741:4;16737:20;16732:2;16721:9;16717:18;16710:48;16775:76;16846:4;16837:6;16775:76;:::i;:::-;16767:84;;16218:640;;;;;;;:::o;16864:141::-;16920:5;16951:6;16945:13;16936:22;;16967:32;16993:5;16967:32;:::i;:::-;16864:141;;;;:::o;17011:349::-;17080:6;17129:2;17117:9;17108:7;17104:23;17100:32;17097:119;;;17135:79;;:::i;:::-;17097:119;17255:1;17280:63;17335:7;17326:6;17315:9;17311:22;17280:63;:::i;:::-;17270:73;;17226:127;17011:349;;;;:::o;17366:180::-;17414:77;17411:1;17404:88;17511:4;17508:1;17501:15;17535:4;17532:1;17525:15;17552:332;17673:4;17711:2;17700:9;17696:18;17688:26;;17724:71;17792:1;17781:9;17777:17;17768:6;17724:71;:::i;:::-;17805:72;17873:2;17862:9;17858:18;17849:6;17805:72;:::i;:::-;17552:332;;;;;:::o;17890:438::-;18037:4;18075:2;18064:9;18060:18;18052:26;;18088:71;18156:1;18145:9;18141:17;18132:6;18088:71;:::i;:::-;18169:72;18237:2;18226:9;18222:18;18213:6;18169:72;:::i;:::-;18251:70;18317:2;18306:9;18302:18;18293:6;18251:70;:::i;:::-;17890:438;;;;;;:::o;18334:147::-;18435:11;18472:3;18457:18;;18334:147;;;;:::o;18487:386::-;18591:3;18619:38;18651:5;18619:38;:::i;:::-;18673:88;18754:6;18749:3;18673:88;:::i;:::-;18666:95;;18770:65;18828:6;18823:3;18816:4;18809:5;18805:16;18770:65;:::i;:::-;18860:6;18855:3;18851:16;18844:23;;18595:278;18487:386;;;;:::o;18879:271::-;19009:3;19031:93;19120:3;19111:6;19031:93;:::i;:::-;19024:100;;19141:3;19134:10;;18879:271;;;;:::o;19156:137::-;19210:5;19241:6;19235:13;19226:22;;19257:30;19281:5;19257:30;:::i;:::-;19156:137;;;;:::o;19299:93::-;19335:7;19375:10;19368:5;19364:22;19353:33;;19299:93;;;:::o;19398:120::-;19470:23;19487:5;19470:23;:::i;:::-;19463:5;19460:34;19450:62;;19508:1;19505;19498:12;19450:62;19398:120;:::o;19524:141::-;19580:5;19611:6;19605:13;19596:22;;19627:32;19653:5;19627:32;:::i;:::-;19524:141;;;;:::o;19671:499::-;19746:6;19754;19803:2;19791:9;19782:7;19778:23;19774:32;19771:119;;;19809:79;;:::i;:::-;19771:119;19929:1;19954:61;20007:7;19998:6;19987:9;19983:22;19954:61;:::i;:::-;19944:71;;19900:125;20064:2;20090:63;20145:7;20136:6;20125:9;20121:22;20090:63;:::i;:::-;20080:73;;20035:128;19671:499;;;;;:::o;20176:345::-;20243:6;20292:2;20280:9;20271:7;20267:23;20263:32;20260:119;;;20298:79;;:::i;:::-;20260:119;20418:1;20443:61;20496:7;20487:6;20476:9;20472:22;20443:61;:::i;:::-;20433:71;;20389:125;20176:345;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","authority()":"bf7e214f","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","isConsumingScheduledOp()":"8fb36037","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeMint(address)":"40d097c3","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setAuthority(address)":"7a9e5e4b","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAuthority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"authority()\":{\"details\":\"Returns the current authority.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTune.sol\":\"NFTune\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/manager/AccessManaged.sol\":{\"keccak256\":\"0x137a4c22eb762b1580c632f575868d1f3b764291e58702ebe484fa1cef5447dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef14292067a6f91705f6cafcfa136870e6332de4bd36924a8679b4211531234\",\"dweb:/ipfs/QmWEBkKmdmDzaTEFRTNvguuWbD1Z3L8P7XV8bcTAkzc4fr\"]},\"@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0xdabf85e3bab52e7cfade4f77e661bcf7a2f9f95097bfd2ca5ddb193a0c21ee8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402259332090488a587a858ec0113bc7fe55e9dbc6e329927b87ed0f1cce7d08\",\"dweb:/ipfs/QmPJufTJJJifny3JscKTASsPzCrpXRbhtsJnwkCdbaKDTf\"]},\"@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/NFTune.sol\":{\"keccak256\":\"0x000cf0a288ede3414c4a3549bc8f88c8bee22865f4ece405ccb67caa8990952b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b6b9cae1c46aab53fc7a2e5330bf2a5ad8ff999f17a5a7dfdadfbddc1d7311d\",\"dweb:/ipfs/QmcR8VzRQ1MSbQWupPwWFjZmmwg5QezyqKQi1i3qmMjBsx\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1595,"contract":"contracts/NFTune.sol:NFTune","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1597,"contract":"contracts/NFTune.sol:NFTune","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1601,"contract":"contracts/NFTune.sol:NFTune","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1605,"contract":"contracts/NFTune.sol:NFTune","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1609,"contract":"contracts/NFTune.sol:NFTune","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1615,"contract":"contracts/NFTune.sol:NFTune","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":18,"contract":"contracts/NFTune.sol:NFTune","label":"_authority","offset":0,"slot":"6","type":"t_address"},{"astId":20,"contract":"contracts/NFTune.sol:NFTune","label":"_consumingSchedule","offset":20,"slot":"6","type":"t_bool"},{"astId":6326,"contract":"contracts/NFTune.sol:NFTune","label":"_nextTokenId","offset":0,"slot":"7","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}