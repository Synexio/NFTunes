/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/NFTune.sol/MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAuthority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AccessManagedInvalidAuthority",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "AccessManagedRequiredDelay",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AccessManagedUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isConsumingScheduledOp",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002bb138038062002bb18339818101604052810190620000379190620001ca565b806040518060400160405280600681526020017f4e4654756e6500000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e465500000000000000000000000000000000000000000000000000000000008152508160009081620000b5919062000476565b508060019081620000c7919062000476565b505050620000db81620000e360201b60201c565b50506200058b565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad816040516200015591906200056e565b60405180910390a150565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001928262000165565b9050919050565b620001a48162000185565b8114620001b057600080fd5b50565b600081519050620001c48162000199565b92915050565b600060208284031215620001e357620001e262000160565b5b6000620001f384828501620001b3565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027e57607f821691505b60208210810362000294576200029362000236565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002bf565b6200030a8683620002bf565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000357620003516200034b8462000322565b6200032c565b62000322565b9050919050565b6000819050919050565b620003738362000336565b6200038b62000382826200035e565b848454620002cc565b825550505050565b600090565b620003a262000393565b620003af81848462000368565b505050565b5b81811015620003d757620003cb60008262000398565b600181019050620003b5565b5050565b601f8211156200042657620003f0816200029a565b620003fb84620002af565b810160208510156200040b578190505b620004236200041a85620002af565b830182620003b4565b50505b505050565b600082821c905092915050565b60006200044b600019846008026200042b565b1980831691505092915050565b600062000466838362000438565b9150826002028217905092915050565b6200048182620001fc565b67ffffffffffffffff8111156200049d576200049c62000207565b5b620004a9825462000265565b620004b6828285620003db565b600060209050601f831160018114620004ee5760008415620004d9578287015190505b620004e5858262000458565b86555062000555565b601f198416620004fe866200029a565b60005b82811015620005285784890151825560018201915060208501945060208101905062000501565b8683101562000548578489015162000544601f89168262000438565b8355505b6001600288020188555050505b505050505050565b620005688162000185565b82525050565b60006020820190506200058560008301846200055d565b92915050565b612616806200059b6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102dd578063b88d4fde146102f9578063bf7e214f14610315578063c87b56dd14610333578063e985e9c51461036357610116565b806370a08231146102555780637a9e5e4b146102855780638fb36037146102a157806395d89b41146102bf57610116565b806323b872dd116100e957806323b872dd146101b557806340d097c3146101d157806342842e0e146101ed57806342966c68146102095780636352211e1461022557610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611b5c565b610393565b6040516101429190611ba4565b60405180910390f35b610153610475565b6040516101609190611c4f565b60405180910390f35b610183600480360381019061017e9190611ca7565b610507565b6040516101909190611d15565b60405180910390f35b6101b360048036038101906101ae9190611d5c565b610523565b005b6101cf60048036038101906101ca9190611d9c565b610539565b005b6101eb60048036038101906101e69190611def565b61063b565b005b61020760048036038101906102029190611d9c565b61067c565b005b610223600480360381019061021e9190611ca7565b61069c565b005b61023f600480360381019061023a9190611ca7565b6106b3565b60405161024c9190611d15565b60405180910390f35b61026f600480360381019061026a9190611def565b6106c5565b60405161027c9190611e2b565b60405180910390f35b61029f600480360381019061029a9190611def565b61077f565b005b6102a961086b565b6040516102b69190611e55565b60405180910390f35b6102c7610899565b6040516102d49190611c4f565b60405180910390f35b6102f760048036038101906102f29190611e9c565b61092b565b005b610313600480360381019061030e9190612011565b610941565b005b61031d61095e565b60405161032a9190611d15565b60405180910390f35b61034d60048036038101906103489190611ca7565b610988565b60405161035a9190611c4f565b60405180910390f35b61037d60048036038101906103789190612094565b6109f1565b60405161038a9190611ba4565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610a85565b5b9050919050565b60606000805461048490612103565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090612103565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b600061051282610aef565b5061051c82610b77565b9050919050565b6105358282610530610bb4565b610bbc565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a29190611d15565b60405180910390fd5b60006105bf83836105ba610bb4565b610bce565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610635578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062c93929190612134565b60405180910390fd5b50505050565b610653610646610bb4565b61064e610de8565b610df5565b6000600760008154809291906106689061219a565b9190505590506106788282610f37565b5050565b61069783838360405180602001604052806000815250610941565b505050565b6106af6000826106aa610bb4565b610bce565b5050565b60006106be82610aef565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107385760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161072f9190611d15565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610789610bb4565b905061079361095e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461080257806040517f068ca9d80000000000000000000000000000000000000000000000000000000081526004016107f99190611d15565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff163b0361085e57816040517fc2f31e5e0000000000000000000000000000000000000000000000000000000081526004016108559190611d15565b60405180910390fd5b61086782610f55565b5050565b6000600660149054906101000a900460ff1661088b57600060e01b610894565b638fb3603760e01b5b905090565b6060600180546108a890612103565b80601f01602080910402602001604051908101604052809291908181526020018280546108d490612103565b80156109215780601f106108f657610100808354040283529160200191610921565b820191906000526020600020905b81548152906001019060200180831161090457829003601f168201915b5050505050905090565b61093d610936610bb4565b8383610fd0565b5050565b61094c848484610539565b6109588484848461113f565b50505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061099382610aef565b50600061099e6112f6565b905060008151116109be57604051806020016040528060008152506109e9565b806109c88461130d565b6040516020016109d992919061221e565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610afb836113db565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b6e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b659190611e2b565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bc98383836001611418565b505050565b600080610bda846113db565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c1c57610c1b8184866115dd565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cad57610c5e600085600080611418565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d30576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b3660008036915091509091565b600080610e29610e0361095e565b86308787600090600492610e199392919061224c565b90610e24919061229f565b6116a1565b9150915081610f305760008163ffffffff161115610ef2576001600660146101000a81548160ff021916908315150217905550610e6461095e565b73ffffffffffffffffffffffffffffffffffffffff166394c7d7ee8686866040518463ffffffff1660e01b8152600401610ea09392919061233c565b600060405180830381600087803b158015610eba57600080fd5b505af1158015610ece573d6000803e3d6000fd5b505050506000600660146101000a81548160ff021916908315150217905550610f2f565b846040517f068ca9d8000000000000000000000000000000000000000000000000000000008152600401610f269190611d15565b60405180910390fd5b5b5050505050565b610f518282604051806020016040528060008152506117c7565b5050565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad81604051610fc59190611d15565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361104157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110389190611d15565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111329190611ba4565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156112f0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611183610bb4565b8685856040518563ffffffff1660e01b81526004016111a594939291906123b2565b6020604051808303816000875af19250505080156111e157506040513d601f19601f820116820180604052508101906111de9190612413565b60015b611265573d8060008114611211576040519150601f19603f3d011682016040523d82523d6000602084013e611216565b606091505b50600081510361125d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112549190611d15565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112ee57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112e59190611d15565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606000600161131c846117e3565b01905060008167ffffffffffffffff81111561133b5761133a611ee6565b5b6040519080825280601f01601f19166020018201604052801561136d5781602001600182028036833780820191505090505b509050600082602001820190505b6001156113d0578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113c4576113c3612440565b5b0494506000850361137b575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114515750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561158557600061146184610aef565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114cc57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156114df57506114dd81846109f1565b155b1561152157826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115189190611d15565b60405180910390fd5b811561158357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6115e8838383611936565b61169c57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361165d57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116549190611e2b565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161169392919061246f565b60405180910390fd5b505050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff168787876040516024016116d393929190612498565b60405160208183030381529060405263b700961360e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611725919061250b565b600060405180830381855afa9150503d8060008114611760576040519150601f19603f3d011682016040523d82523d6000602084013e611765565b606091505b509150915081156117bc57604081511061179a578080602001905181019061178d9190612573565b80945081955050506117bb565b60208151106117ba57808060200190518101906117b791906125b3565b93505b5b5b505094509492505050565b6117d183836119f7565b6117de600084848461113f565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611841577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161183757611836612440565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061187e576d04ee2d6d415b85acef8100000000838161187457611873612440565b5b0492506020810190505b662386f26fc1000083106118ad57662386f26fc1000083816118a3576118a2612440565b5b0492506010810190505b6305f5e10083106118d6576305f5e10083816118cc576118cb612440565b5b0492506008810190505b61271083106118fb5761271083816118f1576118f0612440565b5b0492506004810190505b6064831061191e576064838161191457611913612440565b5b0492506002810190505b600a831061192d576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119ee57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119af57506119ae84846109f1565b5b806119ed57508273ffffffffffffffffffffffffffffffffffffffff166119d583610b77565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a695760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a609190611d15565b60405180910390fd5b6000611a7783836000610bce565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611aeb5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ae29190611d15565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b3981611b04565b8114611b4457600080fd5b50565b600081359050611b5681611b30565b92915050565b600060208284031215611b7257611b71611afa565b5b6000611b8084828501611b47565b91505092915050565b60008115159050919050565b611b9e81611b89565b82525050565b6000602082019050611bb96000830184611b95565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bf9578082015181840152602081019050611bde565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c2182611bbf565b611c2b8185611bca565b9350611c3b818560208601611bdb565b611c4481611c05565b840191505092915050565b60006020820190508181036000830152611c698184611c16565b905092915050565b6000819050919050565b611c8481611c71565b8114611c8f57600080fd5b50565b600081359050611ca181611c7b565b92915050565b600060208284031215611cbd57611cbc611afa565b5b6000611ccb84828501611c92565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cff82611cd4565b9050919050565b611d0f81611cf4565b82525050565b6000602082019050611d2a6000830184611d06565b92915050565b611d3981611cf4565b8114611d4457600080fd5b50565b600081359050611d5681611d30565b92915050565b60008060408385031215611d7357611d72611afa565b5b6000611d8185828601611d47565b9250506020611d9285828601611c92565b9150509250929050565b600080600060608486031215611db557611db4611afa565b5b6000611dc386828701611d47565b9350506020611dd486828701611d47565b9250506040611de586828701611c92565b9150509250925092565b600060208284031215611e0557611e04611afa565b5b6000611e1384828501611d47565b91505092915050565b611e2581611c71565b82525050565b6000602082019050611e406000830184611e1c565b92915050565b611e4f81611b04565b82525050565b6000602082019050611e6a6000830184611e46565b92915050565b611e7981611b89565b8114611e8457600080fd5b50565b600081359050611e9681611e70565b92915050565b60008060408385031215611eb357611eb2611afa565b5b6000611ec185828601611d47565b9250506020611ed285828601611e87565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f1e82611c05565b810181811067ffffffffffffffff82111715611f3d57611f3c611ee6565b5b80604052505050565b6000611f50611af0565b9050611f5c8282611f15565b919050565b600067ffffffffffffffff821115611f7c57611f7b611ee6565b5b611f8582611c05565b9050602081019050919050565b82818337600083830152505050565b6000611fb4611faf84611f61565b611f46565b905082815260208101848484011115611fd057611fcf611ee1565b5b611fdb848285611f92565b509392505050565b600082601f830112611ff857611ff7611edc565b5b8135612008848260208601611fa1565b91505092915050565b6000806000806080858703121561202b5761202a611afa565b5b600061203987828801611d47565b945050602061204a87828801611d47565b935050604061205b87828801611c92565b925050606085013567ffffffffffffffff81111561207c5761207b611aff565b5b61208887828801611fe3565b91505092959194509250565b600080604083850312156120ab576120aa611afa565b5b60006120b985828601611d47565b92505060206120ca85828601611d47565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061211b57607f821691505b60208210810361212e5761212d6120d4565b5b50919050565b60006060820190506121496000830186611d06565b6121566020830185611e1c565b6121636040830184611d06565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121a582611c71565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121d7576121d661216b565b5b600182019050919050565b600081905092915050565b60006121f882611bbf565b61220281856121e2565b9350612212818560208601611bdb565b80840191505092915050565b600061222a82856121ed565b915061223682846121ed565b91508190509392505050565b600080fd5b600080fd5b600080858511156122605761225f612242565b5b8386111561227157612270612247565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b60006122ab8383612287565b826122b68135611b04565b925060048210156122f6576122f17fffffffff0000000000000000000000000000000000000000000000000000000083600403600802612292565b831692505b505092915050565b600082825260208201905092915050565b600061231b83856122fe565b9350612328838584611f92565b61233183611c05565b840190509392505050565b60006040820190506123516000830186611d06565b818103602083015261236481848661230f565b9050949350505050565b600081519050919050565b60006123848261236e565b61238e81856122fe565b935061239e818560208601611bdb565b6123a781611c05565b840191505092915050565b60006080820190506123c76000830187611d06565b6123d46020830186611d06565b6123e16040830185611e1c565b81810360608301526123f38184612379565b905095945050505050565b60008151905061240d81611b30565b92915050565b60006020828403121561242957612428611afa565b5b6000612437848285016123fe565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506124846000830185611d06565b6124916020830184611e1c565b9392505050565b60006060820190506124ad6000830186611d06565b6124ba6020830185611d06565b6124c76040830184611e46565b949350505050565b600081905092915050565b60006124e58261236e565b6124ef81856124cf565b93506124ff818560208601611bdb565b80840191505092915050565b600061251782846124da565b915081905092915050565b60008151905061253181611e70565b92915050565b600063ffffffff82169050919050565b61255081612537565b811461255b57600080fd5b50565b60008151905061256d81612547565b92915050565b6000806040838503121561258a57612589611afa565b5b600061259885828601612522565b92505060206125a98582860161255e565b9150509250929050565b6000602082840312156125c9576125c8611afa565b5b60006125d784828501612522565b9150509291505056fea264697066735822122069438610692cccb07a64b01fec3f04f5a4399d0f3e570351dbfb7207d8748a8b64736f6c63430008180033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialAuthority: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialAuthority, overrides || {});
  }
  override deploy(
    initialAuthority: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialAuthority, overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
