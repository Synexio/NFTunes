"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNetwork = exports.getAdminClient = void 0;
const defender_admin_client_1 = require("@openzeppelin/defender-admin-client");
const defender_base_client_1 = require("@openzeppelin/defender-base-client");
function getAdminClient(hre) {
    const cfg = hre.config.defender;
    if (!cfg || !cfg.apiKey || !cfg.apiSecret) {
        const sampleConfig = JSON.stringify({ apiKey: 'YOUR_API_KEY', apiSecret: 'YOUR_API_SECRET' }, null, 2);
        throw new Error(`Missing Defender API key and secret in hardhat config. Add the following to your hardhat.config.js configuration:\ndefender: ${sampleConfig}\n`);
    }
    return new defender_admin_client_1.AdminClient(cfg);
}
exports.getAdminClient = getAdminClient;
async function getNetwork(hre) {
    const id = await hre.network.provider.send('eth_chainId', []);
    const chainId = parseInt(id.replace(/^0x/, ''), 16);
    const network = (0, defender_base_client_1.fromChainId)(chainId);
    if (network === undefined) {
        throw new Error(`Network ${chainId} is not supported in Defender`);
    }
    return network;
}
exports.getNetwork = getNetwork;
//# sourceMappingURL=utils.js.map