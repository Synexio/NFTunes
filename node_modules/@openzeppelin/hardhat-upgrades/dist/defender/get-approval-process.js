"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeGetUpgradeApprovalProcess = exports.makeGetDeployApprovalProcess = void 0;
const utils_1 = require("./utils");
const client_1 = require("./client");
function makeGetDeployApprovalProcess(hre) {
    return async function getDeployApprovalProcess() {
        return await getApprovalProcess(hre, 'deploy');
    };
}
exports.makeGetDeployApprovalProcess = makeGetDeployApprovalProcess;
function makeGetUpgradeApprovalProcess(hre) {
    return async function getUpgradeApprovalProcess() {
        return await getApprovalProcess(hre, 'upgrade');
    };
}
exports.makeGetUpgradeApprovalProcess = makeGetUpgradeApprovalProcess;
async function getApprovalProcess(hre, kind) {
    const client = (0, client_1.getDeployClient)(hre);
    const network = await (0, utils_1.getNetwork)(hre);
    let response;
    switch (kind) {
        case 'deploy':
            response = await client.getDeployApprovalProcess(network);
            break;
        case 'upgrade':
            response = await client.getUpgradeApprovalProcess(network);
            break;
        // default case should be unreachable
    }
    if (response.network !== network) {
        // This should not happen
        throw new Error(`Returned an approval process for network ${response.network} which does not match current network ${network}`);
    }
    return {
        approvalProcessId: response.approvalProcessId,
        address: response.via,
        viaType: response.viaType,
    };
}
//# sourceMappingURL=get-approval-process.js.map